{
	"id": "f27836ae9d265094b56e3498496cf0af",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/MyToken.sol": {
				"content": "//SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nimport '@openzeppelin/contracts/token/ERC20/IERC20.sol';\nimport '@openzeppelin/contracts/access/Ownable.sol';\nimport '@openzeppelin/contracts/utils/math/SafeMath.sol';\nimport '@openzeppelin/contracts/utils/Address.sol';\nimport './IPancakeV2Router02.sol';\nimport './IPancakeV2Factory.sol';\nimport './IPancakeV2Pair.sol';\n\ninterface IAntisnipe {\n    function assureCanTransfer(\n        address sender,\n        address from,\n        address to,\n        uint256 amount\n    ) external;\n}\n\ncontract Pokemon is Context, IERC20, Ownable {\n    using SafeMath for uint256;\n    using Address for address;\n\n    mapping(address => uint256) private _rOwned;\n    mapping(address => uint256) private _tOwned;\n    mapping(address => mapping(address => uint256)) private _allowances;\n\n    mapping(address => bool) private _isExcludedFromFee;\n    mapping(address => bool) private _isExcluded;\n    address[] private _excluded;\n\n    uint256 private constant MAX = ~uint256(0);\n    uint256 private _tTotal = 7_777_777_777 * 10**18;\n    uint256 private _rTotal = (MAX - (MAX % _tTotal));\n    uint256 private _tFeeTotal;\n\n    string private _name = 'Meta-pokemon';\n    string private _symbol = 'pokemon';\n    uint8 private _decimals = 18;\n\n    // Base Fees\n    uint256 public _taxFee = 2;\n    uint256 private _previousTaxFee = _taxFee;\n\n    uint256 public _liquidityFee = 1;\n    uint256 private _previousLiquidityFee = _liquidityFee;\n\n    uint256 public _burnFee = 2;\n    uint256 private _previousBurnFee = _burnFee;\n\n    uint256 public _marketingFee = 2;\n    address public marketingWallet;\n    uint256 private _previousMarketingFee = _marketingFee;\n\n    // Sell Fees\n    uint256 public _sellTaxFee = 2;\n    uint256 public _sellLiquidityFee = 1;\n    uint256 public _sellMarketingFee = 2;\n    uint256 public _sellBurnFee = 2;\n\n    // Anti whale\n    uint256 public constant MAX_HOLDING_PERCENTS_DIVISOR = 1000;\n    uint256 public _maxHoldingPercents = 5;\n    bool public antiWhaleEnabled;\n\n    // Anti bot\n    mapping(uint256 => bool) allowedBuyAmount;\n    bool public antiBotEnabled;\n\n    // Anti manager\n    address public antiManager;\n\n    IPancakeV2Router02 public pancakeV2Router;\n    address public pancakeV2Pair;\n\n    bool inSwapAndLiquify;\n    bool public swapAndLiquifyEnabled = false;\n    uint256 private numTokensSellToAddToLiquidity = 1000000 * 10**18;\n    uint256[] _allowedBuyAmount = [\n        65678,\n        129052,\n        263555,\n        521287,\n        1047577,\n        2087152,\n        4194221,\n        8386606,\n        16877115,\n        33564442,\n        67308851\n    ];\n\n    event SwapAndLiquifyEnabledUpdated(bool enabled);\n    event SwapAndLiquify(\n        uint256 tokensSwapped,\n        uint256 ethReceived,\n        uint256 tokensIntoLiqudity\n    );\n\n    modifier lockTheSwap() {\n        inSwapAndLiquify = true;\n        _;\n        inSwapAndLiquify = false;\n    }\n\n    constructor(\n        IPancakeV2Router02 _pancakeV2Router,\n        address _marketingWallet,\n        address _antiManager\n    ) {\n        marketingWallet = _marketingWallet;\n        antiManager = _antiManager;\n        _rOwned[_msgSender()] = _rTotal;\n\n        // Create a pancake pair for this new token\n        pancakeV2Pair = IPancakeV2Factory(_pancakeV2Router.factory()).createPair(\n            address(this),\n            _pancakeV2Router.WETH()\n        );\n\n        // set the rest of the contract variables\n        pancakeV2Router = _pancakeV2Router;\n\n        //exclude owner, anti manager and this contract from fee\n        _isExcludedFromFee[owner()] = true;\n        _isExcludedFromFee[_antiManager] = true;\n        _isExcludedFromFee[address(this)] = true;\n\n        // Init anti bot allowed token amounts\n        for (uint256 i = 0; i < _allowedBuyAmount.length; i++) {\n            allowedBuyAmount[_allowedBuyAmount[i] * 10**18] = true;\n        }\n\n        emit Transfer(address(0), _msgSender(), _tTotal);\n    }\n\n    IAntisnipe public antisnipe;\n    bool public antisnipeDisable;\n\n    function _beforeTokenTransfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal {\n        if (from == address(0) || to == address(0)) return;\n        if (!antisnipeDisable && address(antisnipe) != address(0))\n            antisnipe.assureCanTransfer(msg.sender, from, to, amount);\n    }\n\n    function setAntisnipeDisable() external onlyOwner {\n        require(!antisnipeDisable);\n        antisnipeDisable = true;\n    }\n\n    function setAntisnipeAddress(address addr) external onlyOwner {\n        antisnipe = IAntisnipe(addr);\n    }\n\n    function name() public view returns (string memory) {\n        return _name;\n    }\n\n    function symbol() public view returns (string memory) {\n        return _symbol;\n    }\n\n    function decimals() public view returns (uint8) {\n        return _decimals;\n    }\n\n    function totalSupply() public view override returns (uint256) {\n        return _tTotal;\n    }\n\n    function balanceOf(address account) public view override returns (uint256) {\n        if (_isExcluded[account]) return _tOwned[account];\n        return tokenFromReflection(_rOwned[account]);\n    }\n\n    function transfer(address recipient, uint256 amount) public override returns (bool) {\n        _transfer(_msgSender(), recipient, amount);\n        return true;\n    }\n\n    function allowance(address owner, address spender)\n        public\n        view\n        override\n        returns (uint256)\n    {\n        return _allowances[owner][spender];\n    }\n\n    function approve(address spender, uint256 amount) public override returns (bool) {\n        _approve(_msgSender(), spender, amount);\n        return true;\n    }\n\n    function transferFrom(\n        address sender,\n        address recipient,\n        uint256 amount\n    ) public override returns (bool) {\n        _transfer(sender, recipient, amount);\n        _approve(\n            sender,\n            _msgSender(),\n            _allowances[sender][_msgSender()].sub(\n                amount,\n                'BEP20: transfer amount exceeds allowance'\n            )\n        );\n        return true;\n    }\n\n    function increaseAllowance(address spender, uint256 addedValue)\n        public\n        virtual\n        returns (bool)\n    {\n        _approve(\n            _msgSender(),\n            spender,\n            _allowances[_msgSender()][spender].add(addedValue)\n        );\n        return true;\n    }\n\n    function decreaseAllowance(address spender, uint256 subtractedValue)\n        public\n        virtual\n        returns (bool)\n    {\n        _approve(\n            _msgSender(),\n            spender,\n            _allowances[_msgSender()][spender].sub(\n                subtractedValue,\n                'BEP20: decreased allowance below zero'\n            )\n        );\n        return true;\n    }\n\n    function isExcludedFromReward(address account) public view returns (bool) {\n        return _isExcluded[account];\n    }\n\n    function totalFees() public view returns (uint256) {\n        return _tFeeTotal;\n    }\n\n    function deliver(uint256 tAmount) public {\n        address sender = _msgSender();\n        require(!_isExcluded[sender], 'Excluded addresses cannot call this function');\n        (uint256 rAmount, , , , , ) = _getValues(tAmount);\n        _rOwned[sender] = _rOwned[sender].sub(rAmount);\n        _rTotal = _rTotal.sub(rAmount);\n        _tFeeTotal = _tFeeTotal.add(tAmount);\n    }\n\n    function reflectionFromToken(uint256 tAmount, bool deductTransferFee)\n        public\n        view\n        returns (uint256)\n    {\n        require(tAmount <= _tTotal, 'Amount must be less than supply');\n        if (!deductTransferFee) {\n            (uint256 rAmount, , , , , ) = _getValues(tAmount);\n            return rAmount;\n        } else {\n            (, uint256 rTransferAmount, , , , ) = _getValues(tAmount);\n            return rTransferAmount;\n        }\n    }\n\n    function tokenFromReflection(uint256 rAmount) public view returns (uint256) {\n        require(rAmount <= _rTotal, 'Amount must be less than total reflections');\n        uint256 currentRate = _getRate();\n        return rAmount.div(currentRate);\n    }\n\n    function excludeFromReward(address account) public onlyOwner {\n        require(\n            account != address(pancakeV2Router),\n            'We can not exclude Pancake router.'\n        );\n        require(!_isExcluded[account], 'Account is already excluded');\n        if (_rOwned[account] > 0) {\n            _tOwned[account] = tokenFromReflection(_rOwned[account]);\n        }\n        _isExcluded[account] = true;\n        _excluded.push(account);\n    }\n\n    function includeInReward(address account) external onlyOwner {\n        require(_isExcluded[account], 'Account is already excluded');\n        for (uint256 i = 0; i < _excluded.length; i++) {\n            if (_excluded[i] == account) {\n                _excluded[i] = _excluded[_excluded.length - 1];\n                _tOwned[account] = 0;\n                _isExcluded[account] = false;\n                _excluded.pop();\n                break;\n            }\n        }\n    }\n\n    function _transferBothExcluded(\n        address sender,\n        address recipient,\n        uint256 tAmount\n    ) private {\n        (\n            uint256 rAmount,\n            uint256 rTransferAmount,\n            uint256 rFee,\n            uint256 tTransferAmount,\n            uint256 tFee,\n            uint256 tLiquidity\n        ) = _getValues(tAmount);\n        _tOwned[sender] = _tOwned[sender].sub(tAmount);\n        _rOwned[sender] = _rOwned[sender].sub(rAmount);\n        _tOwned[recipient] = _tOwned[recipient].add(tTransferAmount);\n        _rOwned[recipient] = _rOwned[recipient].add(rTransferAmount);\n        _takeLiquidity(tLiquidity);\n        _reflectFee(rFee, tFee);\n        emit Transfer(sender, recipient, tTransferAmount);\n    }\n\n    //to receive BNB from pancakeV2Router when swapping\n    receive() external payable {}\n\n    function _reflectFee(uint256 rFee, uint256 tFee) private {\n        _rTotal = _rTotal.sub(rFee);\n        _tFeeTotal = _tFeeTotal.add(tFee);\n    }\n\n    function _getValues(uint256 tAmount)\n        private\n        view\n        returns (\n            uint256,\n            uint256,\n            uint256,\n            uint256,\n            uint256,\n            uint256\n        )\n    {\n        (uint256 tTransferAmount, uint256 tFee, uint256 tLiquidity) = _getTValues(\n            tAmount\n        );\n        (uint256 rAmount, uint256 rTransferAmount, uint256 rFee) = _getRValues(\n            tAmount,\n            tFee,\n            tLiquidity,\n            _getRate()\n        );\n        return (rAmount, rTransferAmount, rFee, tTransferAmount, tFee, tLiquidity);\n    }\n\n    function _getTValues(uint256 tAmount)\n        private\n        view\n        returns (\n            uint256,\n            uint256,\n            uint256\n        )\n    {\n        uint256 tFee = calculateTaxFee(tAmount);\n        uint256 tLiquidity = calculateLiquidityFee(tAmount);\n        uint256 tTransferAmount = tAmount.sub(tFee).sub(tLiquidity);\n        return (tTransferAmount, tFee, tLiquidity);\n    }\n\n    function _getRValues(\n        uint256 tAmount,\n        uint256 tFee,\n        uint256 tLiquidity,\n        uint256 currentRate\n    )\n        private\n        pure\n        returns (\n            uint256,\n            uint256,\n            uint256\n        )\n    {\n        uint256 rAmount = tAmount.mul(currentRate);\n        uint256 rFee = tFee.mul(currentRate);\n        uint256 rLiquidity = tLiquidity.mul(currentRate);\n        uint256 rTransferAmount = rAmount.sub(rFee).sub(rLiquidity);\n        return (rAmount, rTransferAmount, rFee);\n    }\n\n    function _getRate() private view returns (uint256) {\n        (uint256 rSupply, uint256 tSupply) = _getCurrentSupply();\n        return rSupply.div(tSupply);\n    }\n\n    function _getCurrentSupply() private view returns (uint256, uint256) {\n        uint256 rSupply = _rTotal;\n        uint256 tSupply = _tTotal;\n        for (uint256 i = 0; i < _excluded.length; i++) {\n            if (_rOwned[_excluded[i]] > rSupply || _tOwned[_excluded[i]] > tSupply)\n                return (_rTotal, _tTotal);\n            rSupply = rSupply.sub(_rOwned[_excluded[i]]);\n            tSupply = tSupply.sub(_tOwned[_excluded[i]]);\n        }\n        if (rSupply < _rTotal.div(_tTotal)) return (_rTotal, _tTotal);\n        return (rSupply, tSupply);\n    }\n\n    function _takeLiquidity(uint256 tLiquidity) private {\n        uint256 currentRate = _getRate();\n        uint256 rLiquidity = tLiquidity.mul(currentRate);\n        _rOwned[address(this)] = _rOwned[address(this)].add(rLiquidity);\n        if (_isExcluded[address(this)])\n            _tOwned[address(this)] = _tOwned[address(this)].add(tLiquidity);\n    }\n\n    function calculateTaxFee(uint256 _amount) private view returns (uint256) {\n        return _amount.mul(_taxFee).div(10**2);\n    }\n\n    function calculateLiquidityFee(uint256 _amount) private view returns (uint256) {\n        return _amount.mul(_liquidityFee).div(10**2);\n    }\n\n    function activateSellFee() private {\n        _previousTaxFee = _taxFee;\n        _previousLiquidityFee = _liquidityFee;\n        _previousBurnFee = _burnFee;\n        _previousMarketingFee = _marketingFee;\n\n        _taxFee = _sellTaxFee;\n        _liquidityFee = _sellLiquidityFee;\n        _marketingFee = _sellMarketingFee;\n        _burnFee = _sellBurnFee;\n    }\n\n    function removeAllFee() private {\n        if (_taxFee == 0 && _liquidityFee == 0 && _marketingFee == 0 && _burnFee == 0)\n            return;\n\n        _previousTaxFee = _taxFee;\n        _previousLiquidityFee = _liquidityFee;\n        _previousBurnFee = _burnFee;\n        _previousMarketingFee = _marketingFee;\n\n        _taxFee = 0;\n        _liquidityFee = 0;\n        _marketingFee = 0;\n        _burnFee = 0;\n    }\n\n    function restoreAllFee() private {\n        _taxFee = _previousTaxFee;\n        _liquidityFee = _previousLiquidityFee;\n        _burnFee = _previousBurnFee;\n        _marketingFee = _previousMarketingFee;\n    }\n\n    function isExcludedFromFee(address account) public view returns (bool) {\n        return _isExcludedFromFee[account];\n    }\n\n    function _approve(\n        address owner,\n        address spender,\n        uint256 amount\n    ) private {\n        require(owner != address(0), 'BEP20: approve from the zero address');\n        require(spender != address(0), 'BEP20: approve to the zero address');\n\n        _allowances[owner][spender] = amount;\n        emit Approval(owner, spender, amount);\n    }\n\n    function _transfer(\n        address from,\n        address to,\n        uint256 amount\n    ) private {\n        require(from != address(0), 'BEP20: transfer from the zero address');\n        require(amount > 0, 'Transfer amount must be greater than zero');\n\n        _beforeTokenTransfer(from, to, amount);\n\n        if (antiBotEnabled && from == pancakeV2Pair) {\n            require(allowedBuyAmount[amount], 'Only allowed buy amounts');\n        }\n\n        // is the token balance of this contract address over the min number of\n        // tokens that we need to initiate a swap + liquidity lock?\n        // also, don't get caught in a circular liquidity event.\n        // also, don't swap & liquify if sender is pancake pair.\n        uint256 contractTokenBalance = balanceOf(address(this));\n        bool overMinTokenBalance = contractTokenBalance >= numTokensSellToAddToLiquidity;\n        if (\n            overMinTokenBalance &&\n            !inSwapAndLiquify &&\n            from != pancakeV2Pair &&\n            swapAndLiquifyEnabled\n        ) {\n            contractTokenBalance = numTokensSellToAddToLiquidity;\n            //add liquidity\n            swapAndLiquify(contractTokenBalance);\n        }\n\n        //transfer amount, it will take tax, burn, liquidity fee\n        _tokenTransfer(from, to, amount);\n\n        if (antiWhaleEnabled) {\n            uint256 maxAllowed = (_tTotal * _maxHoldingPercents) /\n                MAX_HOLDING_PERCENTS_DIVISOR;\n            if (to == pancakeV2Pair) {\n                require(\n                    amount <= maxAllowed,\n                    'Transacted amount exceed the max allowed value'\n                );\n            } else {\n                require(\n                    balanceOf(to) <= maxAllowed,\n                    'Wallet balance exceeds the max limit'\n                );\n            }\n        }\n    }\n\n    function swapAndLiquify(uint256 contractTokenBalance) private lockTheSwap {\n        // split the contract balance into halves\n        uint256 half = contractTokenBalance.div(2);\n        uint256 otherHalf = contractTokenBalance.sub(half);\n\n        // capture the contract's current ETH balance.\n        // this is so that we can capture exactly the amount of ETH that the\n        // swap creates, and not make the liquidity event include any ETH that\n        // has been manually sent to the contract\n        uint256 initialBalance = address(this).balance;\n\n        // swap tokens for ETH\n        swapTokensForEth(half);\n        // <- this breaks the ETH -> HATE swap when swap+liquify is triggered\n\n        // how much ETH did we just swap into?\n        uint256 newBalance = address(this).balance.sub(initialBalance);\n\n        // add liquidity to pancake\n        addLiquidity(otherHalf, newBalance);\n\n        emit SwapAndLiquify(half, newBalance, otherHalf);\n    }\n\n    function swapTokensForEth(uint256 tokenAmount) private {\n        // generate the pancake pair path of token -> weth\n        address[] memory path = new address[](2);\n        path[0] = address(this);\n        path[1] = pancakeV2Router.WETH();\n\n        _approve(address(this), address(pancakeV2Router), tokenAmount);\n\n        // make the swap\n        pancakeV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(\n            tokenAmount,\n            0, // accept any amount of ETH\n            path,\n            address(this),\n            block.timestamp\n        );\n    }\n\n    function addLiquidity(uint256 tokenAmount, uint256 ethAmount) private {\n        // approve token transfer to cover all possible scenarios\n        _approve(address(this), address(pancakeV2Router), tokenAmount);\n\n        // add the liquidity\n        pancakeV2Router.addLiquidityETH{value: ethAmount}(\n            address(this),\n            tokenAmount,\n            0, // slippage is unavoidable\n            0, // slippage is unavoidable\n            owner(),\n            block.timestamp\n        );\n    }\n\n    //this method is responsible for taking all fee, if takeFee is true\n    function _tokenTransfer(\n        address sender,\n        address recipient,\n        uint256 amount\n    ) private {\n        if (_isExcludedFromFee[sender] || _isExcludedFromFee[recipient]) {\n            removeAllFee();\n        } else if (recipient == pancakeV2Pair) {\n            activateSellFee();\n        }\n\n        //Calculate burn amount and marketing amount\n        uint256 burnAmt = amount.mul(_burnFee).div(100);\n        uint256 marketingAmt = amount.mul(_marketingFee).div(100);\n\n        if (_isExcluded[sender] && !_isExcluded[recipient]) {\n            _transferFromExcluded(\n                sender,\n                recipient,\n                (amount.sub(burnAmt).sub(marketingAmt))\n            );\n        } else if (!_isExcluded[sender] && _isExcluded[recipient]) {\n            _transferToExcluded(\n                sender,\n                recipient,\n                (amount.sub(burnAmt).sub(marketingAmt))\n            );\n        } else if (!_isExcluded[sender] && !_isExcluded[recipient]) {\n            _transferStandard(sender, recipient, (amount.sub(burnAmt).sub(marketingAmt)));\n        } else if (_isExcluded[sender] && _isExcluded[recipient]) {\n            _transferBothExcluded(\n                sender,\n                recipient,\n                (amount.sub(burnAmt).sub(marketingAmt))\n            );\n        } else {\n            _transferStandard(sender, recipient, (amount.sub(burnAmt).sub(marketingAmt)));\n        }\n\n        //Temporarily remove fees to transfer to burn address and marketing wallet\n        _taxFee = 0;\n        _liquidityFee = 0;\n\n        _transferStandard(sender, address(0), burnAmt);\n        _transferStandard(sender, marketingWallet, marketingAmt);\n\n        //Restore tax and liquidity fees\n        _taxFee = _previousTaxFee;\n        _liquidityFee = _previousLiquidityFee;\n\n        if (\n            _isExcludedFromFee[sender] ||\n            _isExcludedFromFee[recipient] ||\n            recipient == pancakeV2Pair\n        ) {\n            restoreAllFee();\n        }\n    }\n\n    function _transferStandard(\n        address sender,\n        address recipient,\n        uint256 tAmount\n    ) private {\n        (\n            uint256 rAmount,\n            uint256 rTransferAmount,\n            uint256 rFee,\n            uint256 tTransferAmount,\n            uint256 tFee,\n            uint256 tLiquidity\n        ) = _getValues(tAmount);\n        _rOwned[sender] = _rOwned[sender].sub(rAmount);\n        _rOwned[recipient] = _rOwned[recipient].add(rTransferAmount);\n        _takeLiquidity(tLiquidity);\n        _reflectFee(rFee, tFee);\n        emit Transfer(sender, recipient, tTransferAmount);\n    }\n\n    function _transferToExcluded(\n        address sender,\n        address recipient,\n        uint256 tAmount\n    ) private {\n        (\n            uint256 rAmount,\n            uint256 rTransferAmount,\n            uint256 rFee,\n            uint256 tTransferAmount,\n            uint256 tFee,\n            uint256 tLiquidity\n        ) = _getValues(tAmount);\n        _rOwned[sender] = _rOwned[sender].sub(rAmount);\n        _tOwned[recipient] = _tOwned[recipient].add(tTransferAmount);\n        _rOwned[recipient] = _rOwned[recipient].add(rTransferAmount);\n        _takeLiquidity(tLiquidity);\n        _reflectFee(rFee, tFee);\n        emit Transfer(sender, recipient, tTransferAmount);\n    }\n\n    function _transferFromExcluded(\n        address sender,\n        address recipient,\n        uint256 tAmount\n    ) private {\n        (\n            uint256 rAmount,\n            uint256 rTransferAmount,\n            uint256 rFee,\n            uint256 tTransferAmount,\n            uint256 tFee,\n            uint256 tLiquidity\n        ) = _getValues(tAmount);\n        _tOwned[sender] = _tOwned[sender].sub(tAmount);\n        _rOwned[sender] = _rOwned[sender].sub(rAmount);\n        _rOwned[recipient] = _rOwned[recipient].add(rTransferAmount);\n        _takeLiquidity(tLiquidity);\n        _reflectFee(rFee, tFee);\n        emit Transfer(sender, recipient, tTransferAmount);\n    }\n\n    function excludeFromFee(address account) public onlyOwner {\n        _isExcludedFromFee[account] = true;\n    }\n\n    function includeInFee(address account) public onlyOwner {\n        _isExcludedFromFee[account] = false;\n    }\n\n    function setMarketingWallet(address newWallet) external onlyOwner {\n        marketingWallet = newWallet;\n    }\n\n    function setTaxFeePercent(uint256 taxFee) external onlyOwner {\n        require(taxFee <= 10, 'Tax fee cannot be more than 10%');\n        _taxFee = taxFee;\n    }\n\n    function setLiquidityFeePercent(uint256 liquidityFee) external onlyOwner {\n        require(liquidityFee <= 10, 'Liquidity fee cannot be more than 10%');\n        _liquidityFee = liquidityFee;\n    }\n\n    function setMarketingFeePercent(uint256 marketingFee) external onlyOwner {\n        require(marketingFee <= 10, 'Marketing fee cannot be more than 10%');\n        _marketingFee = marketingFee;\n    }\n\n    function setBurnFeePercent(uint256 burnFee) external onlyOwner {\n        require(burnFee <= 10, 'Burn fee cannot be more than 10%');\n        _burnFee = burnFee;\n    }\n\n    function setSellBurnFeePercent(uint256 sellBurnFee) external onlyOwner {\n        require(sellBurnFee <= 10, 'Sell burn fee cannot be more than 10%');\n        _sellBurnFee = sellBurnFee;\n    }\n\n    function setSellMarketingFeePercent(uint256 sellMarketingFee) external onlyOwner {\n        require(sellMarketingFee <= 10, 'Sell marketing fee cannot be more than 10%');\n        _sellMarketingFee = sellMarketingFee;\n    }\n\n    function setSellLiquidityFeePercent(uint256 sellLiquidityFee) external onlyOwner {\n        require(sellLiquidityFee <= 10, 'Sell liquidity fee cannot be more than 10%');\n        _sellLiquidityFee = sellLiquidityFee;\n    }\n\n    function setSellTaxFeePercent(uint256 sellTaxFee) external onlyOwner {\n        require(sellTaxFee <= 10, 'Sell tax fee cannot be more than 10%');\n        _sellTaxFee = sellTaxFee;\n    }\n\n    function setMaxHoldingPercents(uint256 maxHoldingPercents) external onlyOwner {\n        require(maxHoldingPercents >= 1, 'Max holding percents cannot be less than 0.1%');\n        require(maxHoldingPercents <= 30, 'Max holding percents cannot be more than 3%');\n        _maxHoldingPercents = maxHoldingPercents;\n    }\n\n    function setSwapAndLiquifyEnabled(bool _enabled) public onlyOwner {\n        swapAndLiquifyEnabled = _enabled;\n        emit SwapAndLiquifyEnabledUpdated(_enabled);\n    }\n\n    function setAntiWhale(bool enabled) external {\n        require(\n            msg.sender == owner() || msg.sender == antiManager,\n            'Only admin or anti manager allowed'\n        );\n        antiWhaleEnabled = enabled;\n    }\n\n    function setAntiBot(bool enabled) external {\n        require(\n            msg.sender == owner() || msg.sender == antiManager,\n            'Only admin or anti manager allowed'\n        );\n        antiBotEnabled = enabled;\n    }\n}"
			},
			"contracts/IPancakeV2Pair.sol": {
				"content": "//SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ninterface IPancakeV2Pair {\n    event Approval(address indexed owner, address indexed spender, uint value);\n    event Transfer(address indexed from, address indexed to, uint value);\n\n    function name() external pure returns (string memory);\n    function symbol() external pure returns (string memory);\n    function decimals() external pure returns (uint8);\n    function totalSupply() external view returns (uint);\n    function balanceOf(address owner) external view returns (uint);\n    function allowance(address owner, address spender) external view returns (uint);\n\n    function approve(address spender, uint value) external returns (bool);\n    function transfer(address to, uint value) external returns (bool);\n    function transferFrom(address from, address to, uint value) external returns (bool);\n\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\n    function PERMIT_TYPEHASH() external pure returns (bytes32);\n    function nonces(address owner) external view returns (uint);\n\n    function permit(address owner, address spender, uint value, uint deadline, uint8 v, bytes32 r, bytes32 s) external;\n\n    event Mint(address indexed sender, uint amount0, uint amount1);\n    event Burn(address indexed sender, uint amount0, uint amount1, address indexed to);\n    event Swap(\n        address indexed sender,\n        uint amount0In,\n        uint amount1In,\n        uint amount0Out,\n        uint amount1Out,\n        address indexed to\n    );\n    event Sync(uint112 reserve0, uint112 reserve1);\n\n    function MINIMUM_LIQUIDITY() external pure returns (uint);\n    function factory() external view returns (address);\n    function token0() external view returns (address);\n    function token1() external view returns (address);\n    function getReserves() external view returns (uint112 reserve0, uint112 reserve1, uint32 blockTimestampLast);\n    function price0CumulativeLast() external view returns (uint);\n    function price1CumulativeLast() external view returns (uint);\n    function kLast() external view returns (uint);\n\n    function mint(address to) external returns (uint liquidity);\n    function burn(address to) external returns (uint amount0, uint amount1);\n    function swap(uint amount0Out, uint amount1Out, address to, bytes calldata data) external;\n    function skim(address to) external;\n    function sync() external;\n\n    function initialize(address, address) external;\n}"
			},
			"contracts/IPancakeV2Factory.sol": {
				"content": "//SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ninterface IPancakeV2Factory {\n    event PairCreated(address indexed token0, address indexed token1, address pair, uint);\n\n    function feeTo() external view returns (address);\n    function feeToSetter() external view returns (address);\n\n    function getPair(address tokenA, address tokenB) external view returns (address pair);\n    function allPairs(uint) external view returns (address pair);\n    function allPairsLength() external view returns (uint);\n\n    function createPair(address tokenA, address tokenB) external returns (address pair);\n\n    function setFeeTo(address) external;\n    function setFeeToSetter(address) external;\n}"
			},
			"contracts/IPancakeV2Router02.sol": {
				"content": "//SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport \"./IPancakeV2Router01.sol\";\n\ninterface IPancakeV2Router02 is IPancakeV2Router01 {\n    function removeLiquidityETHSupportingFeeOnTransferTokens(\n        address token,\n        uint liquidity,\n        uint amountTokenMin,\n        uint amountETHMin,\n        address to,\n        uint deadline\n    ) external returns (uint amountETH);\n    function removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(\n        address token,\n        uint liquidity,\n        uint amountTokenMin,\n        uint amountETHMin,\n        address to,\n        uint deadline,\n        bool approveMax, uint8 v, bytes32 r, bytes32 s\n    ) external returns (uint amountETH);\n\n    function swapExactTokensForTokensSupportingFeeOnTransferTokens(\n        uint amountIn,\n        uint amountOutMin,\n        address[] calldata path,\n        address to,\n        uint deadline\n    ) external;\n    function swapExactETHForTokensSupportingFeeOnTransferTokens(\n        uint amountOutMin,\n        address[] calldata path,\n        address to,\n        uint deadline\n    ) external payable;\n    function swapExactTokensForETHSupportingFeeOnTransferTokens(\n        uint amountIn,\n        uint amountOutMin,\n        address[] calldata path,\n        address to,\n        uint deadline\n    ) external;\n}"
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n     *\n     * _Available since v4.8._\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        if (success) {\n            if (returndata.length == 0) {\n                // only check isContract if the call was successful and the return data is empty\n                // otherwise we already know that it was a contract\n                require(isContract(target), \"Address: call to non-contract\");\n            }\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason or using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert(errorMessage);\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (utils/math/SafeMath.sol)\n\npragma solidity ^0.8.0;\n\n// CAUTION\n// This version of SafeMath should only be used with Solidity 0.8 or later,\n// because it relies on the compiler's built in overflow checks.\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations.\n *\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n * now has built in overflow checking.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a + b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a * b;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator.\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a % b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {trySub}.\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b <= a, errorMessage);\n            return a - b;\n        }\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a / b;\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting with custom message when dividing by zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryMod}.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a % b;\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) external returns (bool);\n}\n"
			},
			"contracts/IPancakeV2Router01.sol": {
				"content": "//SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ninterface IPancakeV2Router01 {\n    function factory() external pure returns (address);\n    function WETH() external pure returns (address);\n\n    function addLiquidity(\n        address tokenA,\n        address tokenB,\n        uint amountADesired,\n        uint amountBDesired,\n        uint amountAMin,\n        uint amountBMin,\n        address to,\n        uint deadline\n    ) external returns (uint amountA, uint amountB, uint liquidity);\n    function addLiquidityETH(\n        address token,\n        uint amountTokenDesired,\n        uint amountTokenMin,\n        uint amountETHMin,\n        address to,\n        uint deadline\n    ) external payable returns (uint amountToken, uint amountETH, uint liquidity);\n    function removeLiquidity(\n        address tokenA,\n        address tokenB,\n        uint liquidity,\n        uint amountAMin,\n        uint amountBMin,\n        address to,\n        uint deadline\n    ) external returns (uint amountA, uint amountB);\n    function removeLiquidityETH(\n        address token,\n        uint liquidity,\n        uint amountTokenMin,\n        uint amountETHMin,\n        address to,\n        uint deadline\n    ) external returns (uint amountToken, uint amountETH);\n    function removeLiquidityWithPermit(\n        address tokenA,\n        address tokenB,\n        uint liquidity,\n        uint amountAMin,\n        uint amountBMin,\n        address to,\n        uint deadline,\n        bool approveMax, uint8 v, bytes32 r, bytes32 s\n    ) external returns (uint amountA, uint amountB);\n    function removeLiquidityETHWithPermit(\n        address token,\n        uint liquidity,\n        uint amountTokenMin,\n        uint amountETHMin,\n        address to,\n        uint deadline,\n        bool approveMax, uint8 v, bytes32 r, bytes32 s\n    ) external returns (uint amountToken, uint amountETH);\n    function swapExactTokensForTokens(\n        uint amountIn,\n        uint amountOutMin,\n        address[] calldata path,\n        address to,\n        uint deadline\n    ) external returns (uint[] memory amounts);\n    function swapTokensForExactTokens(\n        uint amountOut,\n        uint amountInMax,\n        address[] calldata path,\n        address to,\n        uint deadline\n    ) external returns (uint[] memory amounts);\n    function swapExactETHForTokens(uint amountOutMin, address[] calldata path, address to, uint deadline)\n    external\n    payable\n    returns (uint[] memory amounts);\n    function swapTokensForExactETH(uint amountOut, uint amountInMax, address[] calldata path, address to, uint deadline)\n    external\n    returns (uint[] memory amounts);\n    function swapExactTokensForETH(uint amountIn, uint amountOutMin, address[] calldata path, address to, uint deadline)\n    external\n    returns (uint[] memory amounts);\n    function swapETHForExactTokens(uint amountOut, address[] calldata path, address to, uint deadline)\n    external\n    payable\n    returns (uint[] memory amounts);\n\n    function quote(uint amountA, uint reserveA, uint reserveB) external pure returns (uint amountB);\n    function getAmountOut(uint amountIn, uint reserveIn, uint reserveOut) external pure returns (uint amountOut);\n    function getAmountIn(uint amountOut, uint reserveIn, uint reserveOut) external pure returns (uint amountIn);\n    function getAmountsOut(uint amountIn, address[] calldata path) external view returns (uint[] memory amounts);\n    function getAmountsIn(uint amountOut, address[] calldata path) external view returns (uint[] memory amounts);\n}"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Address.sol\":194:9158  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Address.sol\":194:9158  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212202870602c71af2a227b683d2898ab795367eb8b4054b7047ba23204bd0ab996b364736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212202870602c71af2a227b683d2898ab795367eb8b4054b7047ba23204bd0ab996b364736f6c63430008070033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x28 PUSH17 0x602C71AF2A227B683D2898AB795367EB8B BLOCKHASH SLOAD 0xB7 DIV PUSH28 0xA23204BD0AB996B364736F6C63430008070033000000000000000000 ",
							"sourceMap": "194:8964:2:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;194:8964:2;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212202870602c71af2a227b683d2898ab795367eb8b4054b7047ba23204bd0ab996b364736f6c63430008070033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x28 PUSH17 0x602C71AF2A227B683D2898AB795367EB8B BLOCKHASH SLOAD 0xB7 DIV PUSH28 0xA23204BD0AB996B364736F6C63430008070033000000000000000000 ",
							"sourceMap": "194:8964:2:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"_revert(bytes memory,string memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionDelegateCall(address,bytes memory,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory,string memory)": "infinite",
								"verifyCallResultFromTarget(address,bool,bytes memory,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 2,
									"value": "B"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "BYTE",
									"source": 2
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "EQ",
									"source": 2
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "ADDRESS",
									"source": 2
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "MSTORE8",
									"source": 2
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212202870602c71af2a227b683d2898ab795367eb8b4054b7047ba23204bd0ab996b364736f6c63430008070033",
									".code": [
										{
											"begin": 194,
											"end": 9158,
											"name": "PUSHDEPLOYADDRESS",
											"source": 2
										},
										{
											"begin": 194,
											"end": 9158,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 194,
											"end": 9158,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 194,
											"end": 9158,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 194,
											"end": 9158,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 194,
											"end": 9158,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 194,
											"end": 9158,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 9158,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 194,
											"end": 9158,
											"name": "REVERT",
											"source": 2
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269\",\"dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":482:6782  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":482:6782  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220ff118ff94f0c4ded54190e323cb0cdb60b50ef76036eeda79a43612dde54315764736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220ff118ff94f0c4ded54190e323cb0cdb60b50ef76036eeda79a43612dde54315764736f6c63430008070033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SELFDESTRUCT GT DUP16 0xF9 0x4F 0xC 0x4D 0xED SLOAD NOT 0xE ORIGIN EXTCODECOPY 0xB0 0xCD 0xB6 SIGNEXTEND POP 0xEF PUSH23 0x36EEDA79A43612DDE54315764736F6C63430008070033 ",
							"sourceMap": "482:6300:4:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;482:6300:4;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220ff118ff94f0c4ded54190e323cb0cdb60b50ef76036eeda79a43612dde54315764736f6c63430008070033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SELFDESTRUCT GT DUP16 0xF9 0x4F 0xC 0x4D 0xED SLOAD NOT 0xE ORIGIN EXTCODECOPY 0xB0 0xCD 0xB6 SIGNEXTEND POP 0xEF PUSH23 0x36EEDA79A43612DDE54315764736F6C63430008070033 ",
							"sourceMap": "482:6300:4:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 4,
									"value": "B"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "BYTE",
									"source": 4
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "EQ",
									"source": 4
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "ADDRESS",
									"source": 4
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE8",
									"source": 4
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220ff118ff94f0c4ded54190e323cb0cdb60b50ef76036eeda79a43612dde54315764736f6c63430008070033",
									".code": [
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSHDEPLOYADDRESS",
											"source": 4
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "REVERT",
											"source": 4
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://864a40efcffdf408044c332a5aa38ec5618ed7b4eecb8f65faf45671bd6cdc65\",\"dweb:/ipfs/QmQJquTMtc6fgm5JQzGdsGpA2fqBe3MHWEdt2qzaLySMdN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/IPancakeV2Factory.sol": {
				"IPancakeV2Factory": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "token0",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "token1",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "pair",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "PairCreated",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "allPairs",
							"outputs": [
								{
									"internalType": "address",
									"name": "pair",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "allPairsLength",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								}
							],
							"name": "createPair",
							"outputs": [
								{
									"internalType": "address",
									"name": "pair",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "feeTo",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "feeToSetter",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								}
							],
							"name": "getPair",
							"outputs": [
								{
									"internalType": "address",
									"name": "pair",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "setFeeTo",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "setFeeToSetter",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allPairs(uint256)": "1e3dd18b",
							"allPairsLength()": "574f2ba3",
							"createPair(address,address)": "c9c65396",
							"feeTo()": "017e7e58",
							"feeToSetter()": "094b7415",
							"getPair(address,address)": "e6a43905",
							"setFeeTo(address)": "f46901ed",
							"setFeeToSetter(address)": "a2e74af6"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token0\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token1\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"pair\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"PairCreated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"allPairs\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"pair\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"allPairsLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"}],\"name\":\"createPair\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"pair\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeTo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeToSetter\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"}],\"name\":\"getPair\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"pair\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"setFeeTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"setFeeToSetter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/IPancakeV2Factory.sol\":\"IPancakeV2Factory\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/IPancakeV2Factory.sol\":{\"keccak256\":\"0x60dbe5cba4b179a7c1f959ff040f96cbb60b09a1e60de938a2aebc85687ad434\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6b0966829afb7234c9b8ce213d67445631234da9bb2ea4176a22a66e1ed0606e\",\"dweb:/ipfs/QmWAycZmKAos2fWeSYeYEKhitp3eieLRvmXpKGCzNyFhuc\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/IPancakeV2Pair.sol": {
				"IPancakeV2Pair": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "Burn",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"name": "Mint",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0In",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1In",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0Out",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1Out",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "Swap",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint112",
									"name": "reserve0",
									"type": "uint112"
								},
								{
									"indexed": false,
									"internalType": "uint112",
									"name": "reserve1",
									"type": "uint112"
								}
							],
							"name": "Sync",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DOMAIN_SEPARATOR",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "MINIMUM_LIQUIDITY",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "PERMIT_TYPEHASH",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "burn",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "factory",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getReserves",
							"outputs": [
								{
									"internalType": "uint112",
									"name": "reserve0",
									"type": "uint112"
								},
								{
									"internalType": "uint112",
									"name": "reserve1",
									"type": "uint112"
								},
								{
									"internalType": "uint32",
									"name": "blockTimestampLast",
									"type": "uint32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "initialize",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "kLast",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "mint",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "price0CumulativeLast",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "price1CumulativeLast",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "skim",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount0Out",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1Out",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "swap",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "sync",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token0",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token1",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DOMAIN_SEPARATOR()": "3644e515",
							"MINIMUM_LIQUIDITY()": "ba9a7a56",
							"PERMIT_TYPEHASH()": "30adf81f",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burn(address)": "89afcb44",
							"decimals()": "313ce567",
							"factory()": "c45a0155",
							"getReserves()": "0902f1ac",
							"initialize(address,address)": "485cc955",
							"kLast()": "7464fc3d",
							"mint(address)": "6a627842",
							"name()": "06fdde03",
							"nonces(address)": "7ecebe00",
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf",
							"price0CumulativeLast()": "5909c0d5",
							"price1CumulativeLast()": "5a3d5493",
							"skim(address)": "bc25cf77",
							"swap(uint256,uint256,address,bytes)": "022c0d9f",
							"symbol()": "95d89b41",
							"sync()": "fff6cae9",
							"token0()": "0dfe1681",
							"token1()": "d21220a7",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0In\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1In\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0Out\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1Out\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"Swap\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint112\",\"name\":\"reserve0\",\"type\":\"uint112\"},{\"indexed\":false,\"internalType\":\"uint112\",\"name\":\"reserve1\",\"type\":\"uint112\"}],\"name\":\"Sync\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MINIMUM_LIQUIDITY\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PERMIT_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"burn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getReserves\",\"outputs\":[{\"internalType\":\"uint112\",\"name\":\"reserve0\",\"type\":\"uint112\"},{\"internalType\":\"uint112\",\"name\":\"reserve1\",\"type\":\"uint112\"},{\"internalType\":\"uint32\",\"name\":\"blockTimestampLast\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"kLast\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"price0CumulativeLast\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"price1CumulativeLast\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"skim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0Out\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1Out\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"swap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sync\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token0\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token1\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/IPancakeV2Pair.sol\":\"IPancakeV2Pair\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/IPancakeV2Pair.sol\":{\"keccak256\":\"0x251bdc1c3466923503c66115c81995cdec945196e8288d80c0e0923b3e907f30\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7cec88b076597889dbf1df2da0712030ca1673f0a1917361012550c7287720b0\",\"dweb:/ipfs/QmfPTVZ9sKtyoKpbBK4RcSmaZDcVRQH46Han6dkYGLBi9r\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/IPancakeV2Router01.sol": {
				"IPancakeV2Router01": {
					"abi": [
						{
							"inputs": [],
							"name": "WETH",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amountADesired",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountBDesired",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountAMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountBMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "addLiquidity",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountB",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenDesired",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETHMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "addLiquidityETH",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountToken",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETH",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "factory",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveOut",
									"type": "uint256"
								}
							],
							"name": "getAmountIn",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveOut",
									"type": "uint256"
								}
							],
							"name": "getAmountOut",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								}
							],
							"name": "getAmountsIn",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								}
							],
							"name": "getAmountsOut",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveB",
									"type": "uint256"
								}
							],
							"name": "quote",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountB",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountAMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountBMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "removeLiquidity",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountB",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETHMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "removeLiquidityETH",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountToken",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETH",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETHMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "approveMax",
									"type": "bool"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "removeLiquidityETHWithPermit",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountToken",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETH",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountAMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountBMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "approveMax",
									"type": "bool"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "removeLiquidityWithPermit",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountB",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapETHForExactTokens",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapExactETHForTokens",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapExactTokensForETH",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapExactTokensForTokens",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountInMax",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapTokensForExactETH",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountInMax",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapTokensForExactTokens",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"WETH()": "ad5c4648",
							"addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)": "e8e33700",
							"addLiquidityETH(address,uint256,uint256,uint256,address,uint256)": "f305d719",
							"factory()": "c45a0155",
							"getAmountIn(uint256,uint256,uint256)": "85f8c259",
							"getAmountOut(uint256,uint256,uint256)": "054d50d4",
							"getAmountsIn(uint256,address[])": "1f00ca74",
							"getAmountsOut(uint256,address[])": "d06ca61f",
							"quote(uint256,uint256,uint256)": "ad615dec",
							"removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)": "baa2abde",
							"removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)": "02751cec",
							"removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)": "ded9382a",
							"removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)": "2195995c",
							"swapETHForExactTokens(uint256,address[],address,uint256)": "fb3bdb41",
							"swapExactETHForTokens(uint256,address[],address,uint256)": "7ff36ab5",
							"swapExactTokensForETH(uint256,uint256,address[],address,uint256)": "18cbafe5",
							"swapExactTokensForTokens(uint256,uint256,address[],address,uint256)": "38ed1739",
							"swapTokensForExactETH(uint256,uint256,address[],address,uint256)": "4a25d94a",
							"swapTokensForExactTokens(uint256,uint256,address[],address,uint256)": "8803dbee"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"WETH\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountADesired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBDesired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountAMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"addLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenDesired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"addLiquidityETH\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveOut\",\"type\":\"uint256\"}],\"name\":\"getAmountIn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveOut\",\"type\":\"uint256\"}],\"name\":\"getAmountOut\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"}],\"name\":\"getAmountsIn\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"}],\"name\":\"getAmountsOut\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveB\",\"type\":\"uint256\"}],\"name\":\"quote\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountAMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"removeLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"removeLiquidityETH\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"approveMax\",\"type\":\"bool\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"removeLiquidityETHWithPermit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountAMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"approveMax\",\"type\":\"bool\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"removeLiquidityWithPermit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapETHForExactTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactETHForTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactTokensForETH\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactTokensForTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInMax\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapTokensForExactETH\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInMax\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapTokensForExactTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/IPancakeV2Router01.sol\":\"IPancakeV2Router01\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/IPancakeV2Router01.sol\":{\"keccak256\":\"0x4d6b22a71a4c8b18a3b492c766f5ebe893d4c00183ad148ce4b0ec9e9af2964c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ffb9ab3901dd80fbe3a99e279b3eda57129fdb65d8b19f2f42d8b9f43a150107\",\"dweb:/ipfs/QmVWLnGMRWhdekgjrSzLmnScGFiWzzYxRKh5s4WSfevB4V\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/IPancakeV2Router02.sol": {
				"IPancakeV2Router02": {
					"abi": [
						{
							"inputs": [],
							"name": "WETH",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amountADesired",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountBDesired",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountAMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountBMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "addLiquidity",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountB",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenDesired",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETHMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "addLiquidityETH",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountToken",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETH",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "factory",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveOut",
									"type": "uint256"
								}
							],
							"name": "getAmountIn",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveOut",
									"type": "uint256"
								}
							],
							"name": "getAmountOut",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								}
							],
							"name": "getAmountsIn",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								}
							],
							"name": "getAmountsOut",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveB",
									"type": "uint256"
								}
							],
							"name": "quote",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountB",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountAMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountBMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "removeLiquidity",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountB",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETHMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "removeLiquidityETH",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountToken",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETH",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETHMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "removeLiquidityETHSupportingFeeOnTransferTokens",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountETH",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETHMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "approveMax",
									"type": "bool"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "removeLiquidityETHWithPermit",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountToken",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETH",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETHMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "approveMax",
									"type": "bool"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountETH",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountAMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountBMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "approveMax",
									"type": "bool"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "removeLiquidityWithPermit",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountB",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapETHForExactTokens",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapExactETHForTokens",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapExactETHForTokensSupportingFeeOnTransferTokens",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapExactTokensForETH",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapExactTokensForETHSupportingFeeOnTransferTokens",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapExactTokensForTokens",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapExactTokensForTokensSupportingFeeOnTransferTokens",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountInMax",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapTokensForExactETH",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountInMax",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapTokensForExactTokens",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"WETH()": "ad5c4648",
							"addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)": "e8e33700",
							"addLiquidityETH(address,uint256,uint256,uint256,address,uint256)": "f305d719",
							"factory()": "c45a0155",
							"getAmountIn(uint256,uint256,uint256)": "85f8c259",
							"getAmountOut(uint256,uint256,uint256)": "054d50d4",
							"getAmountsIn(uint256,address[])": "1f00ca74",
							"getAmountsOut(uint256,address[])": "d06ca61f",
							"quote(uint256,uint256,uint256)": "ad615dec",
							"removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)": "baa2abde",
							"removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)": "02751cec",
							"removeLiquidityETHSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256)": "af2979eb",
							"removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)": "ded9382a",
							"removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)": "5b0d5984",
							"removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)": "2195995c",
							"swapETHForExactTokens(uint256,address[],address,uint256)": "fb3bdb41",
							"swapExactETHForTokens(uint256,address[],address,uint256)": "7ff36ab5",
							"swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)": "b6f9de95",
							"swapExactTokensForETH(uint256,uint256,address[],address,uint256)": "18cbafe5",
							"swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)": "791ac947",
							"swapExactTokensForTokens(uint256,uint256,address[],address,uint256)": "38ed1739",
							"swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)": "5c11d795",
							"swapTokensForExactETH(uint256,uint256,address[],address,uint256)": "4a25d94a",
							"swapTokensForExactTokens(uint256,uint256,address[],address,uint256)": "8803dbee"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"WETH\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountADesired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBDesired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountAMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"addLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenDesired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"addLiquidityETH\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveOut\",\"type\":\"uint256\"}],\"name\":\"getAmountIn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveOut\",\"type\":\"uint256\"}],\"name\":\"getAmountOut\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"}],\"name\":\"getAmountsIn\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"}],\"name\":\"getAmountsOut\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveB\",\"type\":\"uint256\"}],\"name\":\"quote\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountAMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"removeLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"removeLiquidityETH\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"removeLiquidityETHSupportingFeeOnTransferTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"approveMax\",\"type\":\"bool\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"removeLiquidityETHWithPermit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"approveMax\",\"type\":\"bool\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"removeLiquidityETHWithPermitSupportingFeeOnTransferTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountAMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"approveMax\",\"type\":\"bool\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"removeLiquidityWithPermit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapETHForExactTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactETHForTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactETHForTokensSupportingFeeOnTransferTokens\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactTokensForETH\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactTokensForETHSupportingFeeOnTransferTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactTokensForTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactTokensForTokensSupportingFeeOnTransferTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInMax\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapTokensForExactETH\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInMax\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapTokensForExactTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/IPancakeV2Router02.sol\":\"IPancakeV2Router02\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/IPancakeV2Router01.sol\":{\"keccak256\":\"0x4d6b22a71a4c8b18a3b492c766f5ebe893d4c00183ad148ce4b0ec9e9af2964c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ffb9ab3901dd80fbe3a99e279b3eda57129fdb65d8b19f2f42d8b9f43a150107\",\"dweb:/ipfs/QmVWLnGMRWhdekgjrSzLmnScGFiWzzYxRKh5s4WSfevB4V\"]},\"contracts/IPancakeV2Router02.sol\":{\"keccak256\":\"0x532b5781d79cda434572b7cb562bb7141e54cbf9b03261a5ee39a70b614100ab\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://559d8d0a676fd42b0e0a9316e10cd097afd5d7fe4e6f1c95a6772414114beb82\",\"dweb:/ipfs/Qmd4FLJY5LHzLRJY448ixH8N9DWJSaa73aJWhVehHrWHUb\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/MyToken.sol": {
				"IAntisnipe": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "assureCanTransfer",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"assureCanTransfer(address,address,address,uint256)": "5d37a8dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"assureCanTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/MyToken.sol\":\"IAntisnipe\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269\",\"dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://864a40efcffdf408044c332a5aa38ec5618ed7b4eecb8f65faf45671bd6cdc65\",\"dweb:/ipfs/QmQJquTMtc6fgm5JQzGdsGpA2fqBe3MHWEdt2qzaLySMdN\"]},\"contracts/IPancakeV2Factory.sol\":{\"keccak256\":\"0x60dbe5cba4b179a7c1f959ff040f96cbb60b09a1e60de938a2aebc85687ad434\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6b0966829afb7234c9b8ce213d67445631234da9bb2ea4176a22a66e1ed0606e\",\"dweb:/ipfs/QmWAycZmKAos2fWeSYeYEKhitp3eieLRvmXpKGCzNyFhuc\"]},\"contracts/IPancakeV2Pair.sol\":{\"keccak256\":\"0x251bdc1c3466923503c66115c81995cdec945196e8288d80c0e0923b3e907f30\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7cec88b076597889dbf1df2da0712030ca1673f0a1917361012550c7287720b0\",\"dweb:/ipfs/QmfPTVZ9sKtyoKpbBK4RcSmaZDcVRQH46Han6dkYGLBi9r\"]},\"contracts/IPancakeV2Router01.sol\":{\"keccak256\":\"0x4d6b22a71a4c8b18a3b492c766f5ebe893d4c00183ad148ce4b0ec9e9af2964c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ffb9ab3901dd80fbe3a99e279b3eda57129fdb65d8b19f2f42d8b9f43a150107\",\"dweb:/ipfs/QmVWLnGMRWhdekgjrSzLmnScGFiWzzYxRKh5s4WSfevB4V\"]},\"contracts/IPancakeV2Router02.sol\":{\"keccak256\":\"0x532b5781d79cda434572b7cb562bb7141e54cbf9b03261a5ee39a70b614100ab\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://559d8d0a676fd42b0e0a9316e10cd097afd5d7fe4e6f1c95a6772414114beb82\",\"dweb:/ipfs/Qmd4FLJY5LHzLRJY448ixH8N9DWJSaa73aJWhVehHrWHUb\"]},\"contracts/MyToken.sol\":{\"keccak256\":\"0x2630a78facbef88563a0e218d779a54dbedd0fbe11253dda6a0cfd45691547c3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bfc5945a06be55721a857c11481f9f86c37e8434f59fef73542cc0b504b47fbc\",\"dweb:/ipfs/QmVjUo7Axa8hVXkR5rX83uiUFFyuy2Zky5VjX66wi4P1ou\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Pokemon": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "contract IPancakeV2Router02",
									"name": "_pancakeV2Router",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_marketingWallet",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_antiManager",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "tokensSwapped",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "ethReceived",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "tokensIntoLiqudity",
									"type": "uint256"
								}
							],
							"name": "SwapAndLiquify",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "bool",
									"name": "enabled",
									"type": "bool"
								}
							],
							"name": "SwapAndLiquifyEnabledUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "MAX_HOLDING_PERCENTS_DIVISOR",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "_burnFee",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "_liquidityFee",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "_marketingFee",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "_maxHoldingPercents",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "_sellBurnFee",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "_sellLiquidityFee",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "_sellMarketingFee",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "_sellTaxFee",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "_taxFee",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "antiBotEnabled",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "antiManager",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "antiWhaleEnabled",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "antisnipe",
							"outputs": [
								{
									"internalType": "contract IAntisnipe",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "antisnipeDisable",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tAmount",
									"type": "uint256"
								}
							],
							"name": "deliver",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "excludeFromFee",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "excludeFromReward",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "includeInFee",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "includeInReward",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "isExcludedFromFee",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "isExcludedFromReward",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "marketingWallet",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "pancakeV2Pair",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "pancakeV2Router",
							"outputs": [
								{
									"internalType": "contract IPancakeV2Router02",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tAmount",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "deductTransferFee",
									"type": "bool"
								}
							],
							"name": "reflectionFromToken",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bool",
									"name": "enabled",
									"type": "bool"
								}
							],
							"name": "setAntiBot",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bool",
									"name": "enabled",
									"type": "bool"
								}
							],
							"name": "setAntiWhale",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "addr",
									"type": "address"
								}
							],
							"name": "setAntisnipeAddress",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "setAntisnipeDisable",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "burnFee",
									"type": "uint256"
								}
							],
							"name": "setBurnFeePercent",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "liquidityFee",
									"type": "uint256"
								}
							],
							"name": "setLiquidityFeePercent",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "marketingFee",
									"type": "uint256"
								}
							],
							"name": "setMarketingFeePercent",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newWallet",
									"type": "address"
								}
							],
							"name": "setMarketingWallet",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "maxHoldingPercents",
									"type": "uint256"
								}
							],
							"name": "setMaxHoldingPercents",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "sellBurnFee",
									"type": "uint256"
								}
							],
							"name": "setSellBurnFeePercent",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "sellLiquidityFee",
									"type": "uint256"
								}
							],
							"name": "setSellLiquidityFeePercent",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "sellMarketingFee",
									"type": "uint256"
								}
							],
							"name": "setSellMarketingFeePercent",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "sellTaxFee",
									"type": "uint256"
								}
							],
							"name": "setSellTaxFeePercent",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bool",
									"name": "_enabled",
									"type": "bool"
								}
							],
							"name": "setSwapAndLiquifyEnabled",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "taxFee",
									"type": "uint256"
								}
							],
							"name": "setTaxFeePercent",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "swapAndLiquifyEnabled",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "rAmount",
									"type": "uint256"
								}
							],
							"name": "tokenFromReflection",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalFees",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/MyToken.sol\":541:25294  contract Pokemon is Context, IERC20, Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/MyToken.sol\":1043:1065  7_777_777_777 * 10**18 */\n  0x1921a082258a73bfc3240000\n    /* \"contracts/MyToken.sol\":1017:1065  uint256 private _tTotal = 7_777_777_777 * 10**18 */\n  0x07\n  dup2\n  swap1\n  sstore\n    /* \"contracts/MyToken.sol\":1105:1118  MAX % _tTotal */\n  tag_1\n  swap1\n  not(0x00)\n  tag_2\n  jump\t// in\ntag_1:\n    /* \"contracts/MyToken.sol\":1098:1119  MAX - (MAX % _tTotal) */\n  tag_3\n  swap1\n  not(0x00)\n  tag_4\n  jump\t// in\ntag_3:\n    /* \"contracts/MyToken.sol\":1071:1120  uint256 private _rTotal = (MAX - (MAX % _tTotal)) */\n  0x08\n  sstore\n    /* \"contracts/MyToken.sol\":1159:1196  string private _name = 'Meta-pokemon' */\n  0x40\n  dup1\n  mload\n  dup1\n  dup3\n  add\n  swap1\n  swap2\n  mstore\n  0x0c\n  dup1\n  dup3\n  mstore\n  shl(0xa1, 0x26b2ba3096b837b5b2b6b7b7)\n  0x20\n  swap1\n  swap3\n  add\n  swap2\n  dup3\n  mstore\n  tag_5\n  swap2\n  0x0a\n  swap2\n  tag_6\n  jump\t// in\ntag_5:\n  pop\n    /* \"contracts/MyToken.sol\":1202:1236  string private _symbol = 'pokemon' */\n  0x40\n  dup1\n  mload\n  dup1\n  dup3\n  add\n  swap1\n  swap2\n  mstore\n  0x07\n  dup1\n  dup3\n  mstore\n  shl(0xc9, 0x3837b5b2b6b7b7)\n  0x20\n  swap1\n  swap3\n  add\n  swap2\n  dup3\n  mstore\n  tag_7\n  swap2\n  0x0b\n  swap2\n  tag_6\n  jump\t// in\ntag_7:\n  pop\n    /* \"contracts/MyToken.sol\":1242:1270  uint8 private _decimals = 18 */\n  0x0c\n  dup1\n  sload\n  not(0xff)\n  and\n    /* \"contracts/MyToken.sol\":1268:1270  18 */\n  0x12\n    /* \"contracts/MyToken.sol\":1242:1270  uint8 private _decimals = 18 */\n  swap1\n  dup2\n  or\n  swap1\n  swap2\n  sstore\n    /* \"contracts/MyToken.sol\":1319:1320  2 */\n  0x02\n    /* \"contracts/MyToken.sol\":1294:1320  uint256 public _taxFee = 2 */\n  0x0d\n  dup2\n  swap1\n  sstore\n    /* \"contracts/MyToken.sol\":1326:1367  uint256 private _previousTaxFee = _taxFee */\n  0x0e\n  dup2\n  swap1\n  sstore\n    /* \"contracts/MyToken.sol\":1242:1270  uint8 private _decimals = 18 */\n  0x01\n    /* \"contracts/MyToken.sol\":1374:1406  uint256 public _liquidityFee = 1 */\n  0x0f\n  dup2\n  swap1\n  sstore\n    /* \"contracts/MyToken.sol\":1412:1465  uint256 private _previousLiquidityFee = _liquidityFee */\n  0x10\n  dup2\n  swap1\n  sstore\n    /* \"contracts/MyToken.sol\":1472:1499  uint256 public _burnFee = 2 */\n  0x11\n  dup3\n  swap1\n  sstore\n    /* \"contracts/MyToken.sol\":1505:1548  uint256 private _previousBurnFee = _burnFee */\n  swap2\n  dup2\n  swap1\n  sstore\n    /* \"contracts/MyToken.sol\":1555:1587  uint256 public _marketingFee = 2 */\n  0x13\n  dup2\n  swap1\n  sstore\n    /* \"contracts/MyToken.sol\":1629:1682  uint256 private _previousMarketingFee = _marketingFee */\n  0x15\n  dup2\n  swap1\n  sstore\n    /* \"contracts/MyToken.sol\":1706:1736  uint256 public _sellTaxFee = 2 */\n  0x16\n  dup2\n  swap1\n  sstore\n    /* \"contracts/MyToken.sol\":1742:1778  uint256 public _sellLiquidityFee = 1 */\n  0x17\n  swap2\n  swap1\n  swap2\n  sstore\n    /* \"contracts/MyToken.sol\":1784:1820  uint256 public _sellMarketingFee = 2 */\n  0x18\n  dup2\n  swap1\n  sstore\n    /* \"contracts/MyToken.sol\":1826:1857  uint256 public _sellBurnFee = 2 */\n  0x19\n  sstore\n    /* \"contracts/MyToken.sol\":1984:1985  5 */\n  0x05\n    /* \"contracts/MyToken.sol\":1947:1985  uint256 public _maxHoldingPercents = 5 */\n  0x1a\n  sstore\n    /* \"contracts/MyToken.sol\":2284:2325  bool public swapAndLiquifyEnabled = false */\n  0x1f\n  dup1\n  sload\n  not(shl(0xa8, 0xff))\n  and\n  swap1\n  sstore\n    /* \"contracts/MyToken.sol\":2379:2395  1000000 * 10**18 */\n  0xd3c21bcecceda1000000\n    /* \"contracts/MyToken.sol\":2331:2395  uint256 private numTokensSellToAddToLiquidity = 1000000 * 10**18 */\n  0x20\n  swap1\n  dup2\n  sstore\n    /* \"contracts/MyToken.sol\":2401:2622  uint256[] _allowedBuyAmount = [... */\n  0x40\n  dup1\n  mload\n  0x0160\n  dup2\n  add\n  dup3\n  mstore\n    /* \"contracts/MyToken.sol\":2441:2446  65678 */\n  0x01008e\n    /* \"contracts/MyToken.sol\":2401:2622  uint256[] _allowedBuyAmount = [... */\n  dup2\n  mstore\n    /* \"contracts/MyToken.sol\":2456:2462  129052 */\n  0x01f81c\n    /* \"contracts/MyToken.sol\":2401:2622  uint256[] _allowedBuyAmount = [... */\n  swap3\n  dup2\n  add\n  swap3\n  swap1\n  swap3\n  mstore\n    /* \"contracts/MyToken.sol\":2472:2478  263555 */\n  0x040583\n    /* \"contracts/MyToken.sol\":2401:2622  uint256[] _allowedBuyAmount = [... */\n  swap1\n  dup3\n  add\n  mstore\n    /* \"contracts/MyToken.sol\":2488:2494  521287 */\n  0x07f447\n    /* \"contracts/MyToken.sol\":2401:2622  uint256[] _allowedBuyAmount = [... */\n  0x60\n  dup3\n  add\n  mstore\n    /* \"contracts/MyToken.sol\":2504:2511  1047577 */\n  0x0ffc19\n    /* \"contracts/MyToken.sol\":2401:2622  uint256[] _allowedBuyAmount = [... */\n  0x80\n  dup3\n  add\n  mstore\n    /* \"contracts/MyToken.sol\":2521:2528  2087152 */\n  0x1fd8f0\n    /* \"contracts/MyToken.sol\":2401:2622  uint256[] _allowedBuyAmount = [... */\n  0xa0\n  dup3\n  add\n  mstore\n    /* \"contracts/MyToken.sol\":2538:2545  4194221 */\n  0x3fffad\n    /* \"contracts/MyToken.sol\":2401:2622  uint256[] _allowedBuyAmount = [... */\n  0xc0\n  dup3\n  add\n  mstore\n    /* \"contracts/MyToken.sol\":2555:2562  8386606 */\n  0x7ff82e\n    /* \"contracts/MyToken.sol\":2401:2622  uint256[] _allowedBuyAmount = [... */\n  0xe0\n  dup3\n  add\n  mstore\n    /* \"contracts/MyToken.sol\":2572:2580  16877115 */\n  0x0101863b\n    /* \"contracts/MyToken.sol\":1242:1270  uint8 private _decimals = 18 */\n  0x0100\n    /* \"contracts/MyToken.sol\":2401:2622  uint256[] _allowedBuyAmount = [... */\n  dup3\n  add\n  mstore\n    /* \"contracts/MyToken.sol\":2590:2598  33564442 */\n  0x0200271a\n    /* \"contracts/MyToken.sol\":2401:2622  uint256[] _allowedBuyAmount = [... */\n  0x0120\n  dup3\n  add\n  mstore\n    /* \"contracts/MyToken.sol\":2608:2616  67308851 */\n  0x04030d33\n    /* \"contracts/MyToken.sol\":2401:2622  uint256[] _allowedBuyAmount = [... */\n  0x0140\n  dup3\n  add\n  mstore\n  tag_8\n  swap1\n  0x21\n  swap1\n  0x0b\n  tag_9\n  jump\t// in\ntag_8:\n  pop\n    /* \"contracts/MyToken.sol\":2926:3944  constructor(... */\n  callvalue\n  dup1\n  iszero\n  tag_10\n  jumpi\n  0x00\n  dup1\n  revert\ntag_10:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_11\n  swap2\n  tag_12\n  jump\t// in\ntag_11:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:968  _transferOwnership(_msgSender()) */\n  tag_16\n    /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:954  _transferOwnership */\n  tag_19\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:968  _transferOwnership(_msgSender()) */\n  jump\t// in\ntag_16:\n    /* \"contracts/MyToken.sol\":3063:3078  marketingWallet */\n  0x14\n    /* \"contracts/MyToken.sol\":3063:3097  marketingWallet = _marketingWallet */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n  sub(shl(0xa0, 0x01), 0x01)\n  dup5\n  dup2\n  and\n  swap2\n  swap1\n  swap2\n  or\n  swap1\n  swap2\n  sstore\n    /* \"contracts/MyToken.sol\":3107:3118  antiManager */\n  0x1d\n    /* \"contracts/MyToken.sol\":3107:3133  antiManager = _antiManager */\n  dup1\n  sload\n  not(sub(shl(0xa8, 0x01), 0x0100))\n  and\n    /* \"contracts/MyToken.sol\":3063:3097  marketingWallet = _marketingWallet */\n  0x0100\n    /* \"contracts/MyToken.sol\":3107:3133  antiManager = _antiManager */\n  swap3\n  dup5\n  and\n  swap3\n  swap1\n  swap3\n  mul\n  swap2\n  swap1\n  swap2\n  or\n  swap1\n  sstore\n    /* \"contracts/MyToken.sol\":3167:3174  _rTotal */\n  sload(0x08)\n  0x01\n  0x00\n    /* \"contracts/MyToken.sol\":3151:3163  _msgSender() */\n  tag_21\n    /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n  caller\n  swap1\n    /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n  jump\n    /* \"contracts/MyToken.sol\":3151:3163  _msgSender() */\ntag_21:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contracts/MyToken.sol\":3143:3164  _rOwned[_msgSender()] */\n  and\n  sub(shl(0xa0, 0x01), 0x01)\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"contracts/MyToken.sol\":3143:3174  _rOwned[_msgSender()] = _rTotal */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/MyToken.sol\":3271:3287  _pancakeV2Router */\n  dup3\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contracts/MyToken.sol\":3271:3295  _pancakeV2Router.factory */\n  and\n  0xc45a0155\n    /* \"contracts/MyToken.sol\":3271:3297  _pancakeV2Router.factory() */\n  mload(0x40)\n  dup2\n  0xffffffff\n  and\n  0xe0\n  shl\n  dup2\n  mstore\n  0x04\n  add\n  0x20\n  mload(0x40)\n  dup1\n  dup4\n  sub\n  dup2\n  dup7\n  dup1\n  extcodesize\n  iszero\n  dup1\n  iszero\n  tag_22\n  jumpi\n  0x00\n  dup1\n  revert\ntag_22:\n  pop\n  gas\n  staticcall\n  iszero\n  dup1\n  iszero\n  tag_24\n  jumpi\n  returndatasize\n  0x00\n  dup1\n  returndatacopy\n  revert(0x00, returndatasize)\ntag_24:\n  pop\n  pop\n  pop\n  pop\n  mload(0x40)\n  returndatasize\n  not(0x1f)\n  0x1f\n  dup3\n  add\n  and\n  dup3\n  add\n  dup1\n  0x40\n  mstore\n  pop\n  dup2\n  add\n  swap1\n  tag_25\n  swap2\n  swap1\n  tag_26\n  jump\t// in\ntag_25:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contracts/MyToken.sol\":3253:3309  IPancakeV2Factory(_pancakeV2Router.factory()).createPair */\n  and\n  0xc9c65396\n    /* \"contracts/MyToken.sol\":3331:3335  this */\n  address\n    /* \"contracts/MyToken.sol\":3350:3366  _pancakeV2Router */\n  dup6\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contracts/MyToken.sol\":3350:3371  _pancakeV2Router.WETH */\n  and\n  0xad5c4648\n    /* \"contracts/MyToken.sol\":3350:3373  _pancakeV2Router.WETH() */\n  mload(0x40)\n  dup2\n  0xffffffff\n  and\n  0xe0\n  shl\n  dup2\n  mstore\n  0x04\n  add\n  0x20\n  mload(0x40)\n  dup1\n  dup4\n  sub\n  dup2\n  dup7\n  dup1\n  extcodesize\n  iszero\n  dup1\n  iszero\n  tag_27\n  jumpi\n  0x00\n  dup1\n  revert\ntag_27:\n  pop\n  gas\n  staticcall\n  iszero\n  dup1\n  iszero\n  tag_29\n  jumpi\n  returndatasize\n  0x00\n  dup1\n  returndatacopy\n  revert(0x00, returndatasize)\ntag_29:\n  pop\n  pop\n  pop\n  pop\n  mload(0x40)\n  returndatasize\n  not(0x1f)\n  0x1f\n  dup3\n  add\n  and\n  dup3\n  add\n  dup1\n  0x40\n  mstore\n  pop\n  dup2\n  add\n  swap1\n  tag_30\n  swap2\n  swap1\n  tag_26\n  jump\t// in\ntag_30:\n    /* \"contracts/MyToken.sol\":3253:3383  IPancakeV2Factory(_pancakeV2Router.factory()).createPair(... */\n  mload(0x40)\n  not(sub(shl(0xe0, 0x01), 0x01))\n  0xe0\n  dup6\n  swap1\n  shl\n  and\n  dup2\n  mstore\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":1051:1066   */\n  swap3\n  dup4\n  and\n    /* \"contracts/MyToken.sol\":3253:3383  IPancakeV2Factory(_pancakeV2Router.factory()).createPair(... */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":1033:1067   */\n  mstore\n    /* \"#utility.yul\":1103:1118   */\n  swap2\n  and\n    /* \"#utility.yul\":1083:1101   */\n  0x24\n  dup3\n  add\n    /* \"#utility.yul\":1076:1119   */\n  mstore\n    /* \"#utility.yul\":968:986   */\n  0x44\n  add\n    /* \"contracts/MyToken.sol\":3253:3383  IPancakeV2Factory(_pancakeV2Router.factory()).createPair(... */\n  0x20\n  mload(0x40)\n  dup1\n  dup4\n  sub\n  dup2\n  0x00\n  dup8\n  dup1\n  extcodesize\n  iszero\n  dup1\n  iszero\n  tag_33\n  jumpi\n  0x00\n  dup1\n  revert\ntag_33:\n  pop\n  gas\n  call\n  iszero\n  dup1\n  iszero\n  tag_35\n  jumpi\n  returndatasize\n  0x00\n  dup1\n  returndatacopy\n  revert(0x00, returndatasize)\ntag_35:\n  pop\n  pop\n  pop\n  pop\n  mload(0x40)\n  returndatasize\n  not(0x1f)\n  0x1f\n  dup3\n  add\n  and\n  dup3\n  add\n  dup1\n  0x40\n  mstore\n  pop\n  dup2\n  add\n  swap1\n  tag_36\n  swap2\n  swap1\n  tag_26\n  jump\t// in\ntag_36:\n    /* \"contracts/MyToken.sol\":3237:3250  pancakeV2Pair */\n  0x1f\n    /* \"contracts/MyToken.sol\":3237:3383  pancakeV2Pair = IPancakeV2Factory(_pancakeV2Router.factory()).createPair(... */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  swap1\n  dup2\n  and\n  sub(shl(0xa0, 0x01), 0x01)\n  swap4\n  dup5\n  and\n  or\n  swap1\n  swap2\n  sstore\n    /* \"contracts/MyToken.sol\":3444:3459  pancakeV2Router */\n  0x1e\n    /* \"contracts/MyToken.sol\":3444:3478  pancakeV2Router = _pancakeV2Router */\n  dup1\n  sload\n  swap1\n  swap2\n  and\n  swap2\n  dup6\n  and\n  swap2\n  swap1\n  swap2\n  or\n  swap1\n  sstore\n  0x01\n    /* \"contracts/MyToken.sol\":3554:3572  _isExcludedFromFee */\n  0x04\n  0x00\n    /* \"contracts/MyToken.sol\":3573:3580  owner() */\n  tag_37\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1247:1254  address */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1279  _owner */\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n  and\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n  jump\n    /* \"contracts/MyToken.sol\":3573:3580  owner() */\ntag_37:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contracts/MyToken.sol\":3554:3581  _isExcludedFromFee[owner()] */\n  swap1\n  dup2\n  and\n  dup3\n  mstore\n  0x20\n  dup1\n  dup4\n  add\n  swap4\n  swap1\n  swap4\n  mstore\n  0x40\n  swap2\n  dup3\n  add\n  0x00\n  swap1\n  dup2\n  keccak256\n    /* \"contracts/MyToken.sol\":3554:3588  _isExcludedFromFee[owner()] = true */\n  dup1\n  sload\n  swap6\n  iszero\n  iszero\n  not(0xff)\n  swap7\n  dup8\n  and\n  or\n  swap1\n  sstore\n    /* \"contracts/MyToken.sol\":3598:3630  _isExcludedFromFee[_antiManager] */\n  swap1\n  dup6\n  and\n  dup2\n  mstore\n    /* \"contracts/MyToken.sol\":3598:3616  _isExcludedFromFee */\n  0x04\n    /* \"contracts/MyToken.sol\":3598:3630  _isExcludedFromFee[_antiManager] */\n  swap1\n  swap3\n  mstore\n  dup1\n  dup3\n  keccak256\n    /* \"contracts/MyToken.sol\":3598:3637  _isExcludedFromFee[_antiManager] = true */\n  dup1\n  sload\n  dup5\n  and\n    /* \"contracts/MyToken.sol\":3554:3588  _isExcludedFromFee[owner()] = true */\n  0x01\n    /* \"contracts/MyToken.sol\":3598:3637  _isExcludedFromFee[_antiManager] = true */\n  swap1\n  dup2\n  or\n  swap1\n  swap2\n  sstore\n    /* \"contracts/MyToken.sol\":3674:3678  this */\n  address\n    /* \"contracts/MyToken.sol\":3647:3680  _isExcludedFromFee[address(this)] */\n  dup4\n  mstore\n  swap1\n  dup3\n  keccak256\n    /* \"contracts/MyToken.sol\":3647:3687  _isExcludedFromFee[address(this)] = true */\n  dup1\n  sload\n  swap1\n  swap4\n  and\n  or\n  swap1\n  swap2\n  sstore\n    /* \"contracts/MyToken.sol\":3745:3879  for (uint256 i = 0; i < _allowedBuyAmount.length; i++) {... */\ntag_39:\n    /* \"contracts/MyToken.sol\":3769:3786  _allowedBuyAmount */\n  0x21\n    /* \"contracts/MyToken.sol\":3769:3793  _allowedBuyAmount.length */\n  sload\n    /* \"contracts/MyToken.sol\":3765:3793  i < _allowedBuyAmount.length */\n  dup2\n  lt\n    /* \"contracts/MyToken.sol\":3745:3879  for (uint256 i = 0; i < _allowedBuyAmount.length; i++) {... */\n  iszero\n  tag_40\n  jumpi\n    /* \"contracts/MyToken.sol\":3864:3868  true */\n  0x01\n    /* \"contracts/MyToken.sol\":3814:3830  allowedBuyAmount */\n  0x1c\n    /* \"contracts/MyToken.sol\":3814:3861  allowedBuyAmount[_allowedBuyAmount[i] * 10**18] */\n  0x00\n    /* \"contracts/MyToken.sol\":3831:3848  _allowedBuyAmount */\n  0x21\n    /* \"contracts/MyToken.sol\":3849:3850  i */\n  dup5\n    /* \"contracts/MyToken.sol\":3831:3851  _allowedBuyAmount[i] */\n  dup2\n  sload\n  dup2\n  lt\n  tag_43\n  jumpi\n  tag_43\n  tag_44\n  jump\t// in\ntag_43:\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  add\n  sload\n    /* \"contracts/MyToken.sol\":3854:3860  10**18 */\n  0x0de0b6b3a7640000\n    /* \"contracts/MyToken.sol\":3831:3860  _allowedBuyAmount[i] * 10**18 */\n  tag_46\n  swap2\n  swap1\n  tag_47\n  jump\t// in\ntag_46:\n    /* \"contracts/MyToken.sol\":3814:3861  allowedBuyAmount[_allowedBuyAmount[i] * 10**18] */\n  dup2\n  mstore\n  0x20\n  dup2\n  add\n  swap2\n  swap1\n  swap2\n  mstore\n  0x40\n  add\n  0x00\n  keccak256\n    /* \"contracts/MyToken.sol\":3814:3868  allowedBuyAmount[_allowedBuyAmount[i] * 10**18] = true */\n  dup1\n  sload\n  not(0xff)\n  and\n  swap2\n  iszero\n  iszero\n  swap2\n  swap1\n  swap2\n  or\n  swap1\n  sstore\n    /* \"contracts/MyToken.sol\":3795:3798  i++ */\n  dup1\n  tag_48\n  dup2\n  tag_49\n  jump\t// in\ntag_48:\n  swap2\n  pop\n  pop\n    /* \"contracts/MyToken.sol\":3745:3879  for (uint256 i = 0; i < _allowedBuyAmount.length; i++) {... */\n  jump(tag_39)\ntag_40:\n  pop\n    /* \"contracts/MyToken.sol\":3929:3936  _tTotal */\n  sload(0x07)\n    /* \"contracts/MyToken.sol\":3894:3937  Transfer(address(0), _msgSender(), _tTotal) */\n  mload(0x40)\n    /* \"#utility.yul\":1276:1301   */\n  swap1\n  dup2\n  mstore\n    /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n  caller\n  swap1\n    /* \"contracts/MyToken.sol\":3911:3912  0 */\n  0x00\n  swap1\n    /* \"contracts/MyToken.sol\":3894:3937  Transfer(address(0), _msgSender(), _tTotal) */\n  0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n  swap1\n    /* \"#utility.yul\":1264:1266   */\n  0x20\n    /* \"#utility.yul\":1249:1267   */\n  add\n    /* \"contracts/MyToken.sol\":3894:3937  Transfer(address(0), _msgSender(), _tTotal) */\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"contracts/MyToken.sol\":2926:3944  constructor(... */\n  pop\n  pop\n  pop\n    /* \"contracts/MyToken.sol\":541:25294  contract Pokemon is Context, IERC20, Ownable {... */\n  jump(tag_72)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\ntag_19:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2506:2522  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2525:2531  _owner */\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2541:2558  _owner = newOwner */\n  dup4\n  dup2\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  dup4\n  and\n  dup2\n  or\n  dup5\n  sstore\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n  mload(0x40)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2525:2531  _owner */\n  swap2\n  swap1\n  swap3\n  and\n  swap3\n  dup4\n  swap2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2506:2522  address oldOwner */\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2496:2620  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"contracts/MyToken.sol\":541:25294  contract Pokemon is Context, IERC20, Ownable {... */\ntag_6:\n  dup3\n  dup1\n  sload\n  tag_57\n  swap1\n  tag_58\n  jump\t// in\ntag_57:\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x1f\n  add\n  0x20\n  swap1\n  div\n  dup2\n  add\n  swap3\n  dup3\n  tag_60\n  jumpi\n  0x00\n  dup6\n  sstore\n  jump(tag_63)\ntag_60:\n  dup3\n  0x1f\n  lt\n  tag_61\n  jumpi\n  dup1\n  mload\n  not(0xff)\n  and\n  dup4\n  dup1\n  add\n  or\n  dup6\n  sstore\n  jump(tag_63)\ntag_61:\n  dup3\n  dup1\n  add\n  0x01\n  add\n  dup6\n  sstore\n  dup3\n  iszero\n  tag_63\n  jumpi\n  swap2\n  dup3\n  add\ntag_62:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_63\n  jumpi\n  dup3\n  mload\n  dup3\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x01\n  add\n  swap1\n  jump(tag_62)\ntag_63:\n  pop\n  tag_64\n  swap3\n  swap2\n  pop\n  tag_65\n  jump\t// in\ntag_64:\n  pop\n  swap1\n  jump\t// out\ntag_9:\n  dup3\n  dup1\n  sload\n  dup3\n  dup3\n  sstore\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  dup2\n  add\n  swap3\n  dup3\n  iszero\n  tag_63\n  jumpi\n  swap2\n  0x20\n  mul\n  dup3\n  add\ntag_67:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_63\n  jumpi\n  dup3\n  mload\n  dup3\n  swap1\n  0xffffffff\n  and\n  swap1\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x01\n  add\n  swap1\n  jump(tag_67)\ntag_65:\ntag_70:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_64\n  jumpi\n  0x00\n  dup2\n  sstore\n  0x01\n  add\n  jump(tag_70)\n    /* \"#utility.yul\":14:265   */\ntag_26:\n    /* \"#utility.yul\":84:90   */\n  0x00\n    /* \"#utility.yul\":137:139   */\n  0x20\n    /* \"#utility.yul\":125:134   */\n  dup3\n    /* \"#utility.yul\":116:123   */\n  dup5\n    /* \"#utility.yul\":112:135   */\n  sub\n    /* \"#utility.yul\":108:140   */\n  slt\n    /* \"#utility.yul\":105:157   */\n  iszero\n  tag_74\n  jumpi\n    /* \"#utility.yul\":153:154   */\n  0x00\n    /* \"#utility.yul\":150:151   */\n  dup1\n    /* \"#utility.yul\":143:155   */\n  revert\n    /* \"#utility.yul\":105:157   */\ntag_74:\n    /* \"#utility.yul\":185:194   */\n  dup2\n    /* \"#utility.yul\":179:195   */\n  mload\n    /* \"#utility.yul\":204:235   */\n  tag_75\n    /* \"#utility.yul\":229:234   */\n  dup2\n    /* \"#utility.yul\":204:235   */\n  tag_76\n  jump\t// in\ntag_75:\n    /* \"#utility.yul\":254:259   */\n  swap4\n    /* \"#utility.yul\":14:265   */\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":270:816   */\ntag_12:\n    /* \"#utility.yul\":385:391   */\n  0x00\n    /* \"#utility.yul\":393:399   */\n  dup1\n    /* \"#utility.yul\":401:407   */\n  0x00\n    /* \"#utility.yul\":454:456   */\n  0x60\n    /* \"#utility.yul\":442:451   */\n  dup5\n    /* \"#utility.yul\":433:440   */\n  dup7\n    /* \"#utility.yul\":429:452   */\n  sub\n    /* \"#utility.yul\":425:457   */\n  slt\n    /* \"#utility.yul\":422:474   */\n  iszero\n  tag_78\n  jumpi\n    /* \"#utility.yul\":470:471   */\n  0x00\n    /* \"#utility.yul\":467:468   */\n  dup1\n    /* \"#utility.yul\":460:472   */\n  revert\n    /* \"#utility.yul\":422:474   */\ntag_78:\n    /* \"#utility.yul\":502:511   */\n  dup4\n    /* \"#utility.yul\":496:512   */\n  mload\n    /* \"#utility.yul\":521:552   */\n  tag_79\n    /* \"#utility.yul\":546:551   */\n  dup2\n    /* \"#utility.yul\":521:552   */\n  tag_76\n  jump\t// in\ntag_79:\n    /* \"#utility.yul\":621:623   */\n  0x20\n    /* \"#utility.yul\":606:624   */\n  dup6\n  add\n    /* \"#utility.yul\":600:625   */\n  mload\n    /* \"#utility.yul\":571:576   */\n  swap1\n  swap4\n  pop\n    /* \"#utility.yul\":634:667   */\n  tag_80\n    /* \"#utility.yul\":600:625   */\n  dup2\n    /* \"#utility.yul\":634:667   */\n  tag_76\n  jump\t// in\ntag_80:\n    /* \"#utility.yul\":738:740   */\n  0x40\n    /* \"#utility.yul\":723:741   */\n  dup6\n  add\n    /* \"#utility.yul\":717:742   */\n  mload\n    /* \"#utility.yul\":686:693   */\n  swap1\n  swap3\n  pop\n    /* \"#utility.yul\":751:784   */\n  tag_81\n    /* \"#utility.yul\":717:742   */\n  dup2\n    /* \"#utility.yul\":751:784   */\n  tag_76\n  jump\t// in\ntag_81:\n    /* \"#utility.yul\":803:810   */\n  dup1\n    /* \"#utility.yul\":793:810   */\n  swap2\n  pop\n  pop\n    /* \"#utility.yul\":270:816   */\n  swap3\n  pop\n  swap3\n  pop\n  swap3\n  jump\t// out\n    /* \"#utility.yul\":1312:1480   */\ntag_47:\n    /* \"#utility.yul\":1352:1359   */\n  0x00\n    /* \"#utility.yul\":1418:1419   */\n  dup2\n    /* \"#utility.yul\":1414:1415   */\n  0x00\n    /* \"#utility.yul\":1410:1416   */\n  not\n    /* \"#utility.yul\":1406:1420   */\n  div\n    /* \"#utility.yul\":1403:1404   */\n  dup4\n    /* \"#utility.yul\":1400:1421   */\n  gt\n    /* \"#utility.yul\":1395:1396   */\n  dup3\n    /* \"#utility.yul\":1388:1397   */\n  iszero\n    /* \"#utility.yul\":1381:1398   */\n  iszero\n    /* \"#utility.yul\":1377:1422   */\n  and\n    /* \"#utility.yul\":1374:1445   */\n  iszero\n  tag_86\n  jumpi\n    /* \"#utility.yul\":1425:1443   */\n  tag_86\n  tag_87\n  jump\t// in\ntag_86:\n  pop\n    /* \"#utility.yul\":1465:1474   */\n  mul\n  swap1\n    /* \"#utility.yul\":1312:1480   */\n  jump\t// out\n    /* \"#utility.yul\":1485:1610   */\ntag_4:\n    /* \"#utility.yul\":1525:1529   */\n  0x00\n    /* \"#utility.yul\":1553:1554   */\n  dup3\n    /* \"#utility.yul\":1550:1551   */\n  dup3\n    /* \"#utility.yul\":1547:1555   */\n  lt\n    /* \"#utility.yul\":1544:1578   */\n  iszero\n  tag_90\n  jumpi\n    /* \"#utility.yul\":1558:1576   */\n  tag_90\n  tag_87\n  jump\t// in\ntag_90:\n  pop\n    /* \"#utility.yul\":1595:1604   */\n  sub\n  swap1\n    /* \"#utility.yul\":1485:1610   */\n  jump\t// out\n    /* \"#utility.yul\":1615:1995   */\ntag_58:\n    /* \"#utility.yul\":1694:1695   */\n  0x01\n    /* \"#utility.yul\":1690:1702   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":1737:1749   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":1758:1819   */\n  tag_92\n  jumpi\n    /* \"#utility.yul\":1812:1816   */\n  0x7f\n    /* \"#utility.yul\":1804:1810   */\n  dup3\n    /* \"#utility.yul\":1800:1817   */\n  and\n    /* \"#utility.yul\":1790:1817   */\n  swap2\n  pop\n    /* \"#utility.yul\":1758:1819   */\ntag_92:\n    /* \"#utility.yul\":1865:1867   */\n  0x20\n    /* \"#utility.yul\":1857:1863   */\n  dup3\n    /* \"#utility.yul\":1854:1868   */\n  lt\n    /* \"#utility.yul\":1834:1852   */\n  dup2\n    /* \"#utility.yul\":1831:1869   */\n  eq\n    /* \"#utility.yul\":1828:1989   */\n  iszero\n  tag_93\n  jumpi\n    /* \"#utility.yul\":1911:1921   */\n  0x4e487b71\n    /* \"#utility.yul\":1906:1909   */\n  0xe0\n    /* \"#utility.yul\":1902:1922   */\n  shl\n    /* \"#utility.yul\":1899:1900   */\n  0x00\n    /* \"#utility.yul\":1892:1923   */\n  mstore\n    /* \"#utility.yul\":1946:1950   */\n  0x22\n    /* \"#utility.yul\":1943:1944   */\n  0x04\n    /* \"#utility.yul\":1936:1951   */\n  mstore\n    /* \"#utility.yul\":1974:1978   */\n  0x24\n    /* \"#utility.yul\":1971:1972   */\n  0x00\n    /* \"#utility.yul\":1964:1979   */\n  revert\n    /* \"#utility.yul\":1828:1989   */\ntag_93:\n  pop\n    /* \"#utility.yul\":1615:1995   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2000:2135   */\ntag_49:\n    /* \"#utility.yul\":2039:2042   */\n  0x00\n  not(0x00)\n    /* \"#utility.yul\":2060:2077   */\n  dup3\n  eq\n    /* \"#utility.yul\":2057:2100   */\n  iszero\n  tag_96\n  jumpi\n    /* \"#utility.yul\":2080:2098   */\n  tag_96\n  tag_87\n  jump\t// in\ntag_96:\n  pop\n    /* \"#utility.yul\":2127:2128   */\n  0x01\n    /* \"#utility.yul\":2116:2129   */\n  add\n  swap1\n    /* \"#utility.yul\":2000:2135   */\n  jump\t// out\n    /* \"#utility.yul\":2140:2349   */\ntag_2:\n    /* \"#utility.yul\":2172:2173   */\n  0x00\n    /* \"#utility.yul\":2198:2199   */\n  dup3\n    /* \"#utility.yul\":2188:2320   */\n  tag_98\n  jumpi\n    /* \"#utility.yul\":2242:2252   */\n  0x4e487b71\n    /* \"#utility.yul\":2237:2240   */\n  0xe0\n    /* \"#utility.yul\":2233:2253   */\n  shl\n    /* \"#utility.yul\":2230:2231   */\n  0x00\n    /* \"#utility.yul\":2223:2254   */\n  mstore\n    /* \"#utility.yul\":2277:2281   */\n  0x12\n    /* \"#utility.yul\":2274:2275   */\n  0x04\n    /* \"#utility.yul\":2267:2282   */\n  mstore\n    /* \"#utility.yul\":2305:2309   */\n  0x24\n    /* \"#utility.yul\":2302:2303   */\n  0x00\n    /* \"#utility.yul\":2295:2310   */\n  revert\n    /* \"#utility.yul\":2188:2320   */\ntag_98:\n  pop\n    /* \"#utility.yul\":2334:2343   */\n  mod\n  swap1\n    /* \"#utility.yul\":2140:2349   */\n  jump\t// out\n    /* \"#utility.yul\":2354:2481   */\ntag_87:\n    /* \"#utility.yul\":2415:2425   */\n  0x4e487b71\n    /* \"#utility.yul\":2410:2413   */\n  0xe0\n    /* \"#utility.yul\":2406:2426   */\n  shl\n    /* \"#utility.yul\":2403:2404   */\n  0x00\n    /* \"#utility.yul\":2396:2427   */\n  mstore\n    /* \"#utility.yul\":2446:2450   */\n  0x11\n    /* \"#utility.yul\":2443:2444   */\n  0x04\n    /* \"#utility.yul\":2436:2451   */\n  mstore\n    /* \"#utility.yul\":2470:2474   */\n  0x24\n    /* \"#utility.yul\":2467:2468   */\n  0x00\n    /* \"#utility.yul\":2460:2475   */\n  revert\n    /* \"#utility.yul\":2486:2613   */\ntag_44:\n    /* \"#utility.yul\":2547:2557   */\n  0x4e487b71\n    /* \"#utility.yul\":2542:2545   */\n  0xe0\n    /* \"#utility.yul\":2538:2558   */\n  shl\n    /* \"#utility.yul\":2535:2536   */\n  0x00\n    /* \"#utility.yul\":2528:2559   */\n  mstore\n    /* \"#utility.yul\":2578:2582   */\n  0x32\n    /* \"#utility.yul\":2575:2576   */\n  0x04\n    /* \"#utility.yul\":2568:2583   */\n  mstore\n    /* \"#utility.yul\":2602:2606   */\n  0x24\n    /* \"#utility.yul\":2599:2600   */\n  0x00\n    /* \"#utility.yul\":2592:2607   */\n  revert\n    /* \"#utility.yul\":2618:2749   */\ntag_76:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":2693:2724   */\n  dup2\n  and\n    /* \"#utility.yul\":2683:2725   */\n  dup2\n  eq\n    /* \"#utility.yul\":2673:2743   */\n  tag_102\n  jumpi\n    /* \"#utility.yul\":2739:2740   */\n  0x00\n    /* \"#utility.yul\":2736:2737   */\n  dup1\n    /* \"#utility.yul\":2729:2741   */\n  revert\n    /* \"#utility.yul\":2673:2743   */\ntag_102:\n    /* \"#utility.yul\":2618:2749   */\n  pop\n  jump\t// out\ntag_72:\n    /* \"contracts/MyToken.sol\":541:25294  contract Pokemon is Context, IERC20, Ownable {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/MyToken.sol\":541:25294  contract Pokemon is Context, IERC20, Ownable {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x6bc87c3a\n      gt\n      tag_61\n      jumpi\n      dup1\n      0xa9059cbb\n      gt\n      tag_62\n      jumpi\n      dup1\n      0xd0e03523\n      gt\n      tag_63\n      jumpi\n      dup1\n      0xe1e144de\n      gt\n      tag_64\n      jumpi\n      dup1\n      0xe1e144de\n      eq\n      tag_57\n      jumpi\n      dup1\n      0xea2f0b37\n      eq\n      tag_58\n      jumpi\n      dup1\n      0xebf78663\n      eq\n      tag_59\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_60\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_64:\n      dup1\n      0xd0e03523\n      eq\n      tag_53\n      jumpi\n      dup1\n      0xd5bde46c\n      eq\n      tag_54\n      jumpi\n      dup1\n      0xd8c6404b\n      eq\n      tag_55\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_56\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_63:\n      dup1\n      0xc2c7c03a\n      gt\n      tag_65\n      jumpi\n      dup1\n      0xc2c7c03a\n      eq\n      tag_49\n      jumpi\n      dup1\n      0xc49b9a80\n      eq\n      tag_50\n      jumpi\n      dup1\n      0xc8607952\n      eq\n      tag_51\n      jumpi\n      dup1\n      0xcea26958\n      eq\n      tag_52\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_65:\n      dup1\n      0xa9059cbb\n      eq\n      tag_46\n      jumpi\n      dup1\n      0xa928681c\n      eq\n      tag_47\n      jumpi\n      dup1\n      0xc0b0fda2\n      eq\n      tag_48\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_62:\n      dup1\n      0x88790a68\n      gt\n      tag_66\n      jumpi\n      dup1\n      0x8ee88c53\n      gt\n      tag_67\n      jumpi\n      dup1\n      0x8ee88c53\n      eq\n      tag_42\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_43\n      jumpi\n      dup1\n      0x9655cab5\n      eq\n      tag_44\n      jumpi\n      dup1\n      0xa457c2d7\n      eq\n      tag_45\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_67:\n      dup1\n      0x88790a68\n      eq\n      tag_39\n      jumpi\n      dup1\n      0x88f82020\n      eq\n      tag_40\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_41\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_66:\n      dup1\n      0x74fb20e1\n      gt\n      tag_68\n      jumpi\n      dup1\n      0x74fb20e1\n      eq\n      tag_35\n      jumpi\n      dup1\n      0x75f0a874\n      eq\n      tag_36\n      jumpi\n      dup1\n      0x7abdc1ca\n      eq\n      tag_37\n      jumpi\n      dup1\n      0x882cfb3f\n      eq\n      tag_38\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_68:\n      dup1\n      0x6bc87c3a\n      eq\n      tag_32\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_33\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_34\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_61:\n      dup1\n      0x3b124fe7\n      gt\n      tag_69\n      jumpi\n      dup1\n      0x52390c02\n      gt\n      tag_70\n      jumpi\n      dup1\n      0x5d098b38\n      gt\n      tag_71\n      jumpi\n      dup1\n      0x5d098b38\n      eq\n      tag_28\n      jumpi\n      dup1\n      0x611bf629\n      eq\n      tag_29\n      jumpi\n      dup1\n      0x632a6a35\n      eq\n      tag_30\n      jumpi\n      dup1\n      0x64a06e80\n      eq\n      tag_31\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_71:\n      dup1\n      0x52390c02\n      eq\n      tag_24\n      jumpi\n      dup1\n      0x5342acb4\n      eq\n      tag_25\n      jumpi\n      dup1\n      0x57d87f0d\n      eq\n      tag_26\n      jumpi\n      dup1\n      0x5876ccc5\n      eq\n      tag_27\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_70:\n      dup1\n      0x4549b039\n      gt\n      tag_72\n      jumpi\n      dup1\n      0x4549b039\n      eq\n      tag_20\n      jumpi\n      dup1\n      0x457c194c\n      eq\n      tag_21\n      jumpi\n      dup1\n      0x4a5566bf\n      eq\n      tag_22\n      jumpi\n      dup1\n      0x4a74bb02\n      eq\n      tag_23\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_72:\n      dup1\n      0x3b124fe7\n      eq\n      tag_17\n      jumpi\n      dup1\n      0x3bd5d173\n      eq\n      tag_18\n      jumpi\n      dup1\n      0x437823ec\n      eq\n      tag_19\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_69:\n      dup1\n      0x200a692d\n      gt\n      tag_73\n      jumpi\n      dup1\n      0x2d838119\n      gt\n      tag_74\n      jumpi\n      dup1\n      0x2d838119\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x3685d419\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x39509351\n      eq\n      tag_16\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_74:\n      dup1\n      0x200a692d\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x22976e0d\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_12\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_73:\n      dup1\n      0x0a7d2d87\n      gt\n      tag_75\n      jumpi\n      dup1\n      0x0a7d2d87\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x13114a9d\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x1a4cd1b1\n      eq\n      tag_9\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_75:\n      dup1\n      0x061c82d0\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x06fdde03\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_5\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      jumpi(tag_2, calldatasize)\n      stop\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/MyToken.sol\":22752:22912  function setTaxFeePercent(uint256 taxFee) external onlyOwner {... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_78\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_78:\n      pop\n      tag_79\n      tag_80\n      calldatasize\n      0x04\n      tag_81\n      jump\t// in\n    tag_80:\n      tag_82\n      jump\t// in\n    tag_79:\n      stop\n        /* \"contracts/MyToken.sol\":4585:4666  function name() public view returns (string memory) {... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_83\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_83:\n      pop\n      tag_84\n      tag_85\n      jump\t// in\n    tag_84:\n      mload(0x40)\n      tag_86\n      swap2\n      swap1\n      tag_87\n      jump\t// in\n    tag_86:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/MyToken.sol\":5503:5661  function approve(address spender, uint256 amount) public override returns (bool) {... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_88\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_88:\n      pop\n      tag_89\n      tag_90\n      calldatasize\n      0x04\n      tag_91\n      jump\t// in\n    tag_90:\n      tag_92\n      jump\t// in\n    tag_89:\n      mload(0x40)\n        /* \"#utility.yul\":4241:4255   */\n      swap1\n      iszero\n        /* \"#utility.yul\":4234:4256   */\n      iszero\n        /* \"#utility.yul\":4216:4257   */\n      dup2\n      mstore\n        /* \"#utility.yul\":4204:4206   */\n      0x20\n        /* \"#utility.yul\":4189:4207   */\n      add\n        /* \"contracts/MyToken.sol\":5503:5661  function approve(address spender, uint256 amount) public override returns (bool) {... */\n      tag_86\n        /* \"#utility.yul\":4076:4263   */\n      jump\n        /* \"contracts/MyToken.sol\":1947:1985  uint256 public _maxHoldingPercents = 5 */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_95\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_95:\n      pop\n      tag_96\n      sload(0x1a)\n      dup2\n      jump\n    tag_96:\n      mload(0x40)\n        /* \"#utility.yul\":15381:15406   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":15369:15371   */\n      0x20\n        /* \"#utility.yul\":15354:15372   */\n      add\n        /* \"contracts/MyToken.sol\":1947:1985  uint256 public _maxHoldingPercents = 5 */\n      tag_86\n        /* \"#utility.yul\":15235:15412   */\n      jump\n        /* \"contracts/MyToken.sol\":6915:7000  function totalFees() public view returns (uint256) {... */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_100\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_100:\n      pop\n        /* \"contracts/MyToken.sol\":6983:6993  _tFeeTotal */\n      sload(0x09)\n        /* \"contracts/MyToken.sol\":6915:7000  function totalFees() public view returns (uint256) {... */\n      jump(tag_96)\n        /* \"contracts/MyToken.sol\":4850:4943  function totalSupply() public view override returns (uint256) {... */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_104\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_104:\n      pop\n        /* \"contracts/MyToken.sol\":4929:4936  _tTotal */\n      sload(0x07)\n        /* \"contracts/MyToken.sol\":4850:4943  function totalSupply() public view override returns (uint256) {... */\n      jump(tag_96)\n        /* \"contracts/MyToken.sol\":2175:2216  IPancakeV2Router02 public pancakeV2Router */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_108\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_108:\n      pop\n      sload(0x1e)\n      tag_109\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n    tag_109:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":2959:2991   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":2941:2992   */\n      dup2\n      mstore\n        /* \"#utility.yul\":2929:2931   */\n      0x20\n        /* \"#utility.yul\":2914:2932   */\n      add\n        /* \"contracts/MyToken.sol\":2175:2216  IPancakeV2Router02 public pancakeV2Router */\n      tag_86\n        /* \"#utility.yul\":2795:2998   */\n      jump\n        /* \"contracts/MyToken.sol\":1706:1736  uint256 public _sellTaxFee = 2 */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_113\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_113:\n      pop\n      tag_96\n      sload(0x16)\n      dup2\n      jump\n        /* \"contracts/MyToken.sol\":1555:1587  uint256 public _marketingFee = 2 */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_117\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_117:\n      pop\n      tag_96\n      sload(0x13)\n      dup2\n      jump\n        /* \"contracts/MyToken.sol\":5667:6098  function transferFrom(... */\n    tag_12:\n      callvalue\n      dup1\n      iszero\n      tag_121\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_121:\n      pop\n      tag_89\n      tag_123\n      calldatasize\n      0x04\n      tag_124\n      jump\t// in\n    tag_123:\n      tag_125\n      jump\t// in\n        /* \"contracts/MyToken.sol\":7859:8108  function tokenFromReflection(uint256 rAmount) public view returns (uint256) {... */\n    tag_13:\n      callvalue\n      dup1\n      iszero\n      tag_127\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_127:\n      pop\n      tag_96\n      tag_129\n      calldatasize\n      0x04\n      tag_81\n      jump\t// in\n    tag_129:\n      tag_130\n      jump\t// in\n        /* \"contracts/MyToken.sol\":4763:4844  function decimals() public view returns (uint8) {... */\n    tag_14:\n      callvalue\n      dup1\n      iszero\n      tag_132\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_132:\n      pop\n        /* \"contracts/MyToken.sol\":4828:4837  _decimals */\n      sload(0x0c)\n        /* \"contracts/MyToken.sol\":4763:4844  function decimals() public view returns (uint8) {... */\n      mload(0x40)\n        /* \"contracts/MyToken.sol\":4828:4837  _decimals */\n      0xff\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":16868:16904   */\n      dup2\n      mstore\n        /* \"#utility.yul\":16856:16858   */\n      0x20\n        /* \"#utility.yul\":16841:16859   */\n      add\n        /* \"contracts/MyToken.sol\":4763:4844  function decimals() public view returns (uint8) {... */\n      tag_86\n        /* \"#utility.yul\":16726:16910   */\n      jump\n        /* \"contracts/MyToken.sol\":8571:9037  function includeInReward(address account) external onlyOwner {... */\n    tag_15:\n      callvalue\n      dup1\n      iszero\n      tag_137\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_137:\n      pop\n      tag_79\n      tag_139\n      calldatasize\n      0x04\n      tag_140\n      jump\t// in\n    tag_139:\n      tag_141\n      jump\t// in\n        /* \"contracts/MyToken.sol\":6104:6393  function increaseAllowance(address spender, uint256 addedValue)... */\n    tag_16:\n      callvalue\n      dup1\n      iszero\n      tag_142\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_142:\n      pop\n      tag_89\n      tag_144\n      calldatasize\n      0x04\n      tag_91\n      jump\t// in\n    tag_144:\n      tag_145\n      jump\t// in\n        /* \"contracts/MyToken.sol\":1294:1320  uint256 public _taxFee = 2 */\n    tag_17:\n      callvalue\n      dup1\n      iszero\n      tag_147\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_147:\n      pop\n      tag_96\n      sload(0x0d)\n      dup2\n      jump\n        /* \"contracts/MyToken.sol\":7006:7381  function deliver(uint256 tAmount) public {... */\n    tag_18:\n      callvalue\n      dup1\n      iszero\n      tag_151\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_151:\n      pop\n      tag_79\n      tag_153\n      calldatasize\n      0x04\n      tag_81\n      jump\t// in\n    tag_153:\n      tag_154\n      jump\t// in\n        /* \"contracts/MyToken.sol\":22407:22516  function excludeFromFee(address account) public onlyOwner {... */\n    tag_19:\n      callvalue\n      dup1\n      iszero\n      tag_155\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_155:\n      pop\n      tag_79\n      tag_157\n      calldatasize\n      0x04\n      tag_140\n      jump\t// in\n    tag_157:\n      tag_158\n      jump\t// in\n        /* \"contracts/MyToken.sol\":7387:7853  function reflectionFromToken(uint256 tAmount, bool deductTransferFee)... */\n    tag_20:\n      callvalue\n      dup1\n      iszero\n      tag_159\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_159:\n      pop\n      tag_96\n      tag_161\n      calldatasize\n      0x04\n      tag_162\n      jump\t// in\n    tag_161:\n      tag_163\n      jump\t// in\n        /* \"contracts/MyToken.sol\":23120:23316  function setMarketingFeePercent(uint256 marketingFee) external onlyOwner {... */\n    tag_21:\n      callvalue\n      dup1\n      iszero\n      tag_165\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_165:\n      pop\n      tag_79\n      tag_167\n      calldatasize\n      0x04\n      tag_81\n      jump\t// in\n    tag_167:\n      tag_168\n      jump\t// in\n        /* \"contracts/MyToken.sol\":24832:25061  function setAntiWhale(bool enabled) external {... */\n    tag_22:\n      callvalue\n      dup1\n      iszero\n      tag_169\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_169:\n      pop\n      tag_79\n      tag_171\n      calldatasize\n      0x04\n      tag_172\n      jump\t// in\n    tag_171:\n      tag_173\n      jump\t// in\n        /* \"contracts/MyToken.sol\":2284:2325  bool public swapAndLiquifyEnabled = false */\n    tag_23:\n      callvalue\n      dup1\n      iszero\n      tag_174\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_174:\n      pop\n      sload(0x1f)\n      tag_89\n      swap1\n      shl(0xa8, 0x01)\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\n        /* \"contracts/MyToken.sol\":8114:8565  function excludeFromReward(address account) public onlyOwner {... */\n    tag_24:\n      callvalue\n      dup1\n      iszero\n      tag_178\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_178:\n      pop\n      tag_79\n      tag_180\n      calldatasize\n      0x04\n      tag_140\n      jump\t// in\n    tag_180:\n      tag_181\n      jump\t// in\n        /* \"contracts/MyToken.sol\":13948:14070  function isExcludedFromFee(address account) public view returns (bool) {... */\n    tag_25:\n      callvalue\n      dup1\n      iszero\n      tag_182\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_182:\n      pop\n      tag_89\n      tag_184\n      calldatasize\n      0x04\n      tag_140\n      jump\t// in\n    tag_184:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/MyToken.sol\":14036:14063  _isExcludedFromFee[account] */\n      and\n        /* \"contracts/MyToken.sol\":14013:14017  bool */\n      0x00\n        /* \"contracts/MyToken.sol\":14036:14063  _isExcludedFromFee[account] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/MyToken.sol\":14036:14054  _isExcludedFromFee */\n      0x04\n        /* \"contracts/MyToken.sol\":14036:14063  _isExcludedFromFee[account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      swap1\n        /* \"contracts/MyToken.sol\":13948:14070  function isExcludedFromFee(address account) public view returns (bool) {... */\n      jump\n        /* \"contracts/MyToken.sol\":1991:2019  bool public antiWhaleEnabled */\n    tag_26:\n      callvalue\n      dup1\n      iszero\n      tag_187\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_187:\n      pop\n      sload(0x1b)\n      tag_89\n      swap1\n      0xff\n      and\n      dup2\n      jump\n        /* \"contracts/MyToken.sol\":23918:24139  function setSellLiquidityFeePercent(uint256 sellLiquidityFee) external onlyOwner {... */\n    tag_27:\n      callvalue\n      dup1\n      iszero\n      tag_191\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_191:\n      pop\n      tag_79\n      tag_193\n      calldatasize\n      0x04\n      tag_81\n      jump\t// in\n    tag_193:\n      tag_194\n      jump\t// in\n        /* \"contracts/MyToken.sol\":22636:22746  function setMarketingWallet(address newWallet) external onlyOwner {... */\n    tag_28:\n      callvalue\n      dup1\n      iszero\n      tag_195\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_195:\n      pop\n      tag_79\n      tag_197\n      calldatasize\n      0x04\n      tag_140\n      jump\t// in\n    tag_197:\n      tag_198\n      jump\t// in\n        /* \"contracts/MyToken.sol\":4472:4579  function setAntisnipeAddress(address addr) external onlyOwner {... */\n    tag_29:\n      callvalue\n      dup1\n      iszero\n      tag_199\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_199:\n      pop\n      tag_79\n      tag_201\n      calldatasize\n      0x04\n      tag_140\n      jump\t// in\n    tag_201:\n      tag_202\n      jump\t// in\n        /* \"contracts/MyToken.sol\":2222:2250  address public pancakeV2Pair */\n    tag_30:\n      callvalue\n      dup1\n      iszero\n      tag_203\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_203:\n      pop\n      sload(0x1f)\n      tag_109\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"contracts/MyToken.sol\":1882:1941  uint256 public constant MAX_HOLDING_PERCENTS_DIVISOR = 1000 */\n    tag_31:\n      callvalue\n      dup1\n      iszero\n      tag_208\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_208:\n      pop\n      tag_96\n        /* \"contracts/MyToken.sol\":1937:1941  1000 */\n      0x03e8\n        /* \"contracts/MyToken.sol\":1882:1941  uint256 public constant MAX_HOLDING_PERCENTS_DIVISOR = 1000 */\n      dup2\n      jump\n        /* \"contracts/MyToken.sol\":1374:1406  uint256 public _liquidityFee = 1 */\n    tag_32:\n      callvalue\n      dup1\n      iszero\n      tag_212\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_212:\n      pop\n      tag_96\n      sload(0x0f)\n      dup2\n      jump\n        /* \"contracts/MyToken.sol\":4949:5144  function balanceOf(address account) public view override returns (uint256) {... */\n    tag_33:\n      callvalue\n      dup1\n      iszero\n      tag_216\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_216:\n      pop\n      tag_96\n      tag_218\n      calldatasize\n      0x04\n      tag_140\n      jump\t// in\n    tag_218:\n      tag_219\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1831:1932  function renounceOwnership() public virtual onlyOwner {... */\n    tag_34:\n      callvalue\n      dup1\n      iszero\n      tag_221\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_221:\n      pop\n      tag_79\n      tag_223\n      jump\t// in\n        /* \"contracts/MyToken.sol\":4340:4466  function setAntisnipeDisable() external onlyOwner {... */\n    tag_35:\n      callvalue\n      dup1\n      iszero\n      tag_224\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_224:\n      pop\n      tag_79\n      tag_226\n      jump\t// in\n        /* \"contracts/MyToken.sol\":1593:1623  address public marketingWallet */\n    tag_36:\n      callvalue\n      dup1\n      iszero\n      tag_227\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_227:\n      pop\n      sload(0x14)\n      tag_109\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"contracts/MyToken.sol\":1826:1857  uint256 public _sellBurnFee = 2 */\n    tag_37:\n      callvalue\n      dup1\n      iszero\n      tag_231\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_231:\n      pop\n      tag_96\n      sload(0x19)\n      dup2\n      jump\n        /* \"contracts/MyToken.sol\":3950:3977  IAntisnipe public antisnipe */\n    tag_38:\n      callvalue\n      dup1\n      iszero\n      tag_235\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_235:\n      pop\n      sload(0x22)\n      tag_109\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"contracts/MyToken.sol\":1742:1778  uint256 public _sellLiquidityFee = 1 */\n    tag_39:\n      callvalue\n      dup1\n      iszero\n      tag_240\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_240:\n      pop\n      tag_96\n      sload(0x17)\n      dup2\n      jump\n        /* \"contracts/MyToken.sol\":6791:6909  function isExcludedFromReward(address account) public view returns (bool) {... */\n    tag_40:\n      callvalue\n      dup1\n      iszero\n      tag_244\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_244:\n      pop\n      tag_89\n      tag_246\n      calldatasize\n      0x04\n      tag_140\n      jump\t// in\n    tag_246:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/MyToken.sol\":6882:6902  _isExcluded[account] */\n      and\n        /* \"contracts/MyToken.sol\":6859:6863  bool */\n      0x00\n        /* \"contracts/MyToken.sol\":6882:6902  _isExcluded[account] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/MyToken.sol\":6882:6893  _isExcluded */\n      0x05\n        /* \"contracts/MyToken.sol\":6882:6902  _isExcluded[account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      swap1\n        /* \"contracts/MyToken.sol\":6791:6909  function isExcludedFromReward(address account) public view returns (bool) {... */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n    tag_41:\n      callvalue\n      dup1\n      iszero\n      tag_249\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_249:\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1247:1254  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1279  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n      jump(tag_109)\n        /* \"contracts/MyToken.sol\":22918:23114  function setLiquidityFeePercent(uint256 liquidityFee) external onlyOwner {... */\n    tag_42:\n      callvalue\n      dup1\n      iszero\n      tag_253\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_253:\n      pop\n      tag_79\n      tag_255\n      calldatasize\n      0x04\n      tag_81\n      jump\t// in\n    tag_255:\n      tag_256\n      jump\t// in\n        /* \"contracts/MyToken.sol\":4672:4757  function symbol() public view returns (string memory) {... */\n    tag_43:\n      callvalue\n      dup1\n      iszero\n      tag_257\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_257:\n      pop\n      tag_84\n      tag_259\n      jump\t// in\n        /* \"contracts/MyToken.sol\":24336:24652  function setMaxHoldingPercents(uint256 maxHoldingPercents) external onlyOwner {... */\n    tag_44:\n      callvalue\n      dup1\n      iszero\n      tag_261\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_261:\n      pop\n      tag_79\n      tag_263\n      calldatasize\n      0x04\n      tag_81\n      jump\t// in\n    tag_263:\n      tag_264\n      jump\t// in\n        /* \"contracts/MyToken.sol\":6399:6785  function decreaseAllowance(address spender, uint256 subtractedValue)... */\n    tag_45:\n      callvalue\n      dup1\n      iszero\n      tag_265\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_265:\n      pop\n      tag_89\n      tag_267\n      calldatasize\n      0x04\n      tag_91\n      jump\t// in\n    tag_267:\n      tag_268\n      jump\t// in\n        /* \"contracts/MyToken.sol\":5150:5314  function transfer(address recipient, uint256 amount) public override returns (bool) {... */\n    tag_46:\n      callvalue\n      dup1\n      iszero\n      tag_270\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_270:\n      pop\n      tag_89\n      tag_272\n      calldatasize\n      0x04\n      tag_91\n      jump\t// in\n    tag_272:\n      tag_273\n      jump\t// in\n        /* \"contracts/MyToken.sol\":23691:23912  function setSellMarketingFeePercent(uint256 sellMarketingFee) external onlyOwner {... */\n    tag_47:\n      callvalue\n      dup1\n      iszero\n      tag_275\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_275:\n      pop\n      tag_79\n      tag_277\n      calldatasize\n      0x04\n      tag_81\n      jump\t// in\n    tag_277:\n      tag_278\n      jump\t// in\n        /* \"contracts/MyToken.sol\":1472:1499  uint256 public _burnFee = 2 */\n    tag_48:\n      callvalue\n      dup1\n      iszero\n      tag_279\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_279:\n      pop\n      tag_96\n      sload(0x11)\n      dup2\n      jump\n        /* \"contracts/MyToken.sol\":25067:25292  function setAntiBot(bool enabled) external {... */\n    tag_49:\n      callvalue\n      dup1\n      iszero\n      tag_283\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_283:\n      pop\n      tag_79\n      tag_285\n      calldatasize\n      0x04\n      tag_172\n      jump\t// in\n    tag_285:\n      tag_286\n      jump\t// in\n        /* \"contracts/MyToken.sol\":24658:24826  function setSwapAndLiquifyEnabled(bool _enabled) public onlyOwner {... */\n    tag_50:\n      callvalue\n      dup1\n      iszero\n      tag_287\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_287:\n      pop\n      tag_79\n      tag_289\n      calldatasize\n      0x04\n      tag_172\n      jump\t// in\n    tag_289:\n      tag_290\n      jump\t// in\n        /* \"contracts/MyToken.sol\":1784:1820  uint256 public _sellMarketingFee = 2 */\n    tag_51:\n      callvalue\n      dup1\n      iszero\n      tag_291\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_291:\n      pop\n      tag_96\n      sload(0x18)\n      dup2\n      jump\n        /* \"contracts/MyToken.sol\":23322:23488  function setBurnFeePercent(uint256 burnFee) external onlyOwner {... */\n    tag_52:\n      callvalue\n      dup1\n      iszero\n      tag_295\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_295:\n      pop\n      tag_79\n      tag_297\n      calldatasize\n      0x04\n      tag_81\n      jump\t// in\n    tag_297:\n      tag_298\n      jump\t// in\n        /* \"contracts/MyToken.sol\":24145:24330  function setSellTaxFeePercent(uint256 sellTaxFee) external onlyOwner {... */\n    tag_53:\n      callvalue\n      dup1\n      iszero\n      tag_299\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_299:\n      pop\n      tag_79\n      tag_301\n      calldatasize\n      0x04\n      tag_81\n      jump\t// in\n    tag_301:\n      tag_302\n      jump\t// in\n        /* \"contracts/MyToken.sol\":2142:2168  address public antiManager */\n    tag_54:\n      callvalue\n      dup1\n      iszero\n      tag_303\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_303:\n      pop\n      sload(0x1d)\n      tag_109\n      swap1\n      0x0100\n      swap1\n      div\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"contracts/MyToken.sol\":2089:2115  bool public antiBotEnabled */\n    tag_55:\n      callvalue\n      dup1\n      iszero\n      tag_307\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_307:\n      pop\n      sload(0x1d)\n      tag_89\n      swap1\n      0xff\n      and\n      dup2\n      jump\n        /* \"contracts/MyToken.sol\":5320:5497  function allowance(address owner, address spender)... */\n    tag_56:\n      callvalue\n      dup1\n      iszero\n      tag_311\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_311:\n      pop\n      tag_96\n      tag_313\n      calldatasize\n      0x04\n      tag_314\n      jump\t// in\n    tag_313:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/MyToken.sol\":5463:5481  _allowances[owner] */\n      swap2\n      dup3\n      and\n        /* \"contracts/MyToken.sol\":5433:5440  uint256 */\n      0x00\n        /* \"contracts/MyToken.sol\":5463:5481  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/MyToken.sol\":5463:5474  _allowances */\n      0x03\n        /* \"contracts/MyToken.sol\":5463:5481  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/MyToken.sol\":5463:5490  _allowances[owner][spender] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"contracts/MyToken.sol\":5320:5497  function allowance(address owner, address spender)... */\n      jump\n        /* \"contracts/MyToken.sol\":3983:4011  bool public antisnipeDisable */\n    tag_57:\n      callvalue\n      dup1\n      iszero\n      tag_317\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_317:\n      pop\n      sload(0x22)\n      tag_89\n      swap1\n      shl(0xa0, 0x01)\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\n        /* \"contracts/MyToken.sol\":22522:22630  function includeInFee(address account) public onlyOwner {... */\n    tag_58:\n      callvalue\n      dup1\n      iszero\n      tag_321\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_321:\n      pop\n      tag_79\n      tag_323\n      calldatasize\n      0x04\n      tag_140\n      jump\t// in\n    tag_323:\n      tag_324\n      jump\t// in\n        /* \"contracts/MyToken.sol\":23494:23685  function setSellBurnFeePercent(uint256 sellBurnFee) external onlyOwner {... */\n    tag_59:\n      callvalue\n      dup1\n      iszero\n      tag_325\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_325:\n      pop\n      tag_79\n      tag_327\n      calldatasize\n      0x04\n      tag_81\n      jump\t// in\n    tag_327:\n      tag_328\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2279  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_60:\n      callvalue\n      dup1\n      iszero\n      tag_329\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_329:\n      pop\n      tag_79\n      tag_331\n      calldatasize\n      0x04\n      tag_140\n      jump\t// in\n    tag_331:\n      tag_332\n      jump\t// in\n        /* \"contracts/MyToken.sol\":22752:22912  function setTaxFeePercent(uint256 taxFee) external onlyOwner {... */\n    tag_82:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_334\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_335\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_334:\n        /* \"contracts/MyToken.sol\":22841:22843  10 */\n      0x0a\n        /* \"contracts/MyToken.sol\":22831:22837  taxFee */\n      dup2\n        /* \"contracts/MyToken.sol\":22831:22843  taxFee <= 10 */\n      gt\n      iszero\n        /* \"contracts/MyToken.sol\":22823:22879  require(taxFee <= 10, 'Tax fee cannot be more than 10%') */\n      tag_337\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5534:5536   */\n      0x20\n        /* \"contracts/MyToken.sol\":22823:22879  require(taxFee <= 10, 'Tax fee cannot be more than 10%') */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5516:5537   */\n      mstore\n        /* \"#utility.yul\":5573:5575   */\n      0x1f\n        /* \"#utility.yul\":5553:5571   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5546:5576   */\n      mstore\n        /* \"#utility.yul\":5612:5645   */\n      0x546178206665652063616e6e6f74206265206d6f7265207468616e2031302500\n        /* \"#utility.yul\":5592:5610   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5585:5646   */\n      mstore\n        /* \"#utility.yul\":5663:5681   */\n      0x64\n      add\n        /* \"contracts/MyToken.sol\":22823:22879  require(taxFee <= 10, 'Tax fee cannot be more than 10%') */\n    tag_338:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_337:\n        /* \"contracts/MyToken.sol\":22889:22896  _taxFee */\n      0x0d\n        /* \"contracts/MyToken.sol\":22889:22905  _taxFee = taxFee */\n      sstore\n        /* \"contracts/MyToken.sol\":22752:22912  function setTaxFeePercent(uint256 taxFee) external onlyOwner {... */\n      jump\t// out\n        /* \"contracts/MyToken.sol\":4585:4666  function name() public view returns (string memory) {... */\n    tag_85:\n        /* \"contracts/MyToken.sol\":4622:4635  string memory */\n      0x60\n        /* \"contracts/MyToken.sol\":4654:4659  _name */\n      0x0a\n        /* \"contracts/MyToken.sol\":4647:4659  return _name */\n      dup1\n      sload\n      tag_341\n      swap1\n      tag_342\n      jump\t// in\n    tag_341:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_343\n      swap1\n      tag_342\n      jump\t// in\n    tag_343:\n      dup1\n      iszero\n      tag_344\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_345\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_344)\n    tag_345:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_346:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_346\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_344:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/MyToken.sol\":4585:4666  function name() public view returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/MyToken.sol\":5503:5661  function approve(address spender, uint256 amount) public override returns (bool) {... */\n    tag_92:\n        /* \"contracts/MyToken.sol\":5578:5582  bool */\n      0x00\n        /* \"contracts/MyToken.sol\":5594:5633  _approve(_msgSender(), spender, amount) */\n      tag_348\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"contracts/MyToken.sol\":5617:5624  spender */\n      dup5\n        /* \"contracts/MyToken.sol\":5626:5632  amount */\n      dup5\n        /* \"contracts/MyToken.sol\":5594:5602  _approve */\n      tag_351\n        /* \"contracts/MyToken.sol\":5594:5633  _approve(_msgSender(), spender, amount) */\n      jump\t// in\n    tag_348:\n      pop\n        /* \"contracts/MyToken.sol\":5650:5654  true */\n      0x01\n        /* \"contracts/MyToken.sol\":5503:5661  function approve(address spender, uint256 amount) public override returns (bool) {... */\n    tag_347:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/MyToken.sol\":5667:6098  function transferFrom(... */\n    tag_125:\n        /* \"contracts/MyToken.sol\":5795:5799  bool */\n      0x00\n        /* \"contracts/MyToken.sol\":5811:5847  _transfer(sender, recipient, amount) */\n      tag_355\n        /* \"contracts/MyToken.sol\":5821:5827  sender */\n      dup5\n        /* \"contracts/MyToken.sol\":5829:5838  recipient */\n      dup5\n        /* \"contracts/MyToken.sol\":5840:5846  amount */\n      dup5\n        /* \"contracts/MyToken.sol\":5811:5820  _transfer */\n      tag_356\n        /* \"contracts/MyToken.sol\":5811:5847  _transfer(sender, recipient, amount) */\n      jump\t// in\n    tag_355:\n        /* \"contracts/MyToken.sol\":5857:6070  _approve(... */\n      tag_357\n        /* \"contracts/MyToken.sol\":5879:5885  sender */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"contracts/MyToken.sol\":5925:6060  _allowances[sender][_msgSender()].sub(... */\n      tag_359\n        /* \"contracts/MyToken.sol\":5980:5986  amount */\n      dup6\n        /* \"contracts/MyToken.sol\":5925:6060  _allowances[sender][_msgSender()].sub(... */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x28\n      dup2\n      mstore\n      0x20\n      add\n      data_4f3506f4ba71c79c3cbd442a3afeb30e9b27af2d84e116a4385b34e267d2287e\n      0x28\n      swap2\n      codecopy\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/MyToken.sol\":5925:5944  _allowances[sender] */\n      dup11\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/MyToken.sol\":5925:5936  _allowances */\n      0x03\n        /* \"contracts/MyToken.sol\":5925:5944  _allowances[sender] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"contracts/MyToken.sol\":5925:5958  _allowances[sender][_msgSender()] */\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n      sload\n      swap2\n      swap1\n        /* \"contracts/MyToken.sol\":5925:5962  _allowances[sender][_msgSender()].sub */\n      tag_361\n        /* \"contracts/MyToken.sol\":5925:6060  _allowances[sender][_msgSender()].sub(... */\n      jump\t// in\n    tag_359:\n        /* \"contracts/MyToken.sol\":5857:5865  _approve */\n      tag_351\n        /* \"contracts/MyToken.sol\":5857:6070  _approve(... */\n      jump\t// in\n    tag_357:\n      pop\n        /* \"contracts/MyToken.sol\":6087:6091  true */\n      0x01\n        /* \"contracts/MyToken.sol\":5667:6098  function transferFrom(... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/MyToken.sol\":7859:8108  function tokenFromReflection(uint256 rAmount) public view returns (uint256) {... */\n    tag_130:\n        /* \"contracts/MyToken.sol\":7926:7933  uint256 */\n      0x00\n        /* \"contracts/MyToken.sol\":7964:7971  _rTotal */\n      sload(0x08)\n        /* \"contracts/MyToken.sol\":7953:7960  rAmount */\n      dup3\n        /* \"contracts/MyToken.sol\":7953:7971  rAmount <= _rTotal */\n      gt\n      iszero\n        /* \"contracts/MyToken.sol\":7945:8018  require(rAmount <= _rTotal, 'Amount must be less than total reflections') */\n      tag_363\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7875:7877   */\n      0x20\n        /* \"contracts/MyToken.sol\":7945:8018  require(rAmount <= _rTotal, 'Amount must be less than total reflections') */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7857:7878   */\n      mstore\n        /* \"#utility.yul\":7914:7916   */\n      0x2a\n        /* \"#utility.yul\":7894:7912   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7887:7917   */\n      mstore\n        /* \"#utility.yul\":7953:7987   */\n      0x416d6f756e74206d757374206265206c657373207468616e20746f74616c2072\n        /* \"#utility.yul\":7933:7951   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7926:7988   */\n      mstore\n      shl(0xb0, 0x65666c656374696f6e73)\n        /* \"#utility.yul\":8004:8022   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":7997:8037   */\n      mstore\n        /* \"#utility.yul\":8054:8073   */\n      0x84\n      add\n        /* \"contracts/MyToken.sol\":7945:8018  require(rAmount <= _rTotal, 'Amount must be less than total reflections') */\n      tag_338\n        /* \"#utility.yul\":7673:8079   */\n      jump\n        /* \"contracts/MyToken.sol\":7945:8018  require(rAmount <= _rTotal, 'Amount must be less than total reflections') */\n    tag_363:\n        /* \"contracts/MyToken.sol\":8028:8047  uint256 currentRate */\n      0x00\n        /* \"contracts/MyToken.sol\":8050:8060  _getRate() */\n      tag_366\n        /* \"contracts/MyToken.sol\":8050:8058  _getRate */\n      tag_367\n        /* \"contracts/MyToken.sol\":8050:8060  _getRate() */\n      jump\t// in\n    tag_366:\n        /* \"contracts/MyToken.sol\":8028:8060  uint256 currentRate = _getRate() */\n      swap1\n      pop\n        /* \"contracts/MyToken.sol\":8077:8101  rAmount.div(currentRate) */\n      tag_368\n        /* \"contracts/MyToken.sol\":8077:8084  rAmount */\n      dup4\n        /* \"contracts/MyToken.sol\":8028:8060  uint256 currentRate = _getRate() */\n      dup3\n        /* \"contracts/MyToken.sol\":8077:8088  rAmount.div */\n      tag_369\n        /* \"contracts/MyToken.sol\":8077:8101  rAmount.div(currentRate) */\n      jump\t// in\n    tag_368:\n        /* \"contracts/MyToken.sol\":8070:8101  return rAmount.div(currentRate) */\n      swap4\n        /* \"contracts/MyToken.sol\":7859:8108  function tokenFromReflection(uint256 rAmount) public view returns (uint256) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/MyToken.sol\":8571:9037  function includeInReward(address account) external onlyOwner {... */\n    tag_141:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_372\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_335\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_372:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/MyToken.sol\":8650:8670  _isExcluded[account] */\n      dup2\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/MyToken.sol\":8650:8661  _isExcluded */\n      0x05\n        /* \"contracts/MyToken.sol\":8650:8670  _isExcluded[account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"contracts/MyToken.sol\":8642:8702  require(_isExcluded[account], 'Account is already excluded') */\n      tag_374\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9104:9106   */\n      0x20\n        /* \"contracts/MyToken.sol\":8642:8702  require(_isExcluded[account], 'Account is already excluded') */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9086:9107   */\n      mstore\n        /* \"#utility.yul\":9143:9145   */\n      0x1b\n        /* \"#utility.yul\":9123:9141   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9116:9146   */\n      mstore\n        /* \"#utility.yul\":9182:9211   */\n      0x4163636f756e7420697320616c7265616479206578636c756465640000000000\n        /* \"#utility.yul\":9162:9180   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9155:9212   */\n      mstore\n        /* \"#utility.yul\":9229:9247   */\n      0x64\n      add\n        /* \"contracts/MyToken.sol\":8642:8702  require(_isExcluded[account], 'Account is already excluded') */\n      tag_338\n        /* \"#utility.yul\":8902:9253   */\n      jump\n        /* \"contracts/MyToken.sol\":8642:8702  require(_isExcluded[account], 'Account is already excluded') */\n    tag_374:\n        /* \"contracts/MyToken.sol\":8717:8726  uint256 i */\n      0x00\n        /* \"contracts/MyToken.sol\":8712:9031  for (uint256 i = 0; i < _excluded.length; i++) {... */\n    tag_377:\n        /* \"contracts/MyToken.sol\":8736:8745  _excluded */\n      0x06\n        /* \"contracts/MyToken.sol\":8736:8752  _excluded.length */\n      sload\n        /* \"contracts/MyToken.sol\":8732:8752  i < _excluded.length */\n      dup2\n      lt\n        /* \"contracts/MyToken.sol\":8712:9031  for (uint256 i = 0; i < _excluded.length; i++) {... */\n      iszero\n      tag_378\n      jumpi\n        /* \"contracts/MyToken.sol\":8793:8800  account */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/MyToken.sol\":8777:8800  _excluded[i] == account */\n      and\n        /* \"contracts/MyToken.sol\":8777:8786  _excluded */\n      0x06\n        /* \"contracts/MyToken.sol\":8787:8788  i */\n      dup3\n        /* \"contracts/MyToken.sol\":8777:8789  _excluded[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_381\n      jumpi\n      tag_381\n      tag_382\n      jump\t// in\n    tag_381:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"contracts/MyToken.sol\":8777:8800  _excluded[i] == account */\n      eq\n        /* \"contracts/MyToken.sol\":8773:9021  if (_excluded[i] == account) {... */\n      iszero\n      tag_384\n      jumpi\n        /* \"contracts/MyToken.sol\":8835:8844  _excluded */\n      0x06\n        /* \"contracts/MyToken.sol\":8845:8861  _excluded.length */\n      dup1\n      sload\n        /* \"contracts/MyToken.sol\":8845:8865  _excluded.length - 1 */\n      tag_385\n      swap1\n        /* \"contracts/MyToken.sol\":8864:8865  1 */\n      0x01\n      swap1\n        /* \"contracts/MyToken.sol\":8845:8865  _excluded.length - 1 */\n      tag_386\n      jump\t// in\n    tag_385:\n        /* \"contracts/MyToken.sol\":8835:8866  _excluded[_excluded.length - 1] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_388\n      jumpi\n      tag_388\n      tag_382\n      jump\t// in\n    tag_388:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n      add\n      sload\n        /* \"contracts/MyToken.sol\":8820:8829  _excluded */\n      0x06\n        /* \"contracts/MyToken.sol\":8820:8832  _excluded[i] */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/MyToken.sol\":8835:8866  _excluded[_excluded.length - 1] */\n      swap1\n      swap3\n      and\n      swap2\n        /* \"contracts/MyToken.sol\":8830:8831  i */\n      dup4\n      swap1\n        /* \"contracts/MyToken.sol\":8820:8832  _excluded[i] */\n      dup2\n      lt\n      tag_391\n      jumpi\n      tag_391\n      tag_382\n      jump\t// in\n    tag_391:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      dup1\n      dup4\n      keccak256\n      swap2\n      swap1\n      swap2\n      add\n        /* \"contracts/MyToken.sol\":8820:8866  _excluded[i] = _excluded[_excluded.length - 1] */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap5\n      dup6\n      and\n      or\n      swap1\n      sstore\n        /* \"contracts/MyToken.sol\":8884:8900  _tOwned[account] */\n      swap2\n      dup5\n      and\n      dup2\n      mstore\n        /* \"contracts/MyToken.sol\":8884:8891  _tOwned */\n      0x02\n        /* \"contracts/MyToken.sol\":8884:8900  _tOwned[account] */\n      dup3\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"contracts/MyToken.sol\":8884:8904  _tOwned[account] = 0 */\n      dup3\n      swap1\n      sstore\n        /* \"contracts/MyToken.sol\":8922:8933  _isExcluded */\n      0x05\n        /* \"contracts/MyToken.sol\":8922:8942  _isExcluded[account] */\n      swap1\n      swap3\n      mstore\n      keccak256\n        /* \"contracts/MyToken.sol\":8922:8950  _isExcluded[account] = false */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap1\n      sstore\n        /* \"contracts/MyToken.sol\":8968:8977  _excluded */\n      0x06\n        /* \"contracts/MyToken.sol\":8968:8983  _excluded.pop() */\n      dup1\n      sload\n      dup1\n      tag_394\n      jumpi\n      tag_394\n      tag_395\n      jump\t// in\n    tag_394:\n      0x00\n      dup3\n      dup2\n      mstore\n      0x20\n      swap1\n      keccak256\n      dup2\n      add\n      not(0x00)\n      swap1\n      dup2\n      add\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      swap1\n      sstore\n      add\n      swap1\n      sstore\n        /* \"contracts/MyToken.sol\":8712:9031  for (uint256 i = 0; i < _excluded.length; i++) {... */\n      pop\n        /* \"contracts/MyToken.sol\":8571:9037  function includeInReward(address account) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/MyToken.sol\":8773:9021  if (_excluded[i] == account) {... */\n    tag_384:\n        /* \"contracts/MyToken.sol\":8754:8757  i++ */\n      dup1\n      tag_397\n      dup2\n      tag_398\n      jump\t// in\n    tag_397:\n      swap2\n      pop\n      pop\n        /* \"contracts/MyToken.sol\":8712:9031  for (uint256 i = 0; i < _excluded.length; i++) {... */\n      jump(tag_377)\n    tag_378:\n      pop\n        /* \"contracts/MyToken.sol\":8571:9037  function includeInReward(address account) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/MyToken.sol\":6104:6393  function increaseAllowance(address spender, uint256 addedValue)... */\n    tag_145:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"contracts/MyToken.sol\":6216:6220  bool */\n      0x00\n        /* \"contracts/MyToken.sol\":6305:6330  _allowances[_msgSender()] */\n      dup2\n      dup2\n      mstore\n        /* \"contracts/MyToken.sol\":6305:6316  _allowances */\n      0x03\n        /* \"contracts/MyToken.sol\":6305:6330  _allowances[_msgSender()] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/MyToken.sol\":6305:6339  _allowances[_msgSender()][spender] */\n      dup8\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      dup2\n      keccak256\n      sload\n        /* \"contracts/MyToken.sol\":6216:6220  bool */\n      swap1\n      swap2\n        /* \"contracts/MyToken.sol\":6236:6365  _approve(... */\n      tag_348\n      swap2\n        /* \"contracts/MyToken.sol\":6284:6291  spender */\n      dup6\n      swap1\n        /* \"contracts/MyToken.sol\":6305:6355  _allowances[_msgSender()][spender].add(addedValue) */\n      tag_359\n      swap1\n        /* \"contracts/MyToken.sol\":6344:6354  addedValue */\n      dup7\n        /* \"contracts/MyToken.sol\":6305:6343  _allowances[_msgSender()][spender].add */\n      tag_404\n        /* \"contracts/MyToken.sol\":6305:6355  _allowances[_msgSender()][spender].add(addedValue) */\n      jump\t// in\n        /* \"contracts/MyToken.sol\":7006:7381  function deliver(uint256 tAmount) public {... */\n    tag_154:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"contracts/MyToken.sol\":7057:7071  address sender */\n      0x00\n        /* \"contracts/MyToken.sol\":7105:7124  _isExcluded[sender] */\n      dup2\n      dup2\n      mstore\n        /* \"contracts/MyToken.sol\":7105:7116  _isExcluded */\n      0x05\n        /* \"contracts/MyToken.sol\":7105:7124  _isExcluded[sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"contracts/MyToken.sol\":7104:7124  !_isExcluded[sender] */\n      iszero\n        /* \"contracts/MyToken.sol\":7096:7173  require(!_isExcluded[sender], 'Excluded addresses cannot call this function') */\n      tag_407\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":14215:14217   */\n      0x20\n        /* \"contracts/MyToken.sol\":7096:7173  require(!_isExcluded[sender], 'Excluded addresses cannot call this function') */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":14197:14218   */\n      mstore\n        /* \"#utility.yul\":14254:14256   */\n      0x2c\n        /* \"#utility.yul\":14234:14252   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":14227:14257   */\n      mstore\n        /* \"#utility.yul\":14293:14327   */\n      0x4578636c75646564206164647265737365732063616e6e6f742063616c6c2074\n        /* \"#utility.yul\":14273:14291   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":14266:14328   */\n      mstore\n      shl(0xa1, 0x3434b990333ab731ba34b7b7)\n        /* \"#utility.yul\":14344:14362   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":14337:14379   */\n      mstore\n        /* \"#utility.yul\":14396:14415   */\n      0x84\n      add\n        /* \"contracts/MyToken.sol\":7096:7173  require(!_isExcluded[sender], 'Excluded addresses cannot call this function') */\n      tag_338\n        /* \"#utility.yul\":14013:14421   */\n      jump\n        /* \"contracts/MyToken.sol\":7096:7173  require(!_isExcluded[sender], 'Excluded addresses cannot call this function') */\n    tag_407:\n        /* \"contracts/MyToken.sol\":7184:7199  uint256 rAmount */\n      0x00\n        /* \"contracts/MyToken.sol\":7213:7232  _getValues(tAmount) */\n      tag_410\n        /* \"contracts/MyToken.sol\":7224:7231  tAmount */\n      dup4\n        /* \"contracts/MyToken.sol\":7213:7223  _getValues */\n      tag_411\n        /* \"contracts/MyToken.sol\":7213:7232  _getValues(tAmount) */\n      jump\t// in\n    tag_410:\n      pop\n      pop\n      pop\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/MyToken.sol\":7260:7275  _rOwned[sender] */\n      dup5\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/MyToken.sol\":7260:7267  _rOwned */\n      0x01\n        /* \"contracts/MyToken.sol\":7260:7275  _rOwned[sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"contracts/MyToken.sol\":7183:7232  (uint256 rAmount, , , , , ) = _getValues(tAmount) */\n      swap2\n      swap3\n      pop\n        /* \"contracts/MyToken.sol\":7260:7288  _rOwned[sender].sub(rAmount) */\n      tag_412\n      swap2\n        /* \"contracts/MyToken.sol\":7260:7275  _rOwned[sender] */\n      swap1\n      pop\n        /* \"contracts/MyToken.sol\":7183:7232  (uint256 rAmount, , , , , ) = _getValues(tAmount) */\n      dup3\n        /* \"contracts/MyToken.sol\":7260:7279  _rOwned[sender].sub */\n      tag_413\n        /* \"contracts/MyToken.sol\":7260:7288  _rOwned[sender].sub(rAmount) */\n      jump\t// in\n    tag_412:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/MyToken.sol\":7242:7257  _rOwned[sender] */\n      dup4\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/MyToken.sol\":7242:7249  _rOwned */\n      0x01\n        /* \"contracts/MyToken.sol\":7242:7257  _rOwned[sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/MyToken.sol\":7242:7288  _rOwned[sender] = _rOwned[sender].sub(rAmount) */\n      sstore\n        /* \"contracts/MyToken.sol\":7308:7315  _rTotal */\n      sload(0x08)\n        /* \"contracts/MyToken.sol\":7308:7328  _rTotal.sub(rAmount) */\n      tag_414\n      swap1\n        /* \"contracts/MyToken.sol\":7320:7327  rAmount */\n      dup3\n        /* \"contracts/MyToken.sol\":7308:7319  _rTotal.sub */\n      tag_413\n        /* \"contracts/MyToken.sol\":7308:7328  _rTotal.sub(rAmount) */\n      jump\t// in\n    tag_414:\n        /* \"contracts/MyToken.sol\":7298:7305  _rTotal */\n      0x08\n        /* \"contracts/MyToken.sol\":7298:7328  _rTotal = _rTotal.sub(rAmount) */\n      sstore\n        /* \"contracts/MyToken.sol\":7351:7361  _tFeeTotal */\n      sload(0x09)\n        /* \"contracts/MyToken.sol\":7351:7374  _tFeeTotal.add(tAmount) */\n      tag_415\n      swap1\n        /* \"contracts/MyToken.sol\":7366:7373  tAmount */\n      dup5\n        /* \"contracts/MyToken.sol\":7351:7365  _tFeeTotal.add */\n      tag_404\n        /* \"contracts/MyToken.sol\":7351:7374  _tFeeTotal.add(tAmount) */\n      jump\t// in\n    tag_415:\n        /* \"contracts/MyToken.sol\":7338:7348  _tFeeTotal */\n      0x09\n        /* \"contracts/MyToken.sol\":7338:7374  _tFeeTotal = _tFeeTotal.add(tAmount) */\n      sstore\n      pop\n      pop\n      pop\n        /* \"contracts/MyToken.sol\":7006:7381  function deliver(uint256 tAmount) public {... */\n      jump\t// out\n        /* \"contracts/MyToken.sol\":22407:22516  function excludeFromFee(address account) public onlyOwner {... */\n    tag_158:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_417\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_335\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_417:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/MyToken.sol\":22475:22502  _isExcludedFromFee[account] */\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/MyToken.sol\":22475:22493  _isExcludedFromFee */\n      0x04\n        /* \"contracts/MyToken.sol\":22475:22502  _isExcludedFromFee[account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/MyToken.sol\":22475:22509  _isExcludedFromFee[account] = true */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"contracts/MyToken.sol\":22505:22509  true */\n      0x01\n        /* \"contracts/MyToken.sol\":22475:22509  _isExcludedFromFee[account] = true */\n      or\n      swap1\n      sstore\n        /* \"contracts/MyToken.sol\":22407:22516  function excludeFromFee(address account) public onlyOwner {... */\n      jump\t// out\n        /* \"contracts/MyToken.sol\":7387:7853  function reflectionFromToken(uint256 tAmount, bool deductTransferFee)... */\n    tag_163:\n        /* \"contracts/MyToken.sol\":7502:7509  uint256 */\n      0x00\n        /* \"contracts/MyToken.sol\":7544:7551  _tTotal */\n      sload(0x07)\n        /* \"contracts/MyToken.sol\":7533:7540  tAmount */\n      dup4\n        /* \"contracts/MyToken.sol\":7533:7551  tAmount <= _tTotal */\n      gt\n      iszero\n        /* \"contracts/MyToken.sol\":7525:7587  require(tAmount <= _tTotal, 'Amount must be less than supply') */\n      tag_420\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":10633:10635   */\n      0x20\n        /* \"contracts/MyToken.sol\":7525:7587  require(tAmount <= _tTotal, 'Amount must be less than supply') */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":10615:10636   */\n      mstore\n        /* \"#utility.yul\":10672:10674   */\n      0x1f\n        /* \"#utility.yul\":10652:10670   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":10645:10675   */\n      mstore\n        /* \"#utility.yul\":10711:10744   */\n      0x416d6f756e74206d757374206265206c657373207468616e20737570706c7900\n        /* \"#utility.yul\":10691:10709   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":10684:10745   */\n      mstore\n        /* \"#utility.yul\":10762:10780   */\n      0x64\n      add\n        /* \"contracts/MyToken.sol\":7525:7587  require(tAmount <= _tTotal, 'Amount must be less than supply') */\n      tag_338\n        /* \"#utility.yul\":10431:10786   */\n      jump\n        /* \"contracts/MyToken.sol\":7525:7587  require(tAmount <= _tTotal, 'Amount must be less than supply') */\n    tag_420:\n        /* \"contracts/MyToken.sol\":7602:7619  deductTransferFee */\n      dup2\n        /* \"contracts/MyToken.sol\":7597:7847  if (!deductTransferFee) {... */\n      tag_423\n      jumpi\n        /* \"contracts/MyToken.sol\":7636:7651  uint256 rAmount */\n      0x00\n        /* \"contracts/MyToken.sol\":7665:7684  _getValues(tAmount) */\n      tag_424\n        /* \"contracts/MyToken.sol\":7676:7683  tAmount */\n      dup5\n        /* \"contracts/MyToken.sol\":7665:7675  _getValues */\n      tag_411\n        /* \"contracts/MyToken.sol\":7665:7684  _getValues(tAmount) */\n      jump\t// in\n    tag_424:\n      pop\n        /* \"contracts/MyToken.sol\":7635:7684  (uint256 rAmount, , , , , ) = _getValues(tAmount) */\n      swap4\n      swap6\n      pop\n        /* \"contracts/MyToken.sol\":7698:7712  return rAmount */\n      tag_347\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\n        /* \"contracts/MyToken.sol\":7597:7847  if (!deductTransferFee) {... */\n    tag_423:\n        /* \"contracts/MyToken.sol\":7746:7769  uint256 rTransferAmount */\n      0x00\n        /* \"contracts/MyToken.sol\":7781:7800  _getValues(tAmount) */\n      tag_426\n        /* \"contracts/MyToken.sol\":7792:7799  tAmount */\n      dup5\n        /* \"contracts/MyToken.sol\":7781:7791  _getValues */\n      tag_411\n        /* \"contracts/MyToken.sol\":7781:7800  _getValues(tAmount) */\n      jump\t// in\n    tag_426:\n      pop\n        /* \"contracts/MyToken.sol\":7743:7800  (, uint256 rTransferAmount, , , , ) = _getValues(tAmount) */\n      swap3\n      swap6\n      pop\n        /* \"contracts/MyToken.sol\":7814:7836  return rTransferAmount */\n      tag_347\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\n        /* \"contracts/MyToken.sol\":23120:23316  function setMarketingFeePercent(uint256 marketingFee) external onlyOwner {... */\n    tag_168:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_428\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_335\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_428:\n        /* \"contracts/MyToken.sol\":23227:23229  10 */\n      0x0a\n        /* \"contracts/MyToken.sol\":23211:23223  marketingFee */\n      dup2\n        /* \"contracts/MyToken.sol\":23211:23229  marketingFee <= 10 */\n      gt\n      iszero\n        /* \"contracts/MyToken.sol\":23203:23271  require(marketingFee <= 10, 'Marketing fee cannot be more than 10%') */\n      tag_430\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9874:9876   */\n      0x20\n        /* \"contracts/MyToken.sol\":23203:23271  require(marketingFee <= 10, 'Marketing fee cannot be more than 10%') */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9856:9877   */\n      mstore\n        /* \"#utility.yul\":9913:9915   */\n      0x25\n        /* \"#utility.yul\":9893:9911   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9886:9916   */\n      mstore\n        /* \"#utility.yul\":9952:9986   */\n      0x4d61726b6574696e67206665652063616e6e6f74206265206d6f726520746861\n        /* \"#utility.yul\":9932:9950   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9925:9987   */\n      mstore\n      shl(0xd8, 0x6e20313025)\n        /* \"#utility.yul\":10003:10021   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":9996:10031   */\n      mstore\n        /* \"#utility.yul\":10048:10067   */\n      0x84\n      add\n        /* \"contracts/MyToken.sol\":23203:23271  require(marketingFee <= 10, 'Marketing fee cannot be more than 10%') */\n      tag_338\n        /* \"#utility.yul\":9672:10073   */\n      jump\n        /* \"contracts/MyToken.sol\":23203:23271  require(marketingFee <= 10, 'Marketing fee cannot be more than 10%') */\n    tag_430:\n        /* \"contracts/MyToken.sol\":23281:23294  _marketingFee */\n      0x13\n        /* \"contracts/MyToken.sol\":23281:23309  _marketingFee = marketingFee */\n      sstore\n        /* \"contracts/MyToken.sol\":23120:23316  function setMarketingFeePercent(uint256 marketingFee) external onlyOwner {... */\n      jump\t// out\n        /* \"contracts/MyToken.sol\":24832:25061  function setAntiWhale(bool enabled) external {... */\n    tag_173:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1247:1254  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1279  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"contracts/MyToken.sol\":24908:24918  msg.sender */\n      caller\n        /* \"contracts/MyToken.sol\":24908:24929  msg.sender == owner() */\n      eq\n      dup1\n        /* \"contracts/MyToken.sol\":24908:24958  msg.sender == owner() || msg.sender == antiManager */\n      tag_435\n      jumpi\n      pop\n        /* \"contracts/MyToken.sol\":24947:24958  antiManager */\n      sload(0x1d)\n      0x0100\n      swap1\n      div\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"contracts/MyToken.sol\":24933:24943  msg.sender */\n      caller\n        /* \"contracts/MyToken.sol\":24933:24958  msg.sender == antiManager */\n      eq\n        /* \"contracts/MyToken.sol\":24908:24958  msg.sender == owner() || msg.sender == antiManager */\n    tag_435:\n        /* \"contracts/MyToken.sol\":24887:25018  require(... */\n      tag_436\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_338\n      swap1\n      tag_438\n      jump\t// in\n    tag_436:\n        /* \"contracts/MyToken.sol\":25028:25044  antiWhaleEnabled */\n      0x1b\n        /* \"contracts/MyToken.sol\":25028:25054  antiWhaleEnabled = enabled */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap2\n      iszero\n      iszero\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"contracts/MyToken.sol\":24832:25061  function setAntiWhale(bool enabled) external {... */\n      jump\t// out\n        /* \"contracts/MyToken.sol\":8114:8565  function excludeFromReward(address account) public onlyOwner {... */\n    tag_181:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_440\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_335\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_440:\n        /* \"contracts/MyToken.sol\":8225:8240  pancakeV2Router */\n      sload(0x1e)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/MyToken.sol\":8206:8241  account != address(pancakeV2Router) */\n      dup3\n      dup2\n      and\n        /* \"contracts/MyToken.sol\":8225:8240  pancakeV2Router */\n      swap2\n      and\n        /* \"contracts/MyToken.sol\":8206:8241  account != address(pancakeV2Router) */\n      eq\n      iszero\n        /* \"contracts/MyToken.sol\":8185:8301  require(... */\n      tag_442\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":13812:13814   */\n      0x20\n        /* \"contracts/MyToken.sol\":8185:8301  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":13794:13815   */\n      mstore\n        /* \"#utility.yul\":13851:13853   */\n      0x22\n        /* \"#utility.yul\":13831:13849   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":13824:13854   */\n      mstore\n        /* \"#utility.yul\":13890:13924   */\n      0x57652063616e206e6f74206578636c7564652050616e63616b6520726f757465\n        /* \"#utility.yul\":13870:13888   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":13863:13925   */\n      mstore\n      shl(0xf1, 0x3917)\n        /* \"#utility.yul\":13941:13959   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":13934:13966   */\n      mstore\n        /* \"#utility.yul\":13983:14002   */\n      0x84\n      add\n        /* \"contracts/MyToken.sol\":8185:8301  require(... */\n      tag_338\n        /* \"#utility.yul\":13610:14008   */\n      jump\n        /* \"contracts/MyToken.sol\":8185:8301  require(... */\n    tag_442:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/MyToken.sol\":8320:8340  _isExcluded[account] */\n      dup2\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/MyToken.sol\":8320:8331  _isExcluded */\n      0x05\n        /* \"contracts/MyToken.sol\":8320:8340  _isExcluded[account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"contracts/MyToken.sol\":8319:8340  !_isExcluded[account] */\n      iszero\n        /* \"contracts/MyToken.sol\":8311:8372  require(!_isExcluded[account], 'Account is already excluded') */\n      tag_445\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9104:9106   */\n      0x20\n        /* \"contracts/MyToken.sol\":8311:8372  require(!_isExcluded[account], 'Account is already excluded') */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9086:9107   */\n      mstore\n        /* \"#utility.yul\":9143:9145   */\n      0x1b\n        /* \"#utility.yul\":9123:9141   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9116:9146   */\n      mstore\n        /* \"#utility.yul\":9182:9211   */\n      0x4163636f756e7420697320616c7265616479206578636c756465640000000000\n        /* \"#utility.yul\":9162:9180   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9155:9212   */\n      mstore\n        /* \"#utility.yul\":9229:9247   */\n      0x64\n      add\n        /* \"contracts/MyToken.sol\":8311:8372  require(!_isExcluded[account], 'Account is already excluded') */\n      tag_338\n        /* \"#utility.yul\":8902:9253   */\n      jump\n        /* \"contracts/MyToken.sol\":8311:8372  require(!_isExcluded[account], 'Account is already excluded') */\n    tag_445:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/MyToken.sol\":8386:8402  _rOwned[account] */\n      dup2\n      and\n        /* \"contracts/MyToken.sol\":8405:8406  0 */\n      0x00\n        /* \"contracts/MyToken.sol\":8386:8402  _rOwned[account] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/MyToken.sol\":8386:8393  _rOwned */\n      0x01\n        /* \"contracts/MyToken.sol\":8386:8402  _rOwned[account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"contracts/MyToken.sol\":8386:8406  _rOwned[account] > 0 */\n      iszero\n        /* \"contracts/MyToken.sol\":8382:8489  if (_rOwned[account] > 0) {... */\n      tag_447\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/MyToken.sol\":8461:8477  _rOwned[account] */\n      dup2\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/MyToken.sol\":8461:8468  _rOwned */\n      0x01\n        /* \"contracts/MyToken.sol\":8461:8477  _rOwned[account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"contracts/MyToken.sol\":8441:8478  tokenFromReflection(_rOwned[account]) */\n      tag_448\n      swap1\n        /* \"contracts/MyToken.sol\":8441:8460  tokenFromReflection */\n      tag_130\n        /* \"contracts/MyToken.sol\":8441:8478  tokenFromReflection(_rOwned[account]) */\n      jump\t// in\n    tag_448:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/MyToken.sol\":8422:8438  _tOwned[account] */\n      dup3\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/MyToken.sol\":8422:8429  _tOwned */\n      0x02\n        /* \"contracts/MyToken.sol\":8422:8438  _tOwned[account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/MyToken.sol\":8422:8478  _tOwned[account] = tokenFromReflection(_rOwned[account]) */\n      sstore\n        /* \"contracts/MyToken.sol\":8382:8489  if (_rOwned[account] > 0) {... */\n    tag_447:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/MyToken.sol\":8498:8518  _isExcluded[account] */\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"contracts/MyToken.sol\":8498:8509  _isExcluded */\n      0x05\n        /* \"contracts/MyToken.sol\":8498:8518  _isExcluded[account] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"contracts/MyToken.sol\":8498:8525  _isExcluded[account] = true */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"contracts/MyToken.sol\":8521:8525  true */\n      0x01\n        /* \"contracts/MyToken.sol\":8498:8525  _isExcluded[account] = true */\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"contracts/MyToken.sol\":8535:8544  _excluded */\n      0x06\n        /* \"contracts/MyToken.sol\":8535:8558  _excluded.push(account) */\n      dup1\n      sload\n      swap2\n      dup3\n      add\n      dup2\n      sstore\n      swap1\n      swap2\n      mstore\n      0xf652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f\n      add\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"contracts/MyToken.sol\":8114:8565  function excludeFromReward(address account) public onlyOwner {... */\n      jump\t// out\n        /* \"contracts/MyToken.sol\":23918:24139  function setSellLiquidityFeePercent(uint256 sellLiquidityFee) external onlyOwner {... */\n    tag_194:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_452\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_335\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_452:\n        /* \"contracts/MyToken.sol\":24037:24039  10 */\n      0x0a\n        /* \"contracts/MyToken.sol\":24017:24033  sellLiquidityFee */\n      dup2\n        /* \"contracts/MyToken.sol\":24017:24039  sellLiquidityFee <= 10 */\n      gt\n      iszero\n        /* \"contracts/MyToken.sol\":24009:24086  require(sellLiquidityFee <= 10, 'Sell liquidity fee cannot be more than 10%') */\n      tag_454\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":10993:10995   */\n      0x20\n        /* \"contracts/MyToken.sol\":24009:24086  require(sellLiquidityFee <= 10, 'Sell liquidity fee cannot be more than 10%') */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":10975:10996   */\n      mstore\n        /* \"#utility.yul\":11032:11034   */\n      0x2a\n        /* \"#utility.yul\":11012:11030   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":11005:11035   */\n      mstore\n        /* \"#utility.yul\":11071:11105   */\n      0x53656c6c206c6971756964697479206665652063616e6e6f74206265206d6f72\n        /* \"#utility.yul\":11051:11069   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":11044:11106   */\n      mstore\n      shl(0xb0, 0x65207468616e20313025)\n        /* \"#utility.yul\":11122:11140   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":11115:11155   */\n      mstore\n        /* \"#utility.yul\":11172:11191   */\n      0x84\n      add\n        /* \"contracts/MyToken.sol\":24009:24086  require(sellLiquidityFee <= 10, 'Sell liquidity fee cannot be more than 10%') */\n      tag_338\n        /* \"#utility.yul\":10791:11197   */\n      jump\n        /* \"contracts/MyToken.sol\":24009:24086  require(sellLiquidityFee <= 10, 'Sell liquidity fee cannot be more than 10%') */\n    tag_454:\n        /* \"contracts/MyToken.sol\":24096:24113  _sellLiquidityFee */\n      0x17\n        /* \"contracts/MyToken.sol\":24096:24132  _sellLiquidityFee = sellLiquidityFee */\n      sstore\n        /* \"contracts/MyToken.sol\":23918:24139  function setSellLiquidityFeePercent(uint256 sellLiquidityFee) external onlyOwner {... */\n      jump\t// out\n        /* \"contracts/MyToken.sol\":22636:22746  function setMarketingWallet(address newWallet) external onlyOwner {... */\n    tag_198:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_458\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_335\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_458:\n        /* \"contracts/MyToken.sol\":22712:22727  marketingWallet */\n      0x14\n        /* \"contracts/MyToken.sol\":22712:22739  marketingWallet = newWallet */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"contracts/MyToken.sol\":22636:22746  function setMarketingWallet(address newWallet) external onlyOwner {... */\n      jump\t// out\n        /* \"contracts/MyToken.sol\":4472:4579  function setAntisnipeAddress(address addr) external onlyOwner {... */\n    tag_202:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_461\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_335\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_461:\n        /* \"contracts/MyToken.sol\":4544:4553  antisnipe */\n      0x22\n        /* \"contracts/MyToken.sol\":4544:4572  antisnipe = IAntisnipe(addr) */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"contracts/MyToken.sol\":4472:4579  function setAntisnipeAddress(address addr) external onlyOwner {... */\n      jump\t// out\n        /* \"contracts/MyToken.sol\":4949:5144  function balanceOf(address account) public view override returns (uint256) {... */\n    tag_219:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/MyToken.sol\":5038:5058  _isExcluded[account] */\n      dup2\n      and\n        /* \"contracts/MyToken.sol\":5015:5022  uint256 */\n      0x00\n        /* \"contracts/MyToken.sol\":5038:5058  _isExcluded[account] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/MyToken.sol\":5038:5049  _isExcluded */\n      0x05\n        /* \"contracts/MyToken.sol\":5038:5058  _isExcluded[account] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n      0xff\n      and\n        /* \"contracts/MyToken.sol\":5034:5083  if (_isExcluded[account]) return _tOwned[account] */\n      iszero\n      tag_464\n      jumpi\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/MyToken.sol\":5067:5083  _tOwned[account] */\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/MyToken.sol\":5067:5074  _tOwned */\n      0x02\n        /* \"contracts/MyToken.sol\":5067:5083  _tOwned[account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"contracts/MyToken.sol\":4949:5144  function balanceOf(address account) public view override returns (uint256) {... */\n      jump\t// out\n        /* \"contracts/MyToken.sol\":5034:5083  if (_isExcluded[account]) return _tOwned[account] */\n    tag_464:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/MyToken.sol\":5120:5136  _rOwned[account] */\n      dup3\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/MyToken.sol\":5120:5127  _rOwned */\n      0x01\n        /* \"contracts/MyToken.sol\":5120:5136  _rOwned[account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"contracts/MyToken.sol\":5100:5137  tokenFromReflection(_rOwned[account]) */\n      tag_347\n      swap1\n        /* \"contracts/MyToken.sol\":5100:5119  tokenFromReflection */\n      tag_130\n        /* \"contracts/MyToken.sol\":5100:5137  tokenFromReflection(_rOwned[account]) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1831:1932  function renounceOwnership() public virtual onlyOwner {... */\n    tag_223:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_467\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_335\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_467:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1895:1925  _transferOwnership(address(0)) */\n      tag_469\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1922:1923  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1895:1913  _transferOwnership */\n      tag_470\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1895:1925  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_469:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1831:1932  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"contracts/MyToken.sol\":4340:4466  function setAntisnipeDisable() external onlyOwner {... */\n    tag_226:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_472\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_335\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_472:\n        /* \"contracts/MyToken.sol\":4409:4425  antisnipeDisable */\n      sload(0x22)\n      shl(0xa0, 0x01)\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/MyToken.sol\":4408:4425  !antisnipeDisable */\n      iszero\n        /* \"contracts/MyToken.sol\":4400:4426  require(!antisnipeDisable) */\n      tag_474\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_474:\n        /* \"contracts/MyToken.sol\":4436:4452  antisnipeDisable */\n      0x22\n        /* \"contracts/MyToken.sol\":4436:4459  antisnipeDisable = true */\n      dup1\n      sload\n      not(shl(0xa0, 0xff))\n      and\n      shl(0xa0, 0x01)\n      or\n      swap1\n      sstore\n        /* \"contracts/MyToken.sol\":4340:4466  function setAntisnipeDisable() external onlyOwner {... */\n      jump\t// out\n        /* \"contracts/MyToken.sol\":22918:23114  function setLiquidityFeePercent(uint256 liquidityFee) external onlyOwner {... */\n    tag_256:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_478\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_335\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_478:\n        /* \"contracts/MyToken.sol\":23025:23027  10 */\n      0x0a\n        /* \"contracts/MyToken.sol\":23009:23021  liquidityFee */\n      dup2\n        /* \"contracts/MyToken.sol\":23009:23027  liquidityFee <= 10 */\n      gt\n      iszero\n        /* \"contracts/MyToken.sol\":23001:23069  require(liquidityFee <= 10, 'Liquidity fee cannot be more than 10%') */\n      tag_480\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":15031:15033   */\n      0x20\n        /* \"contracts/MyToken.sol\":23001:23069  require(liquidityFee <= 10, 'Liquidity fee cannot be more than 10%') */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":15013:15034   */\n      mstore\n        /* \"#utility.yul\":15070:15072   */\n      0x25\n        /* \"#utility.yul\":15050:15068   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":15043:15073   */\n      mstore\n        /* \"#utility.yul\":15109:15143   */\n      0x4c6971756964697479206665652063616e6e6f74206265206d6f726520746861\n        /* \"#utility.yul\":15089:15107   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":15082:15144   */\n      mstore\n      shl(0xd8, 0x6e20313025)\n        /* \"#utility.yul\":15160:15178   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":15153:15188   */\n      mstore\n        /* \"#utility.yul\":15205:15224   */\n      0x84\n      add\n        /* \"contracts/MyToken.sol\":23001:23069  require(liquidityFee <= 10, 'Liquidity fee cannot be more than 10%') */\n      tag_338\n        /* \"#utility.yul\":14829:15230   */\n      jump\n        /* \"contracts/MyToken.sol\":23001:23069  require(liquidityFee <= 10, 'Liquidity fee cannot be more than 10%') */\n    tag_480:\n        /* \"contracts/MyToken.sol\":23079:23092  _liquidityFee */\n      0x0f\n        /* \"contracts/MyToken.sol\":23079:23107  _liquidityFee = liquidityFee */\n      sstore\n        /* \"contracts/MyToken.sol\":22918:23114  function setLiquidityFeePercent(uint256 liquidityFee) external onlyOwner {... */\n      jump\t// out\n        /* \"contracts/MyToken.sol\":4672:4757  function symbol() public view returns (string memory) {... */\n    tag_259:\n        /* \"contracts/MyToken.sol\":4711:4724  string memory */\n      0x60\n        /* \"contracts/MyToken.sol\":4743:4750  _symbol */\n      0x0b\n        /* \"contracts/MyToken.sol\":4736:4750  return _symbol */\n      dup1\n      sload\n      tag_341\n      swap1\n      tag_342\n      jump\t// in\n        /* \"contracts/MyToken.sol\":24336:24652  function setMaxHoldingPercents(uint256 maxHoldingPercents) external onlyOwner {... */\n    tag_264:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_490\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_335\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_490:\n        /* \"contracts/MyToken.sol\":24454:24455  1 */\n      0x01\n        /* \"contracts/MyToken.sol\":24432:24450  maxHoldingPercents */\n      dup2\n        /* \"contracts/MyToken.sol\":24432:24455  maxHoldingPercents >= 1 */\n      lt\n      iszero\n        /* \"contracts/MyToken.sol\":24424:24505  require(maxHoldingPercents >= 1, 'Max holding percents cannot be less than 0.1%') */\n      tag_492\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9460:9462   */\n      0x20\n        /* \"contracts/MyToken.sol\":24424:24505  require(maxHoldingPercents >= 1, 'Max holding percents cannot be less than 0.1%') */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9442:9463   */\n      mstore\n        /* \"#utility.yul\":9499:9501   */\n      0x2d\n        /* \"#utility.yul\":9479:9497   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9472:9502   */\n      mstore\n        /* \"#utility.yul\":9538:9572   */\n      0x4d617820686f6c64696e672070657263656e74732063616e6e6f74206265206c\n        /* \"#utility.yul\":9518:9536   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9511:9573   */\n      mstore\n      shl(0x98, 0x657373207468616e20302e3125)\n        /* \"#utility.yul\":9589:9607   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":9582:9625   */\n      mstore\n        /* \"#utility.yul\":9642:9661   */\n      0x84\n      add\n        /* \"contracts/MyToken.sol\":24424:24505  require(maxHoldingPercents >= 1, 'Max holding percents cannot be less than 0.1%') */\n      tag_338\n        /* \"#utility.yul\":9258:9667   */\n      jump\n        /* \"contracts/MyToken.sol\":24424:24505  require(maxHoldingPercents >= 1, 'Max holding percents cannot be less than 0.1%') */\n    tag_492:\n        /* \"contracts/MyToken.sol\":24545:24547  30 */\n      0x1e\n        /* \"contracts/MyToken.sol\":24523:24541  maxHoldingPercents */\n      dup2\n        /* \"contracts/MyToken.sol\":24523:24547  maxHoldingPercents <= 30 */\n      gt\n      iszero\n        /* \"contracts/MyToken.sol\":24515:24595  require(maxHoldingPercents <= 30, 'Max holding percents cannot be more than 3%') */\n      tag_495\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":12170:12172   */\n      0x20\n        /* \"contracts/MyToken.sol\":24515:24595  require(maxHoldingPercents <= 30, 'Max holding percents cannot be more than 3%') */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":12152:12173   */\n      mstore\n        /* \"#utility.yul\":12209:12211   */\n      0x2b\n        /* \"#utility.yul\":12189:12207   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":12182:12212   */\n      mstore\n        /* \"#utility.yul\":12248:12282   */\n      0x4d617820686f6c64696e672070657263656e74732063616e6e6f74206265206d\n        /* \"#utility.yul\":12228:12246   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":12221:12283   */\n      mstore\n      shl(0xa8, 0x6f7265207468616e203325)\n        /* \"#utility.yul\":12299:12317   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":12292:12333   */\n      mstore\n        /* \"#utility.yul\":12350:12369   */\n      0x84\n      add\n        /* \"contracts/MyToken.sol\":24515:24595  require(maxHoldingPercents <= 30, 'Max holding percents cannot be more than 3%') */\n      tag_338\n        /* \"#utility.yul\":11968:12375   */\n      jump\n        /* \"contracts/MyToken.sol\":24515:24595  require(maxHoldingPercents <= 30, 'Max holding percents cannot be more than 3%') */\n    tag_495:\n        /* \"contracts/MyToken.sol\":24605:24624  _maxHoldingPercents */\n      0x1a\n        /* \"contracts/MyToken.sol\":24605:24645  _maxHoldingPercents = maxHoldingPercents */\n      sstore\n        /* \"contracts/MyToken.sol\":24336:24652  function setMaxHoldingPercents(uint256 maxHoldingPercents) external onlyOwner {... */\n      jump\t// out\n        /* \"contracts/MyToken.sol\":6399:6785  function decreaseAllowance(address spender, uint256 subtractedValue)... */\n    tag_268:\n        /* \"contracts/MyToken.sol\":6516:6520  bool */\n      0x00\n        /* \"contracts/MyToken.sol\":6536:6757  _approve(... */\n      tag_348\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"contracts/MyToken.sol\":6584:6591  spender */\n      dup5\n        /* \"contracts/MyToken.sol\":6605:6747  _allowances[_msgSender()][spender].sub(... */\n      tag_359\n        /* \"contracts/MyToken.sol\":6661:6676  subtractedValue */\n      dup6\n        /* \"contracts/MyToken.sol\":6605:6747  _allowances[_msgSender()][spender].sub(... */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x25\n      dup2\n      mstore\n      0x20\n      add\n      data_b7060b3538dcd3ddc8a941c91636a8115a1aa46914747fd9809d543bbb46cd22\n      0x25\n      swap2\n      codecopy\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"contracts/MyToken.sol\":6605:6630  _allowances[_msgSender()] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/MyToken.sol\":6605:6616  _allowances */\n      0x03\n        /* \"contracts/MyToken.sol\":6605:6630  _allowances[_msgSender()] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/MyToken.sol\":6605:6639  _allowances[_msgSender()][spender] */\n      dup14\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n      sload\n      swap2\n      swap1\n        /* \"contracts/MyToken.sol\":6605:6643  _allowances[_msgSender()][spender].sub */\n      tag_361\n        /* \"contracts/MyToken.sol\":6605:6747  _allowances[_msgSender()][spender].sub(... */\n      jump\t// in\n        /* \"contracts/MyToken.sol\":5150:5314  function transfer(address recipient, uint256 amount) public override returns (bool) {... */\n    tag_273:\n        /* \"contracts/MyToken.sol\":5228:5232  bool */\n      0x00\n        /* \"contracts/MyToken.sol\":5244:5286  _transfer(_msgSender(), recipient, amount) */\n      tag_348\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"contracts/MyToken.sol\":5268:5277  recipient */\n      dup5\n        /* \"contracts/MyToken.sol\":5279:5285  amount */\n      dup5\n        /* \"contracts/MyToken.sol\":5244:5253  _transfer */\n      tag_356\n        /* \"contracts/MyToken.sol\":5244:5286  _transfer(_msgSender(), recipient, amount) */\n      jump\t// in\n        /* \"contracts/MyToken.sol\":23691:23912  function setSellMarketingFeePercent(uint256 sellMarketingFee) external onlyOwner {... */\n    tag_278:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_507\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_335\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_507:\n        /* \"contracts/MyToken.sol\":23810:23812  10 */\n      0x0a\n        /* \"contracts/MyToken.sol\":23790:23806  sellMarketingFee */\n      dup2\n        /* \"contracts/MyToken.sol\":23790:23812  sellMarketingFee <= 10 */\n      gt\n      iszero\n        /* \"contracts/MyToken.sol\":23782:23859  require(sellMarketingFee <= 10, 'Sell marketing fee cannot be more than 10%') */\n      tag_509\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8693:8695   */\n      0x20\n        /* \"contracts/MyToken.sol\":23782:23859  require(sellMarketingFee <= 10, 'Sell marketing fee cannot be more than 10%') */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8675:8696   */\n      mstore\n        /* \"#utility.yul\":8732:8734   */\n      0x2a\n        /* \"#utility.yul\":8712:8730   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8705:8735   */\n      mstore\n        /* \"#utility.yul\":8771:8805   */\n      0x53656c6c206d61726b6574696e67206665652063616e6e6f74206265206d6f72\n        /* \"#utility.yul\":8751:8769   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8744:8806   */\n      mstore\n      shl(0xb0, 0x65207468616e20313025)\n        /* \"#utility.yul\":8822:8840   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":8815:8855   */\n      mstore\n        /* \"#utility.yul\":8872:8891   */\n      0x84\n      add\n        /* \"contracts/MyToken.sol\":23782:23859  require(sellMarketingFee <= 10, 'Sell marketing fee cannot be more than 10%') */\n      tag_338\n        /* \"#utility.yul\":8491:8897   */\n      jump\n        /* \"contracts/MyToken.sol\":23782:23859  require(sellMarketingFee <= 10, 'Sell marketing fee cannot be more than 10%') */\n    tag_509:\n        /* \"contracts/MyToken.sol\":23869:23886  _sellMarketingFee */\n      0x18\n        /* \"contracts/MyToken.sol\":23869:23905  _sellMarketingFee = sellMarketingFee */\n      sstore\n        /* \"contracts/MyToken.sol\":23691:23912  function setSellMarketingFeePercent(uint256 sellMarketingFee) external onlyOwner {... */\n      jump\t// out\n        /* \"contracts/MyToken.sol\":25067:25292  function setAntiBot(bool enabled) external {... */\n    tag_286:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1247:1254  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1279  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"contracts/MyToken.sol\":25141:25151  msg.sender */\n      caller\n        /* \"contracts/MyToken.sol\":25141:25162  msg.sender == owner() */\n      eq\n      dup1\n        /* \"contracts/MyToken.sol\":25141:25191  msg.sender == owner() || msg.sender == antiManager */\n      tag_514\n      jumpi\n      pop\n        /* \"contracts/MyToken.sol\":25180:25191  antiManager */\n      sload(0x1d)\n      0x0100\n      swap1\n      div\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"contracts/MyToken.sol\":25166:25176  msg.sender */\n      caller\n        /* \"contracts/MyToken.sol\":25166:25191  msg.sender == antiManager */\n      eq\n        /* \"contracts/MyToken.sol\":25141:25191  msg.sender == owner() || msg.sender == antiManager */\n    tag_514:\n        /* \"contracts/MyToken.sol\":25120:25251  require(... */\n      tag_515\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_338\n      swap1\n      tag_438\n      jump\t// in\n    tag_515:\n        /* \"contracts/MyToken.sol\":25261:25275  antiBotEnabled */\n      0x1d\n        /* \"contracts/MyToken.sol\":25261:25285  antiBotEnabled = enabled */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap2\n      iszero\n      iszero\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"contracts/MyToken.sol\":25067:25292  function setAntiBot(bool enabled) external {... */\n      jump\t// out\n        /* \"contracts/MyToken.sol\":24658:24826  function setSwapAndLiquifyEnabled(bool _enabled) public onlyOwner {... */\n    tag_290:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_518\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_335\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_518:\n        /* \"contracts/MyToken.sol\":24734:24755  swapAndLiquifyEnabled */\n      0x1f\n        /* \"contracts/MyToken.sol\":24734:24766  swapAndLiquifyEnabled = _enabled */\n      dup1\n      sload\n      dup3\n      iszero\n      iszero\n      shl(0xa8, 0x01)\n      mul\n      not(shl(0xa8, 0xff))\n      swap1\n      swap2\n      and\n      or\n      swap1\n      sstore\n        /* \"contracts/MyToken.sol\":24781:24819  SwapAndLiquifyEnabledUpdated(_enabled) */\n      mload(0x40)\n      0x53726dfcaf90650aa7eb35524f4d3220f07413c8d6cb404cc8c18bf5591bc159\n      swap1\n      tag_520\n      swap1\n        /* \"contracts/MyToken.sol\":24758:24766  _enabled */\n      dup4\n        /* \"#utility.yul\":4241:4255   */\n      iszero\n        /* \"#utility.yul\":4234:4256   */\n      iszero\n        /* \"#utility.yul\":4216:4257   */\n      dup2\n      mstore\n        /* \"#utility.yul\":4204:4206   */\n      0x20\n        /* \"#utility.yul\":4189:4207   */\n      add\n      swap1\n        /* \"#utility.yul\":4076:4263   */\n      jump\n        /* \"contracts/MyToken.sol\":24781:24819  SwapAndLiquifyEnabledUpdated(_enabled) */\n    tag_520:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/MyToken.sol\":24658:24826  function setSwapAndLiquifyEnabled(bool _enabled) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/MyToken.sol\":23322:23488  function setBurnFeePercent(uint256 burnFee) external onlyOwner {... */\n    tag_298:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_522\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_335\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_522:\n        /* \"contracts/MyToken.sol\":23414:23416  10 */\n      0x0a\n        /* \"contracts/MyToken.sol\":23403:23410  burnFee */\n      dup2\n        /* \"contracts/MyToken.sol\":23403:23416  burnFee <= 10 */\n      gt\n      iszero\n        /* \"contracts/MyToken.sol\":23395:23453  require(burnFee <= 10, 'Burn fee cannot be more than 10%') */\n      tag_524\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7108:7110   */\n      0x20\n        /* \"contracts/MyToken.sol\":23395:23453  require(burnFee <= 10, 'Burn fee cannot be more than 10%') */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7090:7111   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":7127:7145   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7120:7150   */\n      mstore\n        /* \"#utility.yul\":7186:7220   */\n      0x4275726e206665652063616e6e6f74206265206d6f7265207468616e20313025\n        /* \"#utility.yul\":7166:7184   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7159:7221   */\n      mstore\n        /* \"#utility.yul\":7238:7256   */\n      0x64\n      add\n        /* \"contracts/MyToken.sol\":23395:23453  require(burnFee <= 10, 'Burn fee cannot be more than 10%') */\n      tag_338\n        /* \"#utility.yul\":6906:7262   */\n      jump\n        /* \"contracts/MyToken.sol\":23395:23453  require(burnFee <= 10, 'Burn fee cannot be more than 10%') */\n    tag_524:\n        /* \"contracts/MyToken.sol\":23463:23471  _burnFee */\n      0x11\n        /* \"contracts/MyToken.sol\":23463:23481  _burnFee = burnFee */\n      sstore\n        /* \"contracts/MyToken.sol\":23322:23488  function setBurnFeePercent(uint256 burnFee) external onlyOwner {... */\n      jump\t// out\n        /* \"contracts/MyToken.sol\":24145:24330  function setSellTaxFeePercent(uint256 sellTaxFee) external onlyOwner {... */\n    tag_302:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_528\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_335\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_528:\n        /* \"contracts/MyToken.sol\":24246:24248  10 */\n      0x0a\n        /* \"contracts/MyToken.sol\":24232:24242  sellTaxFee */\n      dup2\n        /* \"contracts/MyToken.sol\":24232:24248  sellTaxFee <= 10 */\n      gt\n      iszero\n        /* \"contracts/MyToken.sol\":24224:24289  require(sellTaxFee <= 10, 'Sell tax fee cannot be more than 10%') */\n      tag_530\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":11404:11406   */\n      0x20\n        /* \"contracts/MyToken.sol\":24224:24289  require(sellTaxFee <= 10, 'Sell tax fee cannot be more than 10%') */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":11386:11407   */\n      mstore\n        /* \"#utility.yul\":11443:11445   */\n      0x24\n        /* \"#utility.yul\":11423:11441   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":11416:11446   */\n      mstore\n        /* \"#utility.yul\":11482:11516   */\n      0x53656c6c20746178206665652063616e6e6f74206265206d6f7265207468616e\n        /* \"#utility.yul\":11462:11480   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":11455:11517   */\n      mstore\n      shl(0xe0, 0x20313025)\n        /* \"#utility.yul\":11533:11551   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":11526:11560   */\n      mstore\n        /* \"#utility.yul\":11577:11596   */\n      0x84\n      add\n        /* \"contracts/MyToken.sol\":24224:24289  require(sellTaxFee <= 10, 'Sell tax fee cannot be more than 10%') */\n      tag_338\n        /* \"#utility.yul\":11202:11602   */\n      jump\n        /* \"contracts/MyToken.sol\":24224:24289  require(sellTaxFee <= 10, 'Sell tax fee cannot be more than 10%') */\n    tag_530:\n        /* \"contracts/MyToken.sol\":24299:24310  _sellTaxFee */\n      0x16\n        /* \"contracts/MyToken.sol\":24299:24323  _sellTaxFee = sellTaxFee */\n      sstore\n        /* \"contracts/MyToken.sol\":24145:24330  function setSellTaxFeePercent(uint256 sellTaxFee) external onlyOwner {... */\n      jump\t// out\n        /* \"contracts/MyToken.sol\":22522:22630  function includeInFee(address account) public onlyOwner {... */\n    tag_324:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_535\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_335\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_535:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/MyToken.sol\":22588:22615  _isExcludedFromFee[account] */\n      and\n        /* \"contracts/MyToken.sol\":22618:22623  false */\n      0x00\n        /* \"contracts/MyToken.sol\":22588:22615  _isExcludedFromFee[account] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/MyToken.sol\":22588:22606  _isExcludedFromFee */\n      0x04\n        /* \"contracts/MyToken.sol\":22588:22615  _isExcludedFromFee[account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/MyToken.sol\":22588:22623  _isExcludedFromFee[account] = false */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap1\n      sstore\n        /* \"contracts/MyToken.sol\":22522:22630  function includeInFee(address account) public onlyOwner {... */\n      jump\t// out\n        /* \"contracts/MyToken.sol\":23494:23685  function setSellBurnFeePercent(uint256 sellBurnFee) external onlyOwner {... */\n    tag_328:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_538\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_335\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_538:\n        /* \"contracts/MyToken.sol\":23598:23600  10 */\n      0x0a\n        /* \"contracts/MyToken.sol\":23583:23594  sellBurnFee */\n      dup2\n        /* \"contracts/MyToken.sol\":23583:23600  sellBurnFee <= 10 */\n      gt\n      iszero\n        /* \"contracts/MyToken.sol\":23575:23642  require(sellBurnFee <= 10, 'Sell burn fee cannot be more than 10%') */\n      tag_540\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7469:7471   */\n      0x20\n        /* \"contracts/MyToken.sol\":23575:23642  require(sellBurnFee <= 10, 'Sell burn fee cannot be more than 10%') */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7451:7472   */\n      mstore\n        /* \"#utility.yul\":7508:7510   */\n      0x25\n        /* \"#utility.yul\":7488:7506   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7481:7511   */\n      mstore\n        /* \"#utility.yul\":7547:7581   */\n      0x53656c6c206275726e206665652063616e6e6f74206265206d6f726520746861\n        /* \"#utility.yul\":7527:7545   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7520:7582   */\n      mstore\n      shl(0xd8, 0x6e20313025)\n        /* \"#utility.yul\":7598:7616   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":7591:7626   */\n      mstore\n        /* \"#utility.yul\":7643:7662   */\n      0x84\n      add\n        /* \"contracts/MyToken.sol\":23575:23642  require(sellBurnFee <= 10, 'Sell burn fee cannot be more than 10%') */\n      tag_338\n        /* \"#utility.yul\":7267:7668   */\n      jump\n        /* \"contracts/MyToken.sol\":23575:23642  require(sellBurnFee <= 10, 'Sell burn fee cannot be more than 10%') */\n    tag_540:\n        /* \"contracts/MyToken.sol\":23652:23664  _sellBurnFee */\n      0x19\n        /* \"contracts/MyToken.sol\":23652:23678  _sellBurnFee = sellBurnFee */\n      sstore\n        /* \"contracts/MyToken.sol\":23494:23685  function setSellBurnFeePercent(uint256 sellBurnFee) external onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2279  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_332:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_544\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_335\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_544:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2169:2191  newOwner != address(0) */\n      dup2\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2161:2234  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_546\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8286:8288   */\n      0x20\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2161:2234  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8268:8289   */\n      mstore\n        /* \"#utility.yul\":8325:8327   */\n      0x26\n        /* \"#utility.yul\":8305:8323   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8298:8328   */\n      mstore\n        /* \"#utility.yul\":8364:8398   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":8344:8362   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8337:8399   */\n      mstore\n      shl(0xd0, 0x646472657373)\n        /* \"#utility.yul\":8415:8433   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":8408:8444   */\n      mstore\n        /* \"#utility.yul\":8461:8480   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2161:2234  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_338\n        /* \"#utility.yul\":8084:8486   */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2161:2234  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n    tag_546:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2244:2272  _transferOwnership(newOwner) */\n      tag_549\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2263:2271  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2244:2262  _transferOwnership */\n      tag_470\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2244:2272  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_549:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2279  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1359:1489  function _checkOwner() internal view virtual {... */\n    tag_335:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1247:1254  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1279  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1445  owner() == _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1414:1482  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_469\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":11809:11811   */\n      0x20\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1414:1482  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":11791:11812   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":11828:11846   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":11821:11851   */\n      mstore\n        /* \"#utility.yul\":11887:11921   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":11867:11885   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":11860:11922   */\n      mstore\n        /* \"#utility.yul\":11939:11957   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1414:1482  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_338\n        /* \"#utility.yul\":11607:11963   */\n      jump\n        /* \"contracts/MyToken.sol\":14076:14437  function _approve(... */\n    tag_351:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/MyToken.sol\":14198:14217  owner != address(0) */\n      dup4\n      and\n        /* \"contracts/MyToken.sol\":14190:14258  require(owner != address(0), 'BEP20: approve from the zero address') */\n      tag_558\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6703:6705   */\n      0x20\n        /* \"contracts/MyToken.sol\":14190:14258  require(owner != address(0), 'BEP20: approve from the zero address') */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6685:6706   */\n      mstore\n        /* \"#utility.yul\":6742:6744   */\n      0x24\n        /* \"#utility.yul\":6722:6740   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":6715:6745   */\n      mstore\n        /* \"#utility.yul\":6781:6815   */\n      0x42455032303a20617070726f76652066726f6d20746865207a65726f20616464\n        /* \"#utility.yul\":6761:6779   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6754:6816   */\n      mstore\n      shl(0xe0, 0x72657373)\n        /* \"#utility.yul\":6832:6850   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":6825:6859   */\n      mstore\n        /* \"#utility.yul\":6876:6895   */\n      0x84\n      add\n        /* \"contracts/MyToken.sol\":14190:14258  require(owner != address(0), 'BEP20: approve from the zero address') */\n      tag_338\n        /* \"#utility.yul\":6501:6901   */\n      jump\n        /* \"contracts/MyToken.sol\":14190:14258  require(owner != address(0), 'BEP20: approve from the zero address') */\n    tag_558:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/MyToken.sol\":14276:14297  spender != address(0) */\n      dup3\n      and\n        /* \"contracts/MyToken.sol\":14268:14336  require(spender != address(0), 'BEP20: approve to the zero address') */\n      tag_561\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":14628:14630   */\n      0x20\n        /* \"contracts/MyToken.sol\":14268:14336  require(spender != address(0), 'BEP20: approve to the zero address') */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":14610:14631   */\n      mstore\n        /* \"#utility.yul\":14667:14669   */\n      0x22\n        /* \"#utility.yul\":14647:14665   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":14640:14670   */\n      mstore\n        /* \"#utility.yul\":14706:14740   */\n      0x42455032303a20617070726f766520746f20746865207a65726f206164647265\n        /* \"#utility.yul\":14686:14704   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":14679:14741   */\n      mstore\n      shl(0xf0, 0x7373)\n        /* \"#utility.yul\":14757:14775   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":14750:14782   */\n      mstore\n        /* \"#utility.yul\":14799:14818   */\n      0x84\n      add\n        /* \"contracts/MyToken.sol\":14268:14336  require(spender != address(0), 'BEP20: approve to the zero address') */\n      tag_338\n        /* \"#utility.yul\":14426:14824   */\n      jump\n        /* \"contracts/MyToken.sol\":14268:14336  require(spender != address(0), 'BEP20: approve to the zero address') */\n    tag_561:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/MyToken.sol\":14347:14365  _allowances[owner] */\n      dup4\n      dup2\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"contracts/MyToken.sol\":14347:14358  _allowances */\n      0x03\n        /* \"contracts/MyToken.sol\":14347:14365  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/MyToken.sol\":14347:14374  _allowances[owner][spender] */\n      swap5\n      dup8\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      dup3\n      mstore\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"contracts/MyToken.sol\":14347:14383  _allowances[owner][spender] = amount */\n      dup6\n      swap1\n      sstore\n        /* \"contracts/MyToken.sol\":14398:14430  Approval(owner, spender, amount) */\n      swap1\n      mload\n        /* \"#utility.yul\":15381:15406   */\n      dup5\n      dup2\n      mstore\n        /* \"contracts/MyToken.sol\":14398:14430  Approval(owner, spender, amount) */\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      swap2\n        /* \"#utility.yul\":15354:15372   */\n      add\n        /* \"contracts/MyToken.sol\":14398:14430  Approval(owner, spender, amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/MyToken.sol\":14076:14437  function _approve(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/MyToken.sol\":14443:16288  function _transfer(... */\n    tag_356:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/MyToken.sol\":14560:14578  from != address(0) */\n      dup4\n      and\n        /* \"contracts/MyToken.sol\":14552:14620  require(from != address(0), 'BEP20: transfer from the zero address') */\n      tag_566\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5894:5896   */\n      0x20\n        /* \"contracts/MyToken.sol\":14552:14620  require(from != address(0), 'BEP20: transfer from the zero address') */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5876:5897   */\n      mstore\n        /* \"#utility.yul\":5933:5935   */\n      0x25\n        /* \"#utility.yul\":5913:5931   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5906:5936   */\n      mstore\n        /* \"#utility.yul\":5972:6006   */\n      0x42455032303a207472616e736665722066726f6d20746865207a65726f206164\n        /* \"#utility.yul\":5952:5970   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5945:6007   */\n      mstore\n      shl(0xd8, 0x6472657373)\n        /* \"#utility.yul\":6023:6041   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":6016:6051   */\n      mstore\n        /* \"#utility.yul\":6068:6087   */\n      0x84\n      add\n        /* \"contracts/MyToken.sol\":14552:14620  require(from != address(0), 'BEP20: transfer from the zero address') */\n      tag_338\n        /* \"#utility.yul\":5692:6093   */\n      jump\n        /* \"contracts/MyToken.sol\":14552:14620  require(from != address(0), 'BEP20: transfer from the zero address') */\n    tag_566:\n        /* \"contracts/MyToken.sol\":14647:14648  0 */\n      0x00\n        /* \"contracts/MyToken.sol\":14638:14644  amount */\n      dup2\n        /* \"contracts/MyToken.sol\":14638:14648  amount > 0 */\n      gt\n        /* \"contracts/MyToken.sol\":14630:14694  require(amount > 0, 'Transfer amount must be greater than zero') */\n      tag_569\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":12582:12584   */\n      0x20\n        /* \"contracts/MyToken.sol\":14630:14694  require(amount > 0, 'Transfer amount must be greater than zero') */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":12564:12585   */\n      mstore\n        /* \"#utility.yul\":12621:12623   */\n      0x29\n        /* \"#utility.yul\":12601:12619   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":12594:12624   */\n      mstore\n        /* \"#utility.yul\":12660:12694   */\n      0x5472616e7366657220616d6f756e74206d757374206265206772656174657220\n        /* \"#utility.yul\":12640:12658   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":12633:12695   */\n      mstore\n      shl(0xb8, 0x7468616e207a65726f)\n        /* \"#utility.yul\":12711:12729   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":12704:12743   */\n      mstore\n        /* \"#utility.yul\":12760:12779   */\n      0x84\n      add\n        /* \"contracts/MyToken.sol\":14630:14694  require(amount > 0, 'Transfer amount must be greater than zero') */\n      tag_338\n        /* \"#utility.yul\":12380:12785   */\n      jump\n        /* \"contracts/MyToken.sol\":14630:14694  require(amount > 0, 'Transfer amount must be greater than zero') */\n    tag_569:\n        /* \"contracts/MyToken.sol\":14705:14743  _beforeTokenTransfer(from, to, amount) */\n      tag_572\n        /* \"contracts/MyToken.sol\":14726:14730  from */\n      dup4\n        /* \"contracts/MyToken.sol\":14732:14734  to */\n      dup4\n        /* \"contracts/MyToken.sol\":14736:14742  amount */\n      dup4\n        /* \"contracts/MyToken.sol\":14705:14725  _beforeTokenTransfer */\n      tag_573\n        /* \"contracts/MyToken.sol\":14705:14743  _beforeTokenTransfer(from, to, amount) */\n      jump\t// in\n    tag_572:\n        /* \"contracts/MyToken.sol\":14758:14772  antiBotEnabled */\n      and(0xff, sload(0x1d))\n        /* \"contracts/MyToken.sol\":14758:14797  antiBotEnabled && from == pancakeV2Pair */\n      dup1\n      iszero\n      tag_574\n      jumpi\n      pop\n        /* \"contracts/MyToken.sol\":14784:14797  pancakeV2Pair */\n      sload(0x1f)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/MyToken.sol\":14776:14797  from == pancakeV2Pair */\n      dup5\n      dup2\n      and\n        /* \"contracts/MyToken.sol\":14784:14797  pancakeV2Pair */\n      swap2\n      and\n        /* \"contracts/MyToken.sol\":14776:14797  from == pancakeV2Pair */\n      eq\n        /* \"contracts/MyToken.sol\":14758:14797  antiBotEnabled && from == pancakeV2Pair */\n    tag_574:\n        /* \"contracts/MyToken.sol\":14754:14885  if (antiBotEnabled && from == pancakeV2Pair) {... */\n      iszero\n      tag_576\n      jumpi\n        /* \"contracts/MyToken.sol\":14821:14845  allowedBuyAmount[amount] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"contracts/MyToken.sol\":14821:14837  allowedBuyAmount */\n      0x1c\n        /* \"contracts/MyToken.sol\":14821:14845  allowedBuyAmount[amount] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"contracts/MyToken.sol\":14813:14874  require(allowedBuyAmount[amount], 'Only allowed buy amounts') */\n      tag_576\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":10280:10282   */\n      0x20\n        /* \"contracts/MyToken.sol\":14813:14874  require(allowedBuyAmount[amount], 'Only allowed buy amounts') */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":10262:10283   */\n      mstore\n        /* \"#utility.yul\":10319:10321   */\n      0x18\n        /* \"#utility.yul\":10299:10317   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":10292:10322   */\n      mstore\n        /* \"#utility.yul\":10358:10384   */\n      0x4f6e6c7920616c6c6f7765642062757920616d6f756e74730000000000000000\n        /* \"#utility.yul\":10338:10356   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":10331:10385   */\n      mstore\n        /* \"#utility.yul\":10402:10420   */\n      0x64\n      add\n        /* \"contracts/MyToken.sol\":14813:14874  require(allowedBuyAmount[amount], 'Only allowed buy amounts') */\n      tag_338\n        /* \"#utility.yul\":10078:10426   */\n      jump\n        /* \"contracts/MyToken.sol\":14813:14874  require(allowedBuyAmount[amount], 'Only allowed buy amounts') */\n    tag_576:\n        /* \"contracts/MyToken.sol\":15173:15201  uint256 contractTokenBalance */\n      0x00\n        /* \"contracts/MyToken.sol\":15204:15228  balanceOf(address(this)) */\n      tag_579\n        /* \"contracts/MyToken.sol\":15222:15226  this */\n      address\n        /* \"contracts/MyToken.sol\":15204:15213  balanceOf */\n      tag_219\n        /* \"contracts/MyToken.sol\":15204:15228  balanceOf(address(this)) */\n      jump\t// in\n    tag_579:\n        /* \"contracts/MyToken.sol\":15289:15318  numTokensSellToAddToLiquidity */\n      sload(0x20)\n        /* \"contracts/MyToken.sol\":15173:15228  uint256 contractTokenBalance = balanceOf(address(this)) */\n      swap1\n      swap2\n      pop\n        /* \"contracts/MyToken.sol\":15265:15318  contractTokenBalance >= numTokensSellToAddToLiquidity */\n      dup2\n      lt\n      dup1\n      iszero\n      swap1\n      dup2\n      swap1\n        /* \"contracts/MyToken.sol\":15345:15397  overMinTokenBalance &&... */\n      tag_580\n      jumpi\n      pop\n        /* \"contracts/MyToken.sol\":15381:15397  inSwapAndLiquify */\n      sload(0x1f)\n      shl(0xa0, 0x01)\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/MyToken.sol\":15380:15397  !inSwapAndLiquify */\n      iszero\n        /* \"contracts/MyToken.sol\":15345:15397  overMinTokenBalance &&... */\n    tag_580:\n        /* \"contracts/MyToken.sol\":15345:15434  overMinTokenBalance &&... */\n      dup1\n      iszero\n      tag_581\n      jumpi\n      pop\n        /* \"contracts/MyToken.sol\":15421:15434  pancakeV2Pair */\n      sload(0x1f)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/MyToken.sol\":15413:15434  from != pancakeV2Pair */\n      dup7\n      dup2\n      and\n        /* \"contracts/MyToken.sol\":15421:15434  pancakeV2Pair */\n      swap2\n      and\n        /* \"contracts/MyToken.sol\":15413:15434  from != pancakeV2Pair */\n      eq\n      iszero\n        /* \"contracts/MyToken.sol\":15345:15434  overMinTokenBalance &&... */\n    tag_581:\n        /* \"contracts/MyToken.sol\":15345:15471  overMinTokenBalance &&... */\n      dup1\n      iszero\n      tag_582\n      jumpi\n      pop\n        /* \"contracts/MyToken.sol\":15450:15471  swapAndLiquifyEnabled */\n      sload(0x1f)\n      shl(0xa8, 0x01)\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/MyToken.sol\":15345:15471  overMinTokenBalance &&... */\n    tag_582:\n        /* \"contracts/MyToken.sol\":15328:15637  if (... */\n      iszero\n      tag_584\n      jumpi\n        /* \"contracts/MyToken.sol\":15519:15548  numTokensSellToAddToLiquidity */\n      sload(0x20)\n        /* \"contracts/MyToken.sol\":15496:15548  contractTokenBalance = numTokensSellToAddToLiquidity */\n      swap2\n      pop\n        /* \"contracts/MyToken.sol\":15590:15626  swapAndLiquify(contractTokenBalance) */\n      tag_584\n        /* \"contracts/MyToken.sol\":15605:15625  contractTokenBalance */\n      dup3\n        /* \"contracts/MyToken.sol\":15590:15604  swapAndLiquify */\n      tag_585\n        /* \"contracts/MyToken.sol\":15590:15626  swapAndLiquify(contractTokenBalance) */\n      jump\t// in\n    tag_584:\n        /* \"contracts/MyToken.sol\":15712:15744  _tokenTransfer(from, to, amount) */\n      tag_586\n        /* \"contracts/MyToken.sol\":15727:15731  from */\n      dup6\n        /* \"contracts/MyToken.sol\":15733:15735  to */\n      dup6\n        /* \"contracts/MyToken.sol\":15737:15743  amount */\n      dup6\n        /* \"contracts/MyToken.sol\":15712:15726  _tokenTransfer */\n      tag_587\n        /* \"contracts/MyToken.sol\":15712:15744  _tokenTransfer(from, to, amount) */\n      jump\t// in\n    tag_586:\n        /* \"contracts/MyToken.sol\":15759:15775  antiWhaleEnabled */\n      and(0xff, sload(0x1b))\n        /* \"contracts/MyToken.sol\":15755:16282  if (antiWhaleEnabled) {... */\n      iszero\n      tag_588\n      jumpi\n        /* \"contracts/MyToken.sol\":15791:15809  uint256 maxAllowed */\n      0x00\n        /* \"contracts/MyToken.sol\":1937:1941  1000 */\n      0x03e8\n        /* \"contracts/MyToken.sol\":15823:15842  _maxHoldingPercents */\n      sload(0x1a)\n        /* \"contracts/MyToken.sol\":15813:15820  _tTotal */\n      sload(0x07)\n        /* \"contracts/MyToken.sol\":15813:15842  _tTotal * _maxHoldingPercents */\n      tag_589\n      swap2\n      swap1\n      tag_590\n      jump\t// in\n    tag_589:\n        /* \"contracts/MyToken.sol\":15812:15890  (_tTotal * _maxHoldingPercents) /... */\n      tag_591\n      swap2\n      swap1\n      tag_592\n      jump\t// in\n    tag_591:\n        /* \"contracts/MyToken.sol\":15914:15927  pancakeV2Pair */\n      sload(0x1f)\n        /* \"contracts/MyToken.sol\":15791:15890  uint256 maxAllowed = (_tTotal * _maxHoldingPercents) /... */\n      swap1\n      swap2\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/MyToken.sol\":15908:15927  to == pancakeV2Pair */\n      dup7\n      dup2\n      and\n        /* \"contracts/MyToken.sol\":15914:15927  pancakeV2Pair */\n      swap2\n      and\n        /* \"contracts/MyToken.sol\":15908:15927  to == pancakeV2Pair */\n      eq\n        /* \"contracts/MyToken.sol\":15904:16272  if (to == pancakeV2Pair) {... */\n      iszero\n      tag_593\n      jumpi\n        /* \"contracts/MyToken.sol\":15986:15996  maxAllowed */\n      dup1\n        /* \"contracts/MyToken.sol\":15976:15982  amount */\n      dup5\n        /* \"contracts/MyToken.sol\":15976:15996  amount <= maxAllowed */\n      gt\n      iszero\n        /* \"contracts/MyToken.sol\":15947:16084  require(... */\n      tag_594\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":13397:13399   */\n      0x20\n        /* \"contracts/MyToken.sol\":15947:16084  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":13379:13400   */\n      mstore\n        /* \"#utility.yul\":13436:13438   */\n      0x2e\n        /* \"#utility.yul\":13416:13434   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":13409:13439   */\n      mstore\n        /* \"#utility.yul\":13475:13509   */\n      0x5472616e73616374656420616d6f756e742065786365656420746865206d6178\n        /* \"#utility.yul\":13455:13473   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":13448:13510   */\n      mstore\n      shl(0x90, 0x20616c6c6f7765642076616c7565)\n        /* \"#utility.yul\":13526:13544   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":13519:13563   */\n      mstore\n        /* \"#utility.yul\":13580:13599   */\n      0x84\n      add\n        /* \"contracts/MyToken.sol\":15947:16084  require(... */\n      tag_338\n        /* \"#utility.yul\":13195:13605   */\n      jump\n        /* \"contracts/MyToken.sol\":15947:16084  require(... */\n    tag_594:\n        /* \"contracts/MyToken.sol\":15904:16272  if (to == pancakeV2Pair) {... */\n      jump(tag_599)\n    tag_593:\n        /* \"contracts/MyToken.sol\":16169:16179  maxAllowed */\n      dup1\n        /* \"contracts/MyToken.sol\":16152:16165  balanceOf(to) */\n      tag_598\n        /* \"contracts/MyToken.sol\":16162:16164  to */\n      dup7\n        /* \"contracts/MyToken.sol\":16152:16161  balanceOf */\n      tag_219\n        /* \"contracts/MyToken.sol\":16152:16165  balanceOf(to) */\n      jump\t// in\n    tag_598:\n        /* \"contracts/MyToken.sol\":16152:16179  balanceOf(to) <= maxAllowed */\n      gt\n      iszero\n        /* \"contracts/MyToken.sol\":16123:16257  require(... */\n      tag_599\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":12992:12994   */\n      0x20\n        /* \"contracts/MyToken.sol\":16123:16257  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":12974:12995   */\n      mstore\n        /* \"#utility.yul\":13031:13033   */\n      0x24\n        /* \"#utility.yul\":13011:13029   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":13004:13034   */\n      mstore\n        /* \"#utility.yul\":13070:13104   */\n      0x57616c6c65742062616c616e6365206578636565647320746865206d6178206c\n        /* \"#utility.yul\":13050:13068   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":13043:13105   */\n      mstore\n      shl(0xe2, 0x1a5b5a5d)\n        /* \"#utility.yul\":13121:13139   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":13114:13148   */\n      mstore\n        /* \"#utility.yul\":13165:13184   */\n      0x84\n      add\n        /* \"contracts/MyToken.sol\":16123:16257  require(... */\n      tag_338\n        /* \"#utility.yul\":12790:13190   */\n      jump\n        /* \"contracts/MyToken.sol\":16123:16257  require(... */\n    tag_599:\n        /* \"contracts/MyToken.sol\":15777:16282  {... */\n      pop\n        /* \"contracts/MyToken.sol\":15755:16282  if (antiWhaleEnabled) {... */\n    tag_588:\n        /* \"contracts/MyToken.sol\":14542:16288  {... */\n      pop\n      pop\n        /* \"contracts/MyToken.sol\":14443:16288  function _transfer(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":4959:5190  function sub(... */\n    tag_361:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":5075:5082  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":5134:5146  errorMessage */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":5126:5132  b <= a */\n      dup5\n      dup5\n      gt\n      iszero\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":5118:5147  require(b <= a, errorMessage) */\n      tag_603\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_338\n      swap2\n      swap1\n      tag_87\n      jump\t// in\n    tag_603:\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":5168:5173  a - b */\n      swap1\n      sub\n      swap1\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":4959:5190  function sub(... */\n      jump\t// out\n        /* \"contracts/MyToken.sol\":11584:11745  function _getRate() private view returns (uint256) {... */\n    tag_367:\n        /* \"contracts/MyToken.sol\":11626:11633  uint256 */\n      0x00\n        /* \"contracts/MyToken.sol\":11646:11661  uint256 rSupply */\n      dup1\n        /* \"contracts/MyToken.sol\":11663:11678  uint256 tSupply */\n      0x00\n        /* \"contracts/MyToken.sol\":11682:11701  _getCurrentSupply() */\n      tag_606\n        /* \"contracts/MyToken.sol\":11682:11699  _getCurrentSupply */\n      tag_607\n        /* \"contracts/MyToken.sol\":11682:11701  _getCurrentSupply() */\n      jump\t// in\n    tag_606:\n        /* \"contracts/MyToken.sol\":11645:11701  (uint256 rSupply, uint256 tSupply) = _getCurrentSupply() */\n      swap1\n      swap3\n      pop\n      swap1\n      pop\n        /* \"contracts/MyToken.sol\":11718:11738  rSupply.div(tSupply) */\n      tag_608\n        /* \"contracts/MyToken.sol\":11645:11701  (uint256 rSupply, uint256 tSupply) = _getCurrentSupply() */\n      dup3\n      dup3\n        /* \"contracts/MyToken.sol\":11718:11729  rSupply.div */\n      tag_369\n        /* \"contracts/MyToken.sol\":11718:11738  rSupply.div(tSupply) */\n      jump\t// in\n    tag_608:\n        /* \"contracts/MyToken.sol\":11711:11738  return rSupply.div(tSupply) */\n      swap3\n      pop\n      pop\n      pop\n        /* \"contracts/MyToken.sol\":11584:11745  function _getRate() private view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3850:3946  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_369:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3908:3915  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3934:3939  a / b */\n      tag_368\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3938:3939  b */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3934:3935  a */\n      dup5\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3934:3939  a / b */\n      tag_592\n      jump\t// in\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2755:2851  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_404:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2813:2820  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2839:2844  a + b */\n      tag_368\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2843:2844  b */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2839:2840  a */\n      dup5\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2839:2844  a + b */\n      tag_613\n      jump\t// in\n        /* \"contracts/MyToken.sol\":10027:10632  function _getValues(uint256 tAmount)... */\n    tag_411:\n        /* \"contracts/MyToken.sol\":10123:10130  uint256 */\n      0x00\n        /* \"contracts/MyToken.sol\":10144:10151  uint256 */\n      dup1\n        /* \"contracts/MyToken.sol\":10165:10172  uint256 */\n      0x00\n        /* \"contracts/MyToken.sol\":10186:10193  uint256 */\n      dup1\n        /* \"contracts/MyToken.sol\":10207:10214  uint256 */\n      0x00\n        /* \"contracts/MyToken.sol\":10228:10235  uint256 */\n      dup1\n        /* \"contracts/MyToken.sol\":10261:10284  uint256 tTransferAmount */\n      0x00\n        /* \"contracts/MyToken.sol\":10286:10298  uint256 tFee */\n      dup1\n        /* \"contracts/MyToken.sol\":10300:10318  uint256 tLiquidity */\n      0x00\n        /* \"contracts/MyToken.sol\":10322:10364  _getTValues(... */\n      tag_615\n        /* \"contracts/MyToken.sol\":10347:10354  tAmount */\n      dup11\n        /* \"contracts/MyToken.sol\":10322:10333  _getTValues */\n      tag_616\n        /* \"contracts/MyToken.sol\":10322:10364  _getTValues(... */\n      jump\t// in\n    tag_615:\n        /* \"contracts/MyToken.sol\":10260:10364  (uint256 tTransferAmount, uint256 tFee, uint256 tLiquidity) = _getTValues(... */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      pop\n        /* \"contracts/MyToken.sol\":10375:10390  uint256 rAmount */\n      0x00\n        /* \"contracts/MyToken.sol\":10392:10415  uint256 rTransferAmount */\n      dup1\n        /* \"contracts/MyToken.sol\":10417:10429  uint256 rFee */\n      0x00\n        /* \"contracts/MyToken.sol\":10433:10541  _getRValues(... */\n      tag_617\n        /* \"contracts/MyToken.sol\":10458:10465  tAmount */\n      dup14\n        /* \"contracts/MyToken.sol\":10479:10483  tFee */\n      dup7\n        /* \"contracts/MyToken.sol\":10497:10507  tLiquidity */\n      dup7\n        /* \"contracts/MyToken.sol\":10521:10531  _getRate() */\n      tag_618\n        /* \"contracts/MyToken.sol\":10521:10529  _getRate */\n      tag_367\n        /* \"contracts/MyToken.sol\":10521:10531  _getRate() */\n      jump\t// in\n    tag_618:\n        /* \"contracts/MyToken.sol\":10433:10444  _getRValues */\n      tag_619\n        /* \"contracts/MyToken.sol\":10433:10541  _getRValues(... */\n      jump\t// in\n    tag_617:\n        /* \"contracts/MyToken.sol\":10374:10541  (uint256 rAmount, uint256 rTransferAmount, uint256 rFee) = _getRValues(... */\n      swap2\n      swap16\n      swap1\n      swap15\n      pop\n      swap1\n      swap13\n      pop\n        /* \"contracts/MyToken.sol\":10591:10606  tTransferAmount */\n      swap6\n      swap11\n      pop\n        /* \"contracts/MyToken.sol\":10608:10612  tFee */\n      swap4\n      swap9\n      pop\n        /* \"contracts/MyToken.sol\":10614:10624  tLiquidity */\n      swap2\n      swap7\n      pop\n        /* \"contracts/MyToken.sol\":10027:10632  function _getValues(uint256 tAmount)... */\n      swap3\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3122:3218  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_413:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3180:3187  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3206:3211  a - b */\n      tag_368\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3210:3211  b */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3206:3207  a */\n      dup5\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3206:3211  a - b */\n      tag_386\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_470:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2506:2522  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2525:2531  _owner */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2541:2558  _owner = newOwner */\n      dup4\n      dup2\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup4\n      and\n      dup2\n      or\n      dup5\n      sstore\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2525:2531  _owner */\n      swap2\n      swap1\n      swap3\n      and\n      swap3\n      dup4\n      swap2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2506:2522  address oldOwner */\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2496:2620  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"contracts/MyToken.sol\":4018:4334  function _beforeTokenTransfer(... */\n    tag_573:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/MyToken.sol\":4143:4161  from == address(0) */\n      dup4\n      and\n      iszero\n      dup1\n        /* \"contracts/MyToken.sol\":4143:4181  from == address(0) || to == address(0) */\n      tag_624\n      jumpi\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/MyToken.sol\":4165:4181  to == address(0) */\n      dup3\n      and\n      iszero\n        /* \"contracts/MyToken.sol\":4143:4181  from == address(0) || to == address(0) */\n    tag_624:\n        /* \"contracts/MyToken.sol\":4139:4190  if (from == address(0) || to == address(0)) return; */\n      iszero\n      tag_625\n      jumpi\n        /* \"contracts/MyToken.sol\":4018:4334  function _beforeTokenTransfer(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/MyToken.sol\":4139:4190  if (from == address(0) || to == address(0)) return; */\n    tag_625:\n        /* \"contracts/MyToken.sol\":4204:4220  antisnipeDisable */\n      sload(0x22)\n      shl(0xa0, 0x01)\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/MyToken.sol\":4203:4220  !antisnipeDisable */\n      iszero\n        /* \"contracts/MyToken.sol\":4203:4256  !antisnipeDisable && address(antisnipe) != address(0) */\n      dup1\n      iszero\n      tag_626\n      jumpi\n      pop\n        /* \"contracts/MyToken.sol\":4232:4241  antisnipe */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x22))\n        /* \"contracts/MyToken.sol\":4224:4256  address(antisnipe) != address(0) */\n      iszero\n      iszero\n        /* \"contracts/MyToken.sol\":4203:4256  !antisnipeDisable && address(antisnipe) != address(0) */\n    tag_626:\n        /* \"contracts/MyToken.sol\":4199:4327  if (!antisnipeDisable && address(antisnipe) != address(0))... */\n      iszero\n      tag_627\n      jumpi\n        /* \"contracts/MyToken.sol\":4270:4279  antisnipe */\n      sload(0x22)\n        /* \"contracts/MyToken.sol\":4270:4327  antisnipe.assureCanTransfer(msg.sender, from, to, amount) */\n      mload(0x40)\n      shl(0xe0, 0x5d37a8dd)\n      dup2\n      mstore\n        /* \"contracts/MyToken.sol\":4298:4308  msg.sender */\n      caller\n        /* \"contracts/MyToken.sol\":4270:4327  antisnipe.assureCanTransfer(msg.sender, from, to, amount) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3272:3306   */\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":3342:3357   */\n      dup6\n      dup2\n      and\n        /* \"#utility.yul\":3322:3340   */\n      0x24\n      dup4\n      add\n        /* \"#utility.yul\":3315:3358   */\n      mstore\n        /* \"#utility.yul\":3394:3409   */\n      dup5\n      dup2\n      and\n        /* \"#utility.yul\":3374:3392   */\n      0x44\n      dup4\n      add\n        /* \"#utility.yul\":3367:3410   */\n      mstore\n        /* \"#utility.yul\":3426:3444   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":3419:3453   */\n      dup5\n      swap1\n      mstore\n        /* \"contracts/MyToken.sol\":4270:4279  antisnipe */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"contracts/MyToken.sol\":4270:4297  antisnipe.assureCanTransfer */\n      0x5d37a8dd\n      swap1\n        /* \"#utility.yul\":3206:3225   */\n      0x84\n      add\n        /* \"contracts/MyToken.sol\":4270:4327  antisnipe.assureCanTransfer(msg.sender, from, to, amount) */\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_630\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_630:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_632\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_632:\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/MyToken.sol\":4199:4327  if (!antisnipeDisable && address(antisnipe) != address(0))... */\n    tag_627:\n        /* \"contracts/MyToken.sol\":4018:4334  function _beforeTokenTransfer(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/MyToken.sol\":16294:17258  function swapAndLiquify(uint256 contractTokenBalance) private lockTheSwap {... */\n    tag_585:\n        /* \"contracts/MyToken.sol\":2845:2861  inSwapAndLiquify */\n      0x1f\n        /* \"contracts/MyToken.sol\":2845:2868  inSwapAndLiquify = true */\n      dup1\n      sload\n      not(shl(0xa0, 0xff))\n      and\n      shl(0xa0, 0x01)\n      or\n      swap1\n      sstore\n      0x00\n        /* \"contracts/MyToken.sol\":16443:16470  contractTokenBalance.div(2) */\n      tag_635\n        /* \"contracts/MyToken.sol\":16443:16463  contractTokenBalance */\n      dup3\n        /* \"contracts/MyToken.sol\":16468:16469  2 */\n      0x02\n        /* \"contracts/MyToken.sol\":16443:16467  contractTokenBalance.div */\n      tag_369\n        /* \"contracts/MyToken.sol\":16443:16470  contractTokenBalance.div(2) */\n      jump\t// in\n    tag_635:\n        /* \"contracts/MyToken.sol\":16428:16470  uint256 half = contractTokenBalance.div(2) */\n      swap1\n      pop\n        /* \"contracts/MyToken.sol\":16480:16497  uint256 otherHalf */\n      0x00\n        /* \"contracts/MyToken.sol\":16500:16530  contractTokenBalance.sub(half) */\n      tag_636\n        /* \"contracts/MyToken.sol\":16500:16520  contractTokenBalance */\n      dup4\n        /* \"contracts/MyToken.sol\":16428:16470  uint256 half = contractTokenBalance.div(2) */\n      dup4\n        /* \"contracts/MyToken.sol\":16500:16524  contractTokenBalance.sub */\n      tag_413\n        /* \"contracts/MyToken.sol\":16500:16530  contractTokenBalance.sub(half) */\n      jump\t// in\n    tag_636:\n        /* \"contracts/MyToken.sol\":16480:16530  uint256 otherHalf = contractTokenBalance.sub(half) */\n      swap1\n      pop\n        /* \"contracts/MyToken.sol\":16827:16848  address(this).balance */\n      selfbalance\n        /* \"contracts/MyToken.sol\":16890:16912  swapTokensForEth(half) */\n      tag_637\n        /* \"contracts/MyToken.sol\":16907:16911  half */\n      dup4\n        /* \"contracts/MyToken.sol\":16890:16906  swapTokensForEth */\n      tag_638\n        /* \"contracts/MyToken.sol\":16890:16912  swapTokensForEth(half) */\n      jump\t// in\n    tag_637:\n        /* \"contracts/MyToken.sol\":17048:17066  uint256 newBalance */\n      0x00\n        /* \"contracts/MyToken.sol\":17069:17110  address(this).balance.sub(initialBalance) */\n      tag_639\n        /* \"contracts/MyToken.sol\":17069:17090  address(this).balance */\n      selfbalance\n        /* \"contracts/MyToken.sol\":17095:17109  initialBalance */\n      dup4\n        /* \"contracts/MyToken.sol\":17069:17094  address(this).balance.sub */\n      tag_413\n        /* \"contracts/MyToken.sol\":17069:17110  address(this).balance.sub(initialBalance) */\n      jump\t// in\n    tag_639:\n        /* \"contracts/MyToken.sol\":17048:17110  uint256 newBalance = address(this).balance.sub(initialBalance) */\n      swap1\n      pop\n        /* \"contracts/MyToken.sol\":17157:17192  addLiquidity(otherHalf, newBalance) */\n      tag_640\n        /* \"contracts/MyToken.sol\":17170:17179  otherHalf */\n      dup4\n        /* \"contracts/MyToken.sol\":17181:17191  newBalance */\n      dup3\n        /* \"contracts/MyToken.sol\":17157:17169  addLiquidity */\n      tag_641\n        /* \"contracts/MyToken.sol\":17157:17192  addLiquidity(otherHalf, newBalance) */\n      jump\t// in\n    tag_640:\n        /* \"contracts/MyToken.sol\":17208:17251  SwapAndLiquify(half, newBalance, otherHalf) */\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":16604:16629   */\n      dup6\n      dup2\n      mstore\n        /* \"#utility.yul\":16660:16662   */\n      0x20\n        /* \"#utility.yul\":16645:16663   */\n      dup2\n      add\n        /* \"#utility.yul\":16638:16672   */\n      dup4\n      swap1\n      mstore\n        /* \"#utility.yul\":16688:16706   */\n      swap1\n      dup2\n      add\n        /* \"#utility.yul\":16681:16715   */\n      dup5\n      swap1\n      mstore\n        /* \"contracts/MyToken.sol\":17208:17251  SwapAndLiquify(half, newBalance, otherHalf) */\n      0x17bbfb9a6069321b6ded73bd96327c9e6b7212a5cd51ff219cd61370acafb561\n      swap1\n        /* \"#utility.yul\":16592:16594   */\n      0x60\n        /* \"#utility.yul\":16577:16595   */\n      add\n        /* \"contracts/MyToken.sol\":17208:17251  SwapAndLiquify(half, newBalance, otherHalf) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n      pop\n      pop\n        /* \"contracts/MyToken.sol\":2889:2905  inSwapAndLiquify */\n      0x1f\n        /* \"contracts/MyToken.sol\":2889:2913  inSwapAndLiquify = false */\n      dup1\n      sload\n      not(shl(0xa0, 0xff))\n      and\n      swap1\n      sstore\n      pop\n      pop\n      pop\n        /* \"contracts/MyToken.sol\":16294:17258  function swapAndLiquify(uint256 contractTokenBalance) private lockTheSwap {... */\n      jump\t// out\n        /* \"contracts/MyToken.sol\":18421:20430  function _tokenTransfer(... */\n    tag_587:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/MyToken.sol\":18548:18574  _isExcludedFromFee[sender] */\n      dup4\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/MyToken.sol\":18548:18566  _isExcludedFromFee */\n      0x04\n        /* \"contracts/MyToken.sol\":18548:18574  _isExcludedFromFee[sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      dup1\n        /* \"contracts/MyToken.sol\":18548:18607  _isExcludedFromFee[sender] || _isExcludedFromFee[recipient] */\n      tag_645\n      jumpi\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/MyToken.sol\":18578:18607  _isExcludedFromFee[recipient] */\n      dup3\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/MyToken.sol\":18578:18596  _isExcludedFromFee */\n      0x04\n        /* \"contracts/MyToken.sol\":18578:18607  _isExcludedFromFee[recipient] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"contracts/MyToken.sol\":18548:18607  _isExcludedFromFee[sender] || _isExcludedFromFee[recipient] */\n    tag_645:\n        /* \"contracts/MyToken.sol\":18544:18728  if (_isExcludedFromFee[sender] || _isExcludedFromFee[recipient]) {... */\n      iszero\n      tag_646\n      jumpi\n        /* \"contracts/MyToken.sol\":18623:18637  removeAllFee() */\n      tag_647\n        /* \"contracts/MyToken.sol\":18623:18635  removeAllFee */\n      tag_648\n        /* \"contracts/MyToken.sol\":18623:18637  removeAllFee() */\n      jump\t// in\n    tag_647:\n        /* \"contracts/MyToken.sol\":18544:18728  if (_isExcludedFromFee[sender] || _isExcludedFromFee[recipient]) {... */\n      jump(tag_651)\n    tag_646:\n        /* \"contracts/MyToken.sol\":18671:18684  pancakeV2Pair */\n      sload(0x1f)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/MyToken.sol\":18658:18684  recipient == pancakeV2Pair */\n      dup4\n      dup2\n      and\n        /* \"contracts/MyToken.sol\":18671:18684  pancakeV2Pair */\n      swap2\n      and\n        /* \"contracts/MyToken.sol\":18658:18684  recipient == pancakeV2Pair */\n      eq\n        /* \"contracts/MyToken.sol\":18654:18728  if (recipient == pancakeV2Pair) {... */\n      iszero\n      tag_651\n      jumpi\n        /* \"contracts/MyToken.sol\":18700:18717  activateSellFee() */\n      tag_651\n        /* \"contracts/MyToken.sol\":13017:13024  _taxFee */\n      0x0d\n      dup1\n      sload\n        /* \"contracts/MyToken.sol\":12999:13014  _previousTaxFee */\n      0x0e\n        /* \"contracts/MyToken.sol\":12999:13024  _previousTaxFee = _taxFee */\n      sstore\n        /* \"contracts/MyToken.sol\":13058:13071  _liquidityFee */\n      0x0f\n      dup1\n      sload\n        /* \"contracts/MyToken.sol\":13034:13055  _previousLiquidityFee */\n      0x10\n        /* \"contracts/MyToken.sol\":13034:13071  _previousLiquidityFee = _liquidityFee */\n      sstore\n        /* \"contracts/MyToken.sol\":13100:13108  _burnFee */\n      0x11\n      dup1\n      sload\n        /* \"contracts/MyToken.sol\":13081:13097  _previousBurnFee */\n      0x12\n        /* \"contracts/MyToken.sol\":13081:13108  _previousBurnFee = _burnFee */\n      sstore\n        /* \"contracts/MyToken.sol\":13142:13155  _marketingFee */\n      0x13\n      dup1\n      sload\n        /* \"contracts/MyToken.sol\":13118:13139  _previousMarketingFee */\n      0x15\n        /* \"contracts/MyToken.sol\":13118:13155  _previousMarketingFee = _marketingFee */\n      sstore\n        /* \"contracts/MyToken.sol\":13176:13187  _sellTaxFee */\n      sload(0x16)\n        /* \"contracts/MyToken.sol\":13166:13187  _taxFee = _sellTaxFee */\n      swap1\n      swap4\n      sstore\n        /* \"contracts/MyToken.sol\":13213:13230  _sellLiquidityFee */\n      sload(0x17)\n        /* \"contracts/MyToken.sol\":13197:13230  _liquidityFee = _sellLiquidityFee */\n      swap1\n      swap2\n      sstore\n        /* \"contracts/MyToken.sol\":13256:13273  _sellMarketingFee */\n      sload(0x18)\n        /* \"contracts/MyToken.sol\":13240:13273  _marketingFee = _sellMarketingFee */\n      swap1\n      swap2\n      sstore\n        /* \"contracts/MyToken.sol\":13294:13306  _sellBurnFee */\n      sload(0x19)\n        /* \"contracts/MyToken.sol\":13283:13306  _burnFee = _sellBurnFee */\n      swap1\n      sstore\n        /* \"contracts/MyToken.sol\":12954:13313  function activateSellFee() private {... */\n      jump\n        /* \"contracts/MyToken.sol\":18700:18717  activateSellFee() */\n    tag_651:\n        /* \"contracts/MyToken.sol\":18791:18806  uint256 burnAmt */\n      0x00\n        /* \"contracts/MyToken.sol\":18809:18838  amount.mul(_burnFee).div(100) */\n      tag_653\n        /* \"contracts/MyToken.sol\":18834:18837  100 */\n      0x64\n        /* \"contracts/MyToken.sol\":18809:18829  amount.mul(_burnFee) */\n      tag_654\n        /* \"contracts/MyToken.sol\":18820:18828  _burnFee */\n      sload(0x11)\n        /* \"contracts/MyToken.sol\":18809:18815  amount */\n      dup6\n        /* \"contracts/MyToken.sol\":18809:18819  amount.mul */\n      tag_655\n      swap1\n        /* \"contracts/MyToken.sol\":18809:18829  amount.mul(_burnFee) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_654:\n        /* \"contracts/MyToken.sol\":18809:18833  amount.mul(_burnFee).div */\n      swap1\n      tag_369\n        /* \"contracts/MyToken.sol\":18809:18838  amount.mul(_burnFee).div(100) */\n      jump\t// in\n    tag_653:\n        /* \"contracts/MyToken.sol\":18791:18838  uint256 burnAmt = amount.mul(_burnFee).div(100) */\n      swap1\n      pop\n        /* \"contracts/MyToken.sol\":18848:18868  uint256 marketingAmt */\n      0x00\n        /* \"contracts/MyToken.sol\":18871:18905  amount.mul(_marketingFee).div(100) */\n      tag_656\n        /* \"contracts/MyToken.sol\":18901:18904  100 */\n      0x64\n        /* \"contracts/MyToken.sol\":18871:18896  amount.mul(_marketingFee) */\n      tag_654\n        /* \"contracts/MyToken.sol\":18882:18895  _marketingFee */\n      sload(0x13)\n        /* \"contracts/MyToken.sol\":18871:18877  amount */\n      dup7\n        /* \"contracts/MyToken.sol\":18871:18881  amount.mul */\n      tag_655\n      swap1\n        /* \"contracts/MyToken.sol\":18871:18896  amount.mul(_marketingFee) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n        /* \"contracts/MyToken.sol\":18871:18905  amount.mul(_marketingFee).div(100) */\n    tag_656:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/MyToken.sol\":18920:18939  _isExcluded[sender] */\n      dup7\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/MyToken.sol\":18920:18931  _isExcluded */\n      0x05\n        /* \"contracts/MyToken.sol\":18920:18939  _isExcluded[sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"contracts/MyToken.sol\":18848:18905  uint256 marketingAmt = amount.mul(_marketingFee).div(100) */\n      swap1\n      swap2\n      pop\n        /* \"contracts/MyToken.sol\":18920:18939  _isExcluded[sender] */\n      0xff\n      and\n        /* \"contracts/MyToken.sol\":18920:18966  _isExcluded[sender] && !_isExcluded[recipient] */\n      dup1\n      iszero\n      tag_658\n      jumpi\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/MyToken.sol\":18944:18966  _isExcluded[recipient] */\n      dup5\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/MyToken.sol\":18944:18955  _isExcluded */\n      0x05\n        /* \"contracts/MyToken.sol\":18944:18966  _isExcluded[recipient] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"contracts/MyToken.sol\":18943:18966  !_isExcluded[recipient] */\n      iszero\n        /* \"contracts/MyToken.sol\":18920:18966  _isExcluded[sender] && !_isExcluded[recipient] */\n    tag_658:\n        /* \"contracts/MyToken.sol\":18916:19854  if (_isExcluded[sender] && !_isExcluded[recipient]) {... */\n      iszero\n      tag_659\n      jumpi\n        /* \"contracts/MyToken.sol\":18982:19125  _transferFromExcluded(... */\n      tag_660\n        /* \"contracts/MyToken.sol\":19021:19027  sender */\n      dup6\n        /* \"contracts/MyToken.sol\":19045:19054  recipient */\n      dup6\n        /* \"contracts/MyToken.sol\":19073:19110  amount.sub(burnAmt).sub(marketingAmt) */\n      tag_661\n        /* \"contracts/MyToken.sol\":19097:19109  marketingAmt */\n      dup5\n        /* \"contracts/MyToken.sol\":19073:19092  amount.sub(burnAmt) */\n      tag_662\n        /* \"contracts/MyToken.sol\":19073:19079  amount */\n      dup9\n        /* \"contracts/MyToken.sol\":19084:19091  burnAmt */\n      dup9\n        /* \"contracts/MyToken.sol\":19073:19083  amount.sub */\n      tag_413\n        /* \"contracts/MyToken.sol\":19073:19092  amount.sub(burnAmt) */\n      jump\t// in\n    tag_662:\n        /* \"contracts/MyToken.sol\":19073:19096  amount.sub(burnAmt).sub */\n      swap1\n      tag_413\n        /* \"contracts/MyToken.sol\":19073:19110  amount.sub(burnAmt).sub(marketingAmt) */\n      jump\t// in\n    tag_661:\n        /* \"contracts/MyToken.sol\":18982:19003  _transferFromExcluded */\n      tag_663\n        /* \"contracts/MyToken.sol\":18982:19125  _transferFromExcluded(... */\n      jump\t// in\n    tag_660:\n        /* \"contracts/MyToken.sol\":18916:19854  if (_isExcluded[sender] && !_isExcluded[recipient]) {... */\n      jump(tag_686)\n    tag_659:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/MyToken.sol\":19147:19166  _isExcluded[sender] */\n      dup6\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/MyToken.sol\":19147:19158  _isExcluded */\n      0x05\n        /* \"contracts/MyToken.sol\":19147:19166  _isExcluded[sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"contracts/MyToken.sol\":19146:19166  !_isExcluded[sender] */\n      iszero\n        /* \"contracts/MyToken.sol\":19146:19192  !_isExcluded[sender] && _isExcluded[recipient] */\n      dup1\n      iszero\n      tag_665\n      jumpi\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/MyToken.sol\":19170:19192  _isExcluded[recipient] */\n      dup5\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/MyToken.sol\":19170:19181  _isExcluded */\n      0x05\n        /* \"contracts/MyToken.sol\":19170:19192  _isExcluded[recipient] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"contracts/MyToken.sol\":19146:19192  !_isExcluded[sender] && _isExcluded[recipient] */\n    tag_665:\n        /* \"contracts/MyToken.sol\":19142:19854  if (!_isExcluded[sender] && _isExcluded[recipient]) {... */\n      iszero\n      tag_666\n      jumpi\n        /* \"contracts/MyToken.sol\":19208:19349  _transferToExcluded(... */\n      tag_660\n        /* \"contracts/MyToken.sol\":19245:19251  sender */\n      dup6\n        /* \"contracts/MyToken.sol\":19269:19278  recipient */\n      dup6\n        /* \"contracts/MyToken.sol\":19297:19334  amount.sub(burnAmt).sub(marketingAmt) */\n      tag_668\n        /* \"contracts/MyToken.sol\":19321:19333  marketingAmt */\n      dup5\n        /* \"contracts/MyToken.sol\":19297:19316  amount.sub(burnAmt) */\n      tag_662\n        /* \"contracts/MyToken.sol\":19297:19303  amount */\n      dup9\n        /* \"contracts/MyToken.sol\":19308:19315  burnAmt */\n      dup9\n        /* \"contracts/MyToken.sol\":19297:19307  amount.sub */\n      tag_413\n        /* \"contracts/MyToken.sol\":19297:19316  amount.sub(burnAmt) */\n      jump\t// in\n        /* \"contracts/MyToken.sol\":19297:19334  amount.sub(burnAmt).sub(marketingAmt) */\n    tag_668:\n        /* \"contracts/MyToken.sol\":19208:19227  _transferToExcluded */\n      tag_670\n        /* \"contracts/MyToken.sol\":19208:19349  _transferToExcluded(... */\n      jump\t// in\n        /* \"contracts/MyToken.sol\":19142:19854  if (!_isExcluded[sender] && _isExcluded[recipient]) {... */\n    tag_666:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/MyToken.sol\":19371:19390  _isExcluded[sender] */\n      dup6\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/MyToken.sol\":19371:19382  _isExcluded */\n      0x05\n        /* \"contracts/MyToken.sol\":19371:19390  _isExcluded[sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"contracts/MyToken.sol\":19370:19390  !_isExcluded[sender] */\n      iszero\n        /* \"contracts/MyToken.sol\":19370:19417  !_isExcluded[sender] && !_isExcluded[recipient] */\n      dup1\n      iszero\n      tag_672\n      jumpi\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/MyToken.sol\":19395:19417  _isExcluded[recipient] */\n      dup5\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/MyToken.sol\":19395:19406  _isExcluded */\n      0x05\n        /* \"contracts/MyToken.sol\":19395:19417  _isExcluded[recipient] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"contracts/MyToken.sol\":19394:19417  !_isExcluded[recipient] */\n      iszero\n        /* \"contracts/MyToken.sol\":19370:19417  !_isExcluded[sender] && !_isExcluded[recipient] */\n    tag_672:\n        /* \"contracts/MyToken.sol\":19366:19854  if (!_isExcluded[sender] && !_isExcluded[recipient]) {... */\n      iszero\n      tag_673\n      jumpi\n        /* \"contracts/MyToken.sol\":19433:19510  _transferStandard(sender, recipient, (amount.sub(burnAmt).sub(marketingAmt))) */\n      tag_660\n        /* \"contracts/MyToken.sol\":19451:19457  sender */\n      dup6\n        /* \"contracts/MyToken.sol\":19459:19468  recipient */\n      dup6\n        /* \"contracts/MyToken.sol\":19471:19508  amount.sub(burnAmt).sub(marketingAmt) */\n      tag_675\n        /* \"contracts/MyToken.sol\":19495:19507  marketingAmt */\n      dup5\n        /* \"contracts/MyToken.sol\":19471:19490  amount.sub(burnAmt) */\n      tag_662\n        /* \"contracts/MyToken.sol\":19471:19477  amount */\n      dup9\n        /* \"contracts/MyToken.sol\":19482:19489  burnAmt */\n      dup9\n        /* \"contracts/MyToken.sol\":19471:19481  amount.sub */\n      tag_413\n        /* \"contracts/MyToken.sol\":19471:19490  amount.sub(burnAmt) */\n      jump\t// in\n        /* \"contracts/MyToken.sol\":19471:19508  amount.sub(burnAmt).sub(marketingAmt) */\n    tag_675:\n        /* \"contracts/MyToken.sol\":19433:19450  _transferStandard */\n      tag_677\n        /* \"contracts/MyToken.sol\":19433:19510  _transferStandard(sender, recipient, (amount.sub(burnAmt).sub(marketingAmt))) */\n      jump\t// in\n        /* \"contracts/MyToken.sol\":19366:19854  if (!_isExcluded[sender] && !_isExcluded[recipient]) {... */\n    tag_673:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/MyToken.sol\":19531:19550  _isExcluded[sender] */\n      dup6\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/MyToken.sol\":19531:19542  _isExcluded */\n      0x05\n        /* \"contracts/MyToken.sol\":19531:19550  _isExcluded[sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"contracts/MyToken.sol\":19531:19576  _isExcluded[sender] && _isExcluded[recipient] */\n      dup1\n      iszero\n      tag_679\n      jumpi\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/MyToken.sol\":19554:19576  _isExcluded[recipient] */\n      dup5\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/MyToken.sol\":19554:19565  _isExcluded */\n      0x05\n        /* \"contracts/MyToken.sol\":19554:19576  _isExcluded[recipient] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"contracts/MyToken.sol\":19531:19576  _isExcluded[sender] && _isExcluded[recipient] */\n    tag_679:\n        /* \"contracts/MyToken.sol\":19527:19854  if (_isExcluded[sender] && _isExcluded[recipient]) {... */\n      iszero\n      tag_680\n      jumpi\n        /* \"contracts/MyToken.sol\":19592:19735  _transferBothExcluded(... */\n      tag_660\n        /* \"contracts/MyToken.sol\":19631:19637  sender */\n      dup6\n        /* \"contracts/MyToken.sol\":19655:19664  recipient */\n      dup6\n        /* \"contracts/MyToken.sol\":19683:19720  amount.sub(burnAmt).sub(marketingAmt) */\n      tag_682\n        /* \"contracts/MyToken.sol\":19707:19719  marketingAmt */\n      dup5\n        /* \"contracts/MyToken.sol\":19683:19702  amount.sub(burnAmt) */\n      tag_662\n        /* \"contracts/MyToken.sol\":19683:19689  amount */\n      dup9\n        /* \"contracts/MyToken.sol\":19694:19701  burnAmt */\n      dup9\n        /* \"contracts/MyToken.sol\":19683:19693  amount.sub */\n      tag_413\n        /* \"contracts/MyToken.sol\":19683:19702  amount.sub(burnAmt) */\n      jump\t// in\n        /* \"contracts/MyToken.sol\":19683:19720  amount.sub(burnAmt).sub(marketingAmt) */\n    tag_682:\n        /* \"contracts/MyToken.sol\":19592:19613  _transferBothExcluded */\n      tag_684\n        /* \"contracts/MyToken.sol\":19592:19735  _transferBothExcluded(... */\n      jump\t// in\n        /* \"contracts/MyToken.sol\":19527:19854  if (_isExcluded[sender] && _isExcluded[recipient]) {... */\n    tag_680:\n        /* \"contracts/MyToken.sol\":19766:19843  _transferStandard(sender, recipient, (amount.sub(burnAmt).sub(marketingAmt))) */\n      tag_686\n        /* \"contracts/MyToken.sol\":19784:19790  sender */\n      dup6\n        /* \"contracts/MyToken.sol\":19792:19801  recipient */\n      dup6\n        /* \"contracts/MyToken.sol\":19804:19841  amount.sub(burnAmt).sub(marketingAmt) */\n      tag_675\n        /* \"contracts/MyToken.sol\":19828:19840  marketingAmt */\n      dup5\n        /* \"contracts/MyToken.sol\":19804:19823  amount.sub(burnAmt) */\n      tag_662\n        /* \"contracts/MyToken.sol\":19804:19810  amount */\n      dup9\n        /* \"contracts/MyToken.sol\":19815:19822  burnAmt */\n      dup9\n        /* \"contracts/MyToken.sol\":19804:19814  amount.sub */\n      tag_413\n        /* \"contracts/MyToken.sol\":19804:19823  amount.sub(burnAmt) */\n      jump\t// in\n        /* \"contracts/MyToken.sol\":19766:19843  _transferStandard(sender, recipient, (amount.sub(burnAmt).sub(marketingAmt))) */\n    tag_686:\n        /* \"contracts/MyToken.sol\":19957:19958  0 */\n      0x00\n        /* \"contracts/MyToken.sol\":19947:19954  _taxFee */\n      0x0d\n        /* \"contracts/MyToken.sol\":19947:19958  _taxFee = 0 */\n      dup2\n      swap1\n      sstore\n        /* \"contracts/MyToken.sol\":19968:19981  _liquidityFee */\n      0x0f\n        /* \"contracts/MyToken.sol\":19968:19985  _liquidityFee = 0 */\n      dup2\n      swap1\n      sstore\n        /* \"contracts/MyToken.sol\":19996:20042  _transferStandard(sender, address(0), burnAmt) */\n      tag_689\n      swap1\n        /* \"contracts/MyToken.sol\":20014:20020  sender */\n      dup7\n      swap1\n        /* \"contracts/MyToken.sol\":20034:20041  burnAmt */\n      dup5\n        /* \"contracts/MyToken.sol\":19996:20013  _transferStandard */\n      tag_677\n        /* \"contracts/MyToken.sol\":19996:20042  _transferStandard(sender, address(0), burnAmt) */\n      jump\t// in\n    tag_689:\n        /* \"contracts/MyToken.sol\":20078:20093  marketingWallet */\n      sload(0x14)\n        /* \"contracts/MyToken.sol\":20052:20108  _transferStandard(sender, marketingWallet, marketingAmt) */\n      tag_690\n      swap1\n        /* \"contracts/MyToken.sol\":20070:20076  sender */\n      dup7\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/MyToken.sol\":20078:20093  marketingWallet */\n      and\n        /* \"contracts/MyToken.sol\":20095:20107  marketingAmt */\n      dup4\n        /* \"contracts/MyToken.sol\":20052:20069  _transferStandard */\n      tag_677\n        /* \"contracts/MyToken.sol\":20052:20108  _transferStandard(sender, marketingWallet, marketingAmt) */\n      jump\t// in\n    tag_690:\n        /* \"contracts/MyToken.sol\":20170:20185  _previousTaxFee */\n      sload(0x0e)\n        /* \"contracts/MyToken.sol\":20160:20167  _taxFee */\n      0x0d\n        /* \"contracts/MyToken.sol\":20160:20185  _taxFee = _previousTaxFee */\n      sstore\n        /* \"contracts/MyToken.sol\":20211:20232  _previousLiquidityFee */\n      sload(0x10)\n        /* \"contracts/MyToken.sol\":20195:20208  _liquidityFee */\n      0x0f\n        /* \"contracts/MyToken.sol\":20195:20232  _liquidityFee = _previousLiquidityFee */\n      sstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/MyToken.sol\":20260:20286  _isExcludedFromFee[sender] */\n      dup6\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/MyToken.sol\":20260:20278  _isExcludedFromFee */\n      0x04\n        /* \"contracts/MyToken.sol\":20260:20286  _isExcludedFromFee[sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      dup1\n        /* \"contracts/MyToken.sol\":20260:20331  _isExcludedFromFee[sender] ||... */\n      tag_691\n      jumpi\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/MyToken.sol\":20302:20331  _isExcludedFromFee[recipient] */\n      dup5\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/MyToken.sol\":20302:20320  _isExcludedFromFee */\n      0x04\n        /* \"contracts/MyToken.sol\":20302:20331  _isExcludedFromFee[recipient] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"contracts/MyToken.sol\":20260:20331  _isExcludedFromFee[sender] ||... */\n    tag_691:\n        /* \"contracts/MyToken.sol\":20260:20373  _isExcludedFromFee[sender] ||... */\n      dup1\n      tag_692\n      jumpi\n      pop\n        /* \"contracts/MyToken.sol\":20360:20373  pancakeV2Pair */\n      sload(0x1f)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/MyToken.sol\":20347:20373  recipient == pancakeV2Pair */\n      dup6\n      dup2\n      and\n        /* \"contracts/MyToken.sol\":20360:20373  pancakeV2Pair */\n      swap2\n      and\n        /* \"contracts/MyToken.sol\":20347:20373  recipient == pancakeV2Pair */\n      eq\n        /* \"contracts/MyToken.sol\":20260:20373  _isExcludedFromFee[sender] ||... */\n    tag_692:\n        /* \"contracts/MyToken.sol\":20243:20424  if (... */\n      iszero\n      tag_588\n      jumpi\n        /* \"contracts/MyToken.sol\":20398:20413  restoreAllFee() */\n      tag_588\n        /* \"contracts/MyToken.sol\":13789:13804  _previousTaxFee */\n      sload(0x0e)\n        /* \"contracts/MyToken.sol\":13779:13786  _taxFee */\n      0x0d\n        /* \"contracts/MyToken.sol\":13779:13804  _taxFee = _previousTaxFee */\n      sstore\n        /* \"contracts/MyToken.sol\":13830:13851  _previousLiquidityFee */\n      sload(0x10)\n        /* \"contracts/MyToken.sol\":13814:13827  _liquidityFee */\n      0x0f\n        /* \"contracts/MyToken.sol\":13814:13851  _liquidityFee = _previousLiquidityFee */\n      sstore\n        /* \"contracts/MyToken.sol\":13872:13888  _previousBurnFee */\n      sload(0x12)\n        /* \"contracts/MyToken.sol\":13861:13869  _burnFee */\n      0x11\n        /* \"contracts/MyToken.sol\":13861:13888  _burnFee = _previousBurnFee */\n      sstore\n        /* \"contracts/MyToken.sol\":13914:13935  _previousMarketingFee */\n      sload(0x15)\n        /* \"contracts/MyToken.sol\":13898:13911  _marketingFee */\n      0x13\n        /* \"contracts/MyToken.sol\":13898:13935  _marketingFee = _previousMarketingFee */\n      sstore\n        /* \"contracts/MyToken.sol\":13736:13942  function restoreAllFee() private {... */\n      jump\n        /* \"contracts/MyToken.sol\":11751:12313  function _getCurrentSupply() private view returns (uint256, uint256) {... */\n    tag_607:\n        /* \"contracts/MyToken.sol\":11848:11855  _rTotal */\n      sload(0x08)\n        /* \"contracts/MyToken.sol\":11883:11890  _tTotal */\n      sload(0x07)\n        /* \"contracts/MyToken.sol\":11802:11809  uint256 */\n      0x00\n      swap2\n      dup3\n      swap2\n      dup3\n        /* \"contracts/MyToken.sol\":11900:12201  for (uint256 i = 0; i < _excluded.length; i++) {... */\n    tag_697:\n        /* \"contracts/MyToken.sol\":11924:11933  _excluded */\n      0x06\n        /* \"contracts/MyToken.sol\":11924:11940  _excluded.length */\n      sload\n        /* \"contracts/MyToken.sol\":11920:11940  i < _excluded.length */\n      dup2\n      lt\n        /* \"contracts/MyToken.sol\":11900:12201  for (uint256 i = 0; i < _excluded.length; i++) {... */\n      iszero\n      tag_698\n      jumpi\n        /* \"contracts/MyToken.sol\":11989:11996  rSupply */\n      dup3\n        /* \"contracts/MyToken.sol\":11965:11972  _rOwned */\n      0x01\n        /* \"contracts/MyToken.sol\":11965:11986  _rOwned[_excluded[i]] */\n      0x00\n        /* \"contracts/MyToken.sol\":11973:11982  _excluded */\n      0x06\n        /* \"contracts/MyToken.sol\":11983:11984  i */\n      dup5\n        /* \"contracts/MyToken.sol\":11973:11985  _excluded[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_701\n      jumpi\n      tag_701\n      tag_382\n      jump\t// in\n    tag_701:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      dup1\n      dup4\n      keccak256\n      swap1\n      swap2\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"contracts/MyToken.sol\":11965:11986  _rOwned[_excluded[i]] */\n      dup4\n      mstore\n      dup3\n      add\n      swap3\n      swap1\n      swap3\n      mstore\n      0x40\n      add\n      swap1\n      keccak256\n      sload\n        /* \"contracts/MyToken.sol\":11965:11996  _rOwned[_excluded[i]] > rSupply */\n      gt\n      dup1\n        /* \"contracts/MyToken.sol\":11965:12031  _rOwned[_excluded[i]] > rSupply || _tOwned[_excluded[i]] > tSupply */\n      tag_703\n      jumpi\n      pop\n        /* \"contracts/MyToken.sol\":12024:12031  tSupply */\n      dup2\n        /* \"contracts/MyToken.sol\":12000:12007  _tOwned */\n      0x02\n        /* \"contracts/MyToken.sol\":12000:12021  _tOwned[_excluded[i]] */\n      0x00\n        /* \"contracts/MyToken.sol\":12008:12017  _excluded */\n      0x06\n        /* \"contracts/MyToken.sol\":12018:12019  i */\n      dup5\n        /* \"contracts/MyToken.sol\":12008:12020  _excluded[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_705\n      jumpi\n      tag_705\n      tag_382\n      jump\t// in\n    tag_705:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      dup1\n      dup4\n      keccak256\n      swap1\n      swap2\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"contracts/MyToken.sol\":12000:12021  _tOwned[_excluded[i]] */\n      dup4\n      mstore\n      dup3\n      add\n      swap3\n      swap1\n      swap3\n      mstore\n      0x40\n      add\n      swap1\n      keccak256\n      sload\n        /* \"contracts/MyToken.sol\":12000:12031  _tOwned[_excluded[i]] > tSupply */\n      gt\n        /* \"contracts/MyToken.sol\":11965:12031  _rOwned[_excluded[i]] > rSupply || _tOwned[_excluded[i]] > tSupply */\n    tag_703:\n        /* \"contracts/MyToken.sol\":11961:12074  if (_rOwned[_excluded[i]] > rSupply || _tOwned[_excluded[i]] > tSupply)... */\n      iszero\n      tag_707\n      jumpi\n        /* \"contracts/MyToken.sol\":12057:12064  _rTotal */\n      sload(0x08)\n        /* \"contracts/MyToken.sol\":12066:12073  _tTotal */\n      sload(0x07)\n        /* \"contracts/MyToken.sol\":12049:12074  return (_rTotal, _tTotal) */\n      swap5\n      pop\n      swap5\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/MyToken.sol\":11751:12313  function _getCurrentSupply() private view returns (uint256, uint256) {... */\n      swap1\n      swap2\n      jump\t// out\n        /* \"contracts/MyToken.sol\":11961:12074  if (_rOwned[_excluded[i]] > rSupply || _tOwned[_excluded[i]] > tSupply)... */\n    tag_707:\n        /* \"contracts/MyToken.sol\":12098:12132  rSupply.sub(_rOwned[_excluded[i]]) */\n      tag_708\n        /* \"contracts/MyToken.sol\":12110:12117  _rOwned */\n      0x01\n        /* \"contracts/MyToken.sol\":12110:12131  _rOwned[_excluded[i]] */\n      0x00\n        /* \"contracts/MyToken.sol\":12118:12127  _excluded */\n      0x06\n        /* \"contracts/MyToken.sol\":12128:12129  i */\n      dup5\n        /* \"contracts/MyToken.sol\":12118:12130  _excluded[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_710\n      jumpi\n      tag_710\n      tag_382\n      jump\t// in\n    tag_710:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      dup1\n      dup4\n      keccak256\n      swap1\n      swap2\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"contracts/MyToken.sol\":12110:12131  _rOwned[_excluded[i]] */\n      dup4\n      mstore\n      dup3\n      add\n      swap3\n      swap1\n      swap3\n      mstore\n      0x40\n      add\n      swap1\n      keccak256\n      sload\n        /* \"contracts/MyToken.sol\":12098:12105  rSupply */\n      dup5\n      swap1\n        /* \"contracts/MyToken.sol\":12098:12109  rSupply.sub */\n      tag_413\n        /* \"contracts/MyToken.sol\":12098:12132  rSupply.sub(_rOwned[_excluded[i]]) */\n      jump\t// in\n    tag_708:\n        /* \"contracts/MyToken.sol\":12088:12132  rSupply = rSupply.sub(_rOwned[_excluded[i]]) */\n      swap3\n      pop\n        /* \"contracts/MyToken.sol\":12156:12190  tSupply.sub(_tOwned[_excluded[i]]) */\n      tag_712\n        /* \"contracts/MyToken.sol\":12168:12175  _tOwned */\n      0x02\n        /* \"contracts/MyToken.sol\":12168:12189  _tOwned[_excluded[i]] */\n      0x00\n        /* \"contracts/MyToken.sol\":12176:12185  _excluded */\n      0x06\n        /* \"contracts/MyToken.sol\":12186:12187  i */\n      dup5\n        /* \"contracts/MyToken.sol\":12176:12188  _excluded[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_714\n      jumpi\n      tag_714\n      tag_382\n      jump\t// in\n    tag_714:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      dup1\n      dup4\n      keccak256\n      swap1\n      swap2\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"contracts/MyToken.sol\":12168:12189  _tOwned[_excluded[i]] */\n      dup4\n      mstore\n      dup3\n      add\n      swap3\n      swap1\n      swap3\n      mstore\n      0x40\n      add\n      swap1\n      keccak256\n      sload\n        /* \"contracts/MyToken.sol\":12156:12163  tSupply */\n      dup4\n      swap1\n        /* \"contracts/MyToken.sol\":12156:12167  tSupply.sub */\n      tag_413\n        /* \"contracts/MyToken.sol\":12156:12190  tSupply.sub(_tOwned[_excluded[i]]) */\n      jump\t// in\n    tag_712:\n        /* \"contracts/MyToken.sol\":12146:12190  tSupply = tSupply.sub(_tOwned[_excluded[i]]) */\n      swap2\n      pop\n        /* \"contracts/MyToken.sol\":11942:11945  i++ */\n      dup1\n      tag_716\n      dup2\n      tag_398\n      jump\t// in\n    tag_716:\n      swap2\n      pop\n      pop\n        /* \"contracts/MyToken.sol\":11900:12201  for (uint256 i = 0; i < _excluded.length; i++) {... */\n      jump(tag_697)\n    tag_698:\n      pop\n        /* \"contracts/MyToken.sol\":12236:12243  _tTotal */\n      sload(0x07)\n        /* \"contracts/MyToken.sol\":12224:12231  _rTotal */\n      sload(0x08)\n        /* \"contracts/MyToken.sol\":12224:12244  _rTotal.div(_tTotal) */\n      tag_717\n      swap2\n        /* \"contracts/MyToken.sol\":12224:12235  _rTotal.div */\n      tag_369\n        /* \"contracts/MyToken.sol\":12224:12244  _rTotal.div(_tTotal) */\n      jump\t// in\n    tag_717:\n        /* \"contracts/MyToken.sol\":12214:12221  rSupply */\n      dup3\n        /* \"contracts/MyToken.sol\":12214:12244  rSupply < _rTotal.div(_tTotal) */\n      lt\n        /* \"contracts/MyToken.sol\":12210:12271  if (rSupply < _rTotal.div(_tTotal)) return (_rTotal, _tTotal) */\n      iszero\n      tag_718\n      jumpi\n        /* \"contracts/MyToken.sol\":12254:12261  _rTotal */\n      sload(0x08)\n        /* \"contracts/MyToken.sol\":12263:12270  _tTotal */\n      sload(0x07)\n        /* \"contracts/MyToken.sol\":12246:12271  return (_rTotal, _tTotal) */\n      swap4\n      pop\n      swap4\n      pop\n      pop\n      pop\n        /* \"contracts/MyToken.sol\":11751:12313  function _getCurrentSupply() private view returns (uint256, uint256) {... */\n      swap1\n      swap2\n      jump\t// out\n        /* \"contracts/MyToken.sol\":12210:12271  if (rSupply < _rTotal.div(_tTotal)) return (_rTotal, _tTotal) */\n    tag_718:\n        /* \"contracts/MyToken.sol\":12289:12296  rSupply */\n      swap1\n      swap4\n        /* \"contracts/MyToken.sol\":12298:12305  tSupply */\n      swap1\n      swap3\n      pop\n        /* \"contracts/MyToken.sol\":11751:12313  function _getCurrentSupply() private view returns (uint256, uint256) {... */\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/MyToken.sol\":10638:11037  function _getTValues(uint256 tAmount)... */\n    tag_616:\n        /* \"contracts/MyToken.sol\":10735:10742  uint256 */\n      0x00\n        /* \"contracts/MyToken.sol\":10756:10763  uint256 */\n      dup1\n        /* \"contracts/MyToken.sol\":10777:10784  uint256 */\n      0x00\n        /* \"contracts/MyToken.sol\":10809:10821  uint256 tFee */\n      dup1\n        /* \"contracts/MyToken.sol\":10824:10848  calculateTaxFee(tAmount) */\n      tag_720\n        /* \"contracts/MyToken.sol\":10840:10847  tAmount */\n      dup6\n        /* \"contracts/MyToken.sol\":10824:10839  calculateTaxFee */\n      tag_721\n        /* \"contracts/MyToken.sol\":10824:10848  calculateTaxFee(tAmount) */\n      jump\t// in\n    tag_720:\n        /* \"contracts/MyToken.sol\":10809:10848  uint256 tFee = calculateTaxFee(tAmount) */\n      swap1\n      pop\n        /* \"contracts/MyToken.sol\":10858:10876  uint256 tLiquidity */\n      0x00\n        /* \"contracts/MyToken.sol\":10879:10909  calculateLiquidityFee(tAmount) */\n      tag_722\n        /* \"contracts/MyToken.sol\":10901:10908  tAmount */\n      dup7\n        /* \"contracts/MyToken.sol\":10879:10900  calculateLiquidityFee */\n      tag_723\n        /* \"contracts/MyToken.sol\":10879:10909  calculateLiquidityFee(tAmount) */\n      jump\t// in\n    tag_722:\n        /* \"contracts/MyToken.sol\":10858:10909  uint256 tLiquidity = calculateLiquidityFee(tAmount) */\n      swap1\n      pop\n        /* \"contracts/MyToken.sol\":10919:10942  uint256 tTransferAmount */\n      0x00\n        /* \"contracts/MyToken.sol\":10945:10978  tAmount.sub(tFee).sub(tLiquidity) */\n      tag_724\n        /* \"contracts/MyToken.sol\":10858:10909  uint256 tLiquidity = calculateLiquidityFee(tAmount) */\n      dup3\n        /* \"contracts/MyToken.sol\":10945:10962  tAmount.sub(tFee) */\n      tag_662\n        /* \"contracts/MyToken.sol\":10945:10952  tAmount */\n      dup10\n        /* \"contracts/MyToken.sol\":10957:10961  tFee */\n      dup7\n        /* \"contracts/MyToken.sol\":10945:10956  tAmount.sub */\n      tag_413\n        /* \"contracts/MyToken.sol\":10945:10962  tAmount.sub(tFee) */\n      jump\t// in\n        /* \"contracts/MyToken.sol\":10945:10978  tAmount.sub(tFee).sub(tLiquidity) */\n    tag_724:\n        /* \"contracts/MyToken.sol\":10919:10978  uint256 tTransferAmount = tAmount.sub(tFee).sub(tLiquidity) */\n      swap8\n        /* \"contracts/MyToken.sol\":11013:11017  tFee */\n      swap3\n      swap7\n      pop\n        /* \"contracts/MyToken.sol\":11019:11029  tLiquidity */\n      swap1\n      swap5\n      pop\n        /* \"contracts/MyToken.sol\":10638:11037  function _getTValues(uint256 tAmount)... */\n      swap1\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/MyToken.sol\":11043:11578  function _getRValues(... */\n    tag_619:\n        /* \"contracts/MyToken.sol\":11233:11240  uint256 */\n      0x00\n      dup1\n      dup1\n      dup1\n        /* \"contracts/MyToken.sol\":11325:11349  tAmount.mul(currentRate) */\n      tag_727\n        /* \"contracts/MyToken.sol\":11325:11332  tAmount */\n      dup9\n        /* \"contracts/MyToken.sol\":11337:11348  currentRate */\n      dup7\n        /* \"contracts/MyToken.sol\":11325:11336  tAmount.mul */\n      tag_655\n        /* \"contracts/MyToken.sol\":11325:11349  tAmount.mul(currentRate) */\n      jump\t// in\n    tag_727:\n        /* \"contracts/MyToken.sol\":11307:11349  uint256 rAmount = tAmount.mul(currentRate) */\n      swap1\n      pop\n        /* \"contracts/MyToken.sol\":11359:11371  uint256 rFee */\n      0x00\n        /* \"contracts/MyToken.sol\":11374:11395  tFee.mul(currentRate) */\n      tag_728\n        /* \"contracts/MyToken.sol\":11374:11378  tFee */\n      dup9\n        /* \"contracts/MyToken.sol\":11383:11394  currentRate */\n      dup8\n        /* \"contracts/MyToken.sol\":11374:11382  tFee.mul */\n      tag_655\n        /* \"contracts/MyToken.sol\":11374:11395  tFee.mul(currentRate) */\n      jump\t// in\n    tag_728:\n        /* \"contracts/MyToken.sol\":11359:11395  uint256 rFee = tFee.mul(currentRate) */\n      swap1\n      pop\n        /* \"contracts/MyToken.sol\":11405:11423  uint256 rLiquidity */\n      0x00\n        /* \"contracts/MyToken.sol\":11426:11453  tLiquidity.mul(currentRate) */\n      tag_729\n        /* \"contracts/MyToken.sol\":11426:11436  tLiquidity */\n      dup9\n        /* \"contracts/MyToken.sol\":11441:11452  currentRate */\n      dup9\n        /* \"contracts/MyToken.sol\":11426:11440  tLiquidity.mul */\n      tag_655\n        /* \"contracts/MyToken.sol\":11426:11453  tLiquidity.mul(currentRate) */\n      jump\t// in\n    tag_729:\n        /* \"contracts/MyToken.sol\":11405:11453  uint256 rLiquidity = tLiquidity.mul(currentRate) */\n      swap1\n      pop\n        /* \"contracts/MyToken.sol\":11463:11486  uint256 rTransferAmount */\n      0x00\n        /* \"contracts/MyToken.sol\":11489:11522  rAmount.sub(rFee).sub(rLiquidity) */\n      tag_730\n        /* \"contracts/MyToken.sol\":11405:11453  uint256 rLiquidity = tLiquidity.mul(currentRate) */\n      dup3\n        /* \"contracts/MyToken.sol\":11489:11506  rAmount.sub(rFee) */\n      tag_662\n        /* \"contracts/MyToken.sol\":11489:11496  rAmount */\n      dup7\n        /* \"contracts/MyToken.sol\":11501:11505  rFee */\n      dup7\n        /* \"contracts/MyToken.sol\":11489:11500  rAmount.sub */\n      tag_413\n        /* \"contracts/MyToken.sol\":11489:11506  rAmount.sub(rFee) */\n      jump\t// in\n        /* \"contracts/MyToken.sol\":11489:11522  rAmount.sub(rFee).sub(rLiquidity) */\n    tag_730:\n        /* \"contracts/MyToken.sol\":11540:11547  rAmount */\n      swap4\n      swap12\n      swap4\n      swap11\n      pop\n        /* \"contracts/MyToken.sol\":11566:11570  rFee */\n      swap2\n      swap9\n      pop\n        /* \"contracts/MyToken.sol\":11043:11578  function _getRValues(... */\n      swap2\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/MyToken.sol\":17264:17837  function swapTokensForEth(uint256 tokenAmount) private {... */\n    tag_638:\n        /* \"contracts/MyToken.sol\":17412:17428  new address[](2) */\n      0x40\n      dup1\n      mload\n        /* \"contracts/MyToken.sol\":17426:17427  2 */\n      0x02\n        /* \"contracts/MyToken.sol\":17412:17428  new address[](2) */\n      dup1\n      dup3\n      mstore\n      0x60\n      dup3\n      add\n      dup4\n      mstore\n        /* \"contracts/MyToken.sol\":17388:17409  address[] memory path */\n      0x00\n      swap3\n        /* \"contracts/MyToken.sol\":17412:17428  new address[](2) */\n      0x20\n      dup4\n      add\n      swap1\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      add\n      swap1\n      pop\n      pop\n        /* \"contracts/MyToken.sol\":17388:17428  address[] memory path = new address[](2) */\n      swap1\n      pop\n        /* \"contracts/MyToken.sol\":17456:17460  this */\n      address\n        /* \"contracts/MyToken.sol\":17438:17442  path */\n      dup2\n        /* \"contracts/MyToken.sol\":17443:17444  0 */\n      0x00\n        /* \"contracts/MyToken.sol\":17438:17445  path[0] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_738\n      jumpi\n      tag_738\n      tag_382\n      jump\t// in\n    tag_738:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/MyToken.sol\":17438:17461  path[0] = address(this) */\n      swap3\n      dup4\n      and\n        /* \"contracts/MyToken.sol\":17438:17445  path[0] */\n      0x20\n      swap2\n      dup3\n      mul\n      swap3\n      swap1\n      swap3\n      add\n      dup2\n      add\n        /* \"contracts/MyToken.sol\":17438:17461  path[0] = address(this) */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"contracts/MyToken.sol\":17481:17496  pancakeV2Router */\n      sload(0x1e)\n        /* \"contracts/MyToken.sol\":17481:17503  pancakeV2Router.WETH() */\n      0x40\n      dup1\n      mload\n      shl(0xe3, 0x15ab88c9)\n      dup2\n      mstore\n      swap1\n      mload\n        /* \"contracts/MyToken.sol\":17481:17496  pancakeV2Router */\n      swap2\n      swap1\n      swap4\n      and\n      swap3\n        /* \"contracts/MyToken.sol\":17481:17501  pancakeV2Router.WETH */\n      0xad5c4648\n      swap3\n        /* \"contracts/MyToken.sol\":17481:17503  pancakeV2Router.WETH() */\n      0x04\n      dup1\n      dup4\n      add\n      swap4\n        /* \"contracts/MyToken.sol\":17438:17445  path[0] */\n      swap2\n      swap3\n        /* \"contracts/MyToken.sol\":17481:17503  pancakeV2Router.WETH() */\n      dup3\n      swap1\n      sub\n      add\n      dup2\n        /* \"contracts/MyToken.sol\":17481:17496  pancakeV2Router */\n      dup7\n        /* \"contracts/MyToken.sol\":17481:17503  pancakeV2Router.WETH() */\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_739\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_739:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_741\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_741:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_742\n      swap2\n      swap1\n      tag_743\n      jump\t// in\n    tag_742:\n        /* \"contracts/MyToken.sol\":17471:17475  path */\n      dup2\n        /* \"contracts/MyToken.sol\":17476:17477  1 */\n      0x01\n        /* \"contracts/MyToken.sol\":17471:17478  path[1] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_745\n      jumpi\n      tag_745\n      tag_382\n      jump\t// in\n    tag_745:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/MyToken.sol\":17471:17503  path[1] = pancakeV2Router.WETH() */\n      swap3\n      dup4\n      and\n        /* \"contracts/MyToken.sol\":17471:17478  path[1] */\n      0x20\n      swap2\n      dup3\n      mul\n      swap3\n      swap1\n      swap3\n      add\n      add\n        /* \"contracts/MyToken.sol\":17471:17503  path[1] = pancakeV2Router.WETH() */\n      mstore\n        /* \"contracts/MyToken.sol\":17546:17561  pancakeV2Router */\n      sload(0x1e)\n        /* \"contracts/MyToken.sol\":17514:17576  _approve(address(this), address(pancakeV2Router), tokenAmount) */\n      tag_746\n      swap2\n        /* \"contracts/MyToken.sol\":17531:17535  this */\n      address\n      swap2\n        /* \"contracts/MyToken.sol\":17546:17561  pancakeV2Router */\n      and\n        /* \"contracts/MyToken.sol\":17564:17575  tokenAmount */\n      dup5\n        /* \"contracts/MyToken.sol\":17514:17522  _approve */\n      tag_351\n        /* \"contracts/MyToken.sol\":17514:17576  _approve(address(this), address(pancakeV2Router), tokenAmount) */\n      jump\t// in\n    tag_746:\n        /* \"contracts/MyToken.sol\":17612:17627  pancakeV2Router */\n      sload(0x1e)\n        /* \"contracts/MyToken.sol\":17612:17830  pancakeV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(... */\n      mload(0x40)\n      shl(0xe0, 0x791ac947)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/MyToken.sol\":17612:17627  pancakeV2Router */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"contracts/MyToken.sol\":17612:17678  pancakeV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens */\n      0x791ac947\n      swap1\n        /* \"contracts/MyToken.sol\":17612:17830  pancakeV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(... */\n      tag_747\n      swap1\n        /* \"contracts/MyToken.sol\":17692:17703  tokenAmount */\n      dup6\n      swap1\n        /* \"contracts/MyToken.sol\":17612:17627  pancakeV2Router */\n      0x00\n      swap1\n        /* \"contracts/MyToken.sol\":17760:17764  path */\n      dup7\n      swap1\n        /* \"contracts/MyToken.sol\":17786:17790  this */\n      address\n      swap1\n        /* \"contracts/MyToken.sol\":17805:17820  block.timestamp */\n      timestamp\n      swap1\n        /* \"contracts/MyToken.sol\":17612:17830  pancakeV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(... */\n      0x04\n      add\n      tag_748\n      jump\t// in\n    tag_747:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_749\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_749:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_599\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n        /* \"contracts/MyToken.sol\":17843:18343  function addLiquidity(uint256 tokenAmount, uint256 ethAmount) private {... */\n    tag_641:\n        /* \"contracts/MyToken.sol\":18021:18036  pancakeV2Router */\n      sload(0x1e)\n        /* \"contracts/MyToken.sol\":17989:18051  _approve(address(this), address(pancakeV2Router), tokenAmount) */\n      tag_753\n      swap1\n        /* \"contracts/MyToken.sol\":18006:18010  this */\n      address\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/MyToken.sol\":18021:18036  pancakeV2Router */\n      and\n        /* \"contracts/MyToken.sol\":18039:18050  tokenAmount */\n      dup5\n        /* \"contracts/MyToken.sol\":17989:17997  _approve */\n      tag_351\n        /* \"contracts/MyToken.sol\":17989:18051  _approve(address(this), address(pancakeV2Router), tokenAmount) */\n      jump\t// in\n    tag_753:\n        /* \"contracts/MyToken.sol\":18091:18106  pancakeV2Router */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x1e))\n        /* \"contracts/MyToken.sol\":18091:18122  pancakeV2Router.addLiquidityETH */\n      0xf305d719\n        /* \"contracts/MyToken.sol\":18130:18139  ethAmount */\n      dup3\n        /* \"contracts/MyToken.sol\":18162:18166  this */\n      address\n        /* \"contracts/MyToken.sol\":18181:18192  tokenAmount */\n      dup6\n        /* \"contracts/MyToken.sol\":18091:18106  pancakeV2Router */\n      0x00\n      dup1\n        /* \"contracts/MyToken.sol\":18290:18297  owner() */\n      tag_754\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1247:1254  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1279  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n      jump\n        /* \"contracts/MyToken.sol\":18290:18297  owner() */\n    tag_754:\n        /* \"contracts/MyToken.sol\":18091:18336  pancakeV2Router.addLiquidityETH{value: ethAmount}(... */\n      mload(0x40)\n      0xe0\n      dup9\n      swap1\n      shl\n      not(sub(shl(0xe0, 0x01), 0x01))\n      and\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":3823:3838   */\n      swap6\n      dup7\n      and\n        /* \"contracts/MyToken.sol\":18091:18336  pancakeV2Router.addLiquidityETH{value: ethAmount}(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3805:3839   */\n      mstore\n        /* \"#utility.yul\":3855:3873   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":3848:3882   */\n      swap5\n      swap1\n      swap5\n      mstore\n        /* \"#utility.yul\":3898:3916   */\n      0x44\n      dup5\n      add\n        /* \"#utility.yul\":3891:3925   */\n      swap3\n      swap1\n      swap3\n      mstore\n        /* \"#utility.yul\":3941:3959   */\n      0x64\n      dup4\n      add\n        /* \"#utility.yul\":3934:3968   */\n      mstore\n        /* \"#utility.yul\":4005:4020   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":3984:4003   */\n      0x84\n      dup3\n      add\n        /* \"#utility.yul\":3977:4021   */\n      mstore\n        /* \"contracts/MyToken.sol\":18311:18326  block.timestamp */\n      timestamp\n        /* \"#utility.yul\":4037:4056   */\n      0xa4\n      dup3\n      add\n        /* \"#utility.yul\":4030:4065   */\n      mstore\n        /* \"#utility.yul\":3739:3758   */\n      0xc4\n      add\n        /* \"contracts/MyToken.sol\":18091:18336  pancakeV2Router.addLiquidityETH{value: ethAmount}(... */\n      0x60\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_757\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_757:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_759\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_759:\n      pop\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_588\n      swap2\n      swap1\n      tag_761\n      jump\t// in\n        /* \"contracts/MyToken.sol\":13319:13730  function removeAllFee() private {... */\n    tag_648:\n        /* \"contracts/MyToken.sol\":13365:13372  _taxFee */\n      sload(0x0d)\n        /* \"contracts/MyToken.sol\":13365:13377  _taxFee == 0 */\n      iszero\n        /* \"contracts/MyToken.sol\":13365:13399  _taxFee == 0 && _liquidityFee == 0 */\n      dup1\n      iszero\n      tag_763\n      jumpi\n      pop\n        /* \"contracts/MyToken.sol\":13381:13394  _liquidityFee */\n      sload(0x0f)\n        /* \"contracts/MyToken.sol\":13381:13399  _liquidityFee == 0 */\n      iszero\n        /* \"contracts/MyToken.sol\":13365:13399  _taxFee == 0 && _liquidityFee == 0 */\n    tag_763:\n        /* \"contracts/MyToken.sol\":13365:13421  _taxFee == 0 && _liquidityFee == 0 && _marketingFee == 0 */\n      dup1\n      iszero\n      tag_764\n      jumpi\n      pop\n        /* \"contracts/MyToken.sol\":13403:13416  _marketingFee */\n      sload(0x13)\n        /* \"contracts/MyToken.sol\":13403:13421  _marketingFee == 0 */\n      iszero\n        /* \"contracts/MyToken.sol\":13365:13421  _taxFee == 0 && _liquidityFee == 0 && _marketingFee == 0 */\n    tag_764:\n        /* \"contracts/MyToken.sol\":13365:13438  _taxFee == 0 && _liquidityFee == 0 && _marketingFee == 0 && _burnFee == 0 */\n      dup1\n      iszero\n      tag_765\n      jumpi\n      pop\n        /* \"contracts/MyToken.sol\":13425:13433  _burnFee */\n      sload(0x11)\n        /* \"contracts/MyToken.sol\":13425:13438  _burnFee == 0 */\n      iszero\n        /* \"contracts/MyToken.sol\":13365:13438  _taxFee == 0 && _liquidityFee == 0 && _marketingFee == 0 && _burnFee == 0 */\n    tag_765:\n        /* \"contracts/MyToken.sol\":13361:13459  if (_taxFee == 0 && _liquidityFee == 0 && _marketingFee == 0 && _burnFee == 0)... */\n      iszero\n      tag_766\n      jumpi\n        /* \"contracts/MyToken.sol\":13319:13730  function removeAllFee() private {... */\n      jump\t// out\n        /* \"contracts/MyToken.sol\":13361:13459  if (_taxFee == 0 && _liquidityFee == 0 && _marketingFee == 0 && _burnFee == 0)... */\n    tag_766:\n        /* \"contracts/MyToken.sol\":13487:13494  _taxFee */\n      0x0d\n      dup1\n      sload\n        /* \"contracts/MyToken.sol\":13469:13484  _previousTaxFee */\n      0x0e\n        /* \"contracts/MyToken.sol\":13469:13494  _previousTaxFee = _taxFee */\n      sstore\n        /* \"contracts/MyToken.sol\":13528:13541  _liquidityFee */\n      0x0f\n      dup1\n      sload\n        /* \"contracts/MyToken.sol\":13504:13525  _previousLiquidityFee */\n      0x10\n        /* \"contracts/MyToken.sol\":13504:13541  _previousLiquidityFee = _liquidityFee */\n      sstore\n        /* \"contracts/MyToken.sol\":13570:13578  _burnFee */\n      0x11\n      dup1\n      sload\n        /* \"contracts/MyToken.sol\":13551:13567  _previousBurnFee */\n      0x12\n        /* \"contracts/MyToken.sol\":13551:13578  _previousBurnFee = _burnFee */\n      sstore\n        /* \"contracts/MyToken.sol\":13612:13625  _marketingFee */\n      0x13\n      dup1\n      sload\n        /* \"contracts/MyToken.sol\":13588:13609  _previousMarketingFee */\n      0x15\n        /* \"contracts/MyToken.sol\":13588:13625  _previousMarketingFee = _marketingFee */\n      sstore\n      0x00\n        /* \"contracts/MyToken.sol\":13636:13647  _taxFee = 0 */\n      swap4\n      dup5\n      swap1\n      sstore\n        /* \"contracts/MyToken.sol\":13657:13674  _liquidityFee = 0 */\n      swap2\n      dup4\n      swap1\n      sstore\n        /* \"contracts/MyToken.sol\":13684:13701  _marketingFee = 0 */\n      swap1\n      dup3\n      swap1\n      sstore\n        /* \"contracts/MyToken.sol\":13711:13723  _burnFee = 0 */\n      sstore\n        /* \"contracts/MyToken.sol\":13319:13730  function removeAllFee() private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3465:3561  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_655:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3523:3530  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3549:3554  a * b */\n      tag_368\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3553:3554  b */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3549:3550  a */\n      dup5\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3549:3554  a * b */\n      tag_590\n      jump\t// in\n        /* \"contracts/MyToken.sol\":21734:22401  function _transferFromExcluded(... */\n    tag_663:\n        /* \"contracts/MyToken.sol\":21879:21894  uint256 rAmount */\n      0x00\n        /* \"contracts/MyToken.sol\":21908:21931  uint256 rTransferAmount */\n      dup1\n        /* \"contracts/MyToken.sol\":21945:21957  uint256 rFee */\n      0x00\n        /* \"contracts/MyToken.sol\":21971:21994  uint256 tTransferAmount */\n      dup1\n        /* \"contracts/MyToken.sol\":22008:22020  uint256 tFee */\n      0x00\n        /* \"contracts/MyToken.sol\":22034:22052  uint256 tLiquidity */\n      dup1\n        /* \"contracts/MyToken.sol\":22065:22084  _getValues(tAmount) */\n      tag_771\n        /* \"contracts/MyToken.sol\":22076:22083  tAmount */\n      dup8\n        /* \"contracts/MyToken.sol\":22065:22075  _getValues */\n      tag_411\n        /* \"contracts/MyToken.sol\":22065:22084  _getValues(tAmount) */\n      jump\t// in\n    tag_771:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/MyToken.sol\":22112:22127  _tOwned[sender] */\n      dup16\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/MyToken.sol\":22112:22119  _tOwned */\n      0x02\n        /* \"contracts/MyToken.sol\":22112:22127  _tOwned[sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"contracts/MyToken.sol\":21865:22084  (... */\n      swap6\n      swap12\n      pop\n      swap4\n      swap10\n      pop\n      swap2\n      swap8\n      pop\n      swap6\n      pop\n      swap4\n      pop\n      swap2\n      pop\n        /* \"contracts/MyToken.sol\":22112:22140  _tOwned[sender].sub(tAmount) */\n      tag_772\n      swap1\n        /* \"contracts/MyToken.sol\":22132:22139  tAmount */\n      dup9\n        /* \"contracts/MyToken.sol\":22112:22131  _tOwned[sender].sub */\n      tag_413\n        /* \"contracts/MyToken.sol\":22112:22140  _tOwned[sender].sub(tAmount) */\n      jump\t// in\n    tag_772:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/MyToken.sol\":22094:22109  _tOwned[sender] */\n      dup11\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/MyToken.sol\":22094:22101  _tOwned */\n      0x02\n        /* \"contracts/MyToken.sol\":22094:22109  _tOwned[sender] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/MyToken.sol\":22094:22140  _tOwned[sender] = _tOwned[sender].sub(tAmount) */\n      swap4\n      swap1\n      swap4\n      sstore\n        /* \"contracts/MyToken.sol\":22168:22175  _rOwned */\n      0x01\n        /* \"contracts/MyToken.sol\":22168:22183  _rOwned[sender] */\n      swap1\n      mstore\n      keccak256\n      sload\n        /* \"contracts/MyToken.sol\":22168:22196  _rOwned[sender].sub(rAmount) */\n      tag_773\n      swap1\n        /* \"contracts/MyToken.sol\":22188:22195  rAmount */\n      dup8\n        /* \"contracts/MyToken.sol\":22168:22187  _rOwned[sender].sub */\n      tag_413\n        /* \"contracts/MyToken.sol\":22168:22196  _rOwned[sender].sub(rAmount) */\n      jump\t// in\n    tag_773:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/MyToken.sol\":22150:22165  _rOwned[sender] */\n      dup1\n      dup12\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/MyToken.sol\":22150:22157  _rOwned */\n      0x01\n        /* \"contracts/MyToken.sol\":22150:22165  _rOwned[sender] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"contracts/MyToken.sol\":22150:22196  _rOwned[sender] = _rOwned[sender].sub(rAmount) */\n      swap4\n      swap1\n      swap4\n      sstore\n        /* \"contracts/MyToken.sol\":22227:22245  _rOwned[recipient] */\n      swap1\n      dup11\n      and\n      dup2\n      mstore\n      keccak256\n      sload\n        /* \"contracts/MyToken.sol\":22227:22266  _rOwned[recipient].add(rTransferAmount) */\n      tag_774\n      swap1\n        /* \"contracts/MyToken.sol\":22250:22265  rTransferAmount */\n      dup7\n        /* \"contracts/MyToken.sol\":22227:22249  _rOwned[recipient].add */\n      tag_404\n        /* \"contracts/MyToken.sol\":22227:22266  _rOwned[recipient].add(rTransferAmount) */\n      jump\t// in\n    tag_774:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/MyToken.sol\":22206:22224  _rOwned[recipient] */\n      dup10\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/MyToken.sol\":22206:22213  _rOwned */\n      0x01\n        /* \"contracts/MyToken.sol\":22206:22224  _rOwned[recipient] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/MyToken.sol\":22206:22266  _rOwned[recipient] = _rOwned[recipient].add(rTransferAmount) */\n      sstore\n        /* \"contracts/MyToken.sol\":22276:22302  _takeLiquidity(tLiquidity) */\n      tag_775\n        /* \"contracts/MyToken.sol\":22291:22301  tLiquidity */\n      dup2\n        /* \"contracts/MyToken.sol\":22276:22290  _takeLiquidity */\n      tag_776\n        /* \"contracts/MyToken.sol\":22276:22302  _takeLiquidity(tLiquidity) */\n      jump\t// in\n    tag_775:\n        /* \"contracts/MyToken.sol\":22312:22335  _reflectFee(rFee, tFee) */\n      tag_777\n        /* \"contracts/MyToken.sol\":22324:22328  rFee */\n      dup5\n        /* \"contracts/MyToken.sol\":22330:22334  tFee */\n      dup4\n        /* \"contracts/MyToken.sol\":22312:22323  _reflectFee */\n      tag_778\n        /* \"contracts/MyToken.sol\":22312:22335  _reflectFee(rFee, tFee) */\n      jump\t// in\n    tag_777:\n        /* \"contracts/MyToken.sol\":22367:22376  recipient */\n      dup8\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/MyToken.sol\":22350:22394  Transfer(sender, recipient, tTransferAmount) */\n      and\n        /* \"contracts/MyToken.sol\":22359:22365  sender */\n      dup10\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/MyToken.sol\":22350:22394  Transfer(sender, recipient, tTransferAmount) */\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"contracts/MyToken.sol\":22378:22393  tTransferAmount */\n      dup6\n        /* \"contracts/MyToken.sol\":22350:22394  Transfer(sender, recipient, tTransferAmount) */\n      mload(0x40)\n      tag_779\n      swap2\n        /* \"#utility.yul\":15381:15406   */\n      dup2\n      mstore\n        /* \"#utility.yul\":15369:15371   */\n      0x20\n        /* \"#utility.yul\":15354:15372   */\n      add\n      swap1\n        /* \"#utility.yul\":15235:15412   */\n      jump\n        /* \"contracts/MyToken.sol\":22350:22394  Transfer(sender, recipient, tTransferAmount) */\n    tag_779:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/MyToken.sol\":21855:22401  {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/MyToken.sol\":21734:22401  function _transferFromExcluded(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/MyToken.sol\":21049:21728  function _transferToExcluded(... */\n    tag_670:\n        /* \"contracts/MyToken.sol\":21192:21207  uint256 rAmount */\n      0x00\n        /* \"contracts/MyToken.sol\":21221:21244  uint256 rTransferAmount */\n      dup1\n        /* \"contracts/MyToken.sol\":21258:21270  uint256 rFee */\n      0x00\n        /* \"contracts/MyToken.sol\":21284:21307  uint256 tTransferAmount */\n      dup1\n        /* \"contracts/MyToken.sol\":21321:21333  uint256 tFee */\n      0x00\n        /* \"contracts/MyToken.sol\":21347:21365  uint256 tLiquidity */\n      dup1\n        /* \"contracts/MyToken.sol\":21378:21397  _getValues(tAmount) */\n      tag_781\n        /* \"contracts/MyToken.sol\":21389:21396  tAmount */\n      dup8\n        /* \"contracts/MyToken.sol\":21378:21388  _getValues */\n      tag_411\n        /* \"contracts/MyToken.sol\":21378:21397  _getValues(tAmount) */\n      jump\t// in\n    tag_781:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/MyToken.sol\":21425:21440  _rOwned[sender] */\n      dup16\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/MyToken.sol\":21425:21432  _rOwned */\n      0x01\n        /* \"contracts/MyToken.sol\":21425:21440  _rOwned[sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"contracts/MyToken.sol\":21178:21397  (... */\n      swap6\n      swap12\n      pop\n      swap4\n      swap10\n      pop\n      swap2\n      swap8\n      pop\n      swap6\n      pop\n      swap4\n      pop\n      swap2\n      pop\n        /* \"contracts/MyToken.sol\":21425:21453  _rOwned[sender].sub(rAmount) */\n      tag_782\n      swap1\n        /* \"contracts/MyToken.sol\":21178:21397  (... */\n      dup8\n        /* \"contracts/MyToken.sol\":21425:21444  _rOwned[sender].sub */\n      tag_413\n        /* \"contracts/MyToken.sol\":21425:21453  _rOwned[sender].sub(rAmount) */\n      jump\t// in\n    tag_782:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/MyToken.sol\":21407:21422  _rOwned[sender] */\n      dup1\n      dup12\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/MyToken.sol\":21407:21414  _rOwned */\n      0x01\n        /* \"contracts/MyToken.sol\":21407:21422  _rOwned[sender] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/MyToken.sol\":21407:21453  _rOwned[sender] = _rOwned[sender].sub(rAmount) */\n      swap5\n      swap1\n      swap5\n      sstore\n        /* \"contracts/MyToken.sol\":21484:21502  _tOwned[recipient] */\n      swap2\n      dup12\n      and\n      dup2\n      mstore\n        /* \"contracts/MyToken.sol\":21484:21491  _tOwned */\n      0x02\n        /* \"contracts/MyToken.sol\":21484:21502  _tOwned[recipient] */\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n        /* \"contracts/MyToken.sol\":21484:21523  _tOwned[recipient].add(tTransferAmount) */\n      tag_783\n      swap1\n        /* \"contracts/MyToken.sol\":21507:21522  tTransferAmount */\n      dup5\n        /* \"contracts/MyToken.sol\":21484:21506  _tOwned[recipient].add */\n      tag_404\n        /* \"contracts/MyToken.sol\":21484:21523  _tOwned[recipient].add(tTransferAmount) */\n      jump\t// in\n    tag_783:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/MyToken.sol\":21463:21481  _tOwned[recipient] */\n      dup10\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/MyToken.sol\":21463:21470  _tOwned */\n      0x02\n        /* \"contracts/MyToken.sol\":21463:21481  _tOwned[recipient] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/MyToken.sol\":21463:21523  _tOwned[recipient] = _tOwned[recipient].add(tTransferAmount) */\n      swap4\n      swap1\n      swap4\n      sstore\n        /* \"contracts/MyToken.sol\":21554:21561  _rOwned */\n      0x01\n        /* \"contracts/MyToken.sol\":21554:21572  _rOwned[recipient] */\n      swap1\n      mstore\n      keccak256\n      sload\n        /* \"contracts/MyToken.sol\":21554:21593  _rOwned[recipient].add(rTransferAmount) */\n      tag_774\n      swap1\n        /* \"contracts/MyToken.sol\":21577:21592  rTransferAmount */\n      dup7\n        /* \"contracts/MyToken.sol\":21554:21576  _rOwned[recipient].add */\n      tag_404\n        /* \"contracts/MyToken.sol\":21554:21593  _rOwned[recipient].add(rTransferAmount) */\n      jump\t// in\n        /* \"contracts/MyToken.sol\":20436:21043  function _transferStandard(... */\n    tag_677:\n        /* \"contracts/MyToken.sol\":20577:20592  uint256 rAmount */\n      0x00\n        /* \"contracts/MyToken.sol\":20606:20629  uint256 rTransferAmount */\n      dup1\n        /* \"contracts/MyToken.sol\":20643:20655  uint256 rFee */\n      0x00\n        /* \"contracts/MyToken.sol\":20669:20692  uint256 tTransferAmount */\n      dup1\n        /* \"contracts/MyToken.sol\":20706:20718  uint256 tFee */\n      0x00\n        /* \"contracts/MyToken.sol\":20732:20750  uint256 tLiquidity */\n      dup1\n        /* \"contracts/MyToken.sol\":20763:20782  _getValues(tAmount) */\n      tag_789\n        /* \"contracts/MyToken.sol\":20774:20781  tAmount */\n      dup8\n        /* \"contracts/MyToken.sol\":20763:20773  _getValues */\n      tag_411\n        /* \"contracts/MyToken.sol\":20763:20782  _getValues(tAmount) */\n      jump\t// in\n    tag_789:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/MyToken.sol\":20810:20825  _rOwned[sender] */\n      dup16\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/MyToken.sol\":20810:20817  _rOwned */\n      0x01\n        /* \"contracts/MyToken.sol\":20810:20825  _rOwned[sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"contracts/MyToken.sol\":20563:20782  (... */\n      swap6\n      swap12\n      pop\n      swap4\n      swap10\n      pop\n      swap2\n      swap8\n      pop\n      swap6\n      pop\n      swap4\n      pop\n      swap2\n      pop\n        /* \"contracts/MyToken.sol\":20810:20838  _rOwned[sender].sub(rAmount) */\n      tag_773\n      swap1\n        /* \"contracts/MyToken.sol\":20563:20782  (... */\n      dup8\n        /* \"contracts/MyToken.sol\":20810:20829  _rOwned[sender].sub */\n      tag_413\n        /* \"contracts/MyToken.sol\":20810:20838  _rOwned[sender].sub(rAmount) */\n      jump\t// in\n        /* \"contracts/MyToken.sol\":9043:9780  function _transferBothExcluded(... */\n    tag_684:\n        /* \"contracts/MyToken.sol\":9188:9203  uint256 rAmount */\n      0x00\n        /* \"contracts/MyToken.sol\":9217:9240  uint256 rTransferAmount */\n      dup1\n        /* \"contracts/MyToken.sol\":9254:9266  uint256 rFee */\n      0x00\n        /* \"contracts/MyToken.sol\":9280:9303  uint256 tTransferAmount */\n      dup1\n        /* \"contracts/MyToken.sol\":9317:9329  uint256 tFee */\n      0x00\n        /* \"contracts/MyToken.sol\":9343:9361  uint256 tLiquidity */\n      dup1\n        /* \"contracts/MyToken.sol\":9374:9393  _getValues(tAmount) */\n      tag_796\n        /* \"contracts/MyToken.sol\":9385:9392  tAmount */\n      dup8\n        /* \"contracts/MyToken.sol\":9374:9384  _getValues */\n      tag_411\n        /* \"contracts/MyToken.sol\":9374:9393  _getValues(tAmount) */\n      jump\t// in\n    tag_796:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/MyToken.sol\":9421:9436  _tOwned[sender] */\n      dup16\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/MyToken.sol\":9421:9428  _tOwned */\n      0x02\n        /* \"contracts/MyToken.sol\":9421:9436  _tOwned[sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"contracts/MyToken.sol\":9174:9393  (... */\n      swap6\n      swap12\n      pop\n      swap4\n      swap10\n      pop\n      swap2\n      swap8\n      pop\n      swap6\n      pop\n      swap4\n      pop\n      swap2\n      pop\n        /* \"contracts/MyToken.sol\":9421:9449  _tOwned[sender].sub(tAmount) */\n      tag_797\n      swap1\n        /* \"contracts/MyToken.sol\":9441:9448  tAmount */\n      dup9\n        /* \"contracts/MyToken.sol\":9421:9440  _tOwned[sender].sub */\n      tag_413\n        /* \"contracts/MyToken.sol\":9421:9449  _tOwned[sender].sub(tAmount) */\n      jump\t// in\n    tag_797:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/MyToken.sol\":9403:9418  _tOwned[sender] */\n      dup11\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/MyToken.sol\":9403:9410  _tOwned */\n      0x02\n        /* \"contracts/MyToken.sol\":9403:9418  _tOwned[sender] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/MyToken.sol\":9403:9449  _tOwned[sender] = _tOwned[sender].sub(tAmount) */\n      swap4\n      swap1\n      swap4\n      sstore\n        /* \"contracts/MyToken.sol\":9477:9484  _rOwned */\n      0x01\n        /* \"contracts/MyToken.sol\":9477:9492  _rOwned[sender] */\n      swap1\n      mstore\n      keccak256\n      sload\n        /* \"contracts/MyToken.sol\":9477:9505  _rOwned[sender].sub(rAmount) */\n      tag_782\n      swap1\n        /* \"contracts/MyToken.sol\":9497:9504  rAmount */\n      dup8\n        /* \"contracts/MyToken.sol\":9477:9496  _rOwned[sender].sub */\n      tag_413\n        /* \"contracts/MyToken.sol\":9477:9505  _rOwned[sender].sub(rAmount) */\n      jump\t// in\n        /* \"contracts/MyToken.sol\":12674:12802  function calculateTaxFee(uint256 _amount) private view returns (uint256) {... */\n    tag_721:\n        /* \"contracts/MyToken.sol\":12738:12745  uint256 */\n      0x00\n        /* \"contracts/MyToken.sol\":12764:12795  _amount.mul(_taxFee).div(10**2) */\n      tag_347\n        /* \"contracts/MyToken.sol\":12789:12794  10**2 */\n      0x64\n        /* \"contracts/MyToken.sol\":12764:12784  _amount.mul(_taxFee) */\n      tag_654\n        /* \"contracts/MyToken.sol\":12776:12783  _taxFee */\n      sload(0x0d)\n        /* \"contracts/MyToken.sol\":12764:12771  _amount */\n      dup6\n        /* \"contracts/MyToken.sol\":12764:12775  _amount.mul */\n      tag_655\n      swap1\n        /* \"contracts/MyToken.sol\":12764:12784  _amount.mul(_taxFee) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n        /* \"contracts/MyToken.sol\":12808:12948  function calculateLiquidityFee(uint256 _amount) private view returns (uint256) {... */\n    tag_723:\n        /* \"contracts/MyToken.sol\":12878:12885  uint256 */\n      0x00\n        /* \"contracts/MyToken.sol\":12904:12941  _amount.mul(_liquidityFee).div(10**2) */\n      tag_347\n        /* \"contracts/MyToken.sol\":12935:12940  10**2 */\n      0x64\n        /* \"contracts/MyToken.sol\":12904:12930  _amount.mul(_liquidityFee) */\n      tag_654\n        /* \"contracts/MyToken.sol\":12916:12929  _liquidityFee */\n      sload(0x0f)\n        /* \"contracts/MyToken.sol\":12904:12911  _amount */\n      dup6\n        /* \"contracts/MyToken.sol\":12904:12915  _amount.mul */\n      tag_655\n      swap1\n        /* \"contracts/MyToken.sol\":12904:12930  _amount.mul(_liquidityFee) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n        /* \"contracts/MyToken.sol\":12319:12668  function _takeLiquidity(uint256 tLiquidity) private {... */\n    tag_776:\n        /* \"contracts/MyToken.sol\":12381:12400  uint256 currentRate */\n      0x00\n        /* \"contracts/MyToken.sol\":12403:12413  _getRate() */\n      tag_812\n        /* \"contracts/MyToken.sol\":12403:12411  _getRate */\n      tag_367\n        /* \"contracts/MyToken.sol\":12403:12413  _getRate() */\n      jump\t// in\n    tag_812:\n        /* \"contracts/MyToken.sol\":12381:12413  uint256 currentRate = _getRate() */\n      swap1\n      pop\n        /* \"contracts/MyToken.sol\":12423:12441  uint256 rLiquidity */\n      0x00\n        /* \"contracts/MyToken.sol\":12444:12471  tLiquidity.mul(currentRate) */\n      tag_813\n        /* \"contracts/MyToken.sol\":12444:12454  tLiquidity */\n      dup4\n        /* \"contracts/MyToken.sol\":12381:12413  uint256 currentRate = _getRate() */\n      dup4\n        /* \"contracts/MyToken.sol\":12444:12458  tLiquidity.mul */\n      tag_655\n        /* \"contracts/MyToken.sol\":12444:12471  tLiquidity.mul(currentRate) */\n      jump\t// in\n    tag_813:\n        /* \"contracts/MyToken.sol\":12522:12526  this */\n      address\n        /* \"contracts/MyToken.sol\":12506:12528  _rOwned[address(this)] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/MyToken.sol\":12506:12513  _rOwned */\n      0x01\n        /* \"contracts/MyToken.sol\":12506:12528  _rOwned[address(this)] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"contracts/MyToken.sol\":12423:12471  uint256 rLiquidity = tLiquidity.mul(currentRate) */\n      swap1\n      swap2\n      pop\n        /* \"contracts/MyToken.sol\":12506:12544  _rOwned[address(this)].add(rLiquidity) */\n      tag_814\n      swap1\n        /* \"contracts/MyToken.sol\":12423:12471  uint256 rLiquidity = tLiquidity.mul(currentRate) */\n      dup3\n        /* \"contracts/MyToken.sol\":12506:12532  _rOwned[address(this)].add */\n      tag_404\n        /* \"contracts/MyToken.sol\":12506:12544  _rOwned[address(this)].add(rLiquidity) */\n      jump\t// in\n    tag_814:\n        /* \"contracts/MyToken.sol\":12497:12501  this */\n      address\n        /* \"contracts/MyToken.sol\":12481:12503  _rOwned[address(this)] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/MyToken.sol\":12481:12488  _rOwned */\n      0x01\n        /* \"contracts/MyToken.sol\":12481:12503  _rOwned[address(this)] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/MyToken.sol\":12481:12544  _rOwned[address(this)] = _rOwned[address(this)].add(rLiquidity) */\n      swap4\n      swap1\n      swap4\n      sstore\n        /* \"contracts/MyToken.sol\":12558:12569  _isExcluded */\n      0x05\n        /* \"contracts/MyToken.sol\":12558:12584  _isExcluded[address(this)] */\n      swap1\n      mstore\n      keccak256\n      sload\n      0xff\n      and\n        /* \"contracts/MyToken.sol\":12554:12661  if (_isExcluded[address(this)])... */\n      iszero\n      tag_627\n      jumpi\n        /* \"contracts/MyToken.sol\":12639:12643  this */\n      address\n        /* \"contracts/MyToken.sol\":12623:12645  _tOwned[address(this)] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/MyToken.sol\":12623:12630  _tOwned */\n      0x02\n        /* \"contracts/MyToken.sol\":12623:12645  _tOwned[address(this)] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"contracts/MyToken.sol\":12623:12661  _tOwned[address(this)].add(tLiquidity) */\n      tag_816\n      swap1\n        /* \"contracts/MyToken.sol\":12650:12660  tLiquidity */\n      dup5\n        /* \"contracts/MyToken.sol\":12623:12649  _tOwned[address(this)].add */\n      tag_404\n        /* \"contracts/MyToken.sol\":12623:12661  _tOwned[address(this)].add(tLiquidity) */\n      jump\t// in\n    tag_816:\n        /* \"contracts/MyToken.sol\":12614:12618  this */\n      address\n        /* \"contracts/MyToken.sol\":12598:12620  _tOwned[address(this)] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/MyToken.sol\":12598:12605  _tOwned */\n      0x02\n        /* \"contracts/MyToken.sol\":12598:12620  _tOwned[address(this)] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/MyToken.sol\":12598:12661  _tOwned[address(this)] = _tOwned[address(this)].add(tLiquidity) */\n      sstore\n        /* \"contracts/MyToken.sol\":12371:12668  {... */\n      pop\n      pop\n        /* \"contracts/MyToken.sol\":12319:12668  function _takeLiquidity(uint256 tLiquidity) private {... */\n      pop\n      jump\t// out\n        /* \"contracts/MyToken.sol\":9877:10021  function _reflectFee(uint256 rFee, uint256 tFee) private {... */\n    tag_778:\n        /* \"contracts/MyToken.sol\":9954:9961  _rTotal */\n      sload(0x08)\n        /* \"contracts/MyToken.sol\":9954:9971  _rTotal.sub(rFee) */\n      tag_818\n      swap1\n        /* \"contracts/MyToken.sol\":9966:9970  rFee */\n      dup4\n        /* \"contracts/MyToken.sol\":9954:9965  _rTotal.sub */\n      tag_413\n        /* \"contracts/MyToken.sol\":9954:9971  _rTotal.sub(rFee) */\n      jump\t// in\n    tag_818:\n        /* \"contracts/MyToken.sol\":9944:9951  _rTotal */\n      0x08\n        /* \"contracts/MyToken.sol\":9944:9971  _rTotal = _rTotal.sub(rFee) */\n      sstore\n        /* \"contracts/MyToken.sol\":9994:10004  _tFeeTotal */\n      sload(0x09)\n        /* \"contracts/MyToken.sol\":9994:10014  _tFeeTotal.add(tFee) */\n      tag_819\n      swap1\n        /* \"contracts/MyToken.sol\":10009:10013  tFee */\n      dup3\n        /* \"contracts/MyToken.sol\":9994:10008  _tFeeTotal.add */\n      tag_404\n        /* \"contracts/MyToken.sol\":9994:10014  _tFeeTotal.add(tFee) */\n      jump\t// in\n    tag_819:\n        /* \"contracts/MyToken.sol\":9981:9991  _tFeeTotal */\n      0x09\n        /* \"contracts/MyToken.sol\":9981:10014  _tFeeTotal = _tFeeTotal.add(tFee) */\n      sstore\n      pop\n      pop\n        /* \"contracts/MyToken.sol\":9877:10021  function _reflectFee(uint256 rFee, uint256 tFee) private {... */\n      jump\t// out\n        /* \"#utility.yul\":14:174   */\n    tag_821:\n        /* \"#utility.yul\":79:99   */\n      dup1\n      calldataload\n        /* \"#utility.yul\":135:148   */\n      dup1\n      iszero\n        /* \"#utility.yul\":128:149   */\n      iszero\n        /* \"#utility.yul\":118:150   */\n      dup2\n      eq\n        /* \"#utility.yul\":108:168   */\n      tag_823\n      jumpi\n        /* \"#utility.yul\":164:165   */\n      0x00\n        /* \"#utility.yul\":161:162   */\n      dup1\n        /* \"#utility.yul\":154:166   */\n      revert\n        /* \"#utility.yul\":108:168   */\n    tag_823:\n        /* \"#utility.yul\":14:174   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":179:426   */\n    tag_140:\n        /* \"#utility.yul\":238:244   */\n      0x00\n        /* \"#utility.yul\":291:293   */\n      0x20\n        /* \"#utility.yul\":279:288   */\n      dup3\n        /* \"#utility.yul\":270:277   */\n      dup5\n        /* \"#utility.yul\":266:289   */\n      sub\n        /* \"#utility.yul\":262:294   */\n      slt\n        /* \"#utility.yul\":259:311   */\n      iszero\n      tag_825\n      jumpi\n        /* \"#utility.yul\":307:308   */\n      0x00\n        /* \"#utility.yul\":304:305   */\n      dup1\n        /* \"#utility.yul\":297:309   */\n      revert\n        /* \"#utility.yul\":259:311   */\n    tag_825:\n        /* \"#utility.yul\":346:355   */\n      dup2\n        /* \"#utility.yul\":333:356   */\n      calldataload\n        /* \"#utility.yul\":365:396   */\n      tag_368\n        /* \"#utility.yul\":390:395   */\n      dup2\n        /* \"#utility.yul\":365:396   */\n      tag_827\n      jump\t// in\n        /* \"#utility.yul\":431:682   */\n    tag_743:\n        /* \"#utility.yul\":501:507   */\n      0x00\n        /* \"#utility.yul\":554:556   */\n      0x20\n        /* \"#utility.yul\":542:551   */\n      dup3\n        /* \"#utility.yul\":533:540   */\n      dup5\n        /* \"#utility.yul\":529:552   */\n      sub\n        /* \"#utility.yul\":525:557   */\n      slt\n        /* \"#utility.yul\":522:574   */\n      iszero\n      tag_829\n      jumpi\n        /* \"#utility.yul\":570:571   */\n      0x00\n        /* \"#utility.yul\":567:568   */\n      dup1\n        /* \"#utility.yul\":560:572   */\n      revert\n        /* \"#utility.yul\":522:574   */\n    tag_829:\n        /* \"#utility.yul\":602:611   */\n      dup2\n        /* \"#utility.yul\":596:612   */\n      mload\n        /* \"#utility.yul\":621:652   */\n      tag_368\n        /* \"#utility.yul\":646:651   */\n      dup2\n        /* \"#utility.yul\":621:652   */\n      tag_827\n      jump\t// in\n        /* \"#utility.yul\":687:1075   */\n    tag_314:\n        /* \"#utility.yul\":755:761   */\n      0x00\n        /* \"#utility.yul\":763:769   */\n      dup1\n        /* \"#utility.yul\":816:818   */\n      0x40\n        /* \"#utility.yul\":804:813   */\n      dup4\n        /* \"#utility.yul\":795:802   */\n      dup6\n        /* \"#utility.yul\":791:814   */\n      sub\n        /* \"#utility.yul\":787:819   */\n      slt\n        /* \"#utility.yul\":784:836   */\n      iszero\n      tag_832\n      jumpi\n        /* \"#utility.yul\":832:833   */\n      0x00\n        /* \"#utility.yul\":829:830   */\n      dup1\n        /* \"#utility.yul\":822:834   */\n      revert\n        /* \"#utility.yul\":784:836   */\n    tag_832:\n        /* \"#utility.yul\":871:880   */\n      dup3\n        /* \"#utility.yul\":858:881   */\n      calldataload\n        /* \"#utility.yul\":890:921   */\n      tag_833\n        /* \"#utility.yul\":915:920   */\n      dup2\n        /* \"#utility.yul\":890:921   */\n      tag_827\n      jump\t// in\n    tag_833:\n        /* \"#utility.yul\":940:945   */\n      swap2\n      pop\n        /* \"#utility.yul\":997:999   */\n      0x20\n        /* \"#utility.yul\":982:1000   */\n      dup4\n      add\n        /* \"#utility.yul\":969:1001   */\n      calldataload\n        /* \"#utility.yul\":1010:1043   */\n      tag_834\n        /* \"#utility.yul\":969:1001   */\n      dup2\n        /* \"#utility.yul\":1010:1043   */\n      tag_827\n      jump\t// in\n    tag_834:\n        /* \"#utility.yul\":1062:1069   */\n      dup1\n        /* \"#utility.yul\":1052:1069   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":687:1075   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1080:1536   */\n    tag_124:\n        /* \"#utility.yul\":1157:1163   */\n      0x00\n        /* \"#utility.yul\":1165:1171   */\n      dup1\n        /* \"#utility.yul\":1173:1179   */\n      0x00\n        /* \"#utility.yul\":1226:1228   */\n      0x60\n        /* \"#utility.yul\":1214:1223   */\n      dup5\n        /* \"#utility.yul\":1205:1212   */\n      dup7\n        /* \"#utility.yul\":1201:1224   */\n      sub\n        /* \"#utility.yul\":1197:1229   */\n      slt\n        /* \"#utility.yul\":1194:1246   */\n      iszero\n      tag_836\n      jumpi\n        /* \"#utility.yul\":1242:1243   */\n      0x00\n        /* \"#utility.yul\":1239:1240   */\n      dup1\n        /* \"#utility.yul\":1232:1244   */\n      revert\n        /* \"#utility.yul\":1194:1246   */\n    tag_836:\n        /* \"#utility.yul\":1281:1290   */\n      dup4\n        /* \"#utility.yul\":1268:1291   */\n      calldataload\n        /* \"#utility.yul\":1300:1331   */\n      tag_837\n        /* \"#utility.yul\":1325:1330   */\n      dup2\n        /* \"#utility.yul\":1300:1331   */\n      tag_827\n      jump\t// in\n    tag_837:\n        /* \"#utility.yul\":1350:1355   */\n      swap3\n      pop\n        /* \"#utility.yul\":1407:1409   */\n      0x20\n        /* \"#utility.yul\":1392:1410   */\n      dup5\n      add\n        /* \"#utility.yul\":1379:1411   */\n      calldataload\n        /* \"#utility.yul\":1420:1453   */\n      tag_838\n        /* \"#utility.yul\":1379:1411   */\n      dup2\n        /* \"#utility.yul\":1420:1453   */\n      tag_827\n      jump\t// in\n    tag_838:\n        /* \"#utility.yul\":1080:1536   */\n      swap3\n      swap6\n        /* \"#utility.yul\":1472:1479   */\n      swap3\n      swap5\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":1526:1528   */\n      0x40\n        /* \"#utility.yul\":1511:1529   */\n      swap2\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":1498:1530   */\n      calldataload\n      swap1\n        /* \"#utility.yul\":1080:1536   */\n      jump\t// out\n        /* \"#utility.yul\":1541:1856   */\n    tag_91:\n        /* \"#utility.yul\":1609:1615   */\n      0x00\n        /* \"#utility.yul\":1617:1623   */\n      dup1\n        /* \"#utility.yul\":1670:1672   */\n      0x40\n        /* \"#utility.yul\":1658:1667   */\n      dup4\n        /* \"#utility.yul\":1649:1656   */\n      dup6\n        /* \"#utility.yul\":1645:1668   */\n      sub\n        /* \"#utility.yul\":1641:1673   */\n      slt\n        /* \"#utility.yul\":1638:1690   */\n      iszero\n      tag_840\n      jumpi\n        /* \"#utility.yul\":1686:1687   */\n      0x00\n        /* \"#utility.yul\":1683:1684   */\n      dup1\n        /* \"#utility.yul\":1676:1688   */\n      revert\n        /* \"#utility.yul\":1638:1690   */\n    tag_840:\n        /* \"#utility.yul\":1725:1734   */\n      dup3\n        /* \"#utility.yul\":1712:1735   */\n      calldataload\n        /* \"#utility.yul\":1744:1775   */\n      tag_841\n        /* \"#utility.yul\":1769:1774   */\n      dup2\n        /* \"#utility.yul\":1744:1775   */\n      tag_827\n      jump\t// in\n    tag_841:\n        /* \"#utility.yul\":1794:1799   */\n      swap5\n        /* \"#utility.yul\":1846:1848   */\n      0x20\n        /* \"#utility.yul\":1831:1849   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":1818:1850   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":1541:1856   */\n      jump\t// out\n        /* \"#utility.yul\":1861:2041   */\n    tag_172:\n        /* \"#utility.yul\":1917:1923   */\n      0x00\n        /* \"#utility.yul\":1970:1972   */\n      0x20\n        /* \"#utility.yul\":1958:1967   */\n      dup3\n        /* \"#utility.yul\":1949:1956   */\n      dup5\n        /* \"#utility.yul\":1945:1968   */\n      sub\n        /* \"#utility.yul\":1941:1973   */\n      slt\n        /* \"#utility.yul\":1938:1990   */\n      iszero\n      tag_843\n      jumpi\n        /* \"#utility.yul\":1986:1987   */\n      0x00\n        /* \"#utility.yul\":1983:1984   */\n      dup1\n        /* \"#utility.yul\":1976:1988   */\n      revert\n        /* \"#utility.yul\":1938:1990   */\n    tag_843:\n        /* \"#utility.yul\":2009:2035   */\n      tag_368\n        /* \"#utility.yul\":2025:2034   */\n      dup3\n        /* \"#utility.yul\":2009:2035   */\n      tag_821\n      jump\t// in\n        /* \"#utility.yul\":2046:2226   */\n    tag_81:\n        /* \"#utility.yul\":2105:2111   */\n      0x00\n        /* \"#utility.yul\":2158:2160   */\n      0x20\n        /* \"#utility.yul\":2146:2155   */\n      dup3\n        /* \"#utility.yul\":2137:2144   */\n      dup5\n        /* \"#utility.yul\":2133:2156   */\n      sub\n        /* \"#utility.yul\":2129:2161   */\n      slt\n        /* \"#utility.yul\":2126:2178   */\n      iszero\n      tag_846\n      jumpi\n        /* \"#utility.yul\":2174:2175   */\n      0x00\n        /* \"#utility.yul\":2171:2172   */\n      dup1\n        /* \"#utility.yul\":2164:2176   */\n      revert\n        /* \"#utility.yul\":2126:2178   */\n    tag_846:\n      pop\n        /* \"#utility.yul\":2197:2220   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":2046:2226   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2231:2479   */\n    tag_162:\n        /* \"#utility.yul\":2296:2302   */\n      0x00\n        /* \"#utility.yul\":2304:2310   */\n      dup1\n        /* \"#utility.yul\":2357:2359   */\n      0x40\n        /* \"#utility.yul\":2345:2354   */\n      dup4\n        /* \"#utility.yul\":2336:2343   */\n      dup6\n        /* \"#utility.yul\":2332:2355   */\n      sub\n        /* \"#utility.yul\":2328:2360   */\n      slt\n        /* \"#utility.yul\":2325:2377   */\n      iszero\n      tag_848\n      jumpi\n        /* \"#utility.yul\":2373:2374   */\n      0x00\n        /* \"#utility.yul\":2370:2371   */\n      dup1\n        /* \"#utility.yul\":2363:2375   */\n      revert\n        /* \"#utility.yul\":2325:2377   */\n    tag_848:\n        /* \"#utility.yul\":2409:2418   */\n      dup3\n        /* \"#utility.yul\":2396:2419   */\n      calldataload\n        /* \"#utility.yul\":2386:2419   */\n      swap2\n      pop\n        /* \"#utility.yul\":2438:2473   */\n      tag_849\n        /* \"#utility.yul\":2469:2471   */\n      0x20\n        /* \"#utility.yul\":2458:2467   */\n      dup5\n        /* \"#utility.yul\":2454:2472   */\n      add\n        /* \"#utility.yul\":2438:2473   */\n      tag_821\n      jump\t// in\n    tag_849:\n        /* \"#utility.yul\":2428:2473   */\n      swap1\n      pop\n        /* \"#utility.yul\":2231:2479   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2484:2790   */\n    tag_761:\n        /* \"#utility.yul\":2572:2578   */\n      0x00\n        /* \"#utility.yul\":2580:2586   */\n      dup1\n        /* \"#utility.yul\":2588:2594   */\n      0x00\n        /* \"#utility.yul\":2641:2643   */\n      0x60\n        /* \"#utility.yul\":2629:2638   */\n      dup5\n        /* \"#utility.yul\":2620:2627   */\n      dup7\n        /* \"#utility.yul\":2616:2639   */\n      sub\n        /* \"#utility.yul\":2612:2644   */\n      slt\n        /* \"#utility.yul\":2609:2661   */\n      iszero\n      tag_851\n      jumpi\n        /* \"#utility.yul\":2657:2658   */\n      0x00\n        /* \"#utility.yul\":2654:2655   */\n      dup1\n        /* \"#utility.yul\":2647:2659   */\n      revert\n        /* \"#utility.yul\":2609:2661   */\n    tag_851:\n        /* \"#utility.yul\":2686:2695   */\n      dup4\n        /* \"#utility.yul\":2680:2696   */\n      mload\n        /* \"#utility.yul\":2670:2696   */\n      swap3\n      pop\n        /* \"#utility.yul\":2736:2738   */\n      0x20\n        /* \"#utility.yul\":2725:2734   */\n      dup5\n        /* \"#utility.yul\":2721:2739   */\n      add\n        /* \"#utility.yul\":2715:2740   */\n      mload\n        /* \"#utility.yul\":2705:2740   */\n      swap2\n      pop\n        /* \"#utility.yul\":2780:2782   */\n      0x40\n        /* \"#utility.yul\":2769:2778   */\n      dup5\n        /* \"#utility.yul\":2765:2783   */\n      add\n        /* \"#utility.yul\":2759:2784   */\n      mload\n        /* \"#utility.yul\":2749:2784   */\n      swap1\n      pop\n        /* \"#utility.yul\":2484:2790   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":4730:5327   */\n    tag_87:\n        /* \"#utility.yul\":4842:4846   */\n      0x00\n        /* \"#utility.yul\":4871:4873   */\n      0x20\n        /* \"#utility.yul\":4900:4902   */\n      dup1\n        /* \"#utility.yul\":4889:4898   */\n      dup4\n        /* \"#utility.yul\":4882:4903   */\n      mstore\n        /* \"#utility.yul\":4932:4938   */\n      dup4\n        /* \"#utility.yul\":4926:4939   */\n      mload\n        /* \"#utility.yul\":4975:4981   */\n      dup1\n        /* \"#utility.yul\":4970:4972   */\n      dup3\n        /* \"#utility.yul\":4959:4968   */\n      dup6\n        /* \"#utility.yul\":4955:4973   */\n      add\n        /* \"#utility.yul\":4948:4982   */\n      mstore\n        /* \"#utility.yul\":5000:5001   */\n      0x00\n        /* \"#utility.yul\":5010:5150   */\n    tag_859:\n        /* \"#utility.yul\":5024:5030   */\n      dup2\n        /* \"#utility.yul\":5021:5022   */\n      dup2\n        /* \"#utility.yul\":5018:5031   */\n      lt\n        /* \"#utility.yul\":5010:5150   */\n      iszero\n      tag_861\n      jumpi\n        /* \"#utility.yul\":5119:5133   */\n      dup6\n      dup2\n      add\n        /* \"#utility.yul\":5115:5138   */\n      dup4\n      add\n        /* \"#utility.yul\":5109:5139   */\n      mload\n        /* \"#utility.yul\":5085:5102   */\n      dup6\n      dup3\n      add\n        /* \"#utility.yul\":5104:5106   */\n      0x40\n        /* \"#utility.yul\":5081:5107   */\n      add\n        /* \"#utility.yul\":5074:5140   */\n      mstore\n        /* \"#utility.yul\":5039:5049   */\n      dup3\n      add\n        /* \"#utility.yul\":5010:5150   */\n      jump(tag_859)\n    tag_861:\n        /* \"#utility.yul\":5168:5174   */\n      dup2\n        /* \"#utility.yul\":5165:5166   */\n      dup2\n        /* \"#utility.yul\":5162:5175   */\n      gt\n        /* \"#utility.yul\":5159:5250   */\n      iszero\n      tag_862\n      jumpi\n        /* \"#utility.yul\":5238:5239   */\n      0x00\n        /* \"#utility.yul\":5233:5235   */\n      0x40\n        /* \"#utility.yul\":5224:5230   */\n      dup4\n        /* \"#utility.yul\":5213:5222   */\n      dup8\n        /* \"#utility.yul\":5209:5231   */\n      add\n        /* \"#utility.yul\":5205:5236   */\n      add\n        /* \"#utility.yul\":5198:5240   */\n      mstore\n        /* \"#utility.yul\":5159:5250   */\n    tag_862:\n      pop\n        /* \"#utility.yul\":5311:5313   */\n      0x1f\n        /* \"#utility.yul\":5290:5305   */\n      add\n      not(0x1f)\n        /* \"#utility.yul\":5286:5315   */\n      and\n        /* \"#utility.yul\":5271:5316   */\n      swap3\n      swap1\n      swap3\n      add\n        /* \"#utility.yul\":5318:5320   */\n      0x40\n        /* \"#utility.yul\":5267:5321   */\n      add\n      swap4\n        /* \"#utility.yul\":4730:5327   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6098:6496   */\n    tag_438:\n        /* \"#utility.yul\":6300:6302   */\n      0x20\n        /* \"#utility.yul\":6282:6303   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":6339:6341   */\n      0x22\n        /* \"#utility.yul\":6319:6337   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":6312:6342   */\n      mstore\n        /* \"#utility.yul\":6378:6412   */\n      0x4f6e6c792061646d696e206f7220616e7469206d616e6167657220616c6c6f77\n        /* \"#utility.yul\":6373:6375   */\n      0x40\n        /* \"#utility.yul\":6358:6376   */\n      dup3\n      add\n        /* \"#utility.yul\":6351:6413   */\n      mstore\n      shl(0xf2, 0x1959)\n        /* \"#utility.yul\":6444:6446   */\n      0x60\n        /* \"#utility.yul\":6429:6447   */\n      dup3\n      add\n        /* \"#utility.yul\":6422:6454   */\n      mstore\n        /* \"#utility.yul\":6486:6489   */\n      0x80\n        /* \"#utility.yul\":6471:6490   */\n      add\n      swap1\n        /* \"#utility.yul\":6098:6496   */\n      jump\t// out\n        /* \"#utility.yul\":15417:16397   */\n    tag_748:\n        /* \"#utility.yul\":15679:15683   */\n      0x00\n        /* \"#utility.yul\":15727:15730   */\n      0xa0\n        /* \"#utility.yul\":15716:15725   */\n      dup3\n        /* \"#utility.yul\":15712:15731   */\n      add\n        /* \"#utility.yul\":15758:15764   */\n      dup8\n        /* \"#utility.yul\":15747:15756   */\n      dup4\n        /* \"#utility.yul\":15740:15765   */\n      mstore\n        /* \"#utility.yul\":15784:15786   */\n      0x20\n        /* \"#utility.yul\":15822:15828   */\n      dup8\n        /* \"#utility.yul\":15817:15819   */\n      dup2\n        /* \"#utility.yul\":15806:15815   */\n      dup6\n        /* \"#utility.yul\":15802:15820   */\n      add\n        /* \"#utility.yul\":15795:15829   */\n      mstore\n        /* \"#utility.yul\":15865:15868   */\n      0xa0\n        /* \"#utility.yul\":15860:15862   */\n      0x40\n        /* \"#utility.yul\":15849:15858   */\n      dup6\n        /* \"#utility.yul\":15845:15863   */\n      add\n        /* \"#utility.yul\":15838:15869   */\n      mstore\n        /* \"#utility.yul\":15889:15895   */\n      dup2\n        /* \"#utility.yul\":15924:15930   */\n      dup8\n        /* \"#utility.yul\":15918:15931   */\n      mload\n        /* \"#utility.yul\":15955:15961   */\n      dup1\n        /* \"#utility.yul\":15947:15953   */\n      dup5\n        /* \"#utility.yul\":15940:15962   */\n      mstore\n        /* \"#utility.yul\":15993:15996   */\n      0xc0\n        /* \"#utility.yul\":15982:15991   */\n      dup7\n        /* \"#utility.yul\":15978:15997   */\n      add\n        /* \"#utility.yul\":15971:15997   */\n      swap2\n      pop\n        /* \"#utility.yul\":16032:16034   */\n      dup3\n        /* \"#utility.yul\":16024:16030   */\n      dup10\n        /* \"#utility.yul\":16020:16035   */\n      add\n        /* \"#utility.yul\":16006:16035   */\n      swap4\n      pop\n        /* \"#utility.yul\":16053:16054   */\n      0x00\n        /* \"#utility.yul\":16063:16258   */\n    tag_890:\n        /* \"#utility.yul\":16077:16083   */\n      dup2\n        /* \"#utility.yul\":16074:16075   */\n      dup2\n        /* \"#utility.yul\":16071:16084   */\n      lt\n        /* \"#utility.yul\":16063:16258   */\n      iszero\n      tag_892\n      jumpi\n        /* \"#utility.yul\":16142:16155   */\n      dup5\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":16138:16177   */\n      and\n        /* \"#utility.yul\":16126:16178   */\n      dup4\n      mstore\n        /* \"#utility.yul\":16233:16248   */\n      swap4\n      dup4\n      add\n      swap4\n        /* \"#utility.yul\":16198:16210   */\n      swap2\n      dup4\n      add\n      swap2\n        /* \"#utility.yul\":16174:16175   */\n      0x01\n        /* \"#utility.yul\":16092:16101   */\n      add\n        /* \"#utility.yul\":16063:16258   */\n      jump(tag_890)\n    tag_892:\n      pop\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":16314:16346   */\n      swap7\n      swap1\n      swap7\n      and\n        /* \"#utility.yul\":16309:16311   */\n      0x60\n        /* \"#utility.yul\":16294:16312   */\n      dup6\n      add\n        /* \"#utility.yul\":16287:16347   */\n      mstore\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":16378:16381   */\n      0x80\n        /* \"#utility.yul\":16363:16382   */\n      add\n        /* \"#utility.yul\":16356:16391   */\n      mstore\n        /* \"#utility.yul\":16275:16278   */\n      swap4\n        /* \"#utility.yul\":15417:16397   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16915:17043   */\n    tag_613:\n        /* \"#utility.yul\":16955:16958   */\n      0x00\n        /* \"#utility.yul\":16986:16987   */\n      dup3\n        /* \"#utility.yul\":16982:16988   */\n      not\n        /* \"#utility.yul\":16979:16980   */\n      dup3\n        /* \"#utility.yul\":16976:16989   */\n      gt\n        /* \"#utility.yul\":16973:17012   */\n      iszero\n      tag_897\n      jumpi\n        /* \"#utility.yul\":16992:17010   */\n      tag_897\n      tag_898\n      jump\t// in\n    tag_897:\n      pop\n        /* \"#utility.yul\":17028:17037   */\n      add\n      swap1\n        /* \"#utility.yul\":16915:17043   */\n      jump\t// out\n        /* \"#utility.yul\":17048:17265   */\n    tag_592:\n        /* \"#utility.yul\":17088:17089   */\n      0x00\n        /* \"#utility.yul\":17114:17115   */\n      dup3\n        /* \"#utility.yul\":17104:17236   */\n      tag_900\n      jumpi\n        /* \"#utility.yul\":17158:17168   */\n      0x4e487b71\n        /* \"#utility.yul\":17153:17156   */\n      0xe0\n        /* \"#utility.yul\":17149:17169   */\n      shl\n        /* \"#utility.yul\":17146:17147   */\n      0x00\n        /* \"#utility.yul\":17139:17170   */\n      mstore\n        /* \"#utility.yul\":17193:17197   */\n      0x12\n        /* \"#utility.yul\":17190:17191   */\n      0x04\n        /* \"#utility.yul\":17183:17198   */\n      mstore\n        /* \"#utility.yul\":17221:17225   */\n      0x24\n        /* \"#utility.yul\":17218:17219   */\n      0x00\n        /* \"#utility.yul\":17211:17226   */\n      revert\n        /* \"#utility.yul\":17104:17236   */\n    tag_900:\n      pop\n        /* \"#utility.yul\":17250:17259   */\n      div\n      swap1\n        /* \"#utility.yul\":17048:17265   */\n      jump\t// out\n        /* \"#utility.yul\":17270:17438   */\n    tag_590:\n        /* \"#utility.yul\":17310:17317   */\n      0x00\n        /* \"#utility.yul\":17376:17377   */\n      dup2\n        /* \"#utility.yul\":17372:17373   */\n      0x00\n        /* \"#utility.yul\":17368:17374   */\n      not\n        /* \"#utility.yul\":17364:17378   */\n      div\n        /* \"#utility.yul\":17361:17362   */\n      dup4\n        /* \"#utility.yul\":17358:17379   */\n      gt\n        /* \"#utility.yul\":17353:17354   */\n      dup3\n        /* \"#utility.yul\":17346:17355   */\n      iszero\n        /* \"#utility.yul\":17339:17356   */\n      iszero\n        /* \"#utility.yul\":17335:17380   */\n      and\n        /* \"#utility.yul\":17332:17403   */\n      iszero\n      tag_903\n      jumpi\n        /* \"#utility.yul\":17383:17401   */\n      tag_903\n      tag_898\n      jump\t// in\n    tag_903:\n      pop\n        /* \"#utility.yul\":17423:17432   */\n      mul\n      swap1\n        /* \"#utility.yul\":17270:17438   */\n      jump\t// out\n        /* \"#utility.yul\":17443:17568   */\n    tag_386:\n        /* \"#utility.yul\":17483:17487   */\n      0x00\n        /* \"#utility.yul\":17511:17512   */\n      dup3\n        /* \"#utility.yul\":17508:17509   */\n      dup3\n        /* \"#utility.yul\":17505:17513   */\n      lt\n        /* \"#utility.yul\":17502:17536   */\n      iszero\n      tag_906\n      jumpi\n        /* \"#utility.yul\":17516:17534   */\n      tag_906\n      tag_898\n      jump\t// in\n    tag_906:\n      pop\n        /* \"#utility.yul\":17553:17562   */\n      sub\n      swap1\n        /* \"#utility.yul\":17443:17568   */\n      jump\t// out\n        /* \"#utility.yul\":17573:17953   */\n    tag_342:\n        /* \"#utility.yul\":17652:17653   */\n      0x01\n        /* \"#utility.yul\":17648:17660   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":17695:17707   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":17716:17777   */\n      tag_908\n      jumpi\n        /* \"#utility.yul\":17770:17774   */\n      0x7f\n        /* \"#utility.yul\":17762:17768   */\n      dup3\n        /* \"#utility.yul\":17758:17775   */\n      and\n        /* \"#utility.yul\":17748:17775   */\n      swap2\n      pop\n        /* \"#utility.yul\":17716:17777   */\n    tag_908:\n        /* \"#utility.yul\":17823:17825   */\n      0x20\n        /* \"#utility.yul\":17815:17821   */\n      dup3\n        /* \"#utility.yul\":17812:17826   */\n      lt\n        /* \"#utility.yul\":17792:17810   */\n      dup2\n        /* \"#utility.yul\":17789:17827   */\n      eq\n        /* \"#utility.yul\":17786:17947   */\n      iszero\n      tag_909\n      jumpi\n        /* \"#utility.yul\":17869:17879   */\n      0x4e487b71\n        /* \"#utility.yul\":17864:17867   */\n      0xe0\n        /* \"#utility.yul\":17860:17880   */\n      shl\n        /* \"#utility.yul\":17857:17858   */\n      0x00\n        /* \"#utility.yul\":17850:17881   */\n      mstore\n        /* \"#utility.yul\":17904:17908   */\n      0x22\n        /* \"#utility.yul\":17901:17902   */\n      0x04\n        /* \"#utility.yul\":17894:17909   */\n      mstore\n        /* \"#utility.yul\":17932:17936   */\n      0x24\n        /* \"#utility.yul\":17929:17930   */\n      0x00\n        /* \"#utility.yul\":17922:17937   */\n      revert\n        /* \"#utility.yul\":17786:17947   */\n    tag_909:\n      pop\n        /* \"#utility.yul\":17573:17953   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17958:18093   */\n    tag_398:\n        /* \"#utility.yul\":17997:18000   */\n      0x00\n      not(0x00)\n        /* \"#utility.yul\":18018:18035   */\n      dup3\n      eq\n        /* \"#utility.yul\":18015:18058   */\n      iszero\n      tag_912\n      jumpi\n        /* \"#utility.yul\":18038:18056   */\n      tag_912\n      tag_898\n      jump\t// in\n    tag_912:\n      pop\n        /* \"#utility.yul\":18085:18086   */\n      0x01\n        /* \"#utility.yul\":18074:18087   */\n      add\n      swap1\n        /* \"#utility.yul\":17958:18093   */\n      jump\t// out\n        /* \"#utility.yul\":18098:18225   */\n    tag_898:\n        /* \"#utility.yul\":18159:18169   */\n      0x4e487b71\n        /* \"#utility.yul\":18154:18157   */\n      0xe0\n        /* \"#utility.yul\":18150:18170   */\n      shl\n        /* \"#utility.yul\":18147:18148   */\n      0x00\n        /* \"#utility.yul\":18140:18171   */\n      mstore\n        /* \"#utility.yul\":18190:18194   */\n      0x11\n        /* \"#utility.yul\":18187:18188   */\n      0x04\n        /* \"#utility.yul\":18180:18195   */\n      mstore\n        /* \"#utility.yul\":18214:18218   */\n      0x24\n        /* \"#utility.yul\":18211:18212   */\n      0x00\n        /* \"#utility.yul\":18204:18219   */\n      revert\n        /* \"#utility.yul\":18230:18357   */\n    tag_395:\n        /* \"#utility.yul\":18291:18301   */\n      0x4e487b71\n        /* \"#utility.yul\":18286:18289   */\n      0xe0\n        /* \"#utility.yul\":18282:18302   */\n      shl\n        /* \"#utility.yul\":18279:18280   */\n      0x00\n        /* \"#utility.yul\":18272:18303   */\n      mstore\n        /* \"#utility.yul\":18322:18326   */\n      0x31\n        /* \"#utility.yul\":18319:18320   */\n      0x04\n        /* \"#utility.yul\":18312:18327   */\n      mstore\n        /* \"#utility.yul\":18346:18350   */\n      0x24\n        /* \"#utility.yul\":18343:18344   */\n      0x00\n        /* \"#utility.yul\":18336:18351   */\n      revert\n        /* \"#utility.yul\":18362:18489   */\n    tag_382:\n        /* \"#utility.yul\":18423:18433   */\n      0x4e487b71\n        /* \"#utility.yul\":18418:18421   */\n      0xe0\n        /* \"#utility.yul\":18414:18434   */\n      shl\n        /* \"#utility.yul\":18411:18412   */\n      0x00\n        /* \"#utility.yul\":18404:18435   */\n      mstore\n        /* \"#utility.yul\":18454:18458   */\n      0x32\n        /* \"#utility.yul\":18451:18452   */\n      0x04\n        /* \"#utility.yul\":18444:18459   */\n      mstore\n        /* \"#utility.yul\":18478:18482   */\n      0x24\n        /* \"#utility.yul\":18475:18476   */\n      0x00\n        /* \"#utility.yul\":18468:18483   */\n      revert\n        /* \"#utility.yul\":18626:18757   */\n    tag_827:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":18701:18732   */\n      dup2\n      and\n        /* \"#utility.yul\":18691:18733   */\n      dup2\n      eq\n        /* \"#utility.yul\":18681:18751   */\n      tag_549\n      jumpi\n        /* \"#utility.yul\":18747:18748   */\n      0x00\n        /* \"#utility.yul\":18744:18745   */\n      dup1\n        /* \"#utility.yul\":18737:18749   */\n      revert\n    stop\n    data_4f3506f4ba71c79c3cbd442a3afeb30e9b27af2d84e116a4385b34e267d2287e 42455032303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365\n    data_b7060b3538dcd3ddc8a941c91636a8115a1aa46914747fd9809d543bbb46cd22 42455032303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f\n\n    auxdata: 0xa264697066735822122020955769f4dc6c0af072ba7026476cba804cfb8d88c7106ec059d4363187ea5764736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1861": {
									"entryPoint": null,
									"id": 1861,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_23": {
									"entryPoint": null,
									"id": 23,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_532": {
									"entryPoint": null,
									"id": 532,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_111": {
									"entryPoint": 1304,
									"id": 111,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@owner_40": {
									"entryPoint": null,
									"id": 40,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 1620,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_contract$_IPancakeV2Router02_$1555t_addresst_address_fromMemory": {
									"entryPoint": 1659,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 1743,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 1777,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 1803,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 1864,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mod_t_uint256": {
									"entryPoint": 1894,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 1929,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 1951,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_address": {
									"entryPoint": 1973,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:2751:10",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:10",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "95:170:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "141:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "150:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "153:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "143:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "143:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "143:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "116:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "125:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "112:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "112:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "137:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "108:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "108:32:10"
															},
															"nodeType": "YulIf",
															"src": "105:52:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "166:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "185:9:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "179:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "179:16:10"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "170:5:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "229:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "204:24:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "204:31:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "204:31:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "244:15:10",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "254:5:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "244:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "61:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "72:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "84:6:10",
														"type": ""
													}
												],
												"src": "14:251:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "412:404:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "458:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "467:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "470:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "460:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "460:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "460:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "433:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "442:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "429:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "429:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "454:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "425:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "425:32:10"
															},
															"nodeType": "YulIf",
															"src": "422:52:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "483:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "502:9:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "496:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "496:16:10"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "487:5:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "546:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "521:24:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "521:31:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "521:31:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "561:15:10",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "571:5:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "561:6:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "585:40:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "610:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "621:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "606:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "606:18:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "600:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "600:25:10"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nodeType": "YulTypedName",
																	"src": "589:7:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_1",
																		"nodeType": "YulIdentifier",
																		"src": "659:7:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "634:24:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "634:33:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "634:33:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "676:17:10",
															"value": {
																"name": "value_1",
																"nodeType": "YulIdentifier",
																"src": "686:7:10"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "676:6:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "702:40:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "727:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "738:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "723:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "723:18:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "717:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "717:25:10"
															},
															"variables": [
																{
																	"name": "value_2",
																	"nodeType": "YulTypedName",
																	"src": "706:7:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_2",
																		"nodeType": "YulIdentifier",
																		"src": "776:7:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "751:24:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "751:33:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "751:33:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "793:17:10",
															"value": {
																"name": "value_2",
																"nodeType": "YulIdentifier",
																"src": "803:7:10"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "793:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_contract$_IPancakeV2Router02_$1555t_addresst_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "362:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "373:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "385:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "393:6:10",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "401:6:10",
														"type": ""
													}
												],
												"src": "270:546:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "950:175:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "960:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "972:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "983:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "968:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "968:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "960:4:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "995:29:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1013:3:10",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1018:1:10",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "1009:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1009:11:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1022:1:10",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "1005:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1005:19:10"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "999:2:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1040:9:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "1055:6:10"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "1063:2:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1051:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1051:15:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1033:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1033:34:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1033:34:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1087:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1098:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1083:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1083:18:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "1107:6:10"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "1115:2:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1103:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1103:15:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1076:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1076:43:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1076:43:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "911:9:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "922:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "930:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "941:4:10",
														"type": ""
													}
												],
												"src": "821:304:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1231:76:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1241:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1253:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1264:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1249:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1249:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1241:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1283:9:10"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1294:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1276:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1276:25:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1276:25:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1200:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1211:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1222:4:10",
														"type": ""
													}
												],
												"src": "1130:177:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1364:116:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1423:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "1425:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1425:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1425:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "1395:1:10"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "1388:6:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1388:9:10"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1381:6:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1381:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "1403:1:10"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1414:1:10",
																								"type": "",
																								"value": "0"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "1410:3:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1410:6:10"
																					},
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "1418:1:10"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "1406:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1406:14:10"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "1400:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1400:21:10"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1377:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1377:45:10"
															},
															"nodeType": "YulIf",
															"src": "1374:71:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1454:20:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "1469:1:10"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "1472:1:10"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "1465:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1465:9:10"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "1454:7:10"
																}
															]
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "1343:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "1346:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "1352:7:10",
														"type": ""
													}
												],
												"src": "1312:168:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1534:76:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1556:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "1558:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1558:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1558:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "1550:1:10"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "1553:1:10"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "1547:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1547:8:10"
															},
															"nodeType": "YulIf",
															"src": "1544:34:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1587:17:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "1599:1:10"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "1602:1:10"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "1595:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1595:9:10"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "1587:4:10"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "1516:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "1519:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "1525:4:10",
														"type": ""
													}
												],
												"src": "1485:125:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1670:325:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1680:22:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1694:1:10",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "1697:4:10"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "1690:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1690:12:10"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "1680:6:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1711:38:10",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "1741:4:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1747:1:10",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1737:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1737:12:10"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "1715:18:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1788:31:10",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1790:27:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "1804:6:10"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1812:4:10",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "1800:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1800:17:10"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1790:6:10"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "1768:18:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1761:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1761:26:10"
															},
															"nodeType": "YulIf",
															"src": "1758:61:10"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1878:111:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1899:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1906:3:10",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1911:10:10",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "1902:3:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1902:20:10"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1892:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1892:31:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1892:31:10"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1943:1:10",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1946:4:10",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1936:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1936:15:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1936:15:10"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1971:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1974:4:10",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1964:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1964:15:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1964:15:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "1834:18:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1857:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1865:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "1854:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1854:14:10"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "1831:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1831:38:10"
															},
															"nodeType": "YulIf",
															"src": "1828:161:10"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "1650:4:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1659:6:10",
														"type": ""
													}
												],
												"src": "1615:380:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2047:88:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2078:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "2080:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2080:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2080:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2063:5:10"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2074:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "2070:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2070:6:10"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "2060:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2060:17:10"
															},
															"nodeType": "YulIf",
															"src": "2057:43:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2109:20:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2120:5:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2127:1:10",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2116:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2116:13:10"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "2109:3:10"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2029:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "2039:3:10",
														"type": ""
													}
												],
												"src": "2000:135:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2178:171:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2209:111:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2230:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2237:3:10",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2242:10:10",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "2233:3:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2233:20:10"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2223:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2223:31:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2223:31:10"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2274:1:10",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2277:4:10",
																					"type": "",
																					"value": "0x12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2267:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2267:15:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2267:15:10"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2302:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2305:4:10",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2295:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2295:15:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2295:15:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "2198:1:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2191:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2191:9:10"
															},
															"nodeType": "YulIf",
															"src": "2188:132:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2329:14:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2338:1:10"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "2341:1:10"
																	}
																],
																"functionName": {
																	"name": "mod",
																	"nodeType": "YulIdentifier",
																	"src": "2334:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2334:9:10"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "2329:1:10"
																}
															]
														}
													]
												},
												"name": "mod_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "2163:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "2166:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "2172:1:10",
														"type": ""
													}
												],
												"src": "2140:209:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2386:95:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2403:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2410:3:10",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2415:10:10",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "2406:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2406:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2396:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2396:31:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2396:31:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2443:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2446:4:10",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2436:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2436:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2436:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2467:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2470:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2460:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2460:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2460:15:10"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "2354:127:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2518:95:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2535:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2542:3:10",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2547:10:10",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "2538:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2538:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2528:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2528:31:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2528:31:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2575:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2578:4:10",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2568:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2568:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2568:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2599:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2602:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2592:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2592:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2592:15:10"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "2486:127:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2663:86:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2727:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2736:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2739:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2729:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2729:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2729:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2686:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2697:5:10"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "2712:3:10",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "2717:1:10",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "2708:3:10"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2708:11:10"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2721:1:10",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "2704:3:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2704:19:10"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "2693:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2693:31:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2683:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2683:42:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2676:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2676:50:10"
															},
															"nodeType": "YulIf",
															"src": "2673:70:10"
														}
													]
												},
												"name": "validator_revert_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2652:5:10",
														"type": ""
													}
												],
												"src": "2618:131:10"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_contract$_IPancakeV2Router02_$1555t_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := mload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n        let value_2 := mload(add(headStart, 64))\n        validator_revert_address(value_2)\n        value2 := value_2\n    }\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        if and(iszero(iszero(x)), gt(y, div(not(0), x))) { panic_error_0x11() }\n        product := mul(x, y)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function mod_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := mod(x, y)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n}",
									"id": 10,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040526b1921a082258a73bfc32400006007819055620000249060001962000766565b6200003290600019620006f1565b60085560408051808201909152600c8082526b26b2ba3096b837b5b2b6b7b760a11b60209092019182526200006a91600a9162000568565b50604080518082019091526007808252663837b5b2b6b7b760c91b60209092019182526200009b91600b9162000568565b50600c805460ff191660129081179091556002600d819055600e8190556001600f819055601081905560118290559181905560138190556015819055601681905560179190915560188190556019556005601a55601f805460ff60a81b1916905569d3c21bcecceda1000000602090815560408051610160810182526201008e81526201f81c9281019290925262040583908201526207f4476060820152620ffc196080820152621fd8f060a0820152623fffad60c0820152627ff82e60e0820152630101863b610100820152630200271a6101208201526304030d336101408201526200018e90602190600b620005f7565b503480156200019c57600080fd5b50604051620036e7380380620036e7833981016040819052620001bf916200067b565b620001ca3362000518565b601480546001600160a01b0319166001600160a01b0384811691909117909155601d8054610100600160a81b0319166101009284169290920291909117905560085460016000620002183390565b6001600160a01b03166001600160a01b0316815260200190815260200160002081905550826001600160a01b031663c45a01556040518163ffffffff1660e01b815260040160206040518083038186803b1580156200027657600080fd5b505afa1580156200028b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620002b1919062000654565b6001600160a01b031663c9c6539630856001600160a01b031663ad5c46486040518163ffffffff1660e01b815260040160206040518083038186803b158015620002fa57600080fd5b505afa1580156200030f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000335919062000654565b6040516001600160e01b031960e085901b1681526001600160a01b03928316600482015291166024820152604401602060405180830381600087803b1580156200037e57600080fd5b505af115801562000393573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620003b9919062000654565b601f80546001600160a01b03199081166001600160a01b0393841617909155601e8054909116918516919091179055600160046000620004016000546001600160a01b031690565b6001600160a01b03908116825260208083019390935260409182016000908120805495151560ff19968716179055908516815260049092528082208054841660019081179091553083529082208054909316179091555b602154811015620004d3576001601c6000602184815481106200047f576200047f6200079f565b9060005260206000200154670de0b6b3a76400006200049f9190620006cf565b81526020810191909152604001600020805460ff191691151591909117905580620004ca8162000748565b91505062000458565b5060075460405190815233906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a3505050620007ce565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b82805462000576906200070b565b90600052602060002090601f0160209004810192826200059a5760008555620005e5565b82601f10620005b557805160ff1916838001178555620005e5565b82800160010185558215620005e5579182015b82811115620005e5578251825591602001919060010190620005c8565b50620005f39291506200063d565b5090565b828054828255906000526020600020908101928215620005e5579160200282015b82811115620005e5578251829063ffffffff1690559160200191906001019062000618565b5b80821115620005f357600081556001016200063e565b6000602082840312156200066757600080fd5b81516200067481620007b5565b9392505050565b6000806000606084860312156200069157600080fd5b83516200069e81620007b5565b6020850151909350620006b181620007b5565b6040850151909250620006c481620007b5565b809150509250925092565b6000816000190483118215151615620006ec57620006ec62000789565b500290565b60008282101562000706576200070662000789565b500390565b600181811c908216806200072057607f821691505b602082108114156200074257634e487b7160e01b600052602260045260246000fd5b50919050565b60006000198214156200075f576200075f62000789565b5060010190565b6000826200078457634e487b7160e01b600052601260045260246000fd5b500690565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b6001600160a01b0381168114620007cb57600080fd5b50565b612f0980620007de6000396000f3fe6080604052600436106103855760003560e01c80636bc87c3a116101d1578063a9059cbb11610102578063d0e03523116100a0578063e1e144de1161006f578063e1e144de14610a4b578063ea2f0b3714610a6c578063ebf7866314610a8c578063f2fde38b14610aac57600080fd5b8063d0e03523146109a6578063d5bde46c146109c6578063d8c6404b146109eb578063dd62ed3e14610a0557600080fd5b8063c2c7c03a116100dc578063c2c7c03a14610930578063c49b9a8014610950578063c860795214610970578063cea269581461098657600080fd5b8063a9059cbb146108da578063a928681c146108fa578063c0b0fda21461091a57600080fd5b806388790a681161016f5780638ee88c53116101495780638ee88c531461086557806395d89b41146108855780639655cab51461089a578063a457c2d7146108ba57600080fd5b806388790a68146107f857806388f820201461080e5780638da5cb5b1461084757600080fd5b806374fb20e1116101ab57806374fb20e11461078d57806375f0a874146107a25780637abdc1ca146107c2578063882cfb3f146107d857600080fd5b80636bc87c3a1461074257806370a0823114610758578063715018a61461077857600080fd5b80633b124fe7116102b657806352390c02116102545780635d098b38116102235780635d098b38146106cc578063611bf629146106ec578063632a6a351461070c57806364a06e801461072c57600080fd5b806352390c02146106395780635342acb41461065957806357d87f0d146106925780635876ccc5146106ac57600080fd5b80634549b039116102905780634549b039146105b8578063457c194c146105d85780634a5566bf146105f85780634a74bb021461061857600080fd5b80633b124fe7146105625780633bd5d17314610578578063437823ec1461059857600080fd5b8063200a692d116103235780632d838119116102fd5780632d838119146104e0578063313ce567146105005780633685d41914610522578063395093511461054257600080fd5b8063200a692d1461049457806322976e0d146104aa57806323b872dd146104c057600080fd5b80630a7d2d871161035f5780630a7d2d871461040e57806313114a9d1461043257806318160ddd146104475780631a4cd1b11461045c57600080fd5b8063061c82d01461039157806306fdde03146103b3578063095ea7b3146103de57600080fd5b3661038c57005b600080fd5b34801561039d57600080fd5b506103b16103ac366004612bee565b610acc565b005b3480156103bf57600080fd5b506103c8610b2f565b6040516103d59190612c61565b60405180910390f35b3480156103ea57600080fd5b506103fe6103f9366004612ba7565b610bc1565b60405190151581526020016103d5565b34801561041a57600080fd5b50610424601a5481565b6040519081526020016103d5565b34801561043e57600080fd5b50600954610424565b34801561045357600080fd5b50600754610424565b34801561046857600080fd5b50601e5461047c906001600160a01b031681565b6040516001600160a01b0390911681526020016103d5565b3480156104a057600080fd5b5061042460165481565b3480156104b657600080fd5b5061042460135481565b3480156104cc57600080fd5b506103fe6104db366004612b66565b610bd8565b3480156104ec57600080fd5b506104246104fb366004612bee565b610c41565b34801561050c57600080fd5b50600c5460405160ff90911681526020016103d5565b34801561052e57600080fd5b506103b161053d366004612af3565b610cc5565b34801561054e57600080fd5b506103fe61055d366004612ba7565b610e5a565b34801561056e57600080fd5b50610424600d5481565b34801561058457600080fd5b506103b1610593366004612bee565b610e90565b3480156105a457600080fd5b506103b16105b3366004612af3565b610f7a565b3480156105c457600080fd5b506104246105d3366004612c07565b610fa6565b3480156105e457600080fd5b506103b16105f3366004612bee565b611033565b34801561060457600080fd5b506103b1610613366004612bd3565b61109f565b34801561062457600080fd5b50601f546103fe90600160a81b900460ff1681565b34801561064557600080fd5b506103b1610654366004612af3565b6110f6565b34801561066557600080fd5b506103fe610674366004612af3565b6001600160a01b031660009081526004602052604090205460ff1690565b34801561069e57600080fd5b50601b546103fe9060ff1681565b3480156106b857600080fd5b506103b16106c7366004612bee565b611290565b3480156106d857600080fd5b506103b16106e7366004612af3565b611301565b3480156106f857600080fd5b506103b1610707366004612af3565b61132b565b34801561071857600080fd5b50601f5461047c906001600160a01b031681565b34801561073857600080fd5b506104246103e881565b34801561074e57600080fd5b50610424600f5481565b34801561076457600080fd5b50610424610773366004612af3565b611355565b34801561078457600080fd5b506103b16113b4565b34801561079957600080fd5b506103b16113c8565b3480156107ae57600080fd5b5060145461047c906001600160a01b031681565b3480156107ce57600080fd5b5061042460195481565b3480156107e457600080fd5b5060225461047c906001600160a01b031681565b34801561080457600080fd5b5061042460175481565b34801561081a57600080fd5b506103fe610829366004612af3565b6001600160a01b031660009081526005602052604090205460ff1690565b34801561085357600080fd5b506000546001600160a01b031661047c565b34801561087157600080fd5b506103b1610880366004612bee565b6113fc565b34801561089157600080fd5b506103c8611468565b3480156108a657600080fd5b506103b16108b5366004612bee565b611477565b3480156108c657600080fd5b506103fe6108d5366004612ba7565b611550565b3480156108e657600080fd5b506103fe6108f5366004612ba7565b61159f565b34801561090657600080fd5b506103b1610915366004612bee565b6115ac565b34801561092657600080fd5b5061042460115481565b34801561093c57600080fd5b506103b161094b366004612bd3565b61161d565b34801561095c57600080fd5b506103b161096b366004612bd3565b611674565b34801561097c57600080fd5b5061042460185481565b34801561099257600080fd5b506103b16109a1366004612bee565b6116d4565b3480156109b257600080fd5b506103b16109c1366004612bee565b611732565b3480156109d257600080fd5b50601d5461047c9061010090046001600160a01b031681565b3480156109f757600080fd5b50601d546103fe9060ff1681565b348015610a1157600080fd5b50610424610a20366004612b2d565b6001600160a01b03918216600090815260036020908152604080832093909416825291909152205490565b348015610a5757600080fd5b506022546103fe90600160a01b900460ff1681565b348015610a7857600080fd5b506103b1610a87366004612af3565b61179c565b348015610a9857600080fd5b506103b1610aa7366004612bee565b6117c5565b348015610ab857600080fd5b506103b1610ac7366004612af3565b611831565b610ad46118aa565b600a811115610b2a5760405162461bcd60e51b815260206004820152601f60248201527f546178206665652063616e6e6f74206265206d6f7265207468616e203130250060448201526064015b60405180910390fd5b600d55565b6060600a8054610b3e90612dd9565b80601f0160208091040260200160405190810160405280929190818152602001828054610b6a90612dd9565b8015610bb75780601f10610b8c57610100808354040283529160200191610bb7565b820191906000526020600020905b815481529060010190602001808311610b9a57829003601f168201915b5050505050905090565b6000610bce338484611904565b5060015b92915050565b6000610be5848484611a28565b610c378433610c3285604051806060016040528060288152602001612e87602891396001600160a01b038a1660009081526003602090815260408083203384529091529020549190611d10565b611904565b5060019392505050565b6000600854821115610ca85760405162461bcd60e51b815260206004820152602a60248201527f416d6f756e74206d757374206265206c657373207468616e20746f74616c207260448201526965666c656374696f6e7360b01b6064820152608401610b21565b6000610cb2611d3c565b9050610cbe8382611d5f565b9392505050565b610ccd6118aa565b6001600160a01b03811660009081526005602052604090205460ff16610d355760405162461bcd60e51b815260206004820152601b60248201527f4163636f756e7420697320616c7265616479206578636c7564656400000000006044820152606401610b21565b60005b600654811015610e5657816001600160a01b031660068281548110610d5f57610d5f612e5b565b6000918252602090912001546001600160a01b03161415610e445760068054610d8a90600190612dc2565b81548110610d9a57610d9a612e5b565b600091825260209091200154600680546001600160a01b039092169183908110610dc657610dc6612e5b565b600091825260208083209190910180546001600160a01b0319166001600160a01b039485161790559184168152600282526040808220829055600590925220805460ff191690556006805480610e1e57610e1e612e45565b600082815260209020810160001990810180546001600160a01b03191690550190555050565b80610e4e81612e14565b915050610d38565b5050565b3360008181526003602090815260408083206001600160a01b03871684529091528120549091610bce918590610c329086611d6b565b3360008181526005602052604090205460ff1615610f055760405162461bcd60e51b815260206004820152602c60248201527f4578636c75646564206164647265737365732063616e6e6f742063616c6c207460448201526b3434b990333ab731ba34b7b760a11b6064820152608401610b21565b6000610f1083611d77565b505050506001600160a01b038416600090815260016020526040902054919250610f3c91905082611dc6565b6001600160a01b038316600090815260016020526040902055600854610f629082611dc6565b600855600954610f729084611d6b565b600955505050565b610f826118aa565b6001600160a01b03166000908152600460205260409020805460ff19166001179055565b6000600754831115610ffa5760405162461bcd60e51b815260206004820152601f60248201527f416d6f756e74206d757374206265206c657373207468616e20737570706c79006044820152606401610b21565b8161101957600061100a84611d77565b50939550610bd2945050505050565b600061102484611d77565b50929550610bd2945050505050565b61103b6118aa565b600a81111561109a5760405162461bcd60e51b815260206004820152602560248201527f4d61726b6574696e67206665652063616e6e6f74206265206d6f7265207468616044820152646e2031302560d81b6064820152608401610b21565b601355565b6000546001600160a01b03163314806110c75750601d5461010090046001600160a01b031633145b6110e35760405162461bcd60e51b8152600401610b2190612cb6565b601b805460ff1916911515919091179055565b6110fe6118aa565b601e546001600160a01b03828116911614156111675760405162461bcd60e51b815260206004820152602260248201527f57652063616e206e6f74206578636c7564652050616e63616b6520726f757465604482015261391760f11b6064820152608401610b21565b6001600160a01b03811660009081526005602052604090205460ff16156111d05760405162461bcd60e51b815260206004820152601b60248201527f4163636f756e7420697320616c7265616479206578636c7564656400000000006044820152606401610b21565b6001600160a01b0381166000908152600160205260409020541561122a576001600160a01b03811660009081526001602052604090205461121090610c41565b6001600160a01b0382166000908152600260205260409020555b6001600160a01b03166000818152600560205260408120805460ff191660019081179091556006805491820181559091527ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f0180546001600160a01b0319169091179055565b6112986118aa565b600a8111156112fc5760405162461bcd60e51b815260206004820152602a60248201527f53656c6c206c6971756964697479206665652063616e6e6f74206265206d6f7260448201526965207468616e2031302560b01b6064820152608401610b21565b601755565b6113096118aa565b601480546001600160a01b0319166001600160a01b0392909216919091179055565b6113336118aa565b602280546001600160a01b0319166001600160a01b0392909216919091179055565b6001600160a01b03811660009081526005602052604081205460ff161561139257506001600160a01b031660009081526002602052604090205490565b6001600160a01b038216600090815260016020526040902054610bd290610c41565b6113bc6118aa565b6113c66000611dd2565b565b6113d06118aa565b602254600160a01b900460ff16156113e757600080fd5b6022805460ff60a01b1916600160a01b179055565b6114046118aa565b600a8111156114635760405162461bcd60e51b815260206004820152602560248201527f4c6971756964697479206665652063616e6e6f74206265206d6f7265207468616044820152646e2031302560d81b6064820152608401610b21565b600f55565b6060600b8054610b3e90612dd9565b61147f6118aa565b60018110156114e65760405162461bcd60e51b815260206004820152602d60248201527f4d617820686f6c64696e672070657263656e74732063616e6e6f74206265206c60448201526c657373207468616e20302e312560981b6064820152608401610b21565b601e81111561154b5760405162461bcd60e51b815260206004820152602b60248201527f4d617820686f6c64696e672070657263656e74732063616e6e6f74206265206d60448201526a6f7265207468616e20332560a81b6064820152608401610b21565b601a55565b6000610bce3384610c3285604051806060016040528060258152602001612eaf602591393360009081526003602090815260408083206001600160a01b038d1684529091529020549190611d10565b6000610bce338484611a28565b6115b46118aa565b600a8111156116185760405162461bcd60e51b815260206004820152602a60248201527f53656c6c206d61726b6574696e67206665652063616e6e6f74206265206d6f7260448201526965207468616e2031302560b01b6064820152608401610b21565b601855565b6000546001600160a01b03163314806116455750601d5461010090046001600160a01b031633145b6116615760405162461bcd60e51b8152600401610b2190612cb6565b601d805460ff1916911515919091179055565b61167c6118aa565b601f8054821515600160a81b0260ff60a81b199091161790556040517f53726dfcaf90650aa7eb35524f4d3220f07413c8d6cb404cc8c18bf5591bc159906116c990831515815260200190565b60405180910390a150565b6116dc6118aa565b600a81111561172d5760405162461bcd60e51b815260206004820181905260248201527f4275726e206665652063616e6e6f74206265206d6f7265207468616e203130256044820152606401610b21565b601155565b61173a6118aa565b600a8111156117975760405162461bcd60e51b8152602060048201526024808201527f53656c6c20746178206665652063616e6e6f74206265206d6f7265207468616e6044820152632031302560e01b6064820152608401610b21565b601655565b6117a46118aa565b6001600160a01b03166000908152600460205260409020805460ff19169055565b6117cd6118aa565b600a81111561182c5760405162461bcd60e51b815260206004820152602560248201527f53656c6c206275726e206665652063616e6e6f74206265206d6f7265207468616044820152646e2031302560d81b6064820152608401610b21565b601955565b6118396118aa565b6001600160a01b03811661189e5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610b21565b6118a781611dd2565b50565b6000546001600160a01b031633146113c65760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610b21565b6001600160a01b0383166119665760405162461bcd60e51b8152602060048201526024808201527f42455032303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610b21565b6001600160a01b0382166119c75760405162461bcd60e51b815260206004820152602260248201527f42455032303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610b21565b6001600160a01b0383811660008181526003602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b038316611a8c5760405162461bcd60e51b815260206004820152602560248201527f42455032303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610b21565b60008111611aee5760405162461bcd60e51b815260206004820152602960248201527f5472616e7366657220616d6f756e74206d7573742062652067726561746572206044820152687468616e207a65726f60b81b6064820152608401610b21565b611af9838383611e22565b601d5460ff168015611b185750601f546001600160a01b038481169116145b15611b7b576000818152601c602052604090205460ff16611b7b5760405162461bcd60e51b815260206004820152601860248201527f4f6e6c7920616c6c6f7765642062757920616d6f756e747300000000000000006044820152606401610b21565b6000611b8630611355565b60205490915081108015908190611ba75750601f54600160a01b900460ff16155b8015611bc15750601f546001600160a01b03868116911614155b8015611bd65750601f54600160a81b900460ff165b15611be9576020549150611be982611eec565b611bf4858585611f93565b601b5460ff1615611d095760006103e8601a54600754611c149190612da3565b611c1e9190612d81565b601f549091506001600160a01b0386811691161415611ca35780841115611c9e5760405162461bcd60e51b815260206004820152602e60248201527f5472616e73616374656420616d6f756e742065786365656420746865206d617860448201526d20616c6c6f7765642076616c756560901b6064820152608401610b21565b611d07565b80611cad86611355565b1115611d075760405162461bcd60e51b8152602060048201526024808201527f57616c6c65742062616c616e6365206578636565647320746865206d6178206c6044820152631a5b5a5d60e21b6064820152608401610b21565b505b5050505050565b60008184841115611d345760405162461bcd60e51b8152600401610b219190612c61565b505050900390565b6000806000611d496122c0565b9092509050611d588282611d5f565b9250505090565b6000610cbe8284612d81565b6000610cbe8284612d69565b6000806000806000806000806000611d8e8a612442565b9250925092506000806000611dac8d8686611da7611d3c565b61247e565b919f909e50909c50959a5093985091965092945050505050565b6000610cbe8284612dc2565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001600160a01b0383161580611e3f57506001600160a01b038216155b15611e4957505050565b602254600160a01b900460ff16158015611e6d57506022546001600160a01b031615155b15611ee757602254604051635d37a8dd60e01b81523360048201526001600160a01b03858116602483015284811660448301526064820184905290911690635d37a8dd90608401600060405180830381600087803b158015611ece57600080fd5b505af1158015611ee2573d6000803e3d6000fd5b505050505b505050565b601f805460ff60a01b1916600160a01b1790556000611f0c826002611d5f565b90506000611f1a8383611dc6565b905047611f26836124ce565b6000611f324783611dc6565b9050611f3e838261262f565b60408051858152602081018390529081018490527f17bbfb9a6069321b6ded73bd96327c9e6b7212a5cd51ff219cd61370acafb5619060600160405180910390a15050601f805460ff60a01b19169055505050565b6001600160a01b03831660009081526004602052604090205460ff1680611fd257506001600160a01b03821660009081526004602052604090205460ff165b15611fe457611fdf61270c565b612032565b601f546001600160a01b038381169116141561203257612032600d8054600e55600f805460105560118054601255601380546015556016549093556017549091556018549091556019549055565b6000612054606461204e6011548561276890919063ffffffff16565b90611d5f565b90506000612072606461204e6013548661276890919063ffffffff16565b6001600160a01b03861660009081526005602052604090205490915060ff1680156120b657506001600160a01b03841660009081526005602052604090205460ff16155b156120de576120d985856120d4846120ce8888611dc6565b90611dc6565b612774565b61220b565b6001600160a01b03851660009081526005602052604090205460ff1615801561211f57506001600160a01b03841660009081526005602052604090205460ff165b1561213c576120d98585612137846120ce8888611dc6565b61289a565b6001600160a01b03851660009081526005602052604090205460ff1615801561217e57506001600160a01b03841660009081526005602052604090205460ff16155b1561219b576120d98585612196846120ce8888611dc6565b612943565b6001600160a01b03851660009081526005602052604090205460ff1680156121db57506001600160a01b03841660009081526005602052604090205460ff165b156121f8576120d985856121f3846120ce8888611dc6565b612987565b61220b8585612196846120ce8888611dc6565b6000600d819055600f81905561222390869084612943565b60145461223b9086906001600160a01b031683612943565b600e54600d55601054600f556001600160a01b03851660009081526004602052604090205460ff168061228657506001600160a01b03841660009081526004602052604090205460ff165b8061229e5750601f546001600160a01b038581169116145b15611d0957611d09600e54600d55601054600f55601254601155601554601355565b6008546007546000918291825b600654811015612412578260016000600684815481106122ef576122ef612e5b565b60009182526020808320909101546001600160a01b03168352820192909252604001902054118061235a575081600260006006848154811061233357612333612e5b565b60009182526020808320909101546001600160a01b03168352820192909252604001902054115b1561237057600854600754945094505050509091565b6123b6600160006006848154811061238a5761238a612e5b565b60009182526020808320909101546001600160a01b031683528201929092526040019020548490611dc6565b92506123fe60026000600684815481106123d2576123d2612e5b565b60009182526020808320909101546001600160a01b031683528201929092526040019020548390611dc6565b91508061240a81612e14565b9150506122cd565b5060075460085461242291611d5f565b821015612439576008546007549350935050509091565b90939092509050565b600080600080612451856129fa565b9050600061245e86612a16565b90506000612470826120ce8986611dc6565b979296509094509092505050565b600080808061248d8886612768565b9050600061249b8887612768565b905060006124a98888612768565b905060006124bb826120ce8686611dc6565b939b939a50919850919650505050505050565b604080516002808252606082018352600092602083019080368337019050509050308160008151811061250357612503612e5b565b6001600160a01b03928316602091820292909201810191909152601e54604080516315ab88c960e31b81529051919093169263ad5c4648926004808301939192829003018186803b15801561255757600080fd5b505afa15801561256b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061258f9190612b10565b816001815181106125a2576125a2612e5b565b6001600160a01b039283166020918202929092010152601e546125c89130911684611904565b601e5460405163791ac94760e01b81526001600160a01b039091169063791ac94790612601908590600090869030904290600401612cf8565b600060405180830381600087803b15801561261b57600080fd5b505af1158015611d07573d6000803e3d6000fd5b601e546126479030906001600160a01b031684611904565b601e546001600160a01b031663f305d7198230856000806126706000546001600160a01b031690565b60405160e088901b6001600160e01b03191681526001600160a01b03958616600482015260248101949094526044840192909252606483015290911660848201524260a482015260c4016060604051808303818588803b1580156126d357600080fd5b505af11580156126e7573d6000803e3d6000fd5b50505050506040513d601f19601f82011682018060405250810190611d099190612c33565b600d5415801561271c5750600f54155b80156127285750601354155b80156127345750601154155b1561273b57565b600d8054600e55600f80546010556011805460125560138054601555600093849055918390559082905555565b6000610cbe8284612da3565b60008060008060008061278687611d77565b6001600160a01b038f16600090815260026020526040902054959b509399509197509550935091506127b89088611dc6565b6001600160a01b038a166000908152600260209081526040808320939093556001905220546127e79087611dc6565b6001600160a01b03808b1660009081526001602052604080822093909355908a16815220546128169086611d6b565b6001600160a01b03891660009081526001602052604090205561283881612a32565b6128428483612aba565b876001600160a01b0316896001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8560405161288791815260200190565b60405180910390a3505050505050505050565b6000806000806000806128ac87611d77565b6001600160a01b038f16600090815260016020526040902054959b509399509197509550935091506128de9087611dc6565b6001600160a01b03808b16600090815260016020908152604080832094909455918b168152600290915220546129149084611d6b565b6001600160a01b0389166000908152600260209081526040808320939093556001905220546128169086611d6b565b60008060008060008061295587611d77565b6001600160a01b038f16600090815260016020526040902054959b509399509197509550935091506127e79087611dc6565b60008060008060008061299987611d77565b6001600160a01b038f16600090815260026020526040902054959b509399509197509550935091506129cb9088611dc6565b6001600160a01b038a166000908152600260209081526040808320939093556001905220546128de9087611dc6565b6000610bd2606461204e600d548561276890919063ffffffff16565b6000610bd2606461204e600f548561276890919063ffffffff16565b6000612a3c611d3c565b90506000612a4a8383612768565b30600090815260016020526040902054909150612a679082611d6b565b3060009081526001602090815260408083209390935560059052205460ff1615611ee75730600090815260026020526040902054612aa59084611d6b565b30600090815260026020526040902055505050565b600854612ac79083611dc6565b600855600954612ad79082611d6b565b6009555050565b80358015158114612aee57600080fd5b919050565b600060208284031215612b0557600080fd5b8135610cbe81612e71565b600060208284031215612b2257600080fd5b8151610cbe81612e71565b60008060408385031215612b4057600080fd5b8235612b4b81612e71565b91506020830135612b5b81612e71565b809150509250929050565b600080600060608486031215612b7b57600080fd5b8335612b8681612e71565b92506020840135612b9681612e71565b929592945050506040919091013590565b60008060408385031215612bba57600080fd5b8235612bc581612e71565b946020939093013593505050565b600060208284031215612be557600080fd5b610cbe82612ade565b600060208284031215612c0057600080fd5b5035919050565b60008060408385031215612c1a57600080fd5b82359150612c2a60208401612ade565b90509250929050565b600080600060608486031215612c4857600080fd5b8351925060208401519150604084015190509250925092565b600060208083528351808285015260005b81811015612c8e57858101830151858201604001528201612c72565b81811115612ca0576000604083870101525b50601f01601f1916929092016040019392505050565b60208082526022908201527f4f6e6c792061646d696e206f7220616e7469206d616e6167657220616c6c6f77604082015261195960f21b606082015260800190565b600060a082018783526020878185015260a0604085015281875180845260c086019150828901935060005b81811015612d485784516001600160a01b031683529383019391830191600101612d23565b50506001600160a01b03969096166060850152505050608001529392505050565b60008219821115612d7c57612d7c612e2f565b500190565b600082612d9e57634e487b7160e01b600052601260045260246000fd5b500490565b6000816000190483118215151615612dbd57612dbd612e2f565b500290565b600082821015612dd457612dd4612e2f565b500390565b600181811c90821680612ded57607f821691505b60208210811415612e0e57634e487b7160e01b600052602260045260246000fd5b50919050565b6000600019821415612e2857612e28612e2f565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052603160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b6001600160a01b03811681146118a757600080fdfe42455032303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636542455032303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa264697066735822122020955769f4dc6c0af072ba7026476cba804cfb8d88c7106ec059d4363187ea5764736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH12 0x1921A082258A73BFC3240000 PUSH1 0x7 DUP2 SWAP1 SSTORE PUSH3 0x24 SWAP1 PUSH1 0x0 NOT PUSH3 0x766 JUMP JUMPDEST PUSH3 0x32 SWAP1 PUSH1 0x0 NOT PUSH3 0x6F1 JUMP JUMPDEST PUSH1 0x8 SSTORE PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0xC DUP1 DUP3 MSTORE PUSH12 0x26B2BA3096B837B5B2B6B7B7 PUSH1 0xA1 SHL PUSH1 0x20 SWAP1 SWAP3 ADD SWAP2 DUP3 MSTORE PUSH3 0x6A SWAP2 PUSH1 0xA SWAP2 PUSH3 0x568 JUMP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x7 DUP1 DUP3 MSTORE PUSH7 0x3837B5B2B6B7B7 PUSH1 0xC9 SHL PUSH1 0x20 SWAP1 SWAP3 ADD SWAP2 DUP3 MSTORE PUSH3 0x9B SWAP2 PUSH1 0xB SWAP2 PUSH3 0x568 JUMP JUMPDEST POP PUSH1 0xC DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x12 SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x2 PUSH1 0xD DUP2 SWAP1 SSTORE PUSH1 0xE DUP2 SWAP1 SSTORE PUSH1 0x1 PUSH1 0xF DUP2 SWAP1 SSTORE PUSH1 0x10 DUP2 SWAP1 SSTORE PUSH1 0x11 DUP3 SWAP1 SSTORE SWAP2 DUP2 SWAP1 SSTORE PUSH1 0x13 DUP2 SWAP1 SSTORE PUSH1 0x15 DUP2 SWAP1 SSTORE PUSH1 0x16 DUP2 SWAP1 SSTORE PUSH1 0x17 SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0x18 DUP2 SWAP1 SSTORE PUSH1 0x19 SSTORE PUSH1 0x5 PUSH1 0x1A SSTORE PUSH1 0x1F DUP1 SLOAD PUSH1 0xFF PUSH1 0xA8 SHL NOT AND SWAP1 SSTORE PUSH10 0xD3C21BCECCEDA1000000 PUSH1 0x20 SWAP1 DUP2 SSTORE PUSH1 0x40 DUP1 MLOAD PUSH2 0x160 DUP2 ADD DUP3 MSTORE PUSH3 0x1008E DUP2 MSTORE PUSH3 0x1F81C SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH3 0x40583 SWAP1 DUP3 ADD MSTORE PUSH3 0x7F447 PUSH1 0x60 DUP3 ADD MSTORE PUSH3 0xFFC19 PUSH1 0x80 DUP3 ADD MSTORE PUSH3 0x1FD8F0 PUSH1 0xA0 DUP3 ADD MSTORE PUSH3 0x3FFFAD PUSH1 0xC0 DUP3 ADD MSTORE PUSH3 0x7FF82E PUSH1 0xE0 DUP3 ADD MSTORE PUSH4 0x101863B PUSH2 0x100 DUP3 ADD MSTORE PUSH4 0x200271A PUSH2 0x120 DUP3 ADD MSTORE PUSH4 0x4030D33 PUSH2 0x140 DUP3 ADD MSTORE PUSH3 0x18E SWAP1 PUSH1 0x21 SWAP1 PUSH1 0xB PUSH3 0x5F7 JUMP JUMPDEST POP CALLVALUE DUP1 ISZERO PUSH3 0x19C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x36E7 CODESIZE SUB DUP1 PUSH3 0x36E7 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x1BF SWAP2 PUSH3 0x67B JUMP JUMPDEST PUSH3 0x1CA CALLER PUSH3 0x518 JUMP JUMPDEST PUSH1 0x14 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x1D DUP1 SLOAD PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT AND PUSH2 0x100 SWAP3 DUP5 AND SWAP3 SWAP1 SWAP3 MUL SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x8 SLOAD PUSH1 0x1 PUSH1 0x0 PUSH3 0x218 CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xC45A0155 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x276 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH3 0x28B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH3 0x2B1 SWAP2 SWAP1 PUSH3 0x654 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xC9C65396 ADDRESS DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xAD5C4648 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x2FA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH3 0x30F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH3 0x335 SWAP2 SWAP1 PUSH3 0x654 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP6 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP2 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x37E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH3 0x393 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH3 0x3B9 SWAP2 SWAP1 PUSH3 0x654 JUMP JUMPDEST PUSH1 0x1F DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND OR SWAP1 SWAP2 SSTORE PUSH1 0x1E DUP1 SLOAD SWAP1 SWAP2 AND SWAP2 DUP6 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x1 PUSH1 0x4 PUSH1 0x0 PUSH3 0x401 PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP2 DUP3 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 DUP1 SLOAD SWAP6 ISZERO ISZERO PUSH1 0xFF NOT SWAP7 DUP8 AND OR SWAP1 SSTORE SWAP1 DUP6 AND DUP2 MSTORE PUSH1 0x4 SWAP1 SWAP3 MSTORE DUP1 DUP3 KECCAK256 DUP1 SLOAD DUP5 AND PUSH1 0x1 SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE ADDRESS DUP4 MSTORE SWAP1 DUP3 KECCAK256 DUP1 SLOAD SWAP1 SWAP4 AND OR SWAP1 SWAP2 SSTORE JUMPDEST PUSH1 0x21 SLOAD DUP2 LT ISZERO PUSH3 0x4D3 JUMPI PUSH1 0x1 PUSH1 0x1C PUSH1 0x0 PUSH1 0x21 DUP5 DUP2 SLOAD DUP2 LT PUSH3 0x47F JUMPI PUSH3 0x47F PUSH3 0x79F JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD PUSH8 0xDE0B6B3A7640000 PUSH3 0x49F SWAP2 SWAP1 PUSH3 0x6CF JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE DUP1 PUSH3 0x4CA DUP2 PUSH3 0x748 JUMP JUMPDEST SWAP2 POP POP PUSH3 0x458 JUMP JUMPDEST POP PUSH1 0x7 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE CALLER SWAP1 PUSH1 0x0 SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP PUSH3 0x7CE JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0x576 SWAP1 PUSH3 0x70B JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0x59A JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0x5E5 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0x5B5 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x5E5 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x5E5 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x5E5 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x5C8 JUMP JUMPDEST POP PUSH3 0x5F3 SWAP3 SWAP2 POP PUSH3 0x63D JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST DUP3 DUP1 SLOAD DUP3 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP3 DUP3 ISZERO PUSH3 0x5E5 JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x5E5 JUMPI DUP3 MLOAD DUP3 SWAP1 PUSH4 0xFFFFFFFF AND SWAP1 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x618 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x5F3 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x63E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x667 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH3 0x674 DUP2 PUSH3 0x7B5 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH3 0x691 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 MLOAD PUSH3 0x69E DUP2 PUSH3 0x7B5 JUMP JUMPDEST PUSH1 0x20 DUP6 ADD MLOAD SWAP1 SWAP4 POP PUSH3 0x6B1 DUP2 PUSH3 0x7B5 JUMP JUMPDEST PUSH1 0x40 DUP6 ADD MLOAD SWAP1 SWAP3 POP PUSH3 0x6C4 DUP2 PUSH3 0x7B5 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH3 0x6EC JUMPI PUSH3 0x6EC PUSH3 0x789 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH3 0x706 JUMPI PUSH3 0x706 PUSH3 0x789 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x720 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH3 0x742 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH3 0x75F JUMPI PUSH3 0x75F PUSH3 0x789 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH3 0x784 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP MOD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH3 0x7CB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x2F09 DUP1 PUSH3 0x7DE PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x385 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6BC87C3A GT PUSH2 0x1D1 JUMPI DUP1 PUSH4 0xA9059CBB GT PUSH2 0x102 JUMPI DUP1 PUSH4 0xD0E03523 GT PUSH2 0xA0 JUMPI DUP1 PUSH4 0xE1E144DE GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xE1E144DE EQ PUSH2 0xA4B JUMPI DUP1 PUSH4 0xEA2F0B37 EQ PUSH2 0xA6C JUMPI DUP1 PUSH4 0xEBF78663 EQ PUSH2 0xA8C JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0xAAC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xD0E03523 EQ PUSH2 0x9A6 JUMPI DUP1 PUSH4 0xD5BDE46C EQ PUSH2 0x9C6 JUMPI DUP1 PUSH4 0xD8C6404B EQ PUSH2 0x9EB JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0xA05 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xC2C7C03A GT PUSH2 0xDC JUMPI DUP1 PUSH4 0xC2C7C03A EQ PUSH2 0x930 JUMPI DUP1 PUSH4 0xC49B9A80 EQ PUSH2 0x950 JUMPI DUP1 PUSH4 0xC8607952 EQ PUSH2 0x970 JUMPI DUP1 PUSH4 0xCEA26958 EQ PUSH2 0x986 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x8DA JUMPI DUP1 PUSH4 0xA928681C EQ PUSH2 0x8FA JUMPI DUP1 PUSH4 0xC0B0FDA2 EQ PUSH2 0x91A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x88790A68 GT PUSH2 0x16F JUMPI DUP1 PUSH4 0x8EE88C53 GT PUSH2 0x149 JUMPI DUP1 PUSH4 0x8EE88C53 EQ PUSH2 0x865 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x885 JUMPI DUP1 PUSH4 0x9655CAB5 EQ PUSH2 0x89A JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x8BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x88790A68 EQ PUSH2 0x7F8 JUMPI DUP1 PUSH4 0x88F82020 EQ PUSH2 0x80E JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x847 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x74FB20E1 GT PUSH2 0x1AB JUMPI DUP1 PUSH4 0x74FB20E1 EQ PUSH2 0x78D JUMPI DUP1 PUSH4 0x75F0A874 EQ PUSH2 0x7A2 JUMPI DUP1 PUSH4 0x7ABDC1CA EQ PUSH2 0x7C2 JUMPI DUP1 PUSH4 0x882CFB3F EQ PUSH2 0x7D8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6BC87C3A EQ PUSH2 0x742 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x758 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x778 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3B124FE7 GT PUSH2 0x2B6 JUMPI DUP1 PUSH4 0x52390C02 GT PUSH2 0x254 JUMPI DUP1 PUSH4 0x5D098B38 GT PUSH2 0x223 JUMPI DUP1 PUSH4 0x5D098B38 EQ PUSH2 0x6CC JUMPI DUP1 PUSH4 0x611BF629 EQ PUSH2 0x6EC JUMPI DUP1 PUSH4 0x632A6A35 EQ PUSH2 0x70C JUMPI DUP1 PUSH4 0x64A06E80 EQ PUSH2 0x72C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x52390C02 EQ PUSH2 0x639 JUMPI DUP1 PUSH4 0x5342ACB4 EQ PUSH2 0x659 JUMPI DUP1 PUSH4 0x57D87F0D EQ PUSH2 0x692 JUMPI DUP1 PUSH4 0x5876CCC5 EQ PUSH2 0x6AC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x4549B039 GT PUSH2 0x290 JUMPI DUP1 PUSH4 0x4549B039 EQ PUSH2 0x5B8 JUMPI DUP1 PUSH4 0x457C194C EQ PUSH2 0x5D8 JUMPI DUP1 PUSH4 0x4A5566BF EQ PUSH2 0x5F8 JUMPI DUP1 PUSH4 0x4A74BB02 EQ PUSH2 0x618 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3B124FE7 EQ PUSH2 0x562 JUMPI DUP1 PUSH4 0x3BD5D173 EQ PUSH2 0x578 JUMPI DUP1 PUSH4 0x437823EC EQ PUSH2 0x598 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x200A692D GT PUSH2 0x323 JUMPI DUP1 PUSH4 0x2D838119 GT PUSH2 0x2FD JUMPI DUP1 PUSH4 0x2D838119 EQ PUSH2 0x4E0 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x500 JUMPI DUP1 PUSH4 0x3685D419 EQ PUSH2 0x522 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x542 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x200A692D EQ PUSH2 0x494 JUMPI DUP1 PUSH4 0x22976E0D EQ PUSH2 0x4AA JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x4C0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA7D2D87 GT PUSH2 0x35F JUMPI DUP1 PUSH4 0xA7D2D87 EQ PUSH2 0x40E JUMPI DUP1 PUSH4 0x13114A9D EQ PUSH2 0x432 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x447 JUMPI DUP1 PUSH4 0x1A4CD1B1 EQ PUSH2 0x45C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x61C82D0 EQ PUSH2 0x391 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x3B3 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x3DE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLDATASIZE PUSH2 0x38C JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x39D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3B1 PUSH2 0x3AC CALLDATASIZE PUSH1 0x4 PUSH2 0x2BEE JUMP JUMPDEST PUSH2 0xACC JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3BF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3C8 PUSH2 0xB2F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3D5 SWAP2 SWAP1 PUSH2 0x2C61 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3EA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3FE PUSH2 0x3F9 CALLDATASIZE PUSH1 0x4 PUSH2 0x2BA7 JUMP JUMPDEST PUSH2 0xBC1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3D5 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x41A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x424 PUSH1 0x1A SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3D5 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x43E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x9 SLOAD PUSH2 0x424 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x453 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x7 SLOAD PUSH2 0x424 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x468 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1E SLOAD PUSH2 0x47C SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3D5 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4A0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x424 PUSH1 0x16 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4B6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x424 PUSH1 0x13 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3FE PUSH2 0x4DB CALLDATASIZE PUSH1 0x4 PUSH2 0x2B66 JUMP JUMPDEST PUSH2 0xBD8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4EC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x424 PUSH2 0x4FB CALLDATASIZE PUSH1 0x4 PUSH2 0x2BEE JUMP JUMPDEST PUSH2 0xC41 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x50C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xC SLOAD PUSH1 0x40 MLOAD PUSH1 0xFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3D5 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x52E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3B1 PUSH2 0x53D CALLDATASIZE PUSH1 0x4 PUSH2 0x2AF3 JUMP JUMPDEST PUSH2 0xCC5 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x54E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3FE PUSH2 0x55D CALLDATASIZE PUSH1 0x4 PUSH2 0x2BA7 JUMP JUMPDEST PUSH2 0xE5A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x56E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x424 PUSH1 0xD SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x584 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3B1 PUSH2 0x593 CALLDATASIZE PUSH1 0x4 PUSH2 0x2BEE JUMP JUMPDEST PUSH2 0xE90 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5A4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3B1 PUSH2 0x5B3 CALLDATASIZE PUSH1 0x4 PUSH2 0x2AF3 JUMP JUMPDEST PUSH2 0xF7A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x424 PUSH2 0x5D3 CALLDATASIZE PUSH1 0x4 PUSH2 0x2C07 JUMP JUMPDEST PUSH2 0xFA6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5E4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3B1 PUSH2 0x5F3 CALLDATASIZE PUSH1 0x4 PUSH2 0x2BEE JUMP JUMPDEST PUSH2 0x1033 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x604 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3B1 PUSH2 0x613 CALLDATASIZE PUSH1 0x4 PUSH2 0x2BD3 JUMP JUMPDEST PUSH2 0x109F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x624 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1F SLOAD PUSH2 0x3FE SWAP1 PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x645 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3B1 PUSH2 0x654 CALLDATASIZE PUSH1 0x4 PUSH2 0x2AF3 JUMP JUMPDEST PUSH2 0x10F6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x665 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3FE PUSH2 0x674 CALLDATASIZE PUSH1 0x4 PUSH2 0x2AF3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x69E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1B SLOAD PUSH2 0x3FE SWAP1 PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3B1 PUSH2 0x6C7 CALLDATASIZE PUSH1 0x4 PUSH2 0x2BEE JUMP JUMPDEST PUSH2 0x1290 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6D8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3B1 PUSH2 0x6E7 CALLDATASIZE PUSH1 0x4 PUSH2 0x2AF3 JUMP JUMPDEST PUSH2 0x1301 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6F8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3B1 PUSH2 0x707 CALLDATASIZE PUSH1 0x4 PUSH2 0x2AF3 JUMP JUMPDEST PUSH2 0x132B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x718 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1F SLOAD PUSH2 0x47C SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x738 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x424 PUSH2 0x3E8 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x74E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x424 PUSH1 0xF SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x764 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x424 PUSH2 0x773 CALLDATASIZE PUSH1 0x4 PUSH2 0x2AF3 JUMP JUMPDEST PUSH2 0x1355 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x784 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3B1 PUSH2 0x13B4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x799 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3B1 PUSH2 0x13C8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7AE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x14 SLOAD PUSH2 0x47C SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7CE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x424 PUSH1 0x19 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7E4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x22 SLOAD PUSH2 0x47C SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x804 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x424 PUSH1 0x17 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x81A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3FE PUSH2 0x829 CALLDATASIZE PUSH1 0x4 PUSH2 0x2AF3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x853 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x47C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x871 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3B1 PUSH2 0x880 CALLDATASIZE PUSH1 0x4 PUSH2 0x2BEE JUMP JUMPDEST PUSH2 0x13FC JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x891 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3C8 PUSH2 0x1468 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8A6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3B1 PUSH2 0x8B5 CALLDATASIZE PUSH1 0x4 PUSH2 0x2BEE JUMP JUMPDEST PUSH2 0x1477 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8C6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3FE PUSH2 0x8D5 CALLDATASIZE PUSH1 0x4 PUSH2 0x2BA7 JUMP JUMPDEST PUSH2 0x1550 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3FE PUSH2 0x8F5 CALLDATASIZE PUSH1 0x4 PUSH2 0x2BA7 JUMP JUMPDEST PUSH2 0x159F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x906 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3B1 PUSH2 0x915 CALLDATASIZE PUSH1 0x4 PUSH2 0x2BEE JUMP JUMPDEST PUSH2 0x15AC JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x926 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x424 PUSH1 0x11 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x93C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3B1 PUSH2 0x94B CALLDATASIZE PUSH1 0x4 PUSH2 0x2BD3 JUMP JUMPDEST PUSH2 0x161D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x95C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3B1 PUSH2 0x96B CALLDATASIZE PUSH1 0x4 PUSH2 0x2BD3 JUMP JUMPDEST PUSH2 0x1674 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x97C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x424 PUSH1 0x18 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x992 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3B1 PUSH2 0x9A1 CALLDATASIZE PUSH1 0x4 PUSH2 0x2BEE JUMP JUMPDEST PUSH2 0x16D4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x9B2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3B1 PUSH2 0x9C1 CALLDATASIZE PUSH1 0x4 PUSH2 0x2BEE JUMP JUMPDEST PUSH2 0x1732 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x9D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1D SLOAD PUSH2 0x47C SWAP1 PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x9F7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1D SLOAD PUSH2 0x3FE SWAP1 PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x424 PUSH2 0xA20 CALLDATASIZE PUSH1 0x4 PUSH2 0x2B2D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA57 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x22 SLOAD PUSH2 0x3FE SWAP1 PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA78 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3B1 PUSH2 0xA87 CALLDATASIZE PUSH1 0x4 PUSH2 0x2AF3 JUMP JUMPDEST PUSH2 0x179C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA98 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3B1 PUSH2 0xAA7 CALLDATASIZE PUSH1 0x4 PUSH2 0x2BEE JUMP JUMPDEST PUSH2 0x17C5 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xAB8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3B1 PUSH2 0xAC7 CALLDATASIZE PUSH1 0x4 PUSH2 0x2AF3 JUMP JUMPDEST PUSH2 0x1831 JUMP JUMPDEST PUSH2 0xAD4 PUSH2 0x18AA JUMP JUMPDEST PUSH1 0xA DUP2 GT ISZERO PUSH2 0xB2A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546178206665652063616E6E6F74206265206D6F7265207468616E2031302500 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xD SSTORE JUMP JUMPDEST PUSH1 0x60 PUSH1 0xA DUP1 SLOAD PUSH2 0xB3E SWAP1 PUSH2 0x2DD9 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xB6A SWAP1 PUSH2 0x2DD9 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xBB7 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xB8C JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xBB7 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xB9A JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBCE CALLER DUP5 DUP5 PUSH2 0x1904 JUMP JUMPDEST POP PUSH1 0x1 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBE5 DUP5 DUP5 DUP5 PUSH2 0x1A28 JUMP JUMPDEST PUSH2 0xC37 DUP5 CALLER PUSH2 0xC32 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2E87 PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0x1D10 JUMP JUMPDEST PUSH2 0x1904 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 SLOAD DUP3 GT ISZERO PUSH2 0xCA8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416D6F756E74206D757374206265206C657373207468616E20746F74616C2072 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x65666C656374696F6E73 PUSH1 0xB0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB21 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCB2 PUSH2 0x1D3C JUMP JUMPDEST SWAP1 POP PUSH2 0xCBE DUP4 DUP3 PUSH2 0x1D5F JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0xCCD PUSH2 0x18AA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0xD35 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4163636F756E7420697320616C7265616479206578636C756465640000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB21 JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x6 SLOAD DUP2 LT ISZERO PUSH2 0xE56 JUMPI DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x6 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xD5F JUMPI PUSH2 0xD5F PUSH2 0x2E5B JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0xE44 JUMPI PUSH1 0x6 DUP1 SLOAD PUSH2 0xD8A SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x2DC2 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0xD9A JUMPI PUSH2 0xD9A PUSH2 0x2E5B JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x6 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 DUP4 SWAP1 DUP2 LT PUSH2 0xDC6 JUMPI PUSH2 0xDC6 PUSH2 0x2E5B JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP2 SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND OR SWAP1 SSTORE SWAP2 DUP5 AND DUP2 MSTORE PUSH1 0x2 DUP3 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP3 SWAP1 SSTORE PUSH1 0x5 SWAP1 SWAP3 MSTORE KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH1 0x6 DUP1 SLOAD DUP1 PUSH2 0xE1E JUMPI PUSH2 0xE1E PUSH2 0x2E45 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 SWAP1 KECCAK256 DUP2 ADD PUSH1 0x0 NOT SWAP1 DUP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE ADD SWAP1 SSTORE POP POP JUMP JUMPDEST DUP1 PUSH2 0xE4E DUP2 PUSH2 0x2E14 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xD38 JUMP JUMPDEST POP POP JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 PUSH2 0xBCE SWAP2 DUP6 SWAP1 PUSH2 0xC32 SWAP1 DUP7 PUSH2 0x1D6B JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xF05 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4578636C75646564206164647265737365732063616E6E6F742063616C6C2074 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x3434B990333AB731BA34B7B7 PUSH1 0xA1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB21 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF10 DUP4 PUSH2 0x1D77 JUMP JUMPDEST POP POP POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP2 SWAP3 POP PUSH2 0xF3C SWAP2 SWAP1 POP DUP3 PUSH2 0x1DC6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH1 0x8 SLOAD PUSH2 0xF62 SWAP1 DUP3 PUSH2 0x1DC6 JUMP JUMPDEST PUSH1 0x8 SSTORE PUSH1 0x9 SLOAD PUSH2 0xF72 SWAP1 DUP5 PUSH2 0x1D6B JUMP JUMPDEST PUSH1 0x9 SSTORE POP POP POP JUMP JUMPDEST PUSH2 0xF82 PUSH2 0x18AA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 SLOAD DUP4 GT ISZERO PUSH2 0xFFA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416D6F756E74206D757374206265206C657373207468616E20737570706C7900 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB21 JUMP JUMPDEST DUP2 PUSH2 0x1019 JUMPI PUSH1 0x0 PUSH2 0x100A DUP5 PUSH2 0x1D77 JUMP JUMPDEST POP SWAP4 SWAP6 POP PUSH2 0xBD2 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1024 DUP5 PUSH2 0x1D77 JUMP JUMPDEST POP SWAP3 SWAP6 POP PUSH2 0xBD2 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x103B PUSH2 0x18AA JUMP JUMPDEST PUSH1 0xA DUP2 GT ISZERO PUSH2 0x109A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D61726B6574696E67206665652063616E6E6F74206265206D6F726520746861 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6E20313025 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB21 JUMP JUMPDEST PUSH1 0x13 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ DUP1 PUSH2 0x10C7 JUMPI POP PUSH1 0x1D SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ JUMPDEST PUSH2 0x10E3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB21 SWAP1 PUSH2 0x2CB6 JUMP JUMPDEST PUSH1 0x1B DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x10FE PUSH2 0x18AA JUMP JUMPDEST PUSH1 0x1E SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 DUP2 AND SWAP2 AND EQ ISZERO PUSH2 0x1167 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x57652063616E206E6F74206578636C7564652050616E63616B6520726F757465 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x3917 PUSH1 0xF1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB21 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x11D0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4163636F756E7420697320616C7265616479206578636C756465640000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB21 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD ISZERO PUSH2 0x122A JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x1210 SWAP1 PUSH2 0xC41 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x6 DUP1 SLOAD SWAP2 DUP3 ADD DUP2 SSTORE SWAP1 SWAP2 MSTORE PUSH32 0xF652222313E28459528D920B65115C16C04F3EFC82AAEDC97BE59F3F377C0D3F ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x1298 PUSH2 0x18AA JUMP JUMPDEST PUSH1 0xA DUP2 GT ISZERO PUSH2 0x12FC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53656C6C206C6971756964697479206665652063616E6E6F74206265206D6F72 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x65207468616E20313025 PUSH1 0xB0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB21 JUMP JUMPDEST PUSH1 0x17 SSTORE JUMP JUMPDEST PUSH2 0x1309 PUSH2 0x18AA JUMP JUMPDEST PUSH1 0x14 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x1333 PUSH2 0x18AA JUMP JUMPDEST PUSH1 0x22 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x1392 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0xBD2 SWAP1 PUSH2 0xC41 JUMP JUMPDEST PUSH2 0x13BC PUSH2 0x18AA JUMP JUMPDEST PUSH2 0x13C6 PUSH1 0x0 PUSH2 0x1DD2 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x13D0 PUSH2 0x18AA JUMP JUMPDEST PUSH1 0x22 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x13E7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x22 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND PUSH1 0x1 PUSH1 0xA0 SHL OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x1404 PUSH2 0x18AA JUMP JUMPDEST PUSH1 0xA DUP2 GT ISZERO PUSH2 0x1463 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C6971756964697479206665652063616E6E6F74206265206D6F726520746861 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6E20313025 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB21 JUMP JUMPDEST PUSH1 0xF SSTORE JUMP JUMPDEST PUSH1 0x60 PUSH1 0xB DUP1 SLOAD PUSH2 0xB3E SWAP1 PUSH2 0x2DD9 JUMP JUMPDEST PUSH2 0x147F PUSH2 0x18AA JUMP JUMPDEST PUSH1 0x1 DUP2 LT ISZERO PUSH2 0x14E6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D617820686F6C64696E672070657263656E74732063616E6E6F74206265206C PUSH1 0x44 DUP3 ADD MSTORE PUSH13 0x657373207468616E20302E3125 PUSH1 0x98 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB21 JUMP JUMPDEST PUSH1 0x1E DUP2 GT ISZERO PUSH2 0x154B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D617820686F6C64696E672070657263656E74732063616E6E6F74206265206D PUSH1 0x44 DUP3 ADD MSTORE PUSH11 0x6F7265207468616E203325 PUSH1 0xA8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB21 JUMP JUMPDEST PUSH1 0x1A SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBCE CALLER DUP5 PUSH2 0xC32 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2EAF PUSH1 0x25 SWAP2 CODECOPY CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP14 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0x1D10 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBCE CALLER DUP5 DUP5 PUSH2 0x1A28 JUMP JUMPDEST PUSH2 0x15B4 PUSH2 0x18AA JUMP JUMPDEST PUSH1 0xA DUP2 GT ISZERO PUSH2 0x1618 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53656C6C206D61726B6574696E67206665652063616E6E6F74206265206D6F72 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x65207468616E20313025 PUSH1 0xB0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB21 JUMP JUMPDEST PUSH1 0x18 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ DUP1 PUSH2 0x1645 JUMPI POP PUSH1 0x1D SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ JUMPDEST PUSH2 0x1661 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB21 SWAP1 PUSH2 0x2CB6 JUMP JUMPDEST PUSH1 0x1D DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x167C PUSH2 0x18AA JUMP JUMPDEST PUSH1 0x1F DUP1 SLOAD DUP3 ISZERO ISZERO PUSH1 0x1 PUSH1 0xA8 SHL MUL PUSH1 0xFF PUSH1 0xA8 SHL NOT SWAP1 SWAP2 AND OR SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH32 0x53726DFCAF90650AA7EB35524F4D3220F07413C8D6CB404CC8C18BF5591BC159 SWAP1 PUSH2 0x16C9 SWAP1 DUP4 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH2 0x16DC PUSH2 0x18AA JUMP JUMPDEST PUSH1 0xA DUP2 GT ISZERO PUSH2 0x172D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4275726E206665652063616E6E6F74206265206D6F7265207468616E20313025 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB21 JUMP JUMPDEST PUSH1 0x11 SSTORE JUMP JUMPDEST PUSH2 0x173A PUSH2 0x18AA JUMP JUMPDEST PUSH1 0xA DUP2 GT ISZERO PUSH2 0x1797 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x53656C6C20746178206665652063616E6E6F74206265206D6F7265207468616E PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x20313025 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB21 JUMP JUMPDEST PUSH1 0x16 SSTORE JUMP JUMPDEST PUSH2 0x17A4 PUSH2 0x18AA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x17CD PUSH2 0x18AA JUMP JUMPDEST PUSH1 0xA DUP2 GT ISZERO PUSH2 0x182C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53656C6C206275726E206665652063616E6E6F74206265206D6F726520746861 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6E20313025 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB21 JUMP JUMPDEST PUSH1 0x19 SSTORE JUMP JUMPDEST PUSH2 0x1839 PUSH2 0x18AA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x189E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB21 JUMP JUMPDEST PUSH2 0x18A7 DUP2 PUSH2 0x1DD2 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x13C6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB21 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x1966 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x42455032303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB21 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x19C7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x42455032303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB21 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x1A8C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x42455032303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB21 JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x1AEE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5472616E7366657220616D6F756E74206D757374206265206772656174657220 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x7468616E207A65726F PUSH1 0xB8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB21 JUMP JUMPDEST PUSH2 0x1AF9 DUP4 DUP4 DUP4 PUSH2 0x1E22 JUMP JUMPDEST PUSH1 0x1D SLOAD PUSH1 0xFF AND DUP1 ISZERO PUSH2 0x1B18 JUMPI POP PUSH1 0x1F SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 AND EQ JUMPDEST ISZERO PUSH2 0x1B7B JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1C PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x1B7B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C7920616C6C6F7765642062757920616D6F756E74730000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB21 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B86 ADDRESS PUSH2 0x1355 JUMP JUMPDEST PUSH1 0x20 SLOAD SWAP1 SWAP2 POP DUP2 LT DUP1 ISZERO SWAP1 DUP2 SWAP1 PUSH2 0x1BA7 JUMPI POP PUSH1 0x1F SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x1BC1 JUMPI POP PUSH1 0x1F SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND SWAP2 AND EQ ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x1BD6 JUMPI POP PUSH1 0x1F SLOAD PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 DIV PUSH1 0xFF AND JUMPDEST ISZERO PUSH2 0x1BE9 JUMPI PUSH1 0x20 SLOAD SWAP2 POP PUSH2 0x1BE9 DUP3 PUSH2 0x1EEC JUMP JUMPDEST PUSH2 0x1BF4 DUP6 DUP6 DUP6 PUSH2 0x1F93 JUMP JUMPDEST PUSH1 0x1B SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x1D09 JUMPI PUSH1 0x0 PUSH2 0x3E8 PUSH1 0x1A SLOAD PUSH1 0x7 SLOAD PUSH2 0x1C14 SWAP2 SWAP1 PUSH2 0x2DA3 JUMP JUMPDEST PUSH2 0x1C1E SWAP2 SWAP1 PUSH2 0x2D81 JUMP JUMPDEST PUSH1 0x1F SLOAD SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND SWAP2 AND EQ ISZERO PUSH2 0x1CA3 JUMPI DUP1 DUP5 GT ISZERO PUSH2 0x1C9E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5472616E73616374656420616D6F756E742065786365656420746865206D6178 PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x20616C6C6F7765642076616C7565 PUSH1 0x90 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB21 JUMP JUMPDEST PUSH2 0x1D07 JUMP JUMPDEST DUP1 PUSH2 0x1CAD DUP7 PUSH2 0x1355 JUMP JUMPDEST GT ISZERO PUSH2 0x1D07 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x57616C6C65742062616C616E6365206578636565647320746865206D6178206C PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x1A5B5A5D PUSH1 0xE2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB21 JUMP JUMPDEST POP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP5 DUP5 GT ISZERO PUSH2 0x1D34 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB21 SWAP2 SWAP1 PUSH2 0x2C61 JUMP JUMPDEST POP POP POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x1D49 PUSH2 0x22C0 JUMP JUMPDEST SWAP1 SWAP3 POP SWAP1 POP PUSH2 0x1D58 DUP3 DUP3 PUSH2 0x1D5F JUMP JUMPDEST SWAP3 POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCBE DUP3 DUP5 PUSH2 0x2D81 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCBE DUP3 DUP5 PUSH2 0x2D69 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x1D8E DUP11 PUSH2 0x2442 JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x1DAC DUP14 DUP7 DUP7 PUSH2 0x1DA7 PUSH2 0x1D3C JUMP JUMPDEST PUSH2 0x247E JUMP JUMPDEST SWAP2 SWAP16 SWAP1 SWAP15 POP SWAP1 SWAP13 POP SWAP6 SWAP11 POP SWAP4 SWAP9 POP SWAP2 SWAP7 POP SWAP3 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCBE DUP3 DUP5 PUSH2 0x2DC2 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO DUP1 PUSH2 0x1E3F JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO JUMPDEST ISZERO PUSH2 0x1E49 JUMPI POP POP POP JUMP JUMPDEST PUSH1 0x22 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0x1E6D JUMPI POP PUSH1 0x22 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO ISZERO JUMPDEST ISZERO PUSH2 0x1EE7 JUMPI PUSH1 0x22 SLOAD PUSH1 0x40 MLOAD PUSH4 0x5D37A8DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE DUP5 DUP2 AND PUSH1 0x44 DUP4 ADD MSTORE PUSH1 0x64 DUP3 ADD DUP5 SWAP1 MSTORE SWAP1 SWAP2 AND SWAP1 PUSH4 0x5D37A8DD SWAP1 PUSH1 0x84 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1ECE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1EE2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1F DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND PUSH1 0x1 PUSH1 0xA0 SHL OR SWAP1 SSTORE PUSH1 0x0 PUSH2 0x1F0C DUP3 PUSH1 0x2 PUSH2 0x1D5F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1F1A DUP4 DUP4 PUSH2 0x1DC6 JUMP JUMPDEST SWAP1 POP SELFBALANCE PUSH2 0x1F26 DUP4 PUSH2 0x24CE JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F32 SELFBALANCE DUP4 PUSH2 0x1DC6 JUMP JUMPDEST SWAP1 POP PUSH2 0x1F3E DUP4 DUP3 PUSH2 0x262F JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP4 SWAP1 MSTORE SWAP1 DUP2 ADD DUP5 SWAP1 MSTORE PUSH32 0x17BBFB9A6069321B6DED73BD96327C9E6B7212A5CD51FF219CD61370ACAFB561 SWAP1 PUSH1 0x60 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP PUSH1 0x1F DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP1 PUSH2 0x1FD2 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST ISZERO PUSH2 0x1FE4 JUMPI PUSH2 0x1FDF PUSH2 0x270C JUMP JUMPDEST PUSH2 0x2032 JUMP JUMPDEST PUSH1 0x1F SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND SWAP2 AND EQ ISZERO PUSH2 0x2032 JUMPI PUSH2 0x2032 PUSH1 0xD DUP1 SLOAD PUSH1 0xE SSTORE PUSH1 0xF DUP1 SLOAD PUSH1 0x10 SSTORE PUSH1 0x11 DUP1 SLOAD PUSH1 0x12 SSTORE PUSH1 0x13 DUP1 SLOAD PUSH1 0x15 SSTORE PUSH1 0x16 SLOAD SWAP1 SWAP4 SSTORE PUSH1 0x17 SLOAD SWAP1 SWAP2 SSTORE PUSH1 0x18 SLOAD SWAP1 SWAP2 SSTORE PUSH1 0x19 SLOAD SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2054 PUSH1 0x64 PUSH2 0x204E PUSH1 0x11 SLOAD DUP6 PUSH2 0x2768 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 PUSH2 0x1D5F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x2072 PUSH1 0x64 PUSH2 0x204E PUSH1 0x13 SLOAD DUP7 PUSH2 0x2768 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP PUSH1 0xFF AND DUP1 ISZERO PUSH2 0x20B6 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST ISZERO PUSH2 0x20DE JUMPI PUSH2 0x20D9 DUP6 DUP6 PUSH2 0x20D4 DUP5 PUSH2 0x20CE DUP9 DUP9 PUSH2 0x1DC6 JUMP JUMPDEST SWAP1 PUSH2 0x1DC6 JUMP JUMPDEST PUSH2 0x2774 JUMP JUMPDEST PUSH2 0x220B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0x211F JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST ISZERO PUSH2 0x213C JUMPI PUSH2 0x20D9 DUP6 DUP6 PUSH2 0x2137 DUP5 PUSH2 0x20CE DUP9 DUP9 PUSH2 0x1DC6 JUMP JUMPDEST PUSH2 0x289A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0x217E JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST ISZERO PUSH2 0x219B JUMPI PUSH2 0x20D9 DUP6 DUP6 PUSH2 0x2196 DUP5 PUSH2 0x20CE DUP9 DUP9 PUSH2 0x1DC6 JUMP JUMPDEST PUSH2 0x2943 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP1 ISZERO PUSH2 0x21DB JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST ISZERO PUSH2 0x21F8 JUMPI PUSH2 0x20D9 DUP6 DUP6 PUSH2 0x21F3 DUP5 PUSH2 0x20CE DUP9 DUP9 PUSH2 0x1DC6 JUMP JUMPDEST PUSH2 0x2987 JUMP JUMPDEST PUSH2 0x220B DUP6 DUP6 PUSH2 0x2196 DUP5 PUSH2 0x20CE DUP9 DUP9 PUSH2 0x1DC6 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xD DUP2 SWAP1 SSTORE PUSH1 0xF DUP2 SWAP1 SSTORE PUSH2 0x2223 SWAP1 DUP7 SWAP1 DUP5 PUSH2 0x2943 JUMP JUMPDEST PUSH1 0x14 SLOAD PUSH2 0x223B SWAP1 DUP7 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH2 0x2943 JUMP JUMPDEST PUSH1 0xE SLOAD PUSH1 0xD SSTORE PUSH1 0x10 SLOAD PUSH1 0xF SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP1 PUSH2 0x2286 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST DUP1 PUSH2 0x229E JUMPI POP PUSH1 0x1F SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND SWAP2 AND EQ JUMPDEST ISZERO PUSH2 0x1D09 JUMPI PUSH2 0x1D09 PUSH1 0xE SLOAD PUSH1 0xD SSTORE PUSH1 0x10 SLOAD PUSH1 0xF SSTORE PUSH1 0x12 SLOAD PUSH1 0x11 SSTORE PUSH1 0x15 SLOAD PUSH1 0x13 SSTORE JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x7 SLOAD PUSH1 0x0 SWAP2 DUP3 SWAP2 DUP3 JUMPDEST PUSH1 0x6 SLOAD DUP2 LT ISZERO PUSH2 0x2412 JUMPI DUP3 PUSH1 0x1 PUSH1 0x0 PUSH1 0x6 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x22EF JUMPI PUSH2 0x22EF PUSH2 0x2E5B JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD SWAP1 KECCAK256 SLOAD GT DUP1 PUSH2 0x235A JUMPI POP DUP2 PUSH1 0x2 PUSH1 0x0 PUSH1 0x6 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x2333 JUMPI PUSH2 0x2333 PUSH2 0x2E5B JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD SWAP1 KECCAK256 SLOAD GT JUMPDEST ISZERO PUSH2 0x2370 JUMPI PUSH1 0x8 SLOAD PUSH1 0x7 SLOAD SWAP5 POP SWAP5 POP POP POP POP SWAP1 SWAP2 JUMP JUMPDEST PUSH2 0x23B6 PUSH1 0x1 PUSH1 0x0 PUSH1 0x6 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x238A JUMPI PUSH2 0x238A PUSH2 0x2E5B JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD SWAP1 KECCAK256 SLOAD DUP5 SWAP1 PUSH2 0x1DC6 JUMP JUMPDEST SWAP3 POP PUSH2 0x23FE PUSH1 0x2 PUSH1 0x0 PUSH1 0x6 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x23D2 JUMPI PUSH2 0x23D2 PUSH2 0x2E5B JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD SWAP1 KECCAK256 SLOAD DUP4 SWAP1 PUSH2 0x1DC6 JUMP JUMPDEST SWAP2 POP DUP1 PUSH2 0x240A DUP2 PUSH2 0x2E14 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x22CD JUMP JUMPDEST POP PUSH1 0x7 SLOAD PUSH1 0x8 SLOAD PUSH2 0x2422 SWAP2 PUSH2 0x1D5F JUMP JUMPDEST DUP3 LT ISZERO PUSH2 0x2439 JUMPI PUSH1 0x8 SLOAD PUSH1 0x7 SLOAD SWAP4 POP SWAP4 POP POP POP SWAP1 SWAP2 JUMP JUMPDEST SWAP1 SWAP4 SWAP1 SWAP3 POP SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x2451 DUP6 PUSH2 0x29FA JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x245E DUP7 PUSH2 0x2A16 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x2470 DUP3 PUSH2 0x20CE DUP10 DUP7 PUSH2 0x1DC6 JUMP JUMPDEST SWAP8 SWAP3 SWAP7 POP SWAP1 SWAP5 POP SWAP1 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 DUP1 PUSH2 0x248D DUP9 DUP7 PUSH2 0x2768 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x249B DUP9 DUP8 PUSH2 0x2768 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x24A9 DUP9 DUP9 PUSH2 0x2768 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x24BB DUP3 PUSH2 0x20CE DUP7 DUP7 PUSH2 0x1DC6 JUMP JUMPDEST SWAP4 SWAP12 SWAP4 SWAP11 POP SWAP2 SWAP9 POP SWAP2 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x2 DUP1 DUP3 MSTORE PUSH1 0x60 DUP3 ADD DUP4 MSTORE PUSH1 0x0 SWAP3 PUSH1 0x20 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP ADDRESS DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x2503 JUMPI PUSH2 0x2503 PUSH2 0x2E5B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x20 SWAP2 DUP3 MUL SWAP3 SWAP1 SWAP3 ADD DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1E SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x15AB88C9 PUSH1 0xE3 SHL DUP2 MSTORE SWAP1 MLOAD SWAP2 SWAP1 SWAP4 AND SWAP3 PUSH4 0xAD5C4648 SWAP3 PUSH1 0x4 DUP1 DUP4 ADD SWAP4 SWAP2 SWAP3 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2557 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x256B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x258F SWAP2 SWAP1 PUSH2 0x2B10 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x25A2 JUMPI PUSH2 0x25A2 PUSH2 0x2E5B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x20 SWAP2 DUP3 MUL SWAP3 SWAP1 SWAP3 ADD ADD MSTORE PUSH1 0x1E SLOAD PUSH2 0x25C8 SWAP2 ADDRESS SWAP2 AND DUP5 PUSH2 0x1904 JUMP JUMPDEST PUSH1 0x1E SLOAD PUSH1 0x40 MLOAD PUSH4 0x791AC947 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x791AC947 SWAP1 PUSH2 0x2601 SWAP1 DUP6 SWAP1 PUSH1 0x0 SWAP1 DUP7 SWAP1 ADDRESS SWAP1 TIMESTAMP SWAP1 PUSH1 0x4 ADD PUSH2 0x2CF8 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x261B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1D07 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1E SLOAD PUSH2 0x2647 SWAP1 ADDRESS SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH2 0x1904 JUMP JUMPDEST PUSH1 0x1E SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xF305D719 DUP3 ADDRESS DUP6 PUSH1 0x0 DUP1 PUSH2 0x2670 PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0xE0 DUP9 SWAP1 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP6 DUP7 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 0x44 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x64 DUP4 ADD MSTORE SWAP1 SWAP2 AND PUSH1 0x84 DUP3 ADD MSTORE TIMESTAMP PUSH1 0xA4 DUP3 ADD MSTORE PUSH1 0xC4 ADD PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x26D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x26E7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1D09 SWAP2 SWAP1 PUSH2 0x2C33 JUMP JUMPDEST PUSH1 0xD SLOAD ISZERO DUP1 ISZERO PUSH2 0x271C JUMPI POP PUSH1 0xF SLOAD ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x2728 JUMPI POP PUSH1 0x13 SLOAD ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x2734 JUMPI POP PUSH1 0x11 SLOAD ISZERO JUMPDEST ISZERO PUSH2 0x273B JUMPI JUMP JUMPDEST PUSH1 0xD DUP1 SLOAD PUSH1 0xE SSTORE PUSH1 0xF DUP1 SLOAD PUSH1 0x10 SSTORE PUSH1 0x11 DUP1 SLOAD PUSH1 0x12 SSTORE PUSH1 0x13 DUP1 SLOAD PUSH1 0x15 SSTORE PUSH1 0x0 SWAP4 DUP5 SWAP1 SSTORE SWAP2 DUP4 SWAP1 SSTORE SWAP1 DUP3 SWAP1 SSTORE SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCBE DUP3 DUP5 PUSH2 0x2DA3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x2786 DUP8 PUSH2 0x1D77 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP16 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP6 SWAP12 POP SWAP4 SWAP10 POP SWAP2 SWAP8 POP SWAP6 POP SWAP4 POP SWAP2 POP PUSH2 0x27B8 SWAP1 DUP9 PUSH2 0x1DC6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE PUSH1 0x1 SWAP1 MSTORE KECCAK256 SLOAD PUSH2 0x27E7 SWAP1 DUP8 PUSH2 0x1DC6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP12 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP11 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x2816 SWAP1 DUP7 PUSH2 0x1D6B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH2 0x2838 DUP2 PUSH2 0x2A32 JUMP JUMPDEST PUSH2 0x2842 DUP5 DUP4 PUSH2 0x2ABA JUMP JUMPDEST DUP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP10 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP6 PUSH1 0x40 MLOAD PUSH2 0x2887 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x28AC DUP8 PUSH2 0x1D77 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP16 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP6 SWAP12 POP SWAP4 SWAP10 POP SWAP2 SWAP8 POP SWAP6 POP SWAP4 POP SWAP2 POP PUSH2 0x28DE SWAP1 DUP8 PUSH2 0x1DC6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP12 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE SWAP2 DUP12 AND DUP2 MSTORE PUSH1 0x2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH2 0x2914 SWAP1 DUP5 PUSH2 0x1D6B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE PUSH1 0x1 SWAP1 MSTORE KECCAK256 SLOAD PUSH2 0x2816 SWAP1 DUP7 PUSH2 0x1D6B JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x2955 DUP8 PUSH2 0x1D77 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP16 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP6 SWAP12 POP SWAP4 SWAP10 POP SWAP2 SWAP8 POP SWAP6 POP SWAP4 POP SWAP2 POP PUSH2 0x27E7 SWAP1 DUP8 PUSH2 0x1DC6 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x2999 DUP8 PUSH2 0x1D77 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP16 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP6 SWAP12 POP SWAP4 SWAP10 POP SWAP2 SWAP8 POP SWAP6 POP SWAP4 POP SWAP2 POP PUSH2 0x29CB SWAP1 DUP9 PUSH2 0x1DC6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE PUSH1 0x1 SWAP1 MSTORE KECCAK256 SLOAD PUSH2 0x28DE SWAP1 DUP8 PUSH2 0x1DC6 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBD2 PUSH1 0x64 PUSH2 0x204E PUSH1 0xD SLOAD DUP6 PUSH2 0x2768 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBD2 PUSH1 0x64 PUSH2 0x204E PUSH1 0xF SLOAD DUP6 PUSH2 0x2768 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2A3C PUSH2 0x1D3C JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x2A4A DUP4 DUP4 PUSH2 0x2768 JUMP JUMPDEST ADDRESS PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP PUSH2 0x2A67 SWAP1 DUP3 PUSH2 0x1D6B JUMP JUMPDEST ADDRESS PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE PUSH1 0x5 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x1EE7 JUMPI ADDRESS PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x2AA5 SWAP1 DUP5 PUSH2 0x1D6B JUMP JUMPDEST ADDRESS PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH2 0x2AC7 SWAP1 DUP4 PUSH2 0x1DC6 JUMP JUMPDEST PUSH1 0x8 SSTORE PUSH1 0x9 SLOAD PUSH2 0x2AD7 SWAP1 DUP3 PUSH2 0x1D6B JUMP JUMPDEST PUSH1 0x9 SSTORE POP POP JUMP JUMPDEST DUP1 CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x2AEE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2B05 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xCBE DUP2 PUSH2 0x2E71 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2B22 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0xCBE DUP2 PUSH2 0x2E71 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2B40 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x2B4B DUP2 PUSH2 0x2E71 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x2B5B DUP2 PUSH2 0x2E71 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2B7B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x2B86 DUP2 PUSH2 0x2E71 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0x2B96 DUP2 PUSH2 0x2E71 JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2BBA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x2BC5 DUP2 PUSH2 0x2E71 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2BE5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xCBE DUP3 PUSH2 0x2ADE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2C00 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2C1A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH2 0x2C2A PUSH1 0x20 DUP5 ADD PUSH2 0x2ADE JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2C48 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 MLOAD SWAP3 POP PUSH1 0x20 DUP5 ADD MLOAD SWAP2 POP PUSH1 0x40 DUP5 ADD MLOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2C8E JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x2C72 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x2CA0 JUMPI PUSH1 0x0 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x22 SWAP1 DUP3 ADD MSTORE PUSH32 0x4F6E6C792061646D696E206F7220616E7469206D616E6167657220616C6C6F77 PUSH1 0x40 DUP3 ADD MSTORE PUSH2 0x1959 PUSH1 0xF2 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD DUP8 DUP4 MSTORE PUSH1 0x20 DUP8 DUP2 DUP6 ADD MSTORE PUSH1 0xA0 PUSH1 0x40 DUP6 ADD MSTORE DUP2 DUP8 MLOAD DUP1 DUP5 MSTORE PUSH1 0xC0 DUP7 ADD SWAP2 POP DUP3 DUP10 ADD SWAP4 POP PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2D48 JUMPI DUP5 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE SWAP4 DUP4 ADD SWAP4 SWAP2 DUP4 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x2D23 JUMP JUMPDEST POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP7 SWAP1 SWAP7 AND PUSH1 0x60 DUP6 ADD MSTORE POP POP POP PUSH1 0x80 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x2D7C JUMPI PUSH2 0x2D7C PUSH2 0x2E2F JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x2D9E JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x2DBD JUMPI PUSH2 0x2DBD PUSH2 0x2E2F JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x2DD4 JUMPI PUSH2 0x2DD4 PUSH2 0x2E2F JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x2DED JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x2E0E JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x2E28 JUMPI PUSH2 0x2E28 PUSH2 0x2E2F JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x18A7 JUMPI PUSH1 0x0 DUP1 REVERT INVALID TIMESTAMP GASLIMIT POP ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220616D6F756E7420657863656564 PUSH20 0x20616C6C6F77616E636542455032303A20646563 PUSH19 0x656173656420616C6C6F77616E63652062656C PUSH16 0x77207A65726FA2646970667358221220 KECCAK256 SWAP6 JUMPI PUSH10 0xF4DC6C0AF072BA702647 PUSH13 0xBA804CFB8D88C7106EC059D436 BALANCE DUP8 0xEA JUMPI PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "541:24753:9:-:0;;;1043:22;1017:48;;;;1105:13;;-1:-1:-1;;1105:13:9;:::i;:::-;1098:21;;-1:-1:-1;;1098:21:9;:::i;:::-;1071:49;;1159:37;;;;;;;;;;;;;-1:-1:-1;;;1159:37:9;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1202:34:9;;;;;;;;;;;;;-1:-1:-1;;;1202:34:9;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1242:28:9;;;-1:-1:-1;;1242:28:9;1268:2;1242:28;;;;;;1319:1;1294:26;;;;1326:41;;;;1242:28;1374:32;;;;1412:53;;;;1472:27;;;;1505:43;;;;1555:32;;;;1629:53;;;;1706:30;;;;1742:36;;;;;1784;;;;1826:31;;1984:1;1947:38;;2284:41;;;-1:-1:-1;;;;2284:41:9;;;2379:16;2331:64;;;;2401:221;;;;;;;;2441:5;2401:221;;2456:6;2401:221;;;;;;;2472:6;2401:221;;;;2488:6;2401:221;;;;2504:7;2401:221;;;;2521:7;2401:221;;;;2538:7;2401:221;;;;2555:7;2401:221;;;;2572:8;1242:28;2401:221;;;2590:8;2401:221;;;;2608:8;2401:221;;;;;;;;;;:::i;:::-;;2926:1018;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;936:32:0;719:10:3;936:18:0;:32::i;:::-;3063:15:9;:34;;-1:-1:-1;;;;;;3063:34:9;-1:-1:-1;;;;;3063:34:9;;;;;;;;;;3107:11;:26;;-1:-1:-1;;;;;;3107:26:9;3063:34;3107:26;;;;;;;;;;;;;3167:7;;-1:-1:-1;;3151:12:9;719:10:3;;640:96;3151:12:9;-1:-1:-1;;;;;3143:21:9;-1:-1:-1;;;;;3143:21:9;;;;;;;;;;;;:31;;;;3271:16;-1:-1:-1;;;;;3271:24:9;;:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;3253:56:9;;3331:4;3350:16;-1:-1:-1;;;;;3350:21:9;;:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3253:130;;-1:-1:-1;;;;;;3253:130:9;;;;;;;-1:-1:-1;;;;;1051:15:10;;;3253:130:9;;;1033:34:10;1103:15;;1083:18;;;1076:43;968:18;;3253:130:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3237:13;:146;;-1:-1:-1;;;;;;3237:146:9;;;-1:-1:-1;;;;;3237:146:9;;;;;;;3444:15;:34;;;;;;;;;;;;;;-1:-1:-1;3554:18:9;-1:-1:-1;3573:7:9;1247::0;1273:6;-1:-1:-1;;;;;1273:6:0;;1201:85;3573:7:9;-1:-1:-1;;;;;3554:27:9;;;;;;;;;;;;;;;;;-1:-1:-1;3554:27:9;;;:34;;;;;-1:-1:-1;;3554:34:9;;;;;;3598:32;;;;;:18;:32;;;;;;:39;;;;3554:34;3598:39;;;;;;3674:4;3647:33;;;;;:40;;;;;;;;;3745:134;3769:17;:24;3765:28;;3745:134;;;3864:4;3814:16;:47;3831:17;3849:1;3831:20;;;;;;;;:::i;:::-;;;;;;;;;3854:6;3831:29;;;;:::i;:::-;3814:47;;;;;;;;;;;-1:-1:-1;3814:47:9;:54;;-1:-1:-1;;3814:54:9;;;;;;;;;;3795:3;;;;:::i;:::-;;;;3745:134;;;-1:-1:-1;3929:7:9;;3894:43;;1276:25:10;;;719:10:3;;3911:1:9;;3894:43;;1264:2:10;1249:18;3894:43:9;;;;;;;2926:1018;;;541:24753;;2433:187:0;2506:16;2525:6;;-1:-1:-1;;;;;2541:17:0;;;-1:-1:-1;;;;;;2541:17:0;;;;;;2573:40;;2525:6;;;;;;;2573:40;;2506:16;2573:40;2496:124;2433:187;:::o;541:24753:9:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;541:24753:9;;;-1:-1:-1;541:24753:9;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14:251:10;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;185:9;179:16;204:31;229:5;204:31;:::i;:::-;254:5;14:251;-1:-1:-1;;;14:251:10:o;270:546::-;385:6;393;401;454:2;442:9;433:7;429:23;425:32;422:52;;;470:1;467;460:12;422:52;502:9;496:16;521:31;546:5;521:31;:::i;:::-;621:2;606:18;;600:25;571:5;;-1:-1:-1;634:33:10;600:25;634:33;:::i;:::-;738:2;723:18;;717:25;686:7;;-1:-1:-1;751:33:10;717:25;751:33;:::i;:::-;803:7;793:17;;;270:546;;;;;:::o;1312:168::-;1352:7;1418:1;1414;1410:6;1406:14;1403:1;1400:21;1395:1;1388:9;1381:17;1377:45;1374:71;;;1425:18;;:::i;:::-;-1:-1:-1;1465:9:10;;1312:168::o;1485:125::-;1525:4;1553:1;1550;1547:8;1544:34;;;1558:18;;:::i;:::-;-1:-1:-1;1595:9:10;;1485:125::o;1615:380::-;1694:1;1690:12;;;;1737;;;1758:61;;1812:4;1804:6;1800:17;1790:27;;1758:61;1865:2;1857:6;1854:14;1834:18;1831:38;1828:161;;;1911:10;1906:3;1902:20;1899:1;1892:31;1946:4;1943:1;1936:15;1974:4;1971:1;1964:15;1828:161;;1615:380;;;:::o;2000:135::-;2039:3;-1:-1:-1;;2060:17:10;;2057:43;;;2080:18;;:::i;:::-;-1:-1:-1;2127:1:10;2116:13;;2000:135::o;2140:209::-;2172:1;2198;2188:132;;2242:10;2237:3;2233:20;2230:1;2223:31;2277:4;2274:1;2267:15;2305:4;2302:1;2295:15;2188:132;-1:-1:-1;2334:9:10;;2140:209::o;2354:127::-;2415:10;2410:3;2406:20;2403:1;2396:31;2446:4;2443:1;2436:15;2470:4;2467:1;2460:15;2486:127;2547:10;2542:3;2538:20;2535:1;2528:31;2578:4;2575:1;2568:15;2602:4;2599:1;2592:15;2618:131;-1:-1:-1;;;;;2693:31:10;;2683:42;;2673:70;;2739:1;2736;2729:12;2673:70;2618:131;:::o;:::-;541:24753:9;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@MAX_HOLDING_PERCENTS_DIVISOR_1688": {
									"entryPoint": null,
									"id": 1688,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_2489": {
									"entryPoint": null,
									"id": 2489,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_approve_3018": {
									"entryPoint": 6404,
									"id": 3018,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_beforeTokenTransfer_1914": {
									"entryPoint": 7714,
									"id": 1914,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_burnFee_1662": {
									"entryPoint": null,
									"id": 1662,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_checkOwner_54": {
									"entryPoint": 6314,
									"id": 54,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_getCurrentSupply_2758": {
									"entryPoint": 8896,
									"id": 2758,
									"parameterSlots": 0,
									"returnSlots": 2
								},
								"@_getRValues_2654": {
									"entryPoint": 9342,
									"id": 2654,
									"parameterSlots": 4,
									"returnSlots": 3
								},
								"@_getRate_2672": {
									"entryPoint": 7484,
									"id": 2672,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_getTValues_2600": {
									"entryPoint": 9282,
									"id": 2600,
									"parameterSlots": 1,
									"returnSlots": 3
								},
								"@_getValues_2561": {
									"entryPoint": 7543,
									"id": 2561,
									"parameterSlots": 1,
									"returnSlots": 6
								},
								"@_liquidityFee_1656": {
									"entryPoint": null,
									"id": 1656,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_marketingFee_1668": {
									"entryPoint": null,
									"id": 1668,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_maxHoldingPercents_1691": {
									"entryPoint": null,
									"id": 1691,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_532": {
									"entryPoint": null,
									"id": 532,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_reflectFee_2511": {
									"entryPoint": 10938,
									"id": 2511,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_sellBurnFee_1685": {
									"entryPoint": null,
									"id": 1685,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_sellLiquidityFee_1679": {
									"entryPoint": null,
									"id": 1679,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_sellMarketingFee_1682": {
									"entryPoint": null,
									"id": 1682,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_sellTaxFee_1676": {
									"entryPoint": null,
									"id": 1676,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_takeLiquidity_2817": {
									"entryPoint": 10802,
									"id": 2817,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_taxFee_1650": {
									"entryPoint": null,
									"id": 1650,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_tokenTransfer_3497": {
									"entryPoint": 8083,
									"id": 3497,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transferBothExcluded_2485": {
									"entryPoint": 10631,
									"id": 2485,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transferFromExcluded_3708": {
									"entryPoint": 10100,
									"id": 3708,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transferOwnership_111": {
									"entryPoint": 7634,
									"id": 111,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transferStandard_3560": {
									"entryPoint": 10563,
									"id": 3560,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transferToExcluded_3634": {
									"entryPoint": 10394,
									"id": 3634,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transfer_3140": {
									"entryPoint": 6696,
									"id": 3140,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@activateSellFee_2889": {
									"entryPoint": null,
									"id": 2889,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@addLiquidity_3294": {
									"entryPoint": 9775,
									"id": 3294,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@add_718": {
									"entryPoint": 7531,
									"id": 718,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@allowance_2036": {
									"entryPoint": null,
									"id": 2036,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@antiBotEnabled_1699": {
									"entryPoint": null,
									"id": 1699,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@antiManager_1701": {
									"entryPoint": null,
									"id": 1701,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@antiWhaleEnabled_1693": {
									"entryPoint": null,
									"id": 1693,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@antisnipeDisable_1866": {
									"entryPoint": null,
									"id": 1866,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@antisnipe_1864": {
									"entryPoint": null,
									"id": 1864,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@approve_2056": {
									"entryPoint": 3009,
									"id": 2056,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_1999": {
									"entryPoint": 4949,
									"id": 1999,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@calculateLiquidityFee_2853": {
									"entryPoint": 10774,
									"id": 2853,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@calculateTaxFee_2835": {
									"entryPoint": 10746,
									"id": 2835,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@decimals_1967": {
									"entryPoint": null,
									"id": 1967,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@decreaseAllowance_2148": {
									"entryPoint": 5456,
									"id": 2148,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@deliver_2218": {
									"entryPoint": 3728,
									"id": 2218,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@div_763": {
									"entryPoint": 7519,
									"id": 763,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@excludeFromFee_3722": {
									"entryPoint": 3962,
									"id": 3722,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@excludeFromReward_2336": {
									"entryPoint": 4342,
									"id": 2336,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@includeInFee_3736": {
									"entryPoint": 6044,
									"id": 3736,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@includeInReward_2400": {
									"entryPoint": 3269,
									"id": 2400,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@increaseAllowance_2120": {
									"entryPoint": 3674,
									"id": 2120,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@isExcludedFromFee_2974": {
									"entryPoint": null,
									"id": 2974,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@isExcludedFromReward_2160": {
									"entryPoint": null,
									"id": 2160,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@marketingWallet_1670": {
									"entryPoint": null,
									"id": 1670,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@mul_748": {
									"entryPoint": 10088,
									"id": 748,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@name_1951": {
									"entryPoint": 2863,
									"id": 1951,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@owner_40": {
									"entryPoint": null,
									"id": 40,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@pancakeV2Pair_1706": {
									"entryPoint": null,
									"id": 1706,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@pancakeV2Router_1704": {
									"entryPoint": null,
									"id": 1704,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@reflectionFromToken_2256": {
									"entryPoint": 4006,
									"id": 2256,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@removeAllFee_2942": {
									"entryPoint": 9996,
									"id": 2942,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@renounceOwnership_68": {
									"entryPoint": 5044,
									"id": 68,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@restoreAllFee_2962": {
									"entryPoint": null,
									"id": 2962,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@setAntiBot_3990": {
									"entryPoint": 5661,
									"id": 3990,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setAntiWhale_3966": {
									"entryPoint": 4255,
									"id": 3966,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setAntisnipeAddress_1943": {
									"entryPoint": 4907,
									"id": 1943,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setAntisnipeDisable_1929": {
									"entryPoint": 5064,
									"id": 1929,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@setBurnFeePercent_3824": {
									"entryPoint": 5844,
									"id": 3824,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setLiquidityFeePercent_3786": {
									"entryPoint": 5116,
									"id": 3786,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setMarketingFeePercent_3805": {
									"entryPoint": 4147,
									"id": 3805,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setMarketingWallet_3748": {
									"entryPoint": 4865,
									"id": 3748,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setMaxHoldingPercents_3926": {
									"entryPoint": 5239,
									"id": 3926,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setSellBurnFeePercent_3843": {
									"entryPoint": 6085,
									"id": 3843,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setSellLiquidityFeePercent_3881": {
									"entryPoint": 4752,
									"id": 3881,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setSellMarketingFeePercent_3862": {
									"entryPoint": 5548,
									"id": 3862,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setSellTaxFeePercent_3900": {
									"entryPoint": 5938,
									"id": 3900,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setSwapAndLiquifyEnabled_3942": {
									"entryPoint": 5748,
									"id": 3942,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setTaxFeePercent_3767": {
									"entryPoint": 2764,
									"id": 3767,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@sub_733": {
									"entryPoint": 7622,
									"id": 733,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@sub_803": {
									"entryPoint": 7440,
									"id": 803,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@swapAndLiquifyEnabled_1711": {
									"entryPoint": null,
									"id": 1711,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@swapAndLiquify_3196": {
									"entryPoint": 7916,
									"id": 3196,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@swapTokensForEth_3256": {
									"entryPoint": 9422,
									"id": 3256,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@symbol_1959": {
									"entryPoint": 5224,
									"id": 1959,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@tokenFromReflection_2281": {
									"entryPoint": 3137,
									"id": 2281,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@totalFees_2168": {
									"entryPoint": null,
									"id": 2168,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_1976": {
									"entryPoint": null,
									"id": 1976,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_2093": {
									"entryPoint": 3032,
									"id": 2093,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transferOwnership_91": {
									"entryPoint": 6193,
									"id": 91,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transfer_2019": {
									"entryPoint": 5535,
									"id": 2019,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_bool": {
									"entryPoint": 10974,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 10995,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 11024,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 11053,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 11110,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 11175,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bool": {
									"entryPoint": 11219,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 11246,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_bool": {
									"entryPoint": 11271,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256t_uint256t_uint256_fromMemory": {
									"entryPoint": 11315,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_address_t_uint256__to_t_address_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_rational_0_by_1_t_rational_0_by_1_t_address_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 7,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IAntisnipe_$1576__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IPancakeV2Router02_$1555__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 11361,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0a76e06c54c9cc0a2854b395e370ae54860131006316b46c6c19fe7418fa0a0c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0d26cf302d50b28de74be656b11d67092b32131e5712d1bcf08c4e976dacda57__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_129c9dc3ee74cfed4b4b6575287910646aa77269c5388380730e971c771115d5__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 11446,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1441cfbef485de93bedecc35b3d10fa2992db382c4c9c583a6e423a140abe4a4__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_17b25864546a079c709adb8eddb49b99f1e6fcbd0f9d9e42c5f8754288ac4894__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_221934928cb9bf87d39f3d506bf3644513f48ce917af3d8edb89ffc01d6fe0a0__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_22f7af55a509c3b14f0d528f087748dec8a8bf425135e3f5dc28c6a31ec6d812__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_37c42abb73e5fbbb1d487c4f3c99f213399be5b6d497c3b5e195369c05a76a16__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_40ff67f743a73c63981ce97facdb4b14324f60afa0e3049344c62414448ff258__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_4548548aa0306dcf79ce9af2c7863f8a94faa30d5510996966e8c85621aec950__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_568ab0afe34d1b225551db99a4889fd852d0c6b22494b6e4ad3d5e6a737adcd3__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_60ec5945874cf590867d4308bd6c649b8807f5be7fe7a441268b9df56400e86a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_6c3d5d630711c57d95621b0547fb0a19eab6922a3a0e7e9054d9f9c5458b757b__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_7cd1f6dc4c058cd6c489a89ebbdf77f33bae1246803c57d331732d32ce2f5a19__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_7d8fe367138b40da0526c127a4b5758d259c378e2321949a7b4dcc147f255dde__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9aedef95c53d84b258a520b8975f9d4afce00f081860eeebaef923486edca039__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9edb5ab58321f35d2386ea65721c9b107daa2c273610fc16d394af2a320ba785__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_add9df74b400d7134f412b5d33b290f6237ecb8b07e32ab5e795f8662d75af98__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_cae3b9edb9e2038d3ab16a2c505f33af4bc7eeea3101f90e45e454c014520921__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d0a40029d4e86ac52d6424ca86b4163ba68013d9247da73177a5c17cc02bf0ce__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ecefcaf5fbcf9ca6dcdb02298ba1da96f4ead317b0a4779917ecb2e5e7dc3ac4__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f10e7571e18b354270dee950932fb6a745efc79414b2b2556185a4ed6a1af0d5__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ffa0fc0b551ed285e79ae6c63e94336b136523a15dd8db2ed7cfc4776042e049__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_rational_0_by_1_t_array$_t_address_$dyn_memory_ptr_t_address_t_uint256__to_t_uint256_t_uint256_t_array$_t_address_$dyn_memory_ptr_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 11512,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 11625,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 11649,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 11683,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 11714,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 11737,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 11796,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 11823,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x31": {
									"entryPoint": 11845,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 11867,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_address": {
									"entryPoint": 11889,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:18759:10",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:10",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "60:114:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "70:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "92:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "79:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "79:20:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "70:5:10"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "152:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "161:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "164:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "154:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "154:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "154:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "121:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nodeType": "YulIdentifier",
																								"src": "142:5:10"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nodeType": "YulIdentifier",
																							"src": "135:6:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "135:13:10"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "128:6:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "128:21:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "118:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "118:32:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "111:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "111:40:10"
															},
															"nodeType": "YulIf",
															"src": "108:60:10"
														}
													]
												},
												"name": "abi_decode_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "39:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "50:5:10",
														"type": ""
													}
												],
												"src": "14:160:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "249:177:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "295:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "304:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "307:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "297:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "297:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "297:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "270:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "279:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "266:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "266:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "291:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "262:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "262:32:10"
															},
															"nodeType": "YulIf",
															"src": "259:52:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "320:36:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "346:9:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "333:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "333:23:10"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "324:5:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "390:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "365:24:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "365:31:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "365:31:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "405:15:10",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "415:5:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "405:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "215:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "226:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "238:6:10",
														"type": ""
													}
												],
												"src": "179:247:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "512:170:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "558:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "567:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "570:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "560:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "560:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "560:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "533:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "542:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "529:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "529:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "554:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "525:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "525:32:10"
															},
															"nodeType": "YulIf",
															"src": "522:52:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "583:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "602:9:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "596:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "596:16:10"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "587:5:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "646:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "621:24:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "621:31:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "621:31:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "661:15:10",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "671:5:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "661:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "478:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "489:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "501:6:10",
														"type": ""
													}
												],
												"src": "431:251:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "774:301:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "820:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "829:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "832:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "822:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "822:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "822:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "795:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "804:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "791:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "791:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "816:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "787:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "787:32:10"
															},
															"nodeType": "YulIf",
															"src": "784:52:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "845:36:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "871:9:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "858:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "858:23:10"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "849:5:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "915:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "890:24:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "890:31:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "890:31:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "930:15:10",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "940:5:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "930:6:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "954:47:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "986:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "997:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "982:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "982:18:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "969:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "969:32:10"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nodeType": "YulTypedName",
																	"src": "958:7:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_1",
																		"nodeType": "YulIdentifier",
																		"src": "1035:7:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "1010:24:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1010:33:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1010:33:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1052:17:10",
															"value": {
																"name": "value_1",
																"nodeType": "YulIdentifier",
																"src": "1062:7:10"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1052:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "732:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "743:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "755:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "763:6:10",
														"type": ""
													}
												],
												"src": "687:388:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1184:352:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1230:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1239:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1242:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1232:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1232:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1232:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1205:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1214:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1201:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1201:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1226:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1197:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1197:32:10"
															},
															"nodeType": "YulIf",
															"src": "1194:52:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1255:36:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1281:9:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1268:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1268:23:10"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "1259:5:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1325:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "1300:24:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1300:31:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1300:31:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1340:15:10",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1350:5:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1340:6:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1364:47:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1396:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1407:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1392:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1392:18:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1379:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1379:32:10"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nodeType": "YulTypedName",
																	"src": "1368:7:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_1",
																		"nodeType": "YulIdentifier",
																		"src": "1445:7:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "1420:24:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1420:33:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1420:33:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1462:17:10",
															"value": {
																"name": "value_1",
																"nodeType": "YulIdentifier",
																"src": "1472:7:10"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1462:6:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1488:42:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1515:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1526:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1511:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1511:18:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1498:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1498:32:10"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "1488:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1134:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1145:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1157:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1165:6:10",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1173:6:10",
														"type": ""
													}
												],
												"src": "1080:456:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1628:228:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1674:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1683:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1686:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1676:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1676:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1676:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1649:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1658:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1645:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1645:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1670:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1641:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1641:32:10"
															},
															"nodeType": "YulIf",
															"src": "1638:52:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1699:36:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1725:9:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1712:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1712:23:10"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "1703:5:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1769:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "1744:24:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1744:31:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1744:31:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1784:15:10",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1794:5:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1784:6:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1808:42:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1835:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1846:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1831:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1831:18:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1818:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1818:32:10"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1808:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1586:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1597:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1609:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1617:6:10",
														"type": ""
													}
												],
												"src": "1541:315:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1928:113:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1974:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1983:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1986:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1976:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1976:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1976:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1949:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1958:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1945:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1945:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1970:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1941:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1941:32:10"
															},
															"nodeType": "YulIf",
															"src": "1938:52:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1999:36:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2025:9:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_bool",
																	"nodeType": "YulIdentifier",
																	"src": "2009:15:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2009:26:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1999:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1894:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1905:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1917:6:10",
														"type": ""
													}
												],
												"src": "1861:180:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2116:110:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2162:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2171:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2174:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2164:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2164:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2164:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2137:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2146:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2133:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2133:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2158:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2129:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2129:32:10"
															},
															"nodeType": "YulIf",
															"src": "2126:52:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2187:33:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2210:9:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2197:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2197:23:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2187:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2082:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2093:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2105:6:10",
														"type": ""
													}
												],
												"src": "2046:180:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2315:164:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2361:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2370:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2373:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2363:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2363:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2363:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2336:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2345:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2332:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2332:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2357:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2328:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2328:32:10"
															},
															"nodeType": "YulIf",
															"src": "2325:52:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2386:33:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2409:9:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2396:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2396:23:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2386:6:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2428:45:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2458:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2469:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2454:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2454:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_bool",
																	"nodeType": "YulIdentifier",
																	"src": "2438:15:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2438:35:10"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2428:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2273:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2284:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2296:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2304:6:10",
														"type": ""
													}
												],
												"src": "2231:248:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2599:191:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2645:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2654:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2657:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2647:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2647:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2647:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2620:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2629:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2616:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2616:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2641:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2612:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2612:32:10"
															},
															"nodeType": "YulIf",
															"src": "2609:52:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2670:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2686:9:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2680:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2680:16:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2670:6:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2705:35:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2725:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2736:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2721:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2721:18:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2715:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2715:25:10"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2705:6:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2749:35:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2769:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2780:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2765:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2765:18:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2759:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2759:25:10"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "2749:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2549:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2560:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2572:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2580:6:10",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "2588:6:10",
														"type": ""
													}
												],
												"src": "2484:306:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2896:102:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2906:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2918:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2929:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2914:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2914:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2906:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2948:9:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "2963:6:10"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2979:3:10",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2984:1:10",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "2975:3:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2975:11:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2988:1:10",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "2971:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2971:19:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2959:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2959:32:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2941:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2941:51:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2941:51:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2865:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2876:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2887:4:10",
														"type": ""
													}
												],
												"src": "2795:203:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3188:271:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3198:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3210:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3221:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3206:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3206:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3198:4:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3234:29:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3252:3:10",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3257:1:10",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "3248:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3248:11:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3261:1:10",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "3244:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3244:19:10"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "3238:2:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3279:9:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "3294:6:10"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "3302:2:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "3290:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3290:15:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3272:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3272:34:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3272:34:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3326:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3337:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3322:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3322:18:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "3346:6:10"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "3354:2:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "3342:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3342:15:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3315:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3315:43:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3315:43:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3378:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3389:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3374:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3374:18:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value2",
																				"nodeType": "YulIdentifier",
																				"src": "3398:6:10"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "3406:2:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "3394:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3394:15:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3367:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3367:43:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3367:43:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3430:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3441:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3426:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3426:18:10"
																	},
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "3446:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3419:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3419:34:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3419:34:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_address_t_uint256__to_t_address_t_address_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3133:9:10",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "3144:6:10",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "3152:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3160:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3168:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3179:4:10",
														"type": ""
													}
												],
												"src": "3003:456:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3721:350:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3731:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3743:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3754:3:10",
																		"type": "",
																		"value": "192"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3739:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3739:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3731:4:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3767:29:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3785:3:10",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3790:1:10",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "3781:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3781:11:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3794:1:10",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "3777:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3777:19:10"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "3771:2:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3812:9:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "3827:6:10"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "3835:2:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "3823:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3823:15:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3805:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3805:34:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3805:34:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3859:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3870:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3855:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3855:18:10"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "3875:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3848:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3848:34:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3848:34:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3902:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3913:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3898:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3898:18:10"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "3918:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3891:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3891:34:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3891:34:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3945:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3956:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3941:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3941:18:10"
																	},
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "3961:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3934:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3934:34:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3934:34:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3988:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3999:3:10",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3984:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3984:19:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value4",
																				"nodeType": "YulIdentifier",
																				"src": "4009:6:10"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "4017:2:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "4005:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4005:15:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3977:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3977:44:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3977:44:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4041:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4052:3:10",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4037:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4037:19:10"
																	},
																	{
																		"name": "value5",
																		"nodeType": "YulIdentifier",
																		"src": "4058:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4030:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4030:35:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4030:35:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_rational_0_by_1_t_rational_0_by_1_t_address_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3650:9:10",
														"type": ""
													},
													{
														"name": "value5",
														"nodeType": "YulTypedName",
														"src": "3661:6:10",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "3669:6:10",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "3677:6:10",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "3685:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3693:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3701:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3712:4:10",
														"type": ""
													}
												],
												"src": "3464:607:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4171:92:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4181:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4193:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4204:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4189:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4189:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4181:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4223:9:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "4248:6:10"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "4241:6:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4241:14:10"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "4234:6:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4234:22:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4216:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4216:41:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4216:41:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4140:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4151:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4162:4:10",
														"type": ""
													}
												],
												"src": "4076:187:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4388:102:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4398:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4410:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4421:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4406:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4406:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4398:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4440:9:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "4455:6:10"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "4471:3:10",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "4476:1:10",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "4467:3:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "4467:11:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4480:1:10",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "4463:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4463:19:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "4451:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4451:32:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4433:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4433:51:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4433:51:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IAntisnipe_$1576__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4357:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4368:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4379:4:10",
														"type": ""
													}
												],
												"src": "4268:222:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4623:102:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4633:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4645:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4656:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4641:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4641:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4633:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4675:9:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "4690:6:10"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "4706:3:10",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "4711:1:10",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "4702:3:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "4702:11:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4715:1:10",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "4698:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4698:19:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "4686:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4686:32:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4668:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4668:51:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4668:51:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IPancakeV2Router02_$1555__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4592:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4603:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4614:4:10",
														"type": ""
													}
												],
												"src": "4495:230:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4851:476:10",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4861:12:10",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "4871:2:10",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "4865:2:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4889:9:10"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "4900:2:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4882:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4882:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4882:21:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4912:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4932:6:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "4926:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4926:13:10"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "4916:6:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4959:9:10"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "4970:2:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4955:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4955:18:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4975:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4948:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4948:34:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4948:34:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4991:10:10",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "5000:1:10",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "4995:1:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5060:90:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "headStart",
																									"nodeType": "YulIdentifier",
																									"src": "5089:9:10"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "5100:1:10"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "5085:3:10"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "5085:17:10"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "5104:2:10",
																							"type": "",
																							"value": "64"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "5081:3:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5081:26:10"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value0",
																											"nodeType": "YulIdentifier",
																											"src": "5123:6:10"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "5131:1:10"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "5119:3:10"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "5119:14:10"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "5135:2:10"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "5115:3:10"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "5115:23:10"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "5109:5:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5109:30:10"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "5074:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5074:66:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5074:66:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "5021:1:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "5024:6:10"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "5018:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5018:13:10"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "5032:19:10",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "5034:15:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "5043:1:10"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "5046:2:10"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "5039:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5039:10:10"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "5034:1:10"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "5014:3:10",
																"statements": []
															},
															"src": "5010:140:10"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5184:66:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "headStart",
																									"nodeType": "YulIdentifier",
																									"src": "5213:9:10"
																								},
																								{
																									"name": "length",
																									"nodeType": "YulIdentifier",
																									"src": "5224:6:10"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "5209:3:10"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "5209:22:10"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "5233:2:10",
																							"type": "",
																							"value": "64"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "5205:3:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5205:31:10"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5238:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "5198:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5198:42:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5198:42:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "5165:1:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "5168:6:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5162:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5162:13:10"
															},
															"nodeType": "YulIf",
															"src": "5159:91:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5259:62:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5275:9:10"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "5294:6:10"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "5302:2:10",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "5290:3:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "5290:15:10"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "5311:2:10",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "5307:3:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "5307:7:10"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "5286:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5286:29:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5271:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5271:45:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5318:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5267:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5267:54:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5259:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4820:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4831:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4842:4:10",
														"type": ""
													}
												],
												"src": "4730:597:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5506:181:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5523:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5534:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5516:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5516:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5516:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5557:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5568:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5553:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5553:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5573:2:10",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5546:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5546:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5546:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5596:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5607:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5592:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5592:18:10"
																	},
																	{
																		"hexValue": "546178206665652063616e6e6f74206265206d6f7265207468616e20313025",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5612:33:10",
																		"type": "",
																		"value": "Tax fee cannot be more than 10%"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5585:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5585:61:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5585:61:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5655:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5667:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5678:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5663:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5663:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5655:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0a76e06c54c9cc0a2854b395e370ae54860131006316b46c6c19fe7418fa0a0c__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5483:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5497:4:10",
														"type": ""
													}
												],
												"src": "5332:355:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5866:227:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5883:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5894:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5876:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5876:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5876:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5917:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5928:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5913:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5913:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5933:2:10",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5906:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5906:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5906:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5956:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5967:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5952:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5952:18:10"
																	},
																	{
																		"hexValue": "42455032303a207472616e736665722066726f6d20746865207a65726f206164",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5972:34:10",
																		"type": "",
																		"value": "BEP20: transfer from the zero ad"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5945:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5945:62:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5945:62:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6027:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6038:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6023:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6023:18:10"
																	},
																	{
																		"hexValue": "6472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6043:7:10",
																		"type": "",
																		"value": "dress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6016:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6016:35:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6016:35:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6060:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6072:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6083:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6068:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6068:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6060:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0d26cf302d50b28de74be656b11d67092b32131e5712d1bcf08c4e976dacda57__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5843:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5857:4:10",
														"type": ""
													}
												],
												"src": "5692:401:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6272:224:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6289:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6300:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6282:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6282:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6282:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6323:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6334:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6319:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6319:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6339:2:10",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6312:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6312:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6312:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6362:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6373:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6358:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6358:18:10"
																	},
																	{
																		"hexValue": "4f6e6c792061646d696e206f7220616e7469206d616e6167657220616c6c6f77",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6378:34:10",
																		"type": "",
																		"value": "Only admin or anti manager allow"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6351:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6351:62:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6351:62:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6433:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6444:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6429:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6429:18:10"
																	},
																	{
																		"hexValue": "6564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6449:4:10",
																		"type": "",
																		"value": "ed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6422:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6422:32:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6422:32:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6463:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6475:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6486:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6471:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6471:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6463:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_129c9dc3ee74cfed4b4b6575287910646aa77269c5388380730e971c771115d5__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6249:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6263:4:10",
														"type": ""
													}
												],
												"src": "6098:398:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6675:226:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6692:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6703:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6685:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6685:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6685:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6726:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6737:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6722:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6722:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6742:2:10",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6715:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6715:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6715:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6765:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6776:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6761:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6761:18:10"
																	},
																	{
																		"hexValue": "42455032303a20617070726f76652066726f6d20746865207a65726f20616464",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6781:34:10",
																		"type": "",
																		"value": "BEP20: approve from the zero add"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6754:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6754:62:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6754:62:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6836:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6847:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6832:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6832:18:10"
																	},
																	{
																		"hexValue": "72657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6852:6:10",
																		"type": "",
																		"value": "ress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6825:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6825:34:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6825:34:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6868:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6880:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6891:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6876:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6876:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6868:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1441cfbef485de93bedecc35b3d10fa2992db382c4c9c583a6e423a140abe4a4__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6652:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6666:4:10",
														"type": ""
													}
												],
												"src": "6501:400:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7080:182:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7097:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7108:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7090:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7090:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7090:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7131:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7142:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7127:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7127:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7147:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7120:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7120:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7120:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7170:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7181:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7166:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7166:18:10"
																	},
																	{
																		"hexValue": "4275726e206665652063616e6e6f74206265206d6f7265207468616e20313025",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7186:34:10",
																		"type": "",
																		"value": "Burn fee cannot be more than 10%"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7159:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7159:62:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7159:62:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7230:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7242:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7253:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7238:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7238:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7230:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_17b25864546a079c709adb8eddb49b99f1e6fcbd0f9d9e42c5f8754288ac4894__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7057:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7071:4:10",
														"type": ""
													}
												],
												"src": "6906:356:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7441:227:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7458:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7469:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7451:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7451:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7451:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7492:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7503:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7488:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7488:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7508:2:10",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7481:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7481:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7481:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7531:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7542:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7527:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7527:18:10"
																	},
																	{
																		"hexValue": "53656c6c206275726e206665652063616e6e6f74206265206d6f726520746861",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7547:34:10",
																		"type": "",
																		"value": "Sell burn fee cannot be more tha"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7520:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7520:62:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7520:62:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7602:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7613:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7598:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7598:18:10"
																	},
																	{
																		"hexValue": "6e20313025",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7618:7:10",
																		"type": "",
																		"value": "n 10%"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7591:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7591:35:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7591:35:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7635:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7647:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7658:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7643:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7643:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7635:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_221934928cb9bf87d39f3d506bf3644513f48ce917af3d8edb89ffc01d6fe0a0__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7418:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7432:4:10",
														"type": ""
													}
												],
												"src": "7267:401:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7847:232:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7864:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7875:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7857:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7857:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7857:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7898:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7909:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7894:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7894:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7914:2:10",
																		"type": "",
																		"value": "42"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7887:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7887:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7887:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7937:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7948:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7933:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7933:18:10"
																	},
																	{
																		"hexValue": "416d6f756e74206d757374206265206c657373207468616e20746f74616c2072",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7953:34:10",
																		"type": "",
																		"value": "Amount must be less than total r"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7926:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7926:62:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7926:62:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8008:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8019:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8004:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8004:18:10"
																	},
																	{
																		"hexValue": "65666c656374696f6e73",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8024:12:10",
																		"type": "",
																		"value": "eflections"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7997:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7997:40:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7997:40:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8046:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8058:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8069:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8054:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8054:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8046:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_22f7af55a509c3b14f0d528f087748dec8a8bf425135e3f5dc28c6a31ec6d812__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7824:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7838:4:10",
														"type": ""
													}
												],
												"src": "7673:406:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8258:228:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8275:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8286:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8268:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8268:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8268:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8309:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8320:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8305:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8305:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8325:2:10",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8298:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8298:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8298:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8348:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8359:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8344:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8344:18:10"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8364:34:10",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8337:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8337:62:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8337:62:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8419:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8430:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8415:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8415:18:10"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8435:8:10",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8408:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8408:36:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8408:36:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8453:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8465:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8476:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8461:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8461:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8453:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8235:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8249:4:10",
														"type": ""
													}
												],
												"src": "8084:402:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8665:232:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8682:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8693:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8675:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8675:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8675:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8716:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8727:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8712:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8712:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8732:2:10",
																		"type": "",
																		"value": "42"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8705:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8705:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8705:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8755:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8766:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8751:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8751:18:10"
																	},
																	{
																		"hexValue": "53656c6c206d61726b6574696e67206665652063616e6e6f74206265206d6f72",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8771:34:10",
																		"type": "",
																		"value": "Sell marketing fee cannot be mor"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8744:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8744:62:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8744:62:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8826:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8837:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8822:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8822:18:10"
																	},
																	{
																		"hexValue": "65207468616e20313025",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8842:12:10",
																		"type": "",
																		"value": "e than 10%"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8815:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8815:40:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8815:40:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8864:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8876:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8887:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8872:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8872:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8864:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_37c42abb73e5fbbb1d487c4f3c99f213399be5b6d497c3b5e195369c05a76a16__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8642:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8656:4:10",
														"type": ""
													}
												],
												"src": "8491:406:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9076:177:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9093:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9104:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9086:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9086:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9086:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9127:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9138:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9123:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9123:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9143:2:10",
																		"type": "",
																		"value": "27"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9116:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9116:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9116:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9166:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9177:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9162:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9162:18:10"
																	},
																	{
																		"hexValue": "4163636f756e7420697320616c7265616479206578636c75646564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9182:29:10",
																		"type": "",
																		"value": "Account is already excluded"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9155:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9155:57:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9155:57:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9221:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9233:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9244:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9229:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9229:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9221:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_40ff67f743a73c63981ce97facdb4b14324f60afa0e3049344c62414448ff258__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9053:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9067:4:10",
														"type": ""
													}
												],
												"src": "8902:351:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9432:235:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9449:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9460:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9442:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9442:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9442:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9483:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9494:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9479:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9479:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9499:2:10",
																		"type": "",
																		"value": "45"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9472:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9472:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9472:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9522:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9533:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9518:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9518:18:10"
																	},
																	{
																		"hexValue": "4d617820686f6c64696e672070657263656e74732063616e6e6f74206265206c",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9538:34:10",
																		"type": "",
																		"value": "Max holding percents cannot be l"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9511:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9511:62:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9511:62:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9593:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9604:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9589:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9589:18:10"
																	},
																	{
																		"hexValue": "657373207468616e20302e3125",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9609:15:10",
																		"type": "",
																		"value": "ess than 0.1%"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9582:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9582:43:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9582:43:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9634:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9646:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9657:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9642:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9642:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9634:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4548548aa0306dcf79ce9af2c7863f8a94faa30d5510996966e8c85621aec950__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9409:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9423:4:10",
														"type": ""
													}
												],
												"src": "9258:409:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9846:227:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9863:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9874:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9856:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9856:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9856:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9897:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9908:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9893:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9893:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9913:2:10",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9886:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9886:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9886:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9936:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9947:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9932:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9932:18:10"
																	},
																	{
																		"hexValue": "4d61726b6574696e67206665652063616e6e6f74206265206d6f726520746861",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9952:34:10",
																		"type": "",
																		"value": "Marketing fee cannot be more tha"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9925:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9925:62:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9925:62:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10007:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10018:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10003:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10003:18:10"
																	},
																	{
																		"hexValue": "6e20313025",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10023:7:10",
																		"type": "",
																		"value": "n 10%"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9996:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9996:35:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9996:35:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10040:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10052:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10063:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10048:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10048:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10040:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_568ab0afe34d1b225551db99a4889fd852d0c6b22494b6e4ad3d5e6a737adcd3__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9823:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9837:4:10",
														"type": ""
													}
												],
												"src": "9672:401:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10252:174:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10269:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10280:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10262:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10262:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10262:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10303:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10314:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10299:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10299:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10319:2:10",
																		"type": "",
																		"value": "24"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10292:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10292:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10292:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10342:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10353:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10338:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10338:18:10"
																	},
																	{
																		"hexValue": "4f6e6c7920616c6c6f7765642062757920616d6f756e7473",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10358:26:10",
																		"type": "",
																		"value": "Only allowed buy amounts"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10331:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10331:54:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10331:54:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10394:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10406:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10417:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10402:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10402:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10394:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_60ec5945874cf590867d4308bd6c649b8807f5be7fe7a441268b9df56400e86a__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10229:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10243:4:10",
														"type": ""
													}
												],
												"src": "10078:348:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10605:181:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10622:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10633:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10615:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10615:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10615:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10656:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10667:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10652:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10652:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10672:2:10",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10645:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10645:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10645:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10695:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10706:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10691:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10691:18:10"
																	},
																	{
																		"hexValue": "416d6f756e74206d757374206265206c657373207468616e20737570706c79",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10711:33:10",
																		"type": "",
																		"value": "Amount must be less than supply"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10684:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10684:61:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10684:61:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10754:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10766:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10777:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10762:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10762:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10754:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_6c3d5d630711c57d95621b0547fb0a19eab6922a3a0e7e9054d9f9c5458b757b__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10582:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10596:4:10",
														"type": ""
													}
												],
												"src": "10431:355:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10965:232:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10982:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10993:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10975:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10975:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10975:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11016:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11027:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11012:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11012:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11032:2:10",
																		"type": "",
																		"value": "42"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11005:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11005:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11005:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11055:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11066:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11051:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11051:18:10"
																	},
																	{
																		"hexValue": "53656c6c206c6971756964697479206665652063616e6e6f74206265206d6f72",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11071:34:10",
																		"type": "",
																		"value": "Sell liquidity fee cannot be mor"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11044:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11044:62:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11044:62:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11126:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11137:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11122:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11122:18:10"
																	},
																	{
																		"hexValue": "65207468616e20313025",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11142:12:10",
																		"type": "",
																		"value": "e than 10%"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11115:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11115:40:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11115:40:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11164:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11176:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11187:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11172:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11172:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11164:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_7cd1f6dc4c058cd6c489a89ebbdf77f33bae1246803c57d331732d32ce2f5a19__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10942:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10956:4:10",
														"type": ""
													}
												],
												"src": "10791:406:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11376:226:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11393:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11404:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11386:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11386:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11386:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11427:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11438:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11423:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11423:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11443:2:10",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11416:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11416:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11416:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11466:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11477:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11462:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11462:18:10"
																	},
																	{
																		"hexValue": "53656c6c20746178206665652063616e6e6f74206265206d6f7265207468616e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11482:34:10",
																		"type": "",
																		"value": "Sell tax fee cannot be more than"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11455:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11455:62:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11455:62:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11537:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11548:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11533:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11533:18:10"
																	},
																	{
																		"hexValue": "20313025",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11553:6:10",
																		"type": "",
																		"value": " 10%"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11526:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11526:34:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11526:34:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11569:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11581:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11592:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11577:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11577:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11569:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_7d8fe367138b40da0526c127a4b5758d259c378e2321949a7b4dcc147f255dde__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11353:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11367:4:10",
														"type": ""
													}
												],
												"src": "11202:400:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11781:182:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11798:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11809:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11791:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11791:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11791:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11832:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11843:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11828:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11828:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11848:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11821:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11821:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11821:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11871:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11882:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11867:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11867:18:10"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11887:34:10",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11860:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11860:62:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11860:62:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11931:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11943:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11954:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11939:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11939:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11931:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11758:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11772:4:10",
														"type": ""
													}
												],
												"src": "11607:356:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12142:233:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12159:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12170:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12152:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12152:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12152:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12193:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12204:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12189:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12189:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12209:2:10",
																		"type": "",
																		"value": "43"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12182:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12182:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12182:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12232:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12243:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12228:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12228:18:10"
																	},
																	{
																		"hexValue": "4d617820686f6c64696e672070657263656e74732063616e6e6f74206265206d",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12248:34:10",
																		"type": "",
																		"value": "Max holding percents cannot be m"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12221:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12221:62:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12221:62:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12303:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12314:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12299:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12299:18:10"
																	},
																	{
																		"hexValue": "6f7265207468616e203325",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12319:13:10",
																		"type": "",
																		"value": "ore than 3%"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12292:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12292:41:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12292:41:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12342:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12354:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12365:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12350:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12350:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12342:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9aedef95c53d84b258a520b8975f9d4afce00f081860eeebaef923486edca039__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12119:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12133:4:10",
														"type": ""
													}
												],
												"src": "11968:407:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12554:231:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12571:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12582:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12564:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12564:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12564:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12605:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12616:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12601:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12601:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12621:2:10",
																		"type": "",
																		"value": "41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12594:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12594:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12594:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12644:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12655:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12640:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12640:18:10"
																	},
																	{
																		"hexValue": "5472616e7366657220616d6f756e74206d757374206265206772656174657220",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12660:34:10",
																		"type": "",
																		"value": "Transfer amount must be greater "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12633:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12633:62:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12633:62:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12715:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12726:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12711:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12711:18:10"
																	},
																	{
																		"hexValue": "7468616e207a65726f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12731:11:10",
																		"type": "",
																		"value": "than zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12704:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12704:39:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12704:39:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12752:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12764:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12775:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12760:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12760:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12752:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9edb5ab58321f35d2386ea65721c9b107daa2c273610fc16d394af2a320ba785__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12531:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12545:4:10",
														"type": ""
													}
												],
												"src": "12380:405:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12964:226:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12981:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12992:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12974:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12974:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12974:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13015:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13026:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13011:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13011:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13031:2:10",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13004:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13004:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13004:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13054:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13065:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13050:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13050:18:10"
																	},
																	{
																		"hexValue": "57616c6c65742062616c616e6365206578636565647320746865206d6178206c",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13070:34:10",
																		"type": "",
																		"value": "Wallet balance exceeds the max l"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13043:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13043:62:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13043:62:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13125:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13136:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13121:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13121:18:10"
																	},
																	{
																		"hexValue": "696d6974",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13141:6:10",
																		"type": "",
																		"value": "imit"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13114:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13114:34:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13114:34:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13157:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13169:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13180:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13165:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13165:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13157:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_add9df74b400d7134f412b5d33b290f6237ecb8b07e32ab5e795f8662d75af98__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12941:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12955:4:10",
														"type": ""
													}
												],
												"src": "12790:400:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13369:236:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13386:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13397:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13379:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13379:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13379:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13420:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13431:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13416:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13416:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13436:2:10",
																		"type": "",
																		"value": "46"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13409:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13409:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13409:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13459:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13470:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13455:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13455:18:10"
																	},
																	{
																		"hexValue": "5472616e73616374656420616d6f756e742065786365656420746865206d6178",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13475:34:10",
																		"type": "",
																		"value": "Transacted amount exceed the max"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13448:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13448:62:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13448:62:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13530:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13541:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13526:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13526:18:10"
																	},
																	{
																		"hexValue": "20616c6c6f7765642076616c7565",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13546:16:10",
																		"type": "",
																		"value": " allowed value"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13519:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13519:44:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13519:44:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13572:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13584:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13595:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13580:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13580:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13572:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_cae3b9edb9e2038d3ab16a2c505f33af4bc7eeea3101f90e45e454c014520921__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13346:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13360:4:10",
														"type": ""
													}
												],
												"src": "13195:410:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13784:224:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13801:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13812:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13794:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13794:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13794:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13835:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13846:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13831:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13831:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13851:2:10",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13824:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13824:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13824:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13874:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13885:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13870:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13870:18:10"
																	},
																	{
																		"hexValue": "57652063616e206e6f74206578636c7564652050616e63616b6520726f757465",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13890:34:10",
																		"type": "",
																		"value": "We can not exclude Pancake route"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13863:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13863:62:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13863:62:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13945:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13956:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13941:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13941:18:10"
																	},
																	{
																		"hexValue": "722e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13961:4:10",
																		"type": "",
																		"value": "r."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13934:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13934:32:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13934:32:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13975:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13987:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13998:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13983:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13983:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13975:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d0a40029d4e86ac52d6424ca86b4163ba68013d9247da73177a5c17cc02bf0ce__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13761:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13775:4:10",
														"type": ""
													}
												],
												"src": "13610:398:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14187:234:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14204:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14215:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14197:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14197:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14197:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14238:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14249:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14234:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14234:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14254:2:10",
																		"type": "",
																		"value": "44"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14227:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14227:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14227:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14277:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14288:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14273:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14273:18:10"
																	},
																	{
																		"hexValue": "4578636c75646564206164647265737365732063616e6e6f742063616c6c2074",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14293:34:10",
																		"type": "",
																		"value": "Excluded addresses cannot call t"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14266:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14266:62:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14266:62:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14348:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14359:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14344:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14344:18:10"
																	},
																	{
																		"hexValue": "6869732066756e6374696f6e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14364:14:10",
																		"type": "",
																		"value": "his function"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14337:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14337:42:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14337:42:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14388:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14400:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14411:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14396:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14396:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14388:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ecefcaf5fbcf9ca6dcdb02298ba1da96f4ead317b0a4779917ecb2e5e7dc3ac4__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14164:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14178:4:10",
														"type": ""
													}
												],
												"src": "14013:408:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14600:224:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14617:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14628:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14610:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14610:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14610:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14651:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14662:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14647:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14647:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14667:2:10",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14640:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14640:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14640:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14690:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14701:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14686:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14686:18:10"
																	},
																	{
																		"hexValue": "42455032303a20617070726f766520746f20746865207a65726f206164647265",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14706:34:10",
																		"type": "",
																		"value": "BEP20: approve to the zero addre"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14679:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14679:62:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14679:62:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14761:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14772:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14757:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14757:18:10"
																	},
																	{
																		"hexValue": "7373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14777:4:10",
																		"type": "",
																		"value": "ss"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14750:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14750:32:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14750:32:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14791:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14803:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14814:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14799:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14799:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14791:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f10e7571e18b354270dee950932fb6a745efc79414b2b2556185a4ed6a1af0d5__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14577:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14591:4:10",
														"type": ""
													}
												],
												"src": "14426:398:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15003:227:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15020:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15031:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15013:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15013:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15013:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15054:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15065:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15050:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15050:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15070:2:10",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15043:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15043:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15043:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15093:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15104:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15089:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15089:18:10"
																	},
																	{
																		"hexValue": "4c6971756964697479206665652063616e6e6f74206265206d6f726520746861",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "15109:34:10",
																		"type": "",
																		"value": "Liquidity fee cannot be more tha"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15082:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15082:62:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15082:62:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15164:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15175:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15160:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15160:18:10"
																	},
																	{
																		"hexValue": "6e20313025",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "15180:7:10",
																		"type": "",
																		"value": "n 10%"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15153:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15153:35:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15153:35:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15197:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15209:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15220:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15205:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15205:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15197:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ffa0fc0b551ed285e79ae6c63e94336b136523a15dd8db2ed7cfc4776042e049__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14980:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14994:4:10",
														"type": ""
													}
												],
												"src": "14829:401:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15336:76:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15346:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15358:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15369:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15354:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15354:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15346:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15388:9:10"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "15399:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15381:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15381:25:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15381:25:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15305:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "15316:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "15327:4:10",
														"type": ""
													}
												],
												"src": "15235:177:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15688:709:10",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "15698:33:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15716:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15727:3:10",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15712:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15712:19:10"
															},
															"variables": [
																{
																	"name": "tail_1",
																	"nodeType": "YulTypedName",
																	"src": "15702:6:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15747:9:10"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "15758:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15740:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15740:25:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15740:25:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "15774:12:10",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "15784:2:10",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "15778:2:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15806:9:10"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "15817:2:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15802:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15802:18:10"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "15822:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15795:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15795:34:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15795:34:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15849:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15860:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15845:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15845:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15865:3:10",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15838:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15838:31:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15838:31:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "15878:17:10",
															"value": {
																"name": "tail_1",
																"nodeType": "YulIdentifier",
																"src": "15889:6:10"
															},
															"variables": [
																{
																	"name": "pos",
																	"nodeType": "YulTypedName",
																	"src": "15882:3:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "15904:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "15924:6:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "15918:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15918:13:10"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "15908:6:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "tail_1",
																		"nodeType": "YulIdentifier",
																		"src": "15947:6:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "15955:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15940:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15940:22:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15940:22:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15971:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15982:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15993:3:10",
																		"type": "",
																		"value": "192"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15978:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15978:19:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "15971:3:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "16006:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "16024:6:10"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "16032:2:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16020:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "16020:15:10"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nodeType": "YulTypedName",
																	"src": "16010:6:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "16044:10:10",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "16053:1:10",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "16048:1:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "16112:146:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "16133:3:10"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "srcPtr",
																									"nodeType": "YulIdentifier",
																									"src": "16148:6:10"
																								}
																							],
																							"functionName": {
																								"name": "mload",
																								"nodeType": "YulIdentifier",
																								"src": "16142:5:10"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "16142:13:10"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "16165:3:10",
																											"type": "",
																											"value": "160"
																										},
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "16170:1:10",
																											"type": "",
																											"value": "1"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nodeType": "YulIdentifier",
																										"src": "16161:3:10"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "16161:11:10"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "16174:1:10",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "sub",
																								"nodeType": "YulIdentifier",
																								"src": "16157:3:10"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "16157:19:10"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nodeType": "YulIdentifier",
																						"src": "16138:3:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "16138:39:10"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "16126:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "16126:52:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "16126:52:10"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "16191:19:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "16202:3:10"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "16207:2:10"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "16198:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "16198:12:10"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "16191:3:10"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "16223:25:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "16237:6:10"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "16245:2:10"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "16233:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "16233:15:10"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nodeType": "YulIdentifier",
																				"src": "16223:6:10"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "16074:1:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "16077:6:10"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "16071:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "16071:13:10"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "16085:18:10",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "16087:14:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "16096:1:10"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "16099:1:10",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "16092:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "16092:9:10"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "16087:1:10"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "16067:3:10",
																"statements": []
															},
															"src": "16063:195:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16267:11:10",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "16275:3:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16267:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16298:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16309:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16294:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16294:18:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value3",
																				"nodeType": "YulIdentifier",
																				"src": "16318:6:10"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "16334:3:10",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "16339:1:10",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "16330:3:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "16330:11:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "16343:1:10",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "16326:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "16326:19:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "16314:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16314:32:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16287:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "16287:60:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16287:60:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16367:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16378:3:10",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16363:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16363:19:10"
																	},
																	{
																		"name": "value4",
																		"nodeType": "YulIdentifier",
																		"src": "16384:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16356:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "16356:35:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16356:35:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_rational_0_by_1_t_array$_t_address_$dyn_memory_ptr_t_address_t_uint256__to_t_uint256_t_uint256_t_array$_t_address_$dyn_memory_ptr_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15625:9:10",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "15636:6:10",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "15644:6:10",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "15652:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "15660:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "15668:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "15679:4:10",
														"type": ""
													}
												],
												"src": "15417:980:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16559:162:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16569:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16581:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16592:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16577:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "16577:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16569:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16611:9:10"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "16622:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16604:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "16604:25:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16604:25:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16649:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16660:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16645:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16645:18:10"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "16665:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16638:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "16638:34:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16638:34:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16692:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16703:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16688:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16688:18:10"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "16708:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16681:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "16681:34:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16681:34:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "16512:9:10",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "16523:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "16531:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "16539:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "16550:4:10",
														"type": ""
													}
												],
												"src": "16402:319:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16823:87:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16833:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16845:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16856:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16841:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "16841:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16833:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16875:9:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "16890:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16898:4:10",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "16886:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16886:17:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16868:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "16868:36:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16868:36:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "16792:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "16803:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "16814:4:10",
														"type": ""
													}
												],
												"src": "16726:184:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16963:80:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "16990:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "16992:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "16992:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "16992:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "16979:1:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "16986:1:10"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "16982:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16982:6:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "16976:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "16976:13:10"
															},
															"nodeType": "YulIf",
															"src": "16973:39:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17021:16:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "17032:1:10"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "17035:1:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17028:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "17028:9:10"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "17021:3:10"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "16946:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "16949:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "16955:3:10",
														"type": ""
													}
												],
												"src": "16915:128:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17094:171:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "17125:111:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "17146:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "17153:3:10",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "17158:10:10",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "17149:3:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "17149:20:10"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "17139:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "17139:31:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "17139:31:10"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "17190:1:10",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "17193:4:10",
																					"type": "",
																					"value": "0x12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "17183:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "17183:15:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "17183:15:10"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "17218:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "17221:4:10",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "17211:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "17211:15:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "17211:15:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "17114:1:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "17107:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "17107:9:10"
															},
															"nodeType": "YulIf",
															"src": "17104:132:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17245:14:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "17254:1:10"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "17257:1:10"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "17250:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "17250:9:10"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "17245:1:10"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "17079:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "17082:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "17088:1:10",
														"type": ""
													}
												],
												"src": "17048:217:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17322:116:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "17381:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "17383:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "17383:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "17383:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "17353:1:10"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "17346:6:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "17346:9:10"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "17339:6:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17339:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "17361:1:10"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "17372:1:10",
																								"type": "",
																								"value": "0"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "17368:3:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "17368:6:10"
																					},
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "17376:1:10"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "17364:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "17364:14:10"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "17358:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17358:21:10"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "17335:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "17335:45:10"
															},
															"nodeType": "YulIf",
															"src": "17332:71:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17412:20:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "17427:1:10"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "17430:1:10"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "17423:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "17423:9:10"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "17412:7:10"
																}
															]
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "17301:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "17304:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "17310:7:10",
														"type": ""
													}
												],
												"src": "17270:168:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17492:76:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "17514:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "17516:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "17516:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "17516:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "17508:1:10"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "17511:1:10"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "17505:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "17505:8:10"
															},
															"nodeType": "YulIf",
															"src": "17502:34:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17545:17:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "17557:1:10"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "17560:1:10"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "17553:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "17553:9:10"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "17545:4:10"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "17474:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "17477:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "17483:4:10",
														"type": ""
													}
												],
												"src": "17443:125:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17628:325:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17638:22:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17652:1:10",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "17655:4:10"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "17648:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "17648:12:10"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "17638:6:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "17669:38:10",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "17699:4:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17705:1:10",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "17695:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "17695:12:10"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "17673:18:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "17746:31:10",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "17748:27:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "17762:6:10"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "17770:4:10",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "17758:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "17758:17:10"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "17748:6:10"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "17726:18:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "17719:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "17719:26:10"
															},
															"nodeType": "YulIf",
															"src": "17716:61:10"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "17836:111:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "17857:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "17864:3:10",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "17869:10:10",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "17860:3:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "17860:20:10"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "17850:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "17850:31:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "17850:31:10"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "17901:1:10",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "17904:4:10",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "17894:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "17894:15:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "17894:15:10"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "17929:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "17932:4:10",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "17922:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "17922:15:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "17922:15:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "17792:18:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "17815:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17823:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "17812:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17812:14:10"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "17789:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "17789:38:10"
															},
															"nodeType": "YulIf",
															"src": "17786:161:10"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "17608:4:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "17617:6:10",
														"type": ""
													}
												],
												"src": "17573:380:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18005:88:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "18036:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "18038:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "18038:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "18038:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "18021:5:10"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18032:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "18028:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18028:6:10"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "18018:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "18018:17:10"
															},
															"nodeType": "YulIf",
															"src": "18015:43:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "18067:20:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "18078:5:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18085:1:10",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "18074:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "18074:13:10"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "18067:3:10"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "17987:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "17997:3:10",
														"type": ""
													}
												],
												"src": "17958:135:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18130:95:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18147:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18154:3:10",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18159:10:10",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "18150:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18150:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18140:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "18140:31:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18140:31:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18187:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18190:4:10",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18180:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "18180:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18180:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18211:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18214:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "18204:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "18204:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18204:15:10"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "18098:127:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18262:95:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18279:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18286:3:10",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18291:10:10",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "18282:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18282:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18272:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "18272:31:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18272:31:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18319:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18322:4:10",
																		"type": "",
																		"value": "0x31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18312:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "18312:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18312:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18343:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18346:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "18336:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "18336:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18336:15:10"
														}
													]
												},
												"name": "panic_error_0x31",
												"nodeType": "YulFunctionDefinition",
												"src": "18230:127:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18394:95:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18411:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18418:3:10",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18423:10:10",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "18414:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18414:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18404:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "18404:31:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18404:31:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18451:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18454:4:10",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18444:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "18444:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18444:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18475:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18478:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "18468:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "18468:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18468:15:10"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "18362:127:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18526:95:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18543:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18550:3:10",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18555:10:10",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "18546:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18546:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18536:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "18536:31:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18536:31:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18583:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18586:4:10",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18576:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "18576:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18576:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18607:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18610:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "18600:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "18600:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18600:15:10"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "18494:127:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18671:86:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "18735:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "18744:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "18747:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "18737:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "18737:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "18737:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "18694:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "18705:5:10"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "18720:3:10",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "18725:1:10",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "18716:3:10"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "18716:11:10"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "18729:1:10",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "18712:3:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "18712:19:10"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "18701:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "18701:31:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "18691:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18691:42:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "18684:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "18684:50:10"
															},
															"nodeType": "YulIf",
															"src": "18681:70:10"
														}
													]
												},
												"name": "validator_revert_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "18660:5:10",
														"type": ""
													}
												],
												"src": "18626:131:10"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_bool(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_bool(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_bool(headStart)\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_uint256t_bool(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := abi_decode_bool(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_uint256t_uint256t_uint256_fromMemory(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := mload(headStart)\n        value1 := mload(add(headStart, 32))\n        value2 := mload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_address_t_address_t_address_t_uint256__to_t_address_t_address_t_address_t_uint256__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), and(value2, _1))\n        mstore(add(headStart, 96), value3)\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_rational_0_by_1_t_rational_0_by_1_t_address_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256_t_address_t_uint256__fromStack_reversed(headStart, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 192)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), and(value4, _1))\n        mstore(add(headStart, 160), value5)\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_contract$_IAntisnipe_$1576__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_contract$_IPancakeV2Router02_$1555__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, _1)\n        let length := mload(value0)\n        mstore(add(headStart, _1), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        if gt(i, length)\n        {\n            mstore(add(add(headStart, length), 64), 0)\n        }\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_encode_tuple_t_stringliteral_0a76e06c54c9cc0a2854b395e370ae54860131006316b46c6c19fe7418fa0a0c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"Tax fee cannot be more than 10%\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_0d26cf302d50b28de74be656b11d67092b32131e5712d1bcf08c4e976dacda57__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"BEP20: transfer from the zero ad\")\n        mstore(add(headStart, 96), \"dress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_129c9dc3ee74cfed4b4b6575287910646aa77269c5388380730e971c771115d5__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"Only admin or anti manager allow\")\n        mstore(add(headStart, 96), \"ed\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_1441cfbef485de93bedecc35b3d10fa2992db382c4c9c583a6e423a140abe4a4__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"BEP20: approve from the zero add\")\n        mstore(add(headStart, 96), \"ress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_17b25864546a079c709adb8eddb49b99f1e6fcbd0f9d9e42c5f8754288ac4894__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Burn fee cannot be more than 10%\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_221934928cb9bf87d39f3d506bf3644513f48ce917af3d8edb89ffc01d6fe0a0__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"Sell burn fee cannot be more tha\")\n        mstore(add(headStart, 96), \"n 10%\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_22f7af55a509c3b14f0d528f087748dec8a8bf425135e3f5dc28c6a31ec6d812__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 42)\n        mstore(add(headStart, 64), \"Amount must be less than total r\")\n        mstore(add(headStart, 96), \"eflections\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_37c42abb73e5fbbb1d487c4f3c99f213399be5b6d497c3b5e195369c05a76a16__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 42)\n        mstore(add(headStart, 64), \"Sell marketing fee cannot be mor\")\n        mstore(add(headStart, 96), \"e than 10%\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_40ff67f743a73c63981ce97facdb4b14324f60afa0e3049344c62414448ff258__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 27)\n        mstore(add(headStart, 64), \"Account is already excluded\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_4548548aa0306dcf79ce9af2c7863f8a94faa30d5510996966e8c85621aec950__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 45)\n        mstore(add(headStart, 64), \"Max holding percents cannot be l\")\n        mstore(add(headStart, 96), \"ess than 0.1%\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_568ab0afe34d1b225551db99a4889fd852d0c6b22494b6e4ad3d5e6a737adcd3__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"Marketing fee cannot be more tha\")\n        mstore(add(headStart, 96), \"n 10%\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_60ec5945874cf590867d4308bd6c649b8807f5be7fe7a441268b9df56400e86a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 24)\n        mstore(add(headStart, 64), \"Only allowed buy amounts\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_6c3d5d630711c57d95621b0547fb0a19eab6922a3a0e7e9054d9f9c5458b757b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"Amount must be less than supply\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_7cd1f6dc4c058cd6c489a89ebbdf77f33bae1246803c57d331732d32ce2f5a19__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 42)\n        mstore(add(headStart, 64), \"Sell liquidity fee cannot be mor\")\n        mstore(add(headStart, 96), \"e than 10%\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_7d8fe367138b40da0526c127a4b5758d259c378e2321949a7b4dcc147f255dde__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"Sell tax fee cannot be more than\")\n        mstore(add(headStart, 96), \" 10%\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_9aedef95c53d84b258a520b8975f9d4afce00f081860eeebaef923486edca039__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 43)\n        mstore(add(headStart, 64), \"Max holding percents cannot be m\")\n        mstore(add(headStart, 96), \"ore than 3%\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_9edb5ab58321f35d2386ea65721c9b107daa2c273610fc16d394af2a320ba785__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 41)\n        mstore(add(headStart, 64), \"Transfer amount must be greater \")\n        mstore(add(headStart, 96), \"than zero\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_add9df74b400d7134f412b5d33b290f6237ecb8b07e32ab5e795f8662d75af98__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"Wallet balance exceeds the max l\")\n        mstore(add(headStart, 96), \"imit\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_cae3b9edb9e2038d3ab16a2c505f33af4bc7eeea3101f90e45e454c014520921__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 46)\n        mstore(add(headStart, 64), \"Transacted amount exceed the max\")\n        mstore(add(headStart, 96), \" allowed value\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_d0a40029d4e86ac52d6424ca86b4163ba68013d9247da73177a5c17cc02bf0ce__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"We can not exclude Pancake route\")\n        mstore(add(headStart, 96), \"r.\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_ecefcaf5fbcf9ca6dcdb02298ba1da96f4ead317b0a4779917ecb2e5e7dc3ac4__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 44)\n        mstore(add(headStart, 64), \"Excluded addresses cannot call t\")\n        mstore(add(headStart, 96), \"his function\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_f10e7571e18b354270dee950932fb6a745efc79414b2b2556185a4ed6a1af0d5__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"BEP20: approve to the zero addre\")\n        mstore(add(headStart, 96), \"ss\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_ffa0fc0b551ed285e79ae6c63e94336b136523a15dd8db2ed7cfc4776042e049__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"Liquidity fee cannot be more tha\")\n        mstore(add(headStart, 96), \"n 10%\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_uint256_t_rational_0_by_1_t_array$_t_address_$dyn_memory_ptr_t_address_t_uint256__to_t_uint256_t_uint256_t_array$_t_address_$dyn_memory_ptr_t_address_t_uint256__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        let tail_1 := add(headStart, 160)\n        mstore(headStart, value0)\n        let _1 := 32\n        mstore(add(headStart, _1), value1)\n        mstore(add(headStart, 64), 160)\n        let pos := tail_1\n        let length := mload(value2)\n        mstore(tail_1, length)\n        pos := add(headStart, 192)\n        let srcPtr := add(value2, _1)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, and(mload(srcPtr), sub(shl(160, 1), 1)))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        tail := pos\n        mstore(add(headStart, 96), and(value3, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 128), value4)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        if and(iszero(iszero(x)), gt(y, div(not(0), x))) { panic_error_0x11() }\n        product := mul(x, y)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function panic_error_0x31()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x31)\n        revert(0, 0x24)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n}",
									"id": 10,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600436106103855760003560e01c80636bc87c3a116101d1578063a9059cbb11610102578063d0e03523116100a0578063e1e144de1161006f578063e1e144de14610a4b578063ea2f0b3714610a6c578063ebf7866314610a8c578063f2fde38b14610aac57600080fd5b8063d0e03523146109a6578063d5bde46c146109c6578063d8c6404b146109eb578063dd62ed3e14610a0557600080fd5b8063c2c7c03a116100dc578063c2c7c03a14610930578063c49b9a8014610950578063c860795214610970578063cea269581461098657600080fd5b8063a9059cbb146108da578063a928681c146108fa578063c0b0fda21461091a57600080fd5b806388790a681161016f5780638ee88c53116101495780638ee88c531461086557806395d89b41146108855780639655cab51461089a578063a457c2d7146108ba57600080fd5b806388790a68146107f857806388f820201461080e5780638da5cb5b1461084757600080fd5b806374fb20e1116101ab57806374fb20e11461078d57806375f0a874146107a25780637abdc1ca146107c2578063882cfb3f146107d857600080fd5b80636bc87c3a1461074257806370a0823114610758578063715018a61461077857600080fd5b80633b124fe7116102b657806352390c02116102545780635d098b38116102235780635d098b38146106cc578063611bf629146106ec578063632a6a351461070c57806364a06e801461072c57600080fd5b806352390c02146106395780635342acb41461065957806357d87f0d146106925780635876ccc5146106ac57600080fd5b80634549b039116102905780634549b039146105b8578063457c194c146105d85780634a5566bf146105f85780634a74bb021461061857600080fd5b80633b124fe7146105625780633bd5d17314610578578063437823ec1461059857600080fd5b8063200a692d116103235780632d838119116102fd5780632d838119146104e0578063313ce567146105005780633685d41914610522578063395093511461054257600080fd5b8063200a692d1461049457806322976e0d146104aa57806323b872dd146104c057600080fd5b80630a7d2d871161035f5780630a7d2d871461040e57806313114a9d1461043257806318160ddd146104475780631a4cd1b11461045c57600080fd5b8063061c82d01461039157806306fdde03146103b3578063095ea7b3146103de57600080fd5b3661038c57005b600080fd5b34801561039d57600080fd5b506103b16103ac366004612bee565b610acc565b005b3480156103bf57600080fd5b506103c8610b2f565b6040516103d59190612c61565b60405180910390f35b3480156103ea57600080fd5b506103fe6103f9366004612ba7565b610bc1565b60405190151581526020016103d5565b34801561041a57600080fd5b50610424601a5481565b6040519081526020016103d5565b34801561043e57600080fd5b50600954610424565b34801561045357600080fd5b50600754610424565b34801561046857600080fd5b50601e5461047c906001600160a01b031681565b6040516001600160a01b0390911681526020016103d5565b3480156104a057600080fd5b5061042460165481565b3480156104b657600080fd5b5061042460135481565b3480156104cc57600080fd5b506103fe6104db366004612b66565b610bd8565b3480156104ec57600080fd5b506104246104fb366004612bee565b610c41565b34801561050c57600080fd5b50600c5460405160ff90911681526020016103d5565b34801561052e57600080fd5b506103b161053d366004612af3565b610cc5565b34801561054e57600080fd5b506103fe61055d366004612ba7565b610e5a565b34801561056e57600080fd5b50610424600d5481565b34801561058457600080fd5b506103b1610593366004612bee565b610e90565b3480156105a457600080fd5b506103b16105b3366004612af3565b610f7a565b3480156105c457600080fd5b506104246105d3366004612c07565b610fa6565b3480156105e457600080fd5b506103b16105f3366004612bee565b611033565b34801561060457600080fd5b506103b1610613366004612bd3565b61109f565b34801561062457600080fd5b50601f546103fe90600160a81b900460ff1681565b34801561064557600080fd5b506103b1610654366004612af3565b6110f6565b34801561066557600080fd5b506103fe610674366004612af3565b6001600160a01b031660009081526004602052604090205460ff1690565b34801561069e57600080fd5b50601b546103fe9060ff1681565b3480156106b857600080fd5b506103b16106c7366004612bee565b611290565b3480156106d857600080fd5b506103b16106e7366004612af3565b611301565b3480156106f857600080fd5b506103b1610707366004612af3565b61132b565b34801561071857600080fd5b50601f5461047c906001600160a01b031681565b34801561073857600080fd5b506104246103e881565b34801561074e57600080fd5b50610424600f5481565b34801561076457600080fd5b50610424610773366004612af3565b611355565b34801561078457600080fd5b506103b16113b4565b34801561079957600080fd5b506103b16113c8565b3480156107ae57600080fd5b5060145461047c906001600160a01b031681565b3480156107ce57600080fd5b5061042460195481565b3480156107e457600080fd5b5060225461047c906001600160a01b031681565b34801561080457600080fd5b5061042460175481565b34801561081a57600080fd5b506103fe610829366004612af3565b6001600160a01b031660009081526005602052604090205460ff1690565b34801561085357600080fd5b506000546001600160a01b031661047c565b34801561087157600080fd5b506103b1610880366004612bee565b6113fc565b34801561089157600080fd5b506103c8611468565b3480156108a657600080fd5b506103b16108b5366004612bee565b611477565b3480156108c657600080fd5b506103fe6108d5366004612ba7565b611550565b3480156108e657600080fd5b506103fe6108f5366004612ba7565b61159f565b34801561090657600080fd5b506103b1610915366004612bee565b6115ac565b34801561092657600080fd5b5061042460115481565b34801561093c57600080fd5b506103b161094b366004612bd3565b61161d565b34801561095c57600080fd5b506103b161096b366004612bd3565b611674565b34801561097c57600080fd5b5061042460185481565b34801561099257600080fd5b506103b16109a1366004612bee565b6116d4565b3480156109b257600080fd5b506103b16109c1366004612bee565b611732565b3480156109d257600080fd5b50601d5461047c9061010090046001600160a01b031681565b3480156109f757600080fd5b50601d546103fe9060ff1681565b348015610a1157600080fd5b50610424610a20366004612b2d565b6001600160a01b03918216600090815260036020908152604080832093909416825291909152205490565b348015610a5757600080fd5b506022546103fe90600160a01b900460ff1681565b348015610a7857600080fd5b506103b1610a87366004612af3565b61179c565b348015610a9857600080fd5b506103b1610aa7366004612bee565b6117c5565b348015610ab857600080fd5b506103b1610ac7366004612af3565b611831565b610ad46118aa565b600a811115610b2a5760405162461bcd60e51b815260206004820152601f60248201527f546178206665652063616e6e6f74206265206d6f7265207468616e203130250060448201526064015b60405180910390fd5b600d55565b6060600a8054610b3e90612dd9565b80601f0160208091040260200160405190810160405280929190818152602001828054610b6a90612dd9565b8015610bb75780601f10610b8c57610100808354040283529160200191610bb7565b820191906000526020600020905b815481529060010190602001808311610b9a57829003601f168201915b5050505050905090565b6000610bce338484611904565b5060015b92915050565b6000610be5848484611a28565b610c378433610c3285604051806060016040528060288152602001612e87602891396001600160a01b038a1660009081526003602090815260408083203384529091529020549190611d10565b611904565b5060019392505050565b6000600854821115610ca85760405162461bcd60e51b815260206004820152602a60248201527f416d6f756e74206d757374206265206c657373207468616e20746f74616c207260448201526965666c656374696f6e7360b01b6064820152608401610b21565b6000610cb2611d3c565b9050610cbe8382611d5f565b9392505050565b610ccd6118aa565b6001600160a01b03811660009081526005602052604090205460ff16610d355760405162461bcd60e51b815260206004820152601b60248201527f4163636f756e7420697320616c7265616479206578636c7564656400000000006044820152606401610b21565b60005b600654811015610e5657816001600160a01b031660068281548110610d5f57610d5f612e5b565b6000918252602090912001546001600160a01b03161415610e445760068054610d8a90600190612dc2565b81548110610d9a57610d9a612e5b565b600091825260209091200154600680546001600160a01b039092169183908110610dc657610dc6612e5b565b600091825260208083209190910180546001600160a01b0319166001600160a01b039485161790559184168152600282526040808220829055600590925220805460ff191690556006805480610e1e57610e1e612e45565b600082815260209020810160001990810180546001600160a01b03191690550190555050565b80610e4e81612e14565b915050610d38565b5050565b3360008181526003602090815260408083206001600160a01b03871684529091528120549091610bce918590610c329086611d6b565b3360008181526005602052604090205460ff1615610f055760405162461bcd60e51b815260206004820152602c60248201527f4578636c75646564206164647265737365732063616e6e6f742063616c6c207460448201526b3434b990333ab731ba34b7b760a11b6064820152608401610b21565b6000610f1083611d77565b505050506001600160a01b038416600090815260016020526040902054919250610f3c91905082611dc6565b6001600160a01b038316600090815260016020526040902055600854610f629082611dc6565b600855600954610f729084611d6b565b600955505050565b610f826118aa565b6001600160a01b03166000908152600460205260409020805460ff19166001179055565b6000600754831115610ffa5760405162461bcd60e51b815260206004820152601f60248201527f416d6f756e74206d757374206265206c657373207468616e20737570706c79006044820152606401610b21565b8161101957600061100a84611d77565b50939550610bd2945050505050565b600061102484611d77565b50929550610bd2945050505050565b61103b6118aa565b600a81111561109a5760405162461bcd60e51b815260206004820152602560248201527f4d61726b6574696e67206665652063616e6e6f74206265206d6f7265207468616044820152646e2031302560d81b6064820152608401610b21565b601355565b6000546001600160a01b03163314806110c75750601d5461010090046001600160a01b031633145b6110e35760405162461bcd60e51b8152600401610b2190612cb6565b601b805460ff1916911515919091179055565b6110fe6118aa565b601e546001600160a01b03828116911614156111675760405162461bcd60e51b815260206004820152602260248201527f57652063616e206e6f74206578636c7564652050616e63616b6520726f757465604482015261391760f11b6064820152608401610b21565b6001600160a01b03811660009081526005602052604090205460ff16156111d05760405162461bcd60e51b815260206004820152601b60248201527f4163636f756e7420697320616c7265616479206578636c7564656400000000006044820152606401610b21565b6001600160a01b0381166000908152600160205260409020541561122a576001600160a01b03811660009081526001602052604090205461121090610c41565b6001600160a01b0382166000908152600260205260409020555b6001600160a01b03166000818152600560205260408120805460ff191660019081179091556006805491820181559091527ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f0180546001600160a01b0319169091179055565b6112986118aa565b600a8111156112fc5760405162461bcd60e51b815260206004820152602a60248201527f53656c6c206c6971756964697479206665652063616e6e6f74206265206d6f7260448201526965207468616e2031302560b01b6064820152608401610b21565b601755565b6113096118aa565b601480546001600160a01b0319166001600160a01b0392909216919091179055565b6113336118aa565b602280546001600160a01b0319166001600160a01b0392909216919091179055565b6001600160a01b03811660009081526005602052604081205460ff161561139257506001600160a01b031660009081526002602052604090205490565b6001600160a01b038216600090815260016020526040902054610bd290610c41565b6113bc6118aa565b6113c66000611dd2565b565b6113d06118aa565b602254600160a01b900460ff16156113e757600080fd5b6022805460ff60a01b1916600160a01b179055565b6114046118aa565b600a8111156114635760405162461bcd60e51b815260206004820152602560248201527f4c6971756964697479206665652063616e6e6f74206265206d6f7265207468616044820152646e2031302560d81b6064820152608401610b21565b600f55565b6060600b8054610b3e90612dd9565b61147f6118aa565b60018110156114e65760405162461bcd60e51b815260206004820152602d60248201527f4d617820686f6c64696e672070657263656e74732063616e6e6f74206265206c60448201526c657373207468616e20302e312560981b6064820152608401610b21565b601e81111561154b5760405162461bcd60e51b815260206004820152602b60248201527f4d617820686f6c64696e672070657263656e74732063616e6e6f74206265206d60448201526a6f7265207468616e20332560a81b6064820152608401610b21565b601a55565b6000610bce3384610c3285604051806060016040528060258152602001612eaf602591393360009081526003602090815260408083206001600160a01b038d1684529091529020549190611d10565b6000610bce338484611a28565b6115b46118aa565b600a8111156116185760405162461bcd60e51b815260206004820152602a60248201527f53656c6c206d61726b6574696e67206665652063616e6e6f74206265206d6f7260448201526965207468616e2031302560b01b6064820152608401610b21565b601855565b6000546001600160a01b03163314806116455750601d5461010090046001600160a01b031633145b6116615760405162461bcd60e51b8152600401610b2190612cb6565b601d805460ff1916911515919091179055565b61167c6118aa565b601f8054821515600160a81b0260ff60a81b199091161790556040517f53726dfcaf90650aa7eb35524f4d3220f07413c8d6cb404cc8c18bf5591bc159906116c990831515815260200190565b60405180910390a150565b6116dc6118aa565b600a81111561172d5760405162461bcd60e51b815260206004820181905260248201527f4275726e206665652063616e6e6f74206265206d6f7265207468616e203130256044820152606401610b21565b601155565b61173a6118aa565b600a8111156117975760405162461bcd60e51b8152602060048201526024808201527f53656c6c20746178206665652063616e6e6f74206265206d6f7265207468616e6044820152632031302560e01b6064820152608401610b21565b601655565b6117a46118aa565b6001600160a01b03166000908152600460205260409020805460ff19169055565b6117cd6118aa565b600a81111561182c5760405162461bcd60e51b815260206004820152602560248201527f53656c6c206275726e206665652063616e6e6f74206265206d6f7265207468616044820152646e2031302560d81b6064820152608401610b21565b601955565b6118396118aa565b6001600160a01b03811661189e5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610b21565b6118a781611dd2565b50565b6000546001600160a01b031633146113c65760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610b21565b6001600160a01b0383166119665760405162461bcd60e51b8152602060048201526024808201527f42455032303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610b21565b6001600160a01b0382166119c75760405162461bcd60e51b815260206004820152602260248201527f42455032303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610b21565b6001600160a01b0383811660008181526003602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b038316611a8c5760405162461bcd60e51b815260206004820152602560248201527f42455032303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610b21565b60008111611aee5760405162461bcd60e51b815260206004820152602960248201527f5472616e7366657220616d6f756e74206d7573742062652067726561746572206044820152687468616e207a65726f60b81b6064820152608401610b21565b611af9838383611e22565b601d5460ff168015611b185750601f546001600160a01b038481169116145b15611b7b576000818152601c602052604090205460ff16611b7b5760405162461bcd60e51b815260206004820152601860248201527f4f6e6c7920616c6c6f7765642062757920616d6f756e747300000000000000006044820152606401610b21565b6000611b8630611355565b60205490915081108015908190611ba75750601f54600160a01b900460ff16155b8015611bc15750601f546001600160a01b03868116911614155b8015611bd65750601f54600160a81b900460ff165b15611be9576020549150611be982611eec565b611bf4858585611f93565b601b5460ff1615611d095760006103e8601a54600754611c149190612da3565b611c1e9190612d81565b601f549091506001600160a01b0386811691161415611ca35780841115611c9e5760405162461bcd60e51b815260206004820152602e60248201527f5472616e73616374656420616d6f756e742065786365656420746865206d617860448201526d20616c6c6f7765642076616c756560901b6064820152608401610b21565b611d07565b80611cad86611355565b1115611d075760405162461bcd60e51b8152602060048201526024808201527f57616c6c65742062616c616e6365206578636565647320746865206d6178206c6044820152631a5b5a5d60e21b6064820152608401610b21565b505b5050505050565b60008184841115611d345760405162461bcd60e51b8152600401610b219190612c61565b505050900390565b6000806000611d496122c0565b9092509050611d588282611d5f565b9250505090565b6000610cbe8284612d81565b6000610cbe8284612d69565b6000806000806000806000806000611d8e8a612442565b9250925092506000806000611dac8d8686611da7611d3c565b61247e565b919f909e50909c50959a5093985091965092945050505050565b6000610cbe8284612dc2565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001600160a01b0383161580611e3f57506001600160a01b038216155b15611e4957505050565b602254600160a01b900460ff16158015611e6d57506022546001600160a01b031615155b15611ee757602254604051635d37a8dd60e01b81523360048201526001600160a01b03858116602483015284811660448301526064820184905290911690635d37a8dd90608401600060405180830381600087803b158015611ece57600080fd5b505af1158015611ee2573d6000803e3d6000fd5b505050505b505050565b601f805460ff60a01b1916600160a01b1790556000611f0c826002611d5f565b90506000611f1a8383611dc6565b905047611f26836124ce565b6000611f324783611dc6565b9050611f3e838261262f565b60408051858152602081018390529081018490527f17bbfb9a6069321b6ded73bd96327c9e6b7212a5cd51ff219cd61370acafb5619060600160405180910390a15050601f805460ff60a01b19169055505050565b6001600160a01b03831660009081526004602052604090205460ff1680611fd257506001600160a01b03821660009081526004602052604090205460ff165b15611fe457611fdf61270c565b612032565b601f546001600160a01b038381169116141561203257612032600d8054600e55600f805460105560118054601255601380546015556016549093556017549091556018549091556019549055565b6000612054606461204e6011548561276890919063ffffffff16565b90611d5f565b90506000612072606461204e6013548661276890919063ffffffff16565b6001600160a01b03861660009081526005602052604090205490915060ff1680156120b657506001600160a01b03841660009081526005602052604090205460ff16155b156120de576120d985856120d4846120ce8888611dc6565b90611dc6565b612774565b61220b565b6001600160a01b03851660009081526005602052604090205460ff1615801561211f57506001600160a01b03841660009081526005602052604090205460ff165b1561213c576120d98585612137846120ce8888611dc6565b61289a565b6001600160a01b03851660009081526005602052604090205460ff1615801561217e57506001600160a01b03841660009081526005602052604090205460ff16155b1561219b576120d98585612196846120ce8888611dc6565b612943565b6001600160a01b03851660009081526005602052604090205460ff1680156121db57506001600160a01b03841660009081526005602052604090205460ff165b156121f8576120d985856121f3846120ce8888611dc6565b612987565b61220b8585612196846120ce8888611dc6565b6000600d819055600f81905561222390869084612943565b60145461223b9086906001600160a01b031683612943565b600e54600d55601054600f556001600160a01b03851660009081526004602052604090205460ff168061228657506001600160a01b03841660009081526004602052604090205460ff165b8061229e5750601f546001600160a01b038581169116145b15611d0957611d09600e54600d55601054600f55601254601155601554601355565b6008546007546000918291825b600654811015612412578260016000600684815481106122ef576122ef612e5b565b60009182526020808320909101546001600160a01b03168352820192909252604001902054118061235a575081600260006006848154811061233357612333612e5b565b60009182526020808320909101546001600160a01b03168352820192909252604001902054115b1561237057600854600754945094505050509091565b6123b6600160006006848154811061238a5761238a612e5b565b60009182526020808320909101546001600160a01b031683528201929092526040019020548490611dc6565b92506123fe60026000600684815481106123d2576123d2612e5b565b60009182526020808320909101546001600160a01b031683528201929092526040019020548390611dc6565b91508061240a81612e14565b9150506122cd565b5060075460085461242291611d5f565b821015612439576008546007549350935050509091565b90939092509050565b600080600080612451856129fa565b9050600061245e86612a16565b90506000612470826120ce8986611dc6565b979296509094509092505050565b600080808061248d8886612768565b9050600061249b8887612768565b905060006124a98888612768565b905060006124bb826120ce8686611dc6565b939b939a50919850919650505050505050565b604080516002808252606082018352600092602083019080368337019050509050308160008151811061250357612503612e5b565b6001600160a01b03928316602091820292909201810191909152601e54604080516315ab88c960e31b81529051919093169263ad5c4648926004808301939192829003018186803b15801561255757600080fd5b505afa15801561256b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061258f9190612b10565b816001815181106125a2576125a2612e5b565b6001600160a01b039283166020918202929092010152601e546125c89130911684611904565b601e5460405163791ac94760e01b81526001600160a01b039091169063791ac94790612601908590600090869030904290600401612cf8565b600060405180830381600087803b15801561261b57600080fd5b505af1158015611d07573d6000803e3d6000fd5b601e546126479030906001600160a01b031684611904565b601e546001600160a01b031663f305d7198230856000806126706000546001600160a01b031690565b60405160e088901b6001600160e01b03191681526001600160a01b03958616600482015260248101949094526044840192909252606483015290911660848201524260a482015260c4016060604051808303818588803b1580156126d357600080fd5b505af11580156126e7573d6000803e3d6000fd5b50505050506040513d601f19601f82011682018060405250810190611d099190612c33565b600d5415801561271c5750600f54155b80156127285750601354155b80156127345750601154155b1561273b57565b600d8054600e55600f80546010556011805460125560138054601555600093849055918390559082905555565b6000610cbe8284612da3565b60008060008060008061278687611d77565b6001600160a01b038f16600090815260026020526040902054959b509399509197509550935091506127b89088611dc6565b6001600160a01b038a166000908152600260209081526040808320939093556001905220546127e79087611dc6565b6001600160a01b03808b1660009081526001602052604080822093909355908a16815220546128169086611d6b565b6001600160a01b03891660009081526001602052604090205561283881612a32565b6128428483612aba565b876001600160a01b0316896001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8560405161288791815260200190565b60405180910390a3505050505050505050565b6000806000806000806128ac87611d77565b6001600160a01b038f16600090815260016020526040902054959b509399509197509550935091506128de9087611dc6565b6001600160a01b03808b16600090815260016020908152604080832094909455918b168152600290915220546129149084611d6b565b6001600160a01b0389166000908152600260209081526040808320939093556001905220546128169086611d6b565b60008060008060008061295587611d77565b6001600160a01b038f16600090815260016020526040902054959b509399509197509550935091506127e79087611dc6565b60008060008060008061299987611d77565b6001600160a01b038f16600090815260026020526040902054959b509399509197509550935091506129cb9088611dc6565b6001600160a01b038a166000908152600260209081526040808320939093556001905220546128de9087611dc6565b6000610bd2606461204e600d548561276890919063ffffffff16565b6000610bd2606461204e600f548561276890919063ffffffff16565b6000612a3c611d3c565b90506000612a4a8383612768565b30600090815260016020526040902054909150612a679082611d6b565b3060009081526001602090815260408083209390935560059052205460ff1615611ee75730600090815260026020526040902054612aa59084611d6b565b30600090815260026020526040902055505050565b600854612ac79083611dc6565b600855600954612ad79082611d6b565b6009555050565b80358015158114612aee57600080fd5b919050565b600060208284031215612b0557600080fd5b8135610cbe81612e71565b600060208284031215612b2257600080fd5b8151610cbe81612e71565b60008060408385031215612b4057600080fd5b8235612b4b81612e71565b91506020830135612b5b81612e71565b809150509250929050565b600080600060608486031215612b7b57600080fd5b8335612b8681612e71565b92506020840135612b9681612e71565b929592945050506040919091013590565b60008060408385031215612bba57600080fd5b8235612bc581612e71565b946020939093013593505050565b600060208284031215612be557600080fd5b610cbe82612ade565b600060208284031215612c0057600080fd5b5035919050565b60008060408385031215612c1a57600080fd5b82359150612c2a60208401612ade565b90509250929050565b600080600060608486031215612c4857600080fd5b8351925060208401519150604084015190509250925092565b600060208083528351808285015260005b81811015612c8e57858101830151858201604001528201612c72565b81811115612ca0576000604083870101525b50601f01601f1916929092016040019392505050565b60208082526022908201527f4f6e6c792061646d696e206f7220616e7469206d616e6167657220616c6c6f77604082015261195960f21b606082015260800190565b600060a082018783526020878185015260a0604085015281875180845260c086019150828901935060005b81811015612d485784516001600160a01b031683529383019391830191600101612d23565b50506001600160a01b03969096166060850152505050608001529392505050565b60008219821115612d7c57612d7c612e2f565b500190565b600082612d9e57634e487b7160e01b600052601260045260246000fd5b500490565b6000816000190483118215151615612dbd57612dbd612e2f565b500290565b600082821015612dd457612dd4612e2f565b500390565b600181811c90821680612ded57607f821691505b60208210811415612e0e57634e487b7160e01b600052602260045260246000fd5b50919050565b6000600019821415612e2857612e28612e2f565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052603160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b6001600160a01b03811681146118a757600080fdfe42455032303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636542455032303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa264697066735822122020955769f4dc6c0af072ba7026476cba804cfb8d88c7106ec059d4363187ea5764736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x385 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6BC87C3A GT PUSH2 0x1D1 JUMPI DUP1 PUSH4 0xA9059CBB GT PUSH2 0x102 JUMPI DUP1 PUSH4 0xD0E03523 GT PUSH2 0xA0 JUMPI DUP1 PUSH4 0xE1E144DE GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xE1E144DE EQ PUSH2 0xA4B JUMPI DUP1 PUSH4 0xEA2F0B37 EQ PUSH2 0xA6C JUMPI DUP1 PUSH4 0xEBF78663 EQ PUSH2 0xA8C JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0xAAC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xD0E03523 EQ PUSH2 0x9A6 JUMPI DUP1 PUSH4 0xD5BDE46C EQ PUSH2 0x9C6 JUMPI DUP1 PUSH4 0xD8C6404B EQ PUSH2 0x9EB JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0xA05 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xC2C7C03A GT PUSH2 0xDC JUMPI DUP1 PUSH4 0xC2C7C03A EQ PUSH2 0x930 JUMPI DUP1 PUSH4 0xC49B9A80 EQ PUSH2 0x950 JUMPI DUP1 PUSH4 0xC8607952 EQ PUSH2 0x970 JUMPI DUP1 PUSH4 0xCEA26958 EQ PUSH2 0x986 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x8DA JUMPI DUP1 PUSH4 0xA928681C EQ PUSH2 0x8FA JUMPI DUP1 PUSH4 0xC0B0FDA2 EQ PUSH2 0x91A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x88790A68 GT PUSH2 0x16F JUMPI DUP1 PUSH4 0x8EE88C53 GT PUSH2 0x149 JUMPI DUP1 PUSH4 0x8EE88C53 EQ PUSH2 0x865 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x885 JUMPI DUP1 PUSH4 0x9655CAB5 EQ PUSH2 0x89A JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x8BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x88790A68 EQ PUSH2 0x7F8 JUMPI DUP1 PUSH4 0x88F82020 EQ PUSH2 0x80E JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x847 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x74FB20E1 GT PUSH2 0x1AB JUMPI DUP1 PUSH4 0x74FB20E1 EQ PUSH2 0x78D JUMPI DUP1 PUSH4 0x75F0A874 EQ PUSH2 0x7A2 JUMPI DUP1 PUSH4 0x7ABDC1CA EQ PUSH2 0x7C2 JUMPI DUP1 PUSH4 0x882CFB3F EQ PUSH2 0x7D8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6BC87C3A EQ PUSH2 0x742 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x758 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x778 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3B124FE7 GT PUSH2 0x2B6 JUMPI DUP1 PUSH4 0x52390C02 GT PUSH2 0x254 JUMPI DUP1 PUSH4 0x5D098B38 GT PUSH2 0x223 JUMPI DUP1 PUSH4 0x5D098B38 EQ PUSH2 0x6CC JUMPI DUP1 PUSH4 0x611BF629 EQ PUSH2 0x6EC JUMPI DUP1 PUSH4 0x632A6A35 EQ PUSH2 0x70C JUMPI DUP1 PUSH4 0x64A06E80 EQ PUSH2 0x72C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x52390C02 EQ PUSH2 0x639 JUMPI DUP1 PUSH4 0x5342ACB4 EQ PUSH2 0x659 JUMPI DUP1 PUSH4 0x57D87F0D EQ PUSH2 0x692 JUMPI DUP1 PUSH4 0x5876CCC5 EQ PUSH2 0x6AC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x4549B039 GT PUSH2 0x290 JUMPI DUP1 PUSH4 0x4549B039 EQ PUSH2 0x5B8 JUMPI DUP1 PUSH4 0x457C194C EQ PUSH2 0x5D8 JUMPI DUP1 PUSH4 0x4A5566BF EQ PUSH2 0x5F8 JUMPI DUP1 PUSH4 0x4A74BB02 EQ PUSH2 0x618 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3B124FE7 EQ PUSH2 0x562 JUMPI DUP1 PUSH4 0x3BD5D173 EQ PUSH2 0x578 JUMPI DUP1 PUSH4 0x437823EC EQ PUSH2 0x598 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x200A692D GT PUSH2 0x323 JUMPI DUP1 PUSH4 0x2D838119 GT PUSH2 0x2FD JUMPI DUP1 PUSH4 0x2D838119 EQ PUSH2 0x4E0 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x500 JUMPI DUP1 PUSH4 0x3685D419 EQ PUSH2 0x522 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x542 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x200A692D EQ PUSH2 0x494 JUMPI DUP1 PUSH4 0x22976E0D EQ PUSH2 0x4AA JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x4C0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA7D2D87 GT PUSH2 0x35F JUMPI DUP1 PUSH4 0xA7D2D87 EQ PUSH2 0x40E JUMPI DUP1 PUSH4 0x13114A9D EQ PUSH2 0x432 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x447 JUMPI DUP1 PUSH4 0x1A4CD1B1 EQ PUSH2 0x45C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x61C82D0 EQ PUSH2 0x391 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x3B3 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x3DE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLDATASIZE PUSH2 0x38C JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x39D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3B1 PUSH2 0x3AC CALLDATASIZE PUSH1 0x4 PUSH2 0x2BEE JUMP JUMPDEST PUSH2 0xACC JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3BF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3C8 PUSH2 0xB2F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3D5 SWAP2 SWAP1 PUSH2 0x2C61 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3EA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3FE PUSH2 0x3F9 CALLDATASIZE PUSH1 0x4 PUSH2 0x2BA7 JUMP JUMPDEST PUSH2 0xBC1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3D5 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x41A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x424 PUSH1 0x1A SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3D5 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x43E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x9 SLOAD PUSH2 0x424 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x453 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x7 SLOAD PUSH2 0x424 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x468 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1E SLOAD PUSH2 0x47C SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3D5 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4A0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x424 PUSH1 0x16 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4B6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x424 PUSH1 0x13 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3FE PUSH2 0x4DB CALLDATASIZE PUSH1 0x4 PUSH2 0x2B66 JUMP JUMPDEST PUSH2 0xBD8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4EC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x424 PUSH2 0x4FB CALLDATASIZE PUSH1 0x4 PUSH2 0x2BEE JUMP JUMPDEST PUSH2 0xC41 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x50C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xC SLOAD PUSH1 0x40 MLOAD PUSH1 0xFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3D5 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x52E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3B1 PUSH2 0x53D CALLDATASIZE PUSH1 0x4 PUSH2 0x2AF3 JUMP JUMPDEST PUSH2 0xCC5 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x54E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3FE PUSH2 0x55D CALLDATASIZE PUSH1 0x4 PUSH2 0x2BA7 JUMP JUMPDEST PUSH2 0xE5A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x56E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x424 PUSH1 0xD SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x584 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3B1 PUSH2 0x593 CALLDATASIZE PUSH1 0x4 PUSH2 0x2BEE JUMP JUMPDEST PUSH2 0xE90 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5A4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3B1 PUSH2 0x5B3 CALLDATASIZE PUSH1 0x4 PUSH2 0x2AF3 JUMP JUMPDEST PUSH2 0xF7A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x424 PUSH2 0x5D3 CALLDATASIZE PUSH1 0x4 PUSH2 0x2C07 JUMP JUMPDEST PUSH2 0xFA6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5E4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3B1 PUSH2 0x5F3 CALLDATASIZE PUSH1 0x4 PUSH2 0x2BEE JUMP JUMPDEST PUSH2 0x1033 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x604 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3B1 PUSH2 0x613 CALLDATASIZE PUSH1 0x4 PUSH2 0x2BD3 JUMP JUMPDEST PUSH2 0x109F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x624 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1F SLOAD PUSH2 0x3FE SWAP1 PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x645 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3B1 PUSH2 0x654 CALLDATASIZE PUSH1 0x4 PUSH2 0x2AF3 JUMP JUMPDEST PUSH2 0x10F6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x665 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3FE PUSH2 0x674 CALLDATASIZE PUSH1 0x4 PUSH2 0x2AF3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x69E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1B SLOAD PUSH2 0x3FE SWAP1 PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3B1 PUSH2 0x6C7 CALLDATASIZE PUSH1 0x4 PUSH2 0x2BEE JUMP JUMPDEST PUSH2 0x1290 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6D8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3B1 PUSH2 0x6E7 CALLDATASIZE PUSH1 0x4 PUSH2 0x2AF3 JUMP JUMPDEST PUSH2 0x1301 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6F8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3B1 PUSH2 0x707 CALLDATASIZE PUSH1 0x4 PUSH2 0x2AF3 JUMP JUMPDEST PUSH2 0x132B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x718 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1F SLOAD PUSH2 0x47C SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x738 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x424 PUSH2 0x3E8 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x74E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x424 PUSH1 0xF SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x764 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x424 PUSH2 0x773 CALLDATASIZE PUSH1 0x4 PUSH2 0x2AF3 JUMP JUMPDEST PUSH2 0x1355 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x784 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3B1 PUSH2 0x13B4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x799 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3B1 PUSH2 0x13C8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7AE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x14 SLOAD PUSH2 0x47C SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7CE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x424 PUSH1 0x19 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7E4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x22 SLOAD PUSH2 0x47C SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x804 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x424 PUSH1 0x17 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x81A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3FE PUSH2 0x829 CALLDATASIZE PUSH1 0x4 PUSH2 0x2AF3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x853 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x47C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x871 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3B1 PUSH2 0x880 CALLDATASIZE PUSH1 0x4 PUSH2 0x2BEE JUMP JUMPDEST PUSH2 0x13FC JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x891 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3C8 PUSH2 0x1468 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8A6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3B1 PUSH2 0x8B5 CALLDATASIZE PUSH1 0x4 PUSH2 0x2BEE JUMP JUMPDEST PUSH2 0x1477 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8C6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3FE PUSH2 0x8D5 CALLDATASIZE PUSH1 0x4 PUSH2 0x2BA7 JUMP JUMPDEST PUSH2 0x1550 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3FE PUSH2 0x8F5 CALLDATASIZE PUSH1 0x4 PUSH2 0x2BA7 JUMP JUMPDEST PUSH2 0x159F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x906 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3B1 PUSH2 0x915 CALLDATASIZE PUSH1 0x4 PUSH2 0x2BEE JUMP JUMPDEST PUSH2 0x15AC JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x926 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x424 PUSH1 0x11 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x93C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3B1 PUSH2 0x94B CALLDATASIZE PUSH1 0x4 PUSH2 0x2BD3 JUMP JUMPDEST PUSH2 0x161D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x95C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3B1 PUSH2 0x96B CALLDATASIZE PUSH1 0x4 PUSH2 0x2BD3 JUMP JUMPDEST PUSH2 0x1674 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x97C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x424 PUSH1 0x18 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x992 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3B1 PUSH2 0x9A1 CALLDATASIZE PUSH1 0x4 PUSH2 0x2BEE JUMP JUMPDEST PUSH2 0x16D4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x9B2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3B1 PUSH2 0x9C1 CALLDATASIZE PUSH1 0x4 PUSH2 0x2BEE JUMP JUMPDEST PUSH2 0x1732 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x9D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1D SLOAD PUSH2 0x47C SWAP1 PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x9F7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1D SLOAD PUSH2 0x3FE SWAP1 PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x424 PUSH2 0xA20 CALLDATASIZE PUSH1 0x4 PUSH2 0x2B2D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA57 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x22 SLOAD PUSH2 0x3FE SWAP1 PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA78 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3B1 PUSH2 0xA87 CALLDATASIZE PUSH1 0x4 PUSH2 0x2AF3 JUMP JUMPDEST PUSH2 0x179C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA98 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3B1 PUSH2 0xAA7 CALLDATASIZE PUSH1 0x4 PUSH2 0x2BEE JUMP JUMPDEST PUSH2 0x17C5 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xAB8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3B1 PUSH2 0xAC7 CALLDATASIZE PUSH1 0x4 PUSH2 0x2AF3 JUMP JUMPDEST PUSH2 0x1831 JUMP JUMPDEST PUSH2 0xAD4 PUSH2 0x18AA JUMP JUMPDEST PUSH1 0xA DUP2 GT ISZERO PUSH2 0xB2A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546178206665652063616E6E6F74206265206D6F7265207468616E2031302500 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xD SSTORE JUMP JUMPDEST PUSH1 0x60 PUSH1 0xA DUP1 SLOAD PUSH2 0xB3E SWAP1 PUSH2 0x2DD9 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xB6A SWAP1 PUSH2 0x2DD9 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xBB7 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xB8C JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xBB7 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xB9A JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBCE CALLER DUP5 DUP5 PUSH2 0x1904 JUMP JUMPDEST POP PUSH1 0x1 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBE5 DUP5 DUP5 DUP5 PUSH2 0x1A28 JUMP JUMPDEST PUSH2 0xC37 DUP5 CALLER PUSH2 0xC32 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2E87 PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0x1D10 JUMP JUMPDEST PUSH2 0x1904 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 SLOAD DUP3 GT ISZERO PUSH2 0xCA8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416D6F756E74206D757374206265206C657373207468616E20746F74616C2072 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x65666C656374696F6E73 PUSH1 0xB0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB21 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCB2 PUSH2 0x1D3C JUMP JUMPDEST SWAP1 POP PUSH2 0xCBE DUP4 DUP3 PUSH2 0x1D5F JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0xCCD PUSH2 0x18AA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0xD35 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4163636F756E7420697320616C7265616479206578636C756465640000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB21 JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x6 SLOAD DUP2 LT ISZERO PUSH2 0xE56 JUMPI DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x6 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xD5F JUMPI PUSH2 0xD5F PUSH2 0x2E5B JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0xE44 JUMPI PUSH1 0x6 DUP1 SLOAD PUSH2 0xD8A SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x2DC2 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0xD9A JUMPI PUSH2 0xD9A PUSH2 0x2E5B JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x6 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 DUP4 SWAP1 DUP2 LT PUSH2 0xDC6 JUMPI PUSH2 0xDC6 PUSH2 0x2E5B JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP2 SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND OR SWAP1 SSTORE SWAP2 DUP5 AND DUP2 MSTORE PUSH1 0x2 DUP3 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP3 SWAP1 SSTORE PUSH1 0x5 SWAP1 SWAP3 MSTORE KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH1 0x6 DUP1 SLOAD DUP1 PUSH2 0xE1E JUMPI PUSH2 0xE1E PUSH2 0x2E45 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 SWAP1 KECCAK256 DUP2 ADD PUSH1 0x0 NOT SWAP1 DUP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE ADD SWAP1 SSTORE POP POP JUMP JUMPDEST DUP1 PUSH2 0xE4E DUP2 PUSH2 0x2E14 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xD38 JUMP JUMPDEST POP POP JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 PUSH2 0xBCE SWAP2 DUP6 SWAP1 PUSH2 0xC32 SWAP1 DUP7 PUSH2 0x1D6B JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xF05 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4578636C75646564206164647265737365732063616E6E6F742063616C6C2074 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x3434B990333AB731BA34B7B7 PUSH1 0xA1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB21 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF10 DUP4 PUSH2 0x1D77 JUMP JUMPDEST POP POP POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP2 SWAP3 POP PUSH2 0xF3C SWAP2 SWAP1 POP DUP3 PUSH2 0x1DC6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH1 0x8 SLOAD PUSH2 0xF62 SWAP1 DUP3 PUSH2 0x1DC6 JUMP JUMPDEST PUSH1 0x8 SSTORE PUSH1 0x9 SLOAD PUSH2 0xF72 SWAP1 DUP5 PUSH2 0x1D6B JUMP JUMPDEST PUSH1 0x9 SSTORE POP POP POP JUMP JUMPDEST PUSH2 0xF82 PUSH2 0x18AA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 SLOAD DUP4 GT ISZERO PUSH2 0xFFA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416D6F756E74206D757374206265206C657373207468616E20737570706C7900 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB21 JUMP JUMPDEST DUP2 PUSH2 0x1019 JUMPI PUSH1 0x0 PUSH2 0x100A DUP5 PUSH2 0x1D77 JUMP JUMPDEST POP SWAP4 SWAP6 POP PUSH2 0xBD2 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1024 DUP5 PUSH2 0x1D77 JUMP JUMPDEST POP SWAP3 SWAP6 POP PUSH2 0xBD2 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x103B PUSH2 0x18AA JUMP JUMPDEST PUSH1 0xA DUP2 GT ISZERO PUSH2 0x109A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D61726B6574696E67206665652063616E6E6F74206265206D6F726520746861 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6E20313025 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB21 JUMP JUMPDEST PUSH1 0x13 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ DUP1 PUSH2 0x10C7 JUMPI POP PUSH1 0x1D SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ JUMPDEST PUSH2 0x10E3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB21 SWAP1 PUSH2 0x2CB6 JUMP JUMPDEST PUSH1 0x1B DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x10FE PUSH2 0x18AA JUMP JUMPDEST PUSH1 0x1E SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 DUP2 AND SWAP2 AND EQ ISZERO PUSH2 0x1167 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x57652063616E206E6F74206578636C7564652050616E63616B6520726F757465 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x3917 PUSH1 0xF1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB21 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x11D0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4163636F756E7420697320616C7265616479206578636C756465640000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB21 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD ISZERO PUSH2 0x122A JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x1210 SWAP1 PUSH2 0xC41 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x6 DUP1 SLOAD SWAP2 DUP3 ADD DUP2 SSTORE SWAP1 SWAP2 MSTORE PUSH32 0xF652222313E28459528D920B65115C16C04F3EFC82AAEDC97BE59F3F377C0D3F ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x1298 PUSH2 0x18AA JUMP JUMPDEST PUSH1 0xA DUP2 GT ISZERO PUSH2 0x12FC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53656C6C206C6971756964697479206665652063616E6E6F74206265206D6F72 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x65207468616E20313025 PUSH1 0xB0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB21 JUMP JUMPDEST PUSH1 0x17 SSTORE JUMP JUMPDEST PUSH2 0x1309 PUSH2 0x18AA JUMP JUMPDEST PUSH1 0x14 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x1333 PUSH2 0x18AA JUMP JUMPDEST PUSH1 0x22 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x1392 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0xBD2 SWAP1 PUSH2 0xC41 JUMP JUMPDEST PUSH2 0x13BC PUSH2 0x18AA JUMP JUMPDEST PUSH2 0x13C6 PUSH1 0x0 PUSH2 0x1DD2 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x13D0 PUSH2 0x18AA JUMP JUMPDEST PUSH1 0x22 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x13E7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x22 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND PUSH1 0x1 PUSH1 0xA0 SHL OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x1404 PUSH2 0x18AA JUMP JUMPDEST PUSH1 0xA DUP2 GT ISZERO PUSH2 0x1463 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C6971756964697479206665652063616E6E6F74206265206D6F726520746861 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6E20313025 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB21 JUMP JUMPDEST PUSH1 0xF SSTORE JUMP JUMPDEST PUSH1 0x60 PUSH1 0xB DUP1 SLOAD PUSH2 0xB3E SWAP1 PUSH2 0x2DD9 JUMP JUMPDEST PUSH2 0x147F PUSH2 0x18AA JUMP JUMPDEST PUSH1 0x1 DUP2 LT ISZERO PUSH2 0x14E6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D617820686F6C64696E672070657263656E74732063616E6E6F74206265206C PUSH1 0x44 DUP3 ADD MSTORE PUSH13 0x657373207468616E20302E3125 PUSH1 0x98 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB21 JUMP JUMPDEST PUSH1 0x1E DUP2 GT ISZERO PUSH2 0x154B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D617820686F6C64696E672070657263656E74732063616E6E6F74206265206D PUSH1 0x44 DUP3 ADD MSTORE PUSH11 0x6F7265207468616E203325 PUSH1 0xA8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB21 JUMP JUMPDEST PUSH1 0x1A SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBCE CALLER DUP5 PUSH2 0xC32 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2EAF PUSH1 0x25 SWAP2 CODECOPY CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP14 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0x1D10 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBCE CALLER DUP5 DUP5 PUSH2 0x1A28 JUMP JUMPDEST PUSH2 0x15B4 PUSH2 0x18AA JUMP JUMPDEST PUSH1 0xA DUP2 GT ISZERO PUSH2 0x1618 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53656C6C206D61726B6574696E67206665652063616E6E6F74206265206D6F72 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x65207468616E20313025 PUSH1 0xB0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB21 JUMP JUMPDEST PUSH1 0x18 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ DUP1 PUSH2 0x1645 JUMPI POP PUSH1 0x1D SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ JUMPDEST PUSH2 0x1661 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB21 SWAP1 PUSH2 0x2CB6 JUMP JUMPDEST PUSH1 0x1D DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x167C PUSH2 0x18AA JUMP JUMPDEST PUSH1 0x1F DUP1 SLOAD DUP3 ISZERO ISZERO PUSH1 0x1 PUSH1 0xA8 SHL MUL PUSH1 0xFF PUSH1 0xA8 SHL NOT SWAP1 SWAP2 AND OR SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH32 0x53726DFCAF90650AA7EB35524F4D3220F07413C8D6CB404CC8C18BF5591BC159 SWAP1 PUSH2 0x16C9 SWAP1 DUP4 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH2 0x16DC PUSH2 0x18AA JUMP JUMPDEST PUSH1 0xA DUP2 GT ISZERO PUSH2 0x172D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4275726E206665652063616E6E6F74206265206D6F7265207468616E20313025 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB21 JUMP JUMPDEST PUSH1 0x11 SSTORE JUMP JUMPDEST PUSH2 0x173A PUSH2 0x18AA JUMP JUMPDEST PUSH1 0xA DUP2 GT ISZERO PUSH2 0x1797 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x53656C6C20746178206665652063616E6E6F74206265206D6F7265207468616E PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x20313025 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB21 JUMP JUMPDEST PUSH1 0x16 SSTORE JUMP JUMPDEST PUSH2 0x17A4 PUSH2 0x18AA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x17CD PUSH2 0x18AA JUMP JUMPDEST PUSH1 0xA DUP2 GT ISZERO PUSH2 0x182C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53656C6C206275726E206665652063616E6E6F74206265206D6F726520746861 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6E20313025 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB21 JUMP JUMPDEST PUSH1 0x19 SSTORE JUMP JUMPDEST PUSH2 0x1839 PUSH2 0x18AA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x189E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB21 JUMP JUMPDEST PUSH2 0x18A7 DUP2 PUSH2 0x1DD2 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x13C6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB21 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x1966 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x42455032303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB21 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x19C7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x42455032303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB21 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x1A8C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x42455032303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB21 JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x1AEE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5472616E7366657220616D6F756E74206D757374206265206772656174657220 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x7468616E207A65726F PUSH1 0xB8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB21 JUMP JUMPDEST PUSH2 0x1AF9 DUP4 DUP4 DUP4 PUSH2 0x1E22 JUMP JUMPDEST PUSH1 0x1D SLOAD PUSH1 0xFF AND DUP1 ISZERO PUSH2 0x1B18 JUMPI POP PUSH1 0x1F SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 AND EQ JUMPDEST ISZERO PUSH2 0x1B7B JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1C PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x1B7B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C7920616C6C6F7765642062757920616D6F756E74730000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB21 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B86 ADDRESS PUSH2 0x1355 JUMP JUMPDEST PUSH1 0x20 SLOAD SWAP1 SWAP2 POP DUP2 LT DUP1 ISZERO SWAP1 DUP2 SWAP1 PUSH2 0x1BA7 JUMPI POP PUSH1 0x1F SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x1BC1 JUMPI POP PUSH1 0x1F SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND SWAP2 AND EQ ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x1BD6 JUMPI POP PUSH1 0x1F SLOAD PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 DIV PUSH1 0xFF AND JUMPDEST ISZERO PUSH2 0x1BE9 JUMPI PUSH1 0x20 SLOAD SWAP2 POP PUSH2 0x1BE9 DUP3 PUSH2 0x1EEC JUMP JUMPDEST PUSH2 0x1BF4 DUP6 DUP6 DUP6 PUSH2 0x1F93 JUMP JUMPDEST PUSH1 0x1B SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x1D09 JUMPI PUSH1 0x0 PUSH2 0x3E8 PUSH1 0x1A SLOAD PUSH1 0x7 SLOAD PUSH2 0x1C14 SWAP2 SWAP1 PUSH2 0x2DA3 JUMP JUMPDEST PUSH2 0x1C1E SWAP2 SWAP1 PUSH2 0x2D81 JUMP JUMPDEST PUSH1 0x1F SLOAD SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND SWAP2 AND EQ ISZERO PUSH2 0x1CA3 JUMPI DUP1 DUP5 GT ISZERO PUSH2 0x1C9E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5472616E73616374656420616D6F756E742065786365656420746865206D6178 PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x20616C6C6F7765642076616C7565 PUSH1 0x90 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB21 JUMP JUMPDEST PUSH2 0x1D07 JUMP JUMPDEST DUP1 PUSH2 0x1CAD DUP7 PUSH2 0x1355 JUMP JUMPDEST GT ISZERO PUSH2 0x1D07 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x57616C6C65742062616C616E6365206578636565647320746865206D6178206C PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x1A5B5A5D PUSH1 0xE2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB21 JUMP JUMPDEST POP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP5 DUP5 GT ISZERO PUSH2 0x1D34 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB21 SWAP2 SWAP1 PUSH2 0x2C61 JUMP JUMPDEST POP POP POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x1D49 PUSH2 0x22C0 JUMP JUMPDEST SWAP1 SWAP3 POP SWAP1 POP PUSH2 0x1D58 DUP3 DUP3 PUSH2 0x1D5F JUMP JUMPDEST SWAP3 POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCBE DUP3 DUP5 PUSH2 0x2D81 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCBE DUP3 DUP5 PUSH2 0x2D69 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x1D8E DUP11 PUSH2 0x2442 JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x1DAC DUP14 DUP7 DUP7 PUSH2 0x1DA7 PUSH2 0x1D3C JUMP JUMPDEST PUSH2 0x247E JUMP JUMPDEST SWAP2 SWAP16 SWAP1 SWAP15 POP SWAP1 SWAP13 POP SWAP6 SWAP11 POP SWAP4 SWAP9 POP SWAP2 SWAP7 POP SWAP3 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCBE DUP3 DUP5 PUSH2 0x2DC2 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO DUP1 PUSH2 0x1E3F JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO JUMPDEST ISZERO PUSH2 0x1E49 JUMPI POP POP POP JUMP JUMPDEST PUSH1 0x22 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0x1E6D JUMPI POP PUSH1 0x22 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO ISZERO JUMPDEST ISZERO PUSH2 0x1EE7 JUMPI PUSH1 0x22 SLOAD PUSH1 0x40 MLOAD PUSH4 0x5D37A8DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE DUP5 DUP2 AND PUSH1 0x44 DUP4 ADD MSTORE PUSH1 0x64 DUP3 ADD DUP5 SWAP1 MSTORE SWAP1 SWAP2 AND SWAP1 PUSH4 0x5D37A8DD SWAP1 PUSH1 0x84 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1ECE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1EE2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1F DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND PUSH1 0x1 PUSH1 0xA0 SHL OR SWAP1 SSTORE PUSH1 0x0 PUSH2 0x1F0C DUP3 PUSH1 0x2 PUSH2 0x1D5F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1F1A DUP4 DUP4 PUSH2 0x1DC6 JUMP JUMPDEST SWAP1 POP SELFBALANCE PUSH2 0x1F26 DUP4 PUSH2 0x24CE JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F32 SELFBALANCE DUP4 PUSH2 0x1DC6 JUMP JUMPDEST SWAP1 POP PUSH2 0x1F3E DUP4 DUP3 PUSH2 0x262F JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP4 SWAP1 MSTORE SWAP1 DUP2 ADD DUP5 SWAP1 MSTORE PUSH32 0x17BBFB9A6069321B6DED73BD96327C9E6B7212A5CD51FF219CD61370ACAFB561 SWAP1 PUSH1 0x60 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP PUSH1 0x1F DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP1 PUSH2 0x1FD2 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST ISZERO PUSH2 0x1FE4 JUMPI PUSH2 0x1FDF PUSH2 0x270C JUMP JUMPDEST PUSH2 0x2032 JUMP JUMPDEST PUSH1 0x1F SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND SWAP2 AND EQ ISZERO PUSH2 0x2032 JUMPI PUSH2 0x2032 PUSH1 0xD DUP1 SLOAD PUSH1 0xE SSTORE PUSH1 0xF DUP1 SLOAD PUSH1 0x10 SSTORE PUSH1 0x11 DUP1 SLOAD PUSH1 0x12 SSTORE PUSH1 0x13 DUP1 SLOAD PUSH1 0x15 SSTORE PUSH1 0x16 SLOAD SWAP1 SWAP4 SSTORE PUSH1 0x17 SLOAD SWAP1 SWAP2 SSTORE PUSH1 0x18 SLOAD SWAP1 SWAP2 SSTORE PUSH1 0x19 SLOAD SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2054 PUSH1 0x64 PUSH2 0x204E PUSH1 0x11 SLOAD DUP6 PUSH2 0x2768 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 PUSH2 0x1D5F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x2072 PUSH1 0x64 PUSH2 0x204E PUSH1 0x13 SLOAD DUP7 PUSH2 0x2768 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP PUSH1 0xFF AND DUP1 ISZERO PUSH2 0x20B6 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST ISZERO PUSH2 0x20DE JUMPI PUSH2 0x20D9 DUP6 DUP6 PUSH2 0x20D4 DUP5 PUSH2 0x20CE DUP9 DUP9 PUSH2 0x1DC6 JUMP JUMPDEST SWAP1 PUSH2 0x1DC6 JUMP JUMPDEST PUSH2 0x2774 JUMP JUMPDEST PUSH2 0x220B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0x211F JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST ISZERO PUSH2 0x213C JUMPI PUSH2 0x20D9 DUP6 DUP6 PUSH2 0x2137 DUP5 PUSH2 0x20CE DUP9 DUP9 PUSH2 0x1DC6 JUMP JUMPDEST PUSH2 0x289A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0x217E JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST ISZERO PUSH2 0x219B JUMPI PUSH2 0x20D9 DUP6 DUP6 PUSH2 0x2196 DUP5 PUSH2 0x20CE DUP9 DUP9 PUSH2 0x1DC6 JUMP JUMPDEST PUSH2 0x2943 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP1 ISZERO PUSH2 0x21DB JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST ISZERO PUSH2 0x21F8 JUMPI PUSH2 0x20D9 DUP6 DUP6 PUSH2 0x21F3 DUP5 PUSH2 0x20CE DUP9 DUP9 PUSH2 0x1DC6 JUMP JUMPDEST PUSH2 0x2987 JUMP JUMPDEST PUSH2 0x220B DUP6 DUP6 PUSH2 0x2196 DUP5 PUSH2 0x20CE DUP9 DUP9 PUSH2 0x1DC6 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xD DUP2 SWAP1 SSTORE PUSH1 0xF DUP2 SWAP1 SSTORE PUSH2 0x2223 SWAP1 DUP7 SWAP1 DUP5 PUSH2 0x2943 JUMP JUMPDEST PUSH1 0x14 SLOAD PUSH2 0x223B SWAP1 DUP7 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH2 0x2943 JUMP JUMPDEST PUSH1 0xE SLOAD PUSH1 0xD SSTORE PUSH1 0x10 SLOAD PUSH1 0xF SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP1 PUSH2 0x2286 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST DUP1 PUSH2 0x229E JUMPI POP PUSH1 0x1F SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND SWAP2 AND EQ JUMPDEST ISZERO PUSH2 0x1D09 JUMPI PUSH2 0x1D09 PUSH1 0xE SLOAD PUSH1 0xD SSTORE PUSH1 0x10 SLOAD PUSH1 0xF SSTORE PUSH1 0x12 SLOAD PUSH1 0x11 SSTORE PUSH1 0x15 SLOAD PUSH1 0x13 SSTORE JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x7 SLOAD PUSH1 0x0 SWAP2 DUP3 SWAP2 DUP3 JUMPDEST PUSH1 0x6 SLOAD DUP2 LT ISZERO PUSH2 0x2412 JUMPI DUP3 PUSH1 0x1 PUSH1 0x0 PUSH1 0x6 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x22EF JUMPI PUSH2 0x22EF PUSH2 0x2E5B JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD SWAP1 KECCAK256 SLOAD GT DUP1 PUSH2 0x235A JUMPI POP DUP2 PUSH1 0x2 PUSH1 0x0 PUSH1 0x6 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x2333 JUMPI PUSH2 0x2333 PUSH2 0x2E5B JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD SWAP1 KECCAK256 SLOAD GT JUMPDEST ISZERO PUSH2 0x2370 JUMPI PUSH1 0x8 SLOAD PUSH1 0x7 SLOAD SWAP5 POP SWAP5 POP POP POP POP SWAP1 SWAP2 JUMP JUMPDEST PUSH2 0x23B6 PUSH1 0x1 PUSH1 0x0 PUSH1 0x6 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x238A JUMPI PUSH2 0x238A PUSH2 0x2E5B JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD SWAP1 KECCAK256 SLOAD DUP5 SWAP1 PUSH2 0x1DC6 JUMP JUMPDEST SWAP3 POP PUSH2 0x23FE PUSH1 0x2 PUSH1 0x0 PUSH1 0x6 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x23D2 JUMPI PUSH2 0x23D2 PUSH2 0x2E5B JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD SWAP1 KECCAK256 SLOAD DUP4 SWAP1 PUSH2 0x1DC6 JUMP JUMPDEST SWAP2 POP DUP1 PUSH2 0x240A DUP2 PUSH2 0x2E14 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x22CD JUMP JUMPDEST POP PUSH1 0x7 SLOAD PUSH1 0x8 SLOAD PUSH2 0x2422 SWAP2 PUSH2 0x1D5F JUMP JUMPDEST DUP3 LT ISZERO PUSH2 0x2439 JUMPI PUSH1 0x8 SLOAD PUSH1 0x7 SLOAD SWAP4 POP SWAP4 POP POP POP SWAP1 SWAP2 JUMP JUMPDEST SWAP1 SWAP4 SWAP1 SWAP3 POP SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x2451 DUP6 PUSH2 0x29FA JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x245E DUP7 PUSH2 0x2A16 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x2470 DUP3 PUSH2 0x20CE DUP10 DUP7 PUSH2 0x1DC6 JUMP JUMPDEST SWAP8 SWAP3 SWAP7 POP SWAP1 SWAP5 POP SWAP1 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 DUP1 PUSH2 0x248D DUP9 DUP7 PUSH2 0x2768 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x249B DUP9 DUP8 PUSH2 0x2768 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x24A9 DUP9 DUP9 PUSH2 0x2768 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x24BB DUP3 PUSH2 0x20CE DUP7 DUP7 PUSH2 0x1DC6 JUMP JUMPDEST SWAP4 SWAP12 SWAP4 SWAP11 POP SWAP2 SWAP9 POP SWAP2 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x2 DUP1 DUP3 MSTORE PUSH1 0x60 DUP3 ADD DUP4 MSTORE PUSH1 0x0 SWAP3 PUSH1 0x20 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP ADDRESS DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x2503 JUMPI PUSH2 0x2503 PUSH2 0x2E5B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x20 SWAP2 DUP3 MUL SWAP3 SWAP1 SWAP3 ADD DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1E SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x15AB88C9 PUSH1 0xE3 SHL DUP2 MSTORE SWAP1 MLOAD SWAP2 SWAP1 SWAP4 AND SWAP3 PUSH4 0xAD5C4648 SWAP3 PUSH1 0x4 DUP1 DUP4 ADD SWAP4 SWAP2 SWAP3 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2557 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x256B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x258F SWAP2 SWAP1 PUSH2 0x2B10 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x25A2 JUMPI PUSH2 0x25A2 PUSH2 0x2E5B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x20 SWAP2 DUP3 MUL SWAP3 SWAP1 SWAP3 ADD ADD MSTORE PUSH1 0x1E SLOAD PUSH2 0x25C8 SWAP2 ADDRESS SWAP2 AND DUP5 PUSH2 0x1904 JUMP JUMPDEST PUSH1 0x1E SLOAD PUSH1 0x40 MLOAD PUSH4 0x791AC947 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x791AC947 SWAP1 PUSH2 0x2601 SWAP1 DUP6 SWAP1 PUSH1 0x0 SWAP1 DUP7 SWAP1 ADDRESS SWAP1 TIMESTAMP SWAP1 PUSH1 0x4 ADD PUSH2 0x2CF8 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x261B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1D07 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1E SLOAD PUSH2 0x2647 SWAP1 ADDRESS SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH2 0x1904 JUMP JUMPDEST PUSH1 0x1E SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xF305D719 DUP3 ADDRESS DUP6 PUSH1 0x0 DUP1 PUSH2 0x2670 PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0xE0 DUP9 SWAP1 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP6 DUP7 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 0x44 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x64 DUP4 ADD MSTORE SWAP1 SWAP2 AND PUSH1 0x84 DUP3 ADD MSTORE TIMESTAMP PUSH1 0xA4 DUP3 ADD MSTORE PUSH1 0xC4 ADD PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x26D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x26E7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1D09 SWAP2 SWAP1 PUSH2 0x2C33 JUMP JUMPDEST PUSH1 0xD SLOAD ISZERO DUP1 ISZERO PUSH2 0x271C JUMPI POP PUSH1 0xF SLOAD ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x2728 JUMPI POP PUSH1 0x13 SLOAD ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x2734 JUMPI POP PUSH1 0x11 SLOAD ISZERO JUMPDEST ISZERO PUSH2 0x273B JUMPI JUMP JUMPDEST PUSH1 0xD DUP1 SLOAD PUSH1 0xE SSTORE PUSH1 0xF DUP1 SLOAD PUSH1 0x10 SSTORE PUSH1 0x11 DUP1 SLOAD PUSH1 0x12 SSTORE PUSH1 0x13 DUP1 SLOAD PUSH1 0x15 SSTORE PUSH1 0x0 SWAP4 DUP5 SWAP1 SSTORE SWAP2 DUP4 SWAP1 SSTORE SWAP1 DUP3 SWAP1 SSTORE SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCBE DUP3 DUP5 PUSH2 0x2DA3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x2786 DUP8 PUSH2 0x1D77 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP16 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP6 SWAP12 POP SWAP4 SWAP10 POP SWAP2 SWAP8 POP SWAP6 POP SWAP4 POP SWAP2 POP PUSH2 0x27B8 SWAP1 DUP9 PUSH2 0x1DC6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE PUSH1 0x1 SWAP1 MSTORE KECCAK256 SLOAD PUSH2 0x27E7 SWAP1 DUP8 PUSH2 0x1DC6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP12 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP11 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x2816 SWAP1 DUP7 PUSH2 0x1D6B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH2 0x2838 DUP2 PUSH2 0x2A32 JUMP JUMPDEST PUSH2 0x2842 DUP5 DUP4 PUSH2 0x2ABA JUMP JUMPDEST DUP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP10 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP6 PUSH1 0x40 MLOAD PUSH2 0x2887 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x28AC DUP8 PUSH2 0x1D77 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP16 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP6 SWAP12 POP SWAP4 SWAP10 POP SWAP2 SWAP8 POP SWAP6 POP SWAP4 POP SWAP2 POP PUSH2 0x28DE SWAP1 DUP8 PUSH2 0x1DC6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP12 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE SWAP2 DUP12 AND DUP2 MSTORE PUSH1 0x2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH2 0x2914 SWAP1 DUP5 PUSH2 0x1D6B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE PUSH1 0x1 SWAP1 MSTORE KECCAK256 SLOAD PUSH2 0x2816 SWAP1 DUP7 PUSH2 0x1D6B JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x2955 DUP8 PUSH2 0x1D77 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP16 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP6 SWAP12 POP SWAP4 SWAP10 POP SWAP2 SWAP8 POP SWAP6 POP SWAP4 POP SWAP2 POP PUSH2 0x27E7 SWAP1 DUP8 PUSH2 0x1DC6 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x2999 DUP8 PUSH2 0x1D77 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP16 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP6 SWAP12 POP SWAP4 SWAP10 POP SWAP2 SWAP8 POP SWAP6 POP SWAP4 POP SWAP2 POP PUSH2 0x29CB SWAP1 DUP9 PUSH2 0x1DC6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE PUSH1 0x1 SWAP1 MSTORE KECCAK256 SLOAD PUSH2 0x28DE SWAP1 DUP8 PUSH2 0x1DC6 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBD2 PUSH1 0x64 PUSH2 0x204E PUSH1 0xD SLOAD DUP6 PUSH2 0x2768 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBD2 PUSH1 0x64 PUSH2 0x204E PUSH1 0xF SLOAD DUP6 PUSH2 0x2768 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2A3C PUSH2 0x1D3C JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x2A4A DUP4 DUP4 PUSH2 0x2768 JUMP JUMPDEST ADDRESS PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP PUSH2 0x2A67 SWAP1 DUP3 PUSH2 0x1D6B JUMP JUMPDEST ADDRESS PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE PUSH1 0x5 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x1EE7 JUMPI ADDRESS PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x2AA5 SWAP1 DUP5 PUSH2 0x1D6B JUMP JUMPDEST ADDRESS PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH2 0x2AC7 SWAP1 DUP4 PUSH2 0x1DC6 JUMP JUMPDEST PUSH1 0x8 SSTORE PUSH1 0x9 SLOAD PUSH2 0x2AD7 SWAP1 DUP3 PUSH2 0x1D6B JUMP JUMPDEST PUSH1 0x9 SSTORE POP POP JUMP JUMPDEST DUP1 CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x2AEE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2B05 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xCBE DUP2 PUSH2 0x2E71 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2B22 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0xCBE DUP2 PUSH2 0x2E71 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2B40 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x2B4B DUP2 PUSH2 0x2E71 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x2B5B DUP2 PUSH2 0x2E71 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2B7B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x2B86 DUP2 PUSH2 0x2E71 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0x2B96 DUP2 PUSH2 0x2E71 JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2BBA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x2BC5 DUP2 PUSH2 0x2E71 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2BE5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xCBE DUP3 PUSH2 0x2ADE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2C00 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2C1A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH2 0x2C2A PUSH1 0x20 DUP5 ADD PUSH2 0x2ADE JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2C48 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 MLOAD SWAP3 POP PUSH1 0x20 DUP5 ADD MLOAD SWAP2 POP PUSH1 0x40 DUP5 ADD MLOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2C8E JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x2C72 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x2CA0 JUMPI PUSH1 0x0 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x22 SWAP1 DUP3 ADD MSTORE PUSH32 0x4F6E6C792061646D696E206F7220616E7469206D616E6167657220616C6C6F77 PUSH1 0x40 DUP3 ADD MSTORE PUSH2 0x1959 PUSH1 0xF2 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD DUP8 DUP4 MSTORE PUSH1 0x20 DUP8 DUP2 DUP6 ADD MSTORE PUSH1 0xA0 PUSH1 0x40 DUP6 ADD MSTORE DUP2 DUP8 MLOAD DUP1 DUP5 MSTORE PUSH1 0xC0 DUP7 ADD SWAP2 POP DUP3 DUP10 ADD SWAP4 POP PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2D48 JUMPI DUP5 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE SWAP4 DUP4 ADD SWAP4 SWAP2 DUP4 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x2D23 JUMP JUMPDEST POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP7 SWAP1 SWAP7 AND PUSH1 0x60 DUP6 ADD MSTORE POP POP POP PUSH1 0x80 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x2D7C JUMPI PUSH2 0x2D7C PUSH2 0x2E2F JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x2D9E JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x2DBD JUMPI PUSH2 0x2DBD PUSH2 0x2E2F JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x2DD4 JUMPI PUSH2 0x2DD4 PUSH2 0x2E2F JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x2DED JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x2E0E JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x2E28 JUMPI PUSH2 0x2E28 PUSH2 0x2E2F JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x18A7 JUMPI PUSH1 0x0 DUP1 REVERT INVALID TIMESTAMP GASLIMIT POP ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220616D6F756E7420657863656564 PUSH20 0x20616C6C6F77616E636542455032303A20646563 PUSH19 0x656173656420616C6C6F77616E63652062656C PUSH16 0x77207A65726FA2646970667358221220 KECCAK256 SWAP6 JUMPI PUSH10 0xF4DC6C0AF072BA702647 PUSH13 0xBA804CFB8D88C7106EC059D436 BALANCE DUP8 0xEA JUMPI PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMapi;:::-;;:::i;:::-;;4585:81;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5503:158;;;;;;;;;;-1:-1:-1;5503:158:9;;;;;:::i;:::-;;:::i;:::-;;;4241:14:10;;4234:22;4216:41;;4204:2;4189:18;5503:158:9;4076:187:10;1947:38:9;;;;;;;;;;;;;;;;;;;15381:25:10;;;15369:2;15354:18;1947:38:9;15235:177:10;6915:85:9;;;;;;;;;;-1:-1:-1;6983:10:9;;6915:85;;4850:93;;;;;;;;;;-1:-1:-1;4929:7:9;;4850:93;;2175:41;;;;;;;;;;-1:-1:-1;2175:41:9;;;;-1:-1:-1;;;;;2175:41:9;;;;;;-1:-1:-1;;;;;2959:32:10;;;2941:51;;2929:2;2914:18;2175:41:9;2795:203:10;1706:30:9;;;;;;;;;;;;;;;;1555:32;;;;;;;;;;;;;;;;5667:431;;;;;;;;;;-1:-1:-1;5667:431:9;;;;;:::i;:::-;;:::i;7859:249::-;;;;;;;;;;-1:-1:-1;7859:249:9;;;;;:::i;:::-;;:::i;4763:81::-;;;;;;;;;;-1:-1:-1;4828:9:9;;4763:81;;4828:9;;;;16868:36:10;;16856:2;16841:18;4763:81:9;16726:184:10;8571:466:9;;;;;;;;;;-1:-1:-1;8571:466:9;;;;;:::i;:::-;;:::i;6104:289::-;;;;;;;;;;-1:-1:-1;6104:289:9;;;;;:::i;:::-;;:::i;1294:26::-;;;;;;;;;;;;;;;;7006:375;;;;;;;;;;-1:-1:-1;7006:375:9;;;;;:::i;:::-;;:::i;22407:109::-;;;;;;;;;;-1:-1:-1;22407:109:9;;;;;:::i;:::-;;:::i;7387:466::-;;;;;;;;;;-1:-1:-1;7387:466:9;;;;;:::i;:::-;;:::i;23120:196::-;;;;;;;;;;-1:-1:-1;23120:196:9;;;;;:::i;:::-;;:::i;24832:229::-;;;;;;;;;;-1:-1:-1;24832:229:9;;;;;:::i;:::-;;:::i;2284:41::-;;;;;;;;;;-1:-1:-1;2284:41:9;;;;-1:-1:-1;;;2284:41:9;;;;;;8114:451;;;;;;;;;;-1:-1:-1;8114:451:9;;;;;:::i;:::-;;:::i;13948:122::-;;;;;;;;;;-1:-1:-1;13948:122:9;;;;;:::i;:::-;-1:-1:-1;;;;;14036:27:9;14013:4;14036:27;;;:18;:27;;;;;;;;;13948:122;1991:28;;;;;;;;;;-1:-1:-1;1991:28:9;;;;;;;;23918:221;;;;;;;;;;-1:-1:-1;23918:221:9;;;;;:::i;:::-;;:::i;22636:110::-;;;;;;;;;;-1:-1:-1;22636:110:9;;;;;:::i;:::-;;:::i;4472:107::-;;;;;;;;;;-1:-1:-1;4472:107:9;;;;;:::i;:::-;;:::i;2222:28::-;;;;;;;;;;-1:-1:-1;2222:28:9;;;;-1:-1:-1;;;;;2222:28:9;;;1882:59;;;;;;;;;;;;1937:4;1882:59;;1374:32;;;;;;;;;;;;;;;;4949:195;;;;;;;;;;-1:-1:-1;4949:195:9;;;;;:::i;:::-;;:::i;1831:101:0:-;;;;;;;;;;;;;:::i;4340:126:9:-;;;;;;;;;;;;;:::i;1593:30::-;;;;;;;;;;-1:-1:-1;1593:30:9;;;;-1:-1:-1;;;;;1593:30:9;;;1826:31;;;;;;;;;;;;;;;;3950:27;;;;;;;;;;-1:-1:-1;3950:27:9;;;;-1:-1:-1;;;;;3950:27:9;;;1742:36;;;;;;;;;;;;;;;;6791:118;;;;;;;;;;-1:-1:-1;6791:118:9;;;;;:::i;:::-;-1:-1:-1;;;;;6882:20:9;6859:4;6882:20;;;:11;:20;;;;;;;;;6791:118;1201:85:0;;;;;;;;;;-1:-1:-1;1247:7:0;1273:6;-1:-1:-1;;;;;1273:6:0;1201:85;;22918:196:9;;;;;;;;;;-1:-1:-1;22918:196:9;;;;;:::i;:::-;;:::i;4672:85::-;;;;;;;;;;;;;:::i;24336:316::-;;;;;;;;;;-1:-1:-1;24336:316:9;;;;;:::i;:::-;;:::i;6399:386::-;;;;;;;;;;-1:-1:-1;6399:386:9;;;;;:::i;:::-;;:::i;5150:164::-;;;;;;;;;;-1:-1:-1;5150:164:9;;;;;:::i;:::-;;:::i;23691:221::-;;;;;;;;;;-1:-1:-1;23691:221:9;;;;;:::i;:::-;;:::i;1472:27::-;;;;;;;;;;;;;;;;25067:225;;;;;;;;;;-1:-1:-1;25067:225:9;;;;;:::i;:::-;;:::i;24658:168::-;;;;;;;;;;-1:-1:-1;24658:168:9;;;;;:::i;:::-;;:::i;1784:36::-;;;;;;;;;;;;;;;;23322:166;;;;;;;;;;-1:-1:-1;23322:166:9;;;;;:::i;:::-;;:::i;24145:185::-;;;;;;;;;;-1:-1:-1;24145:185:9;;;;;:::i;:::-;;:::i;2142:26::-;;;;;;;;;;-1:-1:-1;2142:26:9;;;;;;;-1:-1:-1;;;;;2142:26:9;;;2089;;;;;;;;;;-1:-1:-1;2089:26:9;;;;;;;;5320:177;;;;;;;;;;-1:-1:-1;5320:177:9;;;;;:::i;:::-;-1:-1:-1;;;;;5463:18:9;;;5433:7;5463:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;5320:177;3983:28;;;;;;;;;;-1:-1:-1;3983:28:9;;;;-1:-1:-1;;;3983:28:9;;;;;;22522:108;;;;;;;;;;-1:-1:-1;22522:108:9;;;;;:::i;:::-;;:::i;23494:191::-;;;;;;;;;;-1:-1:-1;23494:191:9;;;;;:::i;:::-;;:::i;2081:198:0:-;;;;;;;;;;-1:-1:-1;2081:198:0;;;;;:::i;:::-;;:::i;22752:160:9:-;1094:13:0;:11;:13::i;:::-;22841:2:9::1;22831:6;:12;;22823:56;;;::::0;-1:-1:-1;;;22823:56:9;;5534:2:10;22823:56:9::1;::::0;::::1;5516:21:10::0;5573:2;5553:18;;;5546:30;5612:33;5592:18;;;5585:61;5663:18;;22823:56:9::1;;;;;;;;;22889:7;:16:::0;22752:160::o;4585:81::-;4622:13;4654:5;4647:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4585:81;:::o;5503:158::-;5578:4;5594:39;719:10:3;5617:7:9;5626:6;5594:8;:39::i;:::-;-1:-1:-1;5650:4:9;5503:158;;;;;:::o;5667:431::-;5795:4;5811:36;5821:6;5829:9;5840:6;5811:9;:36::i;:::-;5857:213;5879:6;719:10:3;5925:135:9;5980:6;5925:135;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5925:19:9;;;;;;:11;:19;;;;;;;;719:10:3;5925:33:9;;;;;;;;;;:37;:135::i;:::-;5857:8;:213::i;:::-;-1:-1:-1;6087:4:9;5667:431;;;;;:::o;7859:249::-;7926:7;7964;;7953;:18;;7945:73;;;;-1:-1:-1;;;7945:73:9;;7875:2:10;7945:73:9;;;7857:21:10;7914:2;7894:18;;;7887:30;7953:34;7933:18;;;7926:62;-1:-1:-1;;;8004:18:10;;;7997:40;8054:19;;7945:73:9;7673:406:10;7945:73:9;8028:19;8050:10;:8;:10::i;:::-;8028:32;-1:-1:-1;8077:24:9;:7;8028:32;8077:11;:24::i;:::-;8070:31;7859:249;-1:-1:-1;;;7859:249:9:o;8571:466::-;1094:13:0;:11;:13::i;:::-;-1:-1:-1;;;;;8650:20:9;::::1;;::::0;;;:11:::1;:20;::::0;;;;;::::1;;8642:60;;;::::0;-1:-1:-1;;;8642:60:9;;9104:2:10;8642:60:9::1;::::0;::::1;9086:21:10::0;9143:2;9123:18;;;9116:30;9182:29;9162:18;;;9155:57;9229:18;;8642:60:9::1;8902:351:10::0;8642:60:9::1;8717:9;8712:319;8736:9;:16:::0;8732:20;::::1;8712:319;;;8793:7;-1:-1:-1::0;;;;;8777:23:9::1;:9;8787:1;8777:12;;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;::::1;::::0;-1:-1:-1;;;;;8777:12:9::1;:23;8773:248;;;8835:9;8845:16:::0;;:20:::1;::::0;8864:1:::1;::::0;8845:20:::1;:::i;:::-;8835:31;;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;::::1;::::0;8820:9:::1;:12:::0;;-1:-1:-1;;;;;8835:31:9;;::::1;::::0;8830:1;;8820:12;::::1;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;;;;::::1;:46:::0;;-1:-1:-1;;;;;;8820:46:9::1;-1:-1:-1::0;;;;;8820:46:9;;::::1;;::::0;;8884:16;;::::1;::::0;;:7:::1;:16:::0;;;;;;:20;;;8922:11:::1;:20:::0;;;;:28;;-1:-1:-1;;8922:28:9::1;::::0;;8968:9:::1;:15:::0;;;::::1;;;;:::i;:::-;;::::0;;;::::1;::::0;;;;-1:-1:-1;;8968:15:9;;;;;-1:-1:-1;;;;;;8968:15:9::1;::::0;;;;;8712:319:::1;8571:466:::0;:::o;8773:248::-:1;8754:3:::0;::::1;::::0;::::1;:::i;:::-;;;;8712:319;;;;8571:466:::0;:::o;6104:289::-;719:10:3;6216:4:9;6305:25;;;:11;:25;;;;;;;;-1:-1:-1;;;;;6305:34:9;;;;;;;;;;6216:4;;6236:129;;6284:7;;6305:50;;6344:10;6305:38;:50::i;7006:375::-;719:10:3;7057:14:9;7105:19;;;:11;:19;;;;;;;;7104:20;7096:77;;;;-1:-1:-1;;;7096:77:9;;14215:2:10;7096:77:9;;;14197:21:10;14254:2;14234:18;;;14227:30;14293:34;14273:18;;;14266:62;-1:-1:-1;;;14344:18:10;;;14337:42;14396:19;;7096:77:9;14013:408:10;7096:77:9;7184:15;7213:19;7224:7;7213:10;:19::i;:::-;-1:-1:-1;;;;;;;;;7260:15:9;;;;;;:7;:15;;;;;;7183:49;;-1:-1:-1;7260:28:9;;:15;-1:-1:-1;7183:49:9;7260:19;:28::i;:::-;-1:-1:-1;;;;;7242:15:9;;;;;;:7;:15;;;;;:46;7308:7;;:20;;7320:7;7308:11;:20::i;:::-;7298:7;:30;7351:10;;:23;;7366:7;7351:14;:23::i;:::-;7338:10;:36;-1:-1:-1;;;7006:375:9:o;22407:109::-;1094:13:0;:11;:13::i;:::-;-1:-1:-1;;;;;22475:27:9::1;;::::0;;;:18:::1;:27;::::0;;;;:34;;-1:-1:-1;;22475:34:9::1;22505:4;22475:34;::::0;;22407:109::o;7387:466::-;7502:7;7544;;7533;:18;;7525:62;;;;-1:-1:-1;;;7525:62:9;;10633:2:10;7525:62:9;;;10615:21:10;10672:2;10652:18;;;10645:30;10711:33;10691:18;;;10684:61;10762:18;;7525:62:9;10431:355:10;7525:62:9;7602:17;7597:250;;7636:15;7665:19;7676:7;7665:10;:19::i;:::-;-1:-1:-1;7635:49:9;;-1:-1:-1;7698:14:9;;-1:-1:-1;;;;;7698:14:9;7597:250;7746:23;7781:19;7792:7;7781:10;:19::i;:::-;-1:-1:-1;7743:57:9;;-1:-1:-1;7814:22:9;;-1:-1:-1;;;;;7814:22:9;23120:196;1094:13:0;:11;:13::i;:::-;23227:2:9::1;23211:12;:18;;23203:68;;;::::0;-1:-1:-1;;;23203:68:9;;9874:2:10;23203:68:9::1;::::0;::::1;9856:21:10::0;9913:2;9893:18;;;9886:30;9952:34;9932:18;;;9925:62;-1:-1:-1;;;10003:18:10;;;9996:35;10048:19;;23203:68:9::1;9672:401:10::0;23203:68:9::1;23281:13;:28:::0;23120:196::o;24832:229::-;1247:7:0;1273:6;-1:-1:-1;;;;;1273:6:0;24908:10:9;:21;;:50;;-1:-1:-1;24947:11:9;;;;;-1:-1:-1;;;;;24947:11:9;24933:10;:25;24908:50;24887:131;;;;-1:-1:-1;;;24887:131:9;;;;;;;:::i;:::-;25028:16;:26;;-1:-1:-1;;25028:26:9;;;;;;;;;;24832:229::o;8114:451::-;1094:13:0;:11;:13::i;:::-;8225:15:9::1;::::0;-1:-1:-1;;;;;8206:35:9;;::::1;8225:15:::0;::::1;8206:35;;8185:116;;;::::0;-1:-1:-1;;;8185:116:9;;13812:2:10;8185:116:9::1;::::0;::::1;13794:21:10::0;13851:2;13831:18;;;13824:30;13890:34;13870:18;;;13863:62;-1:-1:-1;;;13941:18:10;;;13934:32;13983:19;;8185:116:9::1;13610:398:10::0;8185:116:9::1;-1:-1:-1::0;;;;;8320:20:9;::::1;;::::0;;;:11:::1;:20;::::0;;;;;::::1;;8319:21;8311:61;;;::::0;-1:-1:-1;;;8311:61:9;;9104:2:10;8311:61:9::1;::::0;::::1;9086:21:10::0;9143:2;9123:18;;;9116:30;9182:29;9162:18;;;9155:57;9229:18;;8311:61:9::1;8902:351:10::0;8311:61:9::1;-1:-1:-1::0;;;;;8386:16:9;::::1;8405:1;8386:16:::0;;;:7:::1;:16;::::0;;;;;:20;8382:107:::1;;-1:-1:-1::0;;;;;8461:16:9;::::1;;::::0;;;:7:::1;:16;::::0;;;;;8441:37:::1;::::0;:19:::1;:37::i;:::-;-1:-1:-1::0;;;;;8422:16:9;::::1;;::::0;;;:7:::1;:16;::::0;;;;:56;8382:107:::1;-1:-1:-1::0;;;;;8498:20:9::1;;::::0;;;:11:::1;:20;::::0;;;;:27;;-1:-1:-1;;8498:27:9::1;8521:4;8498:27:::0;;::::1;::::0;;;8535:9:::1;:23:::0;;;;::::1;::::0;;;;;;::::1;::::0;;-1:-1:-1;;;;;;8535:23:9::1;::::0;;::::1;::::0;;8114:451::o;23918:221::-;1094:13:0;:11;:13::i;:::-;24037:2:9::1;24017:16;:22;;24009:77;;;::::0;-1:-1:-1;;;24009:77:9;;10993:2:10;24009:77:9::1;::::0;::::1;10975:21:10::0;11032:2;11012:18;;;11005:30;11071:34;11051:18;;;11044:62;-1:-1:-1;;;11122:18:10;;;11115:40;11172:19;;24009:77:9::1;10791:406:10::0;24009:77:9::1;24096:17;:36:::0;23918:221::o;22636:110::-;1094:13:0;:11;:13::i;:::-;22712:15:9::1;:27:::0;;-1:-1:-1;;;;;;22712:27:9::1;-1:-1:-1::0;;;;;22712:27:9;;;::::1;::::0;;;::::1;::::0;;22636:110::o;4472:107::-;1094:13:0;:11;:13::i;:::-;4544:9:9::1;:28:::0;;-1:-1:-1;;;;;;4544:28:9::1;-1:-1:-1::0;;;;;4544:28:9;;;::::1;::::0;;;::::1;::::0;;4472:107::o;4949:195::-;-1:-1:-1;;;;;5038:20:9;;5015:7;5038:20;;;:11;:20;;;;;;;;5034:49;;;-1:-1:-1;;;;;;5067:16:9;;;;;:7;:16;;;;;;;4949:195::o;5034:49::-;-1:-1:-1;;;;;5120:16:9;;;;;;:7;:16;;;;;;5100:37;;:19;:37::i;1831:101:0:-;1094:13;:11;:13::i;:::-;1895:30:::1;1922:1;1895:18;:30::i;:::-;1831:101::o:0;4340:126:9:-;1094:13:0;:11;:13::i;:::-;4409:16:9::1;::::0;-1:-1:-1;;;4409:16:9;::::1;;;4408:17;4400:26;;;::::0;::::1;;4436:16;:23:::0;;-1:-1:-1;;;;4436:23:9::1;-1:-1:-1::0;;;4436:23:9::1;::::0;;4340:126::o;22918:196::-;1094:13:0;:11;:13::i;:::-;23025:2:9::1;23009:12;:18;;23001:68;;;::::0;-1:-1:-1;;;23001:68:9;;15031:2:10;23001:68:9::1;::::0;::::1;15013:21:10::0;15070:2;15050:18;;;15043:30;15109:34;15089:18;;;15082:62;-1:-1:-1;;;15160:18:10;;;15153:35;15205:19;;23001:68:9::1;14829:401:10::0;23001:68:9::1;23079:13;:28:::0;22918:196::o;4672:85::-;4711:13;4743:7;4736:14;;;;;:::i;24336:316::-;1094:13:0;:11;:13::i;:::-;24454:1:9::1;24432:18;:23;;24424:81;;;::::0;-1:-1:-1;;;24424:81:9;;9460:2:10;24424:81:9::1;::::0;::::1;9442:21:10::0;9499:2;9479:18;;;9472:30;9538:34;9518:18;;;9511:62;-1:-1:-1;;;9589:18:10;;;9582:43;9642:19;;24424:81:9::1;9258:409:10::0;24424:81:9::1;24545:2;24523:18;:24;;24515:80;;;::::0;-1:-1:-1;;;24515:80:9;;12170:2:10;24515:80:9::1;::::0;::::1;12152:21:10::0;12209:2;12189:18;;;12182:30;12248:34;12228:18;;;12221:62;-1:-1:-1;;;12299:18:10;;;12292:41;12350:19;;24515:80:9::1;11968:407:10::0;24515:80:9::1;24605:19;:40:::0;24336:316::o;6399:386::-;6516:4;6536:221;719:10:3;6584:7:9;6605:142;6661:15;6605:142;;;;;;;;;;;;;;;;;719:10:3;6605:25:9;;;;:11;:25;;;;;;;;-1:-1:-1;;;;;6605:34:9;;;;;;;;;;;;:38;:142::i;5150:164::-;5228:4;5244:42;719:10:3;5268:9:9;5279:6;5244:9;:42::i;23691:221::-;1094:13:0;:11;:13::i;:::-;23810:2:9::1;23790:16;:22;;23782:77;;;::::0;-1:-1:-1;;;23782:77:9;;8693:2:10;23782:77:9::1;::::0;::::1;8675:21:10::0;8732:2;8712:18;;;8705:30;8771:34;8751:18;;;8744:62;-1:-1:-1;;;8822:18:10;;;8815:40;8872:19;;23782:77:9::1;8491:406:10::0;23782:77:9::1;23869:17;:36:::0;23691:221::o;25067:225::-;1247:7:0;1273:6;-1:-1:-1;;;;;1273:6:0;25141:10:9;:21;;:50;;-1:-1:-1;25180:11:9;;;;;-1:-1:-1;;;;;25180:11:9;25166:10;:25;25141:50;25120:131;;;;-1:-1:-1;;;25120:131:9;;;;;;;:::i;:::-;25261:14;:24;;-1:-1:-1;;25261:24:9;;;;;;;;;;25067:225::o;24658:168::-;1094:13:0;:11;:13::i;:::-;24734:21:9::1;:32:::0;;;::::1;;-1:-1:-1::0;;;24734:32:9::1;-1:-1:-1::0;;;;24734:32:9;;::::1;;::::0;;24781:38:::1;::::0;::::1;::::0;::::1;::::0;24758:8;4241:14:10;4234:22;4216:41;;4204:2;4189:18;;4076:187;24781:38:9::1;;;;;;;;24658:168:::0;:::o;23322:166::-;1094:13:0;:11;:13::i;:::-;23414:2:9::1;23403:7;:13;;23395:58;;;::::0;-1:-1:-1;;;23395:58:9;;7108:2:10;23395:58:9::1;::::0;::::1;7090:21:10::0;;;7127:18;;;7120:30;7186:34;7166:18;;;7159:62;7238:18;;23395:58:9::1;6906:356:10::0;23395:58:9::1;23463:8;:18:::0;23322:166::o;24145:185::-;1094:13:0;:11;:13::i;:::-;24246:2:9::1;24232:10;:16;;24224:65;;;::::0;-1:-1:-1;;;24224:65:9;;11404:2:10;24224:65:9::1;::::0;::::1;11386:21:10::0;11443:2;11423:18;;;11416:30;11482:34;11462:18;;;11455:62;-1:-1:-1;;;11533:18:10;;;11526:34;11577:19;;24224:65:9::1;11202:400:10::0;24224:65:9::1;24299:11;:24:::0;24145:185::o;22522:108::-;1094:13:0;:11;:13::i;:::-;-1:-1:-1;;;;;22588:27:9::1;22618:5;22588:27:::0;;;:18:::1;:27;::::0;;;;:35;;-1:-1:-1;;22588:35:9::1;::::0;;22522:108::o;23494:191::-;1094:13:0;:11;:13::i;:::-;23598:2:9::1;23583:11;:17;;23575:67;;;::::0;-1:-1:-1;;;23575:67:9;;7469:2:10;23575:67:9::1;::::0;::::1;7451:21:10::0;7508:2;7488:18;;;7481:30;7547:34;7527:18;;;7520:62;-1:-1:-1;;;7598:18:10;;;7591:35;7643:19;;23575:67:9::1;7267:401:10::0;23575:67:9::1;23652:12;:26:::0;23494:191::o;2081:198:0:-;1094:13;:11;:13::i;:::-;-1:-1:-1;;;;;2169:22:0;::::1;2161:73;;;::::0;-1:-1:-1;;;2161:73:0;;8286:2:10;2161:73:0::1;::::0;::::1;8268:21:10::0;8325:2;8305:18;;;8298:30;8364:34;8344:18;;;8337:62;-1:-1:-1;;;8415:18:10;;;8408:36;8461:19;;2161:73:0::1;8084:402:10::0;2161:73:0::1;2244:28;2263:8;2244:18;:28::i;:::-;2081:198:::0;:::o;1359:130::-;1247:7;1273:6;-1:-1:-1;;;;;1273:6:0;719:10:3;1422:23:0;1414:68;;;;-1:-1:-1;;;1414:68:0;;11809:2:10;1414:68:0;;;11791:21:10;;;11828:18;;;11821:30;11887:34;11867:18;;;11860:62;11939:18;;1414:68:0;11607:356:10;14076:361:9;-1:-1:-1;;;;;14198:19:9;;14190:68;;;;-1:-1:-1;;;14190:68:9;;6703:2:10;14190:68:9;;;6685:21:10;6742:2;6722:18;;;6715:30;6781:34;6761:18;;;6754:62;-1:-1:-1;;;6832:18:10;;;6825:34;6876:19;;14190:68:9;6501:400:10;14190:68:9;-1:-1:-1;;;;;14276:21:9;;14268:68;;;;-1:-1:-1;;;14268:68:9;;14628:2:10;14268:68:9;;;14610:21:10;14667:2;14647:18;;;14640:30;14706:34;14686:18;;;14679:62;-1:-1:-1;;;14757:18:10;;;14750:32;14799:19;;14268:68:9;14426:398:10;14268:68:9;-1:-1:-1;;;;;14347:18:9;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;14398:32;;15381:25:10;;;14398:32:9;;15354:18:10;14398:32:9;;;;;;;14076:361;;;:::o;14443:1845::-;-1:-1:-1;;;;;14560:18:9;;14552:68;;;;-1:-1:-1;;;14552:68:9;;5894:2:10;14552:68:9;;;5876:21:10;5933:2;5913:18;;;5906:30;5972:34;5952:18;;;5945:62;-1:-1:-1;;;6023:18:10;;;6016:35;6068:19;;14552:68:9;5692:401:10;14552:68:9;14647:1;14638:6;:10;14630:64;;;;-1:-1:-1;;;14630:64:9;;12582:2:10;14630:64:9;;;12564:21:10;12621:2;12601:18;;;12594:30;12660:34;12640:18;;;12633:62;-1:-1:-1;;;12711:18:10;;;12704:39;12760:19;;14630:64:9;12380:405:10;14630:64:9;14705:38;14726:4;14732:2;14736:6;14705:20;:38::i;:::-;14758:14;;;;:39;;;;-1:-1:-1;14784:13:9;;-1:-1:-1;;;;;14776:21:9;;;14784:13;;14776:21;14758:39;14754:131;;;14821:24;;;;:16;:24;;;;;;;;14813:61;;;;-1:-1:-1;;;14813:61:9;;10280:2:10;14813:61:9;;;10262:21:10;10319:2;10299:18;;;10292:30;10358:26;10338:18;;;10331:54;10402:18;;14813:61:9;10078:348:10;14813:61:9;15173:28;15204:24;15222:4;15204:9;:24::i;:::-;15289:29;;15173:55;;-1:-1:-1;15265:53:9;;;;;;;15345:52;;-1:-1:-1;15381:16:9;;-1:-1:-1;;;15381:16:9;;;;15380:17;15345:52;:89;;;;-1:-1:-1;15421:13:9;;-1:-1:-1;;;;;15413:21:9;;;15421:13;;15413:21;;15345:89;:126;;;;-1:-1:-1;15450:21:9;;-1:-1:-1;;;15450:21:9;;;;15345:126;15328:309;;;15519:29;;15496:52;;15590:36;15605:20;15590:14;:36::i;:::-;15712:32;15727:4;15733:2;15737:6;15712:14;:32::i;:::-;15759:16;;;;15755:527;;;15791:18;1937:4;15823:19;;15813:7;;:29;;;;:::i;:::-;15812:78;;;;:::i;:::-;15914:13;;15791:99;;-1:-1:-1;;;;;;15908:19:9;;;15914:13;;15908:19;15904:368;;;15986:10;15976:6;:20;;15947:137;;;;-1:-1:-1;;;15947:137:9;;13397:2:10;15947:137:9;;;13379:21:10;13436:2;13416:18;;;13409:30;13475:34;13455:18;;;13448:62;-1:-1:-1;;;13526:18:10;;;13519:44;13580:19;;15947:137:9;13195:410:10;15947:137:9;15904:368;;;16169:10;16152:13;16162:2;16152:9;:13::i;:::-;:27;;16123:134;;;;-1:-1:-1;;;16123:134:9;;12992:2:10;16123:134:9;;;12974:21:10;13031:2;13011:18;;;13004:30;13070:34;13050:18;;;13043:62;-1:-1:-1;;;13121:18:10;;;13114:34;13165:19;;16123:134:9;12790:400:10;16123:134:9;15777:505;15755:527;14542:1746;;14443:1845;;;:::o;4959:231:4:-;5075:7;5134:12;5126:6;;;;5118:29;;;;-1:-1:-1;;;5118:29:4;;;;;;;;:::i;:::-;-1:-1:-1;;;5168:5:4;;;4959:231::o;11584:161:9:-;11626:7;11646:15;11663;11682:19;:17;:19::i;:::-;11645:56;;-1:-1:-1;11645:56:9;-1:-1:-1;11718:20:9;11645:56;;11718:11;:20::i;:::-;11711:27;;;;11584:161;:::o;3850:96:4:-;3908:7;3934:5;3938:1;3934;:5;:::i;2755:96::-;2813:7;2839:5;2843:1;2839;:5;:::i;10027:605:9:-;10123:7;10144;10165;10186;10207;10228;10261:23;10286:12;10300:18;10322:42;10347:7;10322:11;:42::i;:::-;10260:104;;;;;;10375:15;10392:23;10417:12;10433:108;10458:7;10479:4;10497:10;10521;:8;:10::i;:::-;10433:11;:108::i;:::-;10374:167;;;;-1:-1:-1;10374:167:9;;-1:-1:-1;10591:15:9;;-1:-1:-1;10608:4:9;;-1:-1:-1;10614:10:9;;-1:-1:-1;10027:605:9;;-1:-1:-1;;;;;10027:605:9:o;3122:96:4:-;3180:7;3206:5;3210:1;3206;:5;:::i;2433:187:0:-;2506:16;2525:6;;-1:-1:-1;;;;;2541:17:0;;;-1:-1:-1;;;;;;2541:17:0;;;;;;2573:40;;2525:6;;;;;;;2573:40;;2506:16;2573:40;2496:124;2433:187;:::o;4018:316:9:-;-1:-1:-1;;;;;4143:18:9;;;;:38;;-1:-1:-1;;;;;;4165:16:9;;;4143:38;4139:51;;;4018:316;;;:::o;4139:51::-;4204:16;;-1:-1:-1;;;4204:16:9;;;;4203:17;:53;;;;-1:-1:-1;4232:9:9;;-1:-1:-1;;;;;4232:9:9;4224:32;;4203:53;4199:128;;;4270:9;;:57;;-1:-1:-1;;;4270:57:9;;4298:10;4270:57;;;3272:34:10;-1:-1:-1;;;;;3342:15:10;;;3322:18;;;3315:43;3394:15;;;3374:18;;;3367:43;3426:18;;;3419:34;;;4270:9:9;;;;:27;;3206:19:10;;4270:57:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4199:128;4018:316;;;:::o;16294:964::-;2845:16;:23;;-1:-1:-1;;;;2845:23:9;-1:-1:-1;;;2845:23:9;;;;16443:27:::1;:20:::0;16468:1:::1;16443:24;:27::i;:::-;16428:42:::0;-1:-1:-1;16480:17:9::1;16500:30;:20:::0;16428:42;16500:24:::1;:30::i;:::-;16480:50:::0;-1:-1:-1;16827:21:9::1;16890:22;16907:4:::0;16890:16:::1;:22::i;:::-;17048:18;17069:41;:21;17095:14:::0;17069:25:::1;:41::i;:::-;17048:62;;17157:35;17170:9;17181:10;17157:12;:35::i;:::-;17208:43;::::0;;16604:25:10;;;16660:2;16645:18;;16638:34;;;16688:18;;;16681:34;;;17208:43:9::1;::::0;16592:2:10;16577:18;17208:43:9::1;;;;;;;-1:-1:-1::0;;2889:16:9;:24;;-1:-1:-1;;;;2889:24:9;;;-1:-1:-1;;;16294:964:9:o;18421:2009::-;-1:-1:-1;;;;;18548:26:9;;;;;;:18;:26;;;;;;;;;:59;;-1:-1:-1;;;;;;18578:29:9;;;;;;:18;:29;;;;;;;;18548:59;18544:184;;;18623:14;:12;:14::i;:::-;18544:184;;;18671:13;;-1:-1:-1;;;;;18658:26:9;;;18671:13;;18658:26;18654:74;;;18700:17;13017:7;;;12999:15;:25;13058:13;;;13034:21;:37;13100:8;;;13081:16;:27;13142:13;;;13118:21;:37;13176:11;;13166:21;;;13213:17;;13197:33;;;13256:17;;13240:33;;;13294:12;;13283:23;;12954:359;18700:17;18791:15;18809:29;18834:3;18809:20;18820:8;;18809:6;:10;;:20;;;;:::i;:::-;:24;;:29::i;:::-;18791:47;;18848:20;18871:34;18901:3;18871:25;18882:13;;18871:6;:10;;:25;;;;:::i;:34::-;-1:-1:-1;;;;;18920:19:9;;;;;;:11;:19;;;;;;18848:57;;-1:-1:-1;18920:19:9;;:46;;;;-1:-1:-1;;;;;;18944:22:9;;;;;;:11;:22;;;;;;;;18943:23;18920:46;18916:938;;;18982:143;19021:6;19045:9;19073:37;19097:12;19073:19;:6;19084:7;19073:10;:19::i;:::-;:23;;:37::i;:::-;18982:21;:143::i;:::-;18916:938;;;-1:-1:-1;;;;;19147:19:9;;;;;;:11;:19;;;;;;;;19146:20;:46;;;;-1:-1:-1;;;;;;19170:22:9;;;;;;:11;:22;;;;;;;;19146:46;19142:712;;;19208:141;19245:6;19269:9;19297:37;19321:12;19297:19;:6;19308:7;19297:10;:19::i;:37::-;19208:19;:141::i;19142:712::-;-1:-1:-1;;;;;19371:19:9;;;;;;:11;:19;;;;;;;;19370:20;:47;;;;-1:-1:-1;;;;;;19395:22:9;;;;;;:11;:22;;;;;;;;19394:23;19370:47;19366:488;;;19433:77;19451:6;19459:9;19471:37;19495:12;19471:19;:6;19482:7;19471:10;:19::i;:37::-;19433:17;:77::i;19366:488::-;-1:-1:-1;;;;;19531:19:9;;;;;;:11;:19;;;;;;;;:45;;;;-1:-1:-1;;;;;;19554:22:9;;;;;;:11;:22;;;;;;;;19531:45;19527:327;;;19592:143;19631:6;19655:9;19683:37;19707:12;19683:19;:6;19694:7;19683:10;:19::i;:37::-;19592:21;:143::i;19527:327::-;19766:77;19784:6;19792:9;19804:37;19828:12;19804:19;:6;19815:7;19804:10;:19::i;19766:77::-;19957:1;19947:7;:11;;;19968:13;:17;;;19996:46;;20014:6;;20034:7;19996:17;:46::i;:::-;20078:15;;20052:56;;20070:6;;-1:-1:-1;;;;;20078:15:9;20095:12;20052:17;:56::i;:::-;20170:15;;20160:7;:25;20211:21;;20195:13;:37;-1:-1:-1;;;;;20260:26:9;;-1:-1:-1;20260:26:9;;;:18;:26;;;;;;;;;:71;;-1:-1:-1;;;;;;20302:29:9;;;;;;:18;:29;;;;;;;;20260:71;:113;;;-1:-1:-1;20360:13:9;;-1:-1:-1;;;;;20347:26:9;;;20360:13;;20347:26;20260:113;20243:181;;;20398:15;13789;;13779:7;:25;13830:21;;13814:13;:37;13872:16;;13861:8;:27;13914:21;;13898:13;:37;13736:206;11751:562;11848:7;;11883;;11802;;;;;11900:301;11924:9;:16;11920:20;;11900:301;;;11989:7;11965;:21;11973:9;11983:1;11973:12;;;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;11973:12:9;11965:21;;;;;;;;;;;;;:31;;:66;;;12024:7;12000;:21;12008:9;12018:1;12008:12;;;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;12008:12:9;12000:21;;;;;;;;;;;;;:31;11965:66;11961:113;;;12057:7;;12066;;12049:25;;;;;;;11751:562;;:::o;11961:113::-;12098:34;12110:7;:21;12118:9;12128:1;12118:12;;;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;12118:12:9;12110:21;;;;;;;;;;;;;12098:7;;:11;:34::i;:::-;12088:44;;12156:34;12168:7;:21;12176:9;12186:1;12176:12;;;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;12176:12:9;12168:21;;;;;;;;;;;;;12156:7;;:11;:34::i;:::-;12146:44;-1:-1:-1;11942:3:9;;;;:::i;:::-;;;;11900:301;;;-1:-1:-1;12236:7:9;;12224;;:20;;:11;:20::i;:::-;12214:7;:30;12210:61;;;12254:7;;12263;;12246:25;;;;;;11751:562;;:::o;12210:61::-;12289:7;;12298;;-1:-1:-1;11751:562:9;-1:-1:-1;11751:562:9:o;10638:399::-;10735:7;10756;10777;10809:12;10824:24;10840:7;10824:15;:24::i;:::-;10809:39;;10858:18;10879:30;10901:7;10879:21;:30::i;:::-;10858:51;-1:-1:-1;10919:23:9;10945:33;10858:51;10945:17;:7;10957:4;10945:11;:17::i;:33::-;10919:59;11013:4;;-1:-1:-1;11019:10:9;;-1:-1:-1;10638:399:9;;-1:-1:-1;;;10638:399:9:o;11043:535::-;11233:7;;;;11325:24;:7;11337:11;11325;:24::i;:::-;11307:42;-1:-1:-1;11359:12:9;11374:21;:4;11383:11;11374:8;:21::i;:::-;11359:36;-1:-1:-1;11405:18:9;11426:27;:10;11441:11;11426:14;:27::i;:::-;11405:48;-1:-1:-1;11463:23:9;11489:33;11405:48;11489:17;:7;11501:4;11489:11;:17::i;:33::-;11540:7;;;;-1:-1:-1;11566:4:9;;-1:-1:-1;11043:535:9;;-1:-1:-1;;;;;;;11043:535:9:o;17264:573::-;17412:16;;;17426:1;17412:16;;;;;;;;17388:21;;17412:16;;;;;;;;;;-1:-1:-1;17412:16:9;17388:40;;17456:4;17438;17443:1;17438:7;;;;;;;;:::i;:::-;-1:-1:-1;;;;;17438:23:9;;;:7;;;;;;;;;;:23;;;;17481:15;;:22;;;-1:-1:-1;;;17481:22:9;;;;:15;;;;;:20;;:22;;;;;17438:7;;17481:22;;;;;:15;:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;17471:4;17476:1;17471:7;;;;;;;;:::i;:::-;-1:-1:-1;;;;;17471:32:9;;;:7;;;;;;;;;:32;17546:15;;17514:62;;17531:4;;17546:15;17564:11;17514:8;:62::i;:::-;17612:15;;:218;;-1:-1:-1;;;17612:218:9;;-1:-1:-1;;;;;17612:15:9;;;;:66;;:218;;17692:11;;17612:15;;17760:4;;17786;;17805:15;;17612:218;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17843:500;18021:15;;17989:62;;18006:4;;-1:-1:-1;;;;;18021:15:9;18039:11;17989:8;:62::i;:::-;18091:15;;-1:-1:-1;;;;;18091:15:9;:31;18130:9;18162:4;18181:11;18091:15;;18290:7;1247::0;1273:6;-1:-1:-1;;;;;1273:6:0;;1201:85;18290:7:9;18091:245;;;;;;-1:-1:-1;;;;;;18091:245:9;;;-1:-1:-1;;;;;3823:15:10;;;18091:245:9;;;3805:34:10;3855:18;;;3848:34;;;;3898:18;;;3891:34;;;;3941:18;;;3934:34;4005:15;;;3984:19;;;3977:44;18311:15:9;4037:19:10;;;4030:35;3739:19;;18091:245:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;13319:411::-;13365:7;;:12;:34;;;;-1:-1:-1;13381:13:9;;:18;13365:34;:56;;;;-1:-1:-1;13403:13:9;;:18;13365:56;:73;;;;-1:-1:-1;13425:8:9;;:13;13365:73;13361:98;;;13319:411::o;13361:98::-;13487:7;;;13469:15;:25;13528:13;;;13504:21;:37;13570:8;;;13551:16;:27;13612:13;;;13588:21;:37;-1:-1:-1;13636:11:9;;;;13657:17;;;;13684;;;;13711:12;13319:411::o;3465:96:4:-;3523:7;3549:5;3553:1;3549;:5;:::i;21734:667:9:-;21879:15;21908:23;21945:12;21971:23;22008:12;22034:18;22065:19;22076:7;22065:10;:19::i;:::-;-1:-1:-1;;;;;22112:15:9;;;;;;:7;:15;;;;;;21865:219;;-1:-1:-1;21865:219:9;;-1:-1:-1;21865:219:9;;-1:-1:-1;21865:219:9;-1:-1:-1;21865:219:9;-1:-1:-1;21865:219:9;-1:-1:-1;22112:28:9;;22132:7;22112:19;:28::i;:::-;-1:-1:-1;;;;;22094:15:9;;;;;;:7;:15;;;;;;;;:46;;;;22168:7;:15;;;;:28;;22188:7;22168:19;:28::i;:::-;-1:-1:-1;;;;;22150:15:9;;;;;;;:7;:15;;;;;;:46;;;;22227:18;;;;;;;:39;;22250:15;22227:22;:39::i;:::-;-1:-1:-1;;;;;22206:18:9;;;;;;:7;:18;;;;;:60;22276:26;22291:10;22276:14;:26::i;:::-;22312:23;22324:4;22330;22312:11;:23::i;:::-;22367:9;-1:-1:-1;;;;;22350:44:9;22359:6;-1:-1:-1;;;;;22350:44:9;;22378:15;22350:44;;;;15381:25:10;;15369:2;15354:18;;15235:177;22350:44:9;;;;;;;;21855:546;;;;;;21734:667;;;:::o;21049:679::-;21192:15;21221:23;21258:12;21284:23;21321:12;21347:18;21378:19;21389:7;21378:10;:19::i;:::-;-1:-1:-1;;;;;21425:15:9;;;;;;:7;:15;;;;;;21178:219;;-1:-1:-1;21178:219:9;;-1:-1:-1;21178:219:9;;-1:-1:-1;21178:219:9;-1:-1:-1;21178:219:9;-1:-1:-1;21178:219:9;-1:-1:-1;21425:28:9;;21178:219;21425:19;:28::i;:::-;-1:-1:-1;;;;;21407:15:9;;;;;;;:7;:15;;;;;;;;:46;;;;21484:18;;;;;:7;:18;;;;;:39;;21507:15;21484:22;:39::i;:::-;-1:-1:-1;;;;;21463:18:9;;;;;;:7;:18;;;;;;;;:60;;;;21554:7;:18;;;;:39;;21577:15;21554:22;:39::i;20436:607::-;20577:15;20606:23;20643:12;20669:23;20706:12;20732:18;20763:19;20774:7;20763:10;:19::i;:::-;-1:-1:-1;;;;;20810:15:9;;;;;;:7;:15;;;;;;20563:219;;-1:-1:-1;20563:219:9;;-1:-1:-1;20563:219:9;;-1:-1:-1;20563:219:9;-1:-1:-1;20563:219:9;-1:-1:-1;20563:219:9;-1:-1:-1;20810:28:9;;20563:219;20810:19;:28::i;9043:737::-;9188:15;9217:23;9254:12;9280:23;9317:12;9343:18;9374:19;9385:7;9374:10;:19::i;:::-;-1:-1:-1;;;;;9421:15:9;;;;;;:7;:15;;;;;;9174:219;;-1:-1:-1;9174:219:9;;-1:-1:-1;9174:219:9;;-1:-1:-1;9174:219:9;-1:-1:-1;9174:219:9;-1:-1:-1;9174:219:9;-1:-1:-1;9421:28:9;;9441:7;9421:19;:28::i;:::-;-1:-1:-1;;;;;9403:15:9;;;;;;:7;:15;;;;;;;;:46;;;;9477:7;:15;;;;:28;;9497:7;9477:19;:28::i;12674:128::-;12738:7;12764:31;12789:5;12764:20;12776:7;;12764;:11;;:20;;;;:::i;12808:140::-;12878:7;12904:37;12935:5;12904:26;12916:13;;12904:7;:11;;:26;;;;:::i;12319:349::-;12381:19;12403:10;:8;:10::i;:::-;12381:32;-1:-1:-1;12423:18:9;12444:27;:10;12381:32;12444:14;:27::i;:::-;12522:4;12506:22;;;;:7;:22;;;;;;12423:48;;-1:-1:-1;12506:38:9;;12423:48;12506:26;:38::i;:::-;12497:4;12481:22;;;;:7;:22;;;;;;;;:63;;;;12558:11;:26;;;;;;12554:107;;;12639:4;12623:22;;;;:7;:22;;;;;;:38;;12650:10;12623:26;:38::i;:::-;12614:4;12598:22;;;;:7;:22;;;;;:63;12371:297;;12319:349;:::o;9877:144::-;9954:7;;:17;;9966:4;9954:11;:17::i;:::-;9944:7;:27;9994:10;;:20;;10009:4;9994:14;:20::i;:::-;9981:10;:33;-1:-1:-1;;9877:144:9:o;14:160:10:-;79:20;;135:13;;128:21;118:32;;108:60;;164:1;161;154:12;108:60;14:160;;;:::o;179:247::-;238:6;291:2;279:9;270:7;266:23;262:32;259:52;;;307:1;304;297:12;259:52;346:9;333:23;365:31;390:5;365:31;:::i;431:251::-;501:6;554:2;542:9;533:7;529:23;525:32;522:52;;;570:1;567;560:12;522:52;602:9;596:16;621:31;646:5;621:31;:::i;687:388::-;755:6;763;816:2;804:9;795:7;791:23;787:32;784:52;;;832:1;829;822:12;784:52;871:9;858:23;890:31;915:5;890:31;:::i;:::-;940:5;-1:-1:-1;997:2:10;982:18;;969:32;1010:33;969:32;1010:33;:::i;:::-;1062:7;1052:17;;;687:388;;;;;:::o;1080:456::-;1157:6;1165;1173;1226:2;1214:9;1205:7;1201:23;1197:32;1194:52;;;1242:1;1239;1232:12;1194:52;1281:9;1268:23;1300:31;1325:5;1300:31;:::i;:::-;1350:5;-1:-1:-1;1407:2:10;1392:18;;1379:32;1420:33;1379:32;1420:33;:::i;:::-;1080:456;;1472:7;;-1:-1:-1;;;1526:2:10;1511:18;;;;1498:32;;1080:456::o;1541:315::-;1609:6;1617;1670:2;1658:9;1649:7;1645:23;1641:32;1638:52;;;1686:1;1683;1676:12;1638:52;1725:9;1712:23;1744:31;1769:5;1744:31;:::i;:::-;1794:5;1846:2;1831:18;;;;1818:32;;-1:-1:-1;;;1541:315:10:o;1861:180::-;1917:6;1970:2;1958:9;1949:7;1945:23;1941:32;1938:52;;;1986:1;1983;1976:12;1938:52;2009:26;2025:9;2009:26;:::i;2046:180::-;2105:6;2158:2;2146:9;2137:7;2133:23;2129:32;2126:52;;;2174:1;2171;2164:12;2126:52;-1:-1:-1;2197:23:10;;2046:180;-1:-1:-1;2046:180:10:o;2231:248::-;2296:6;2304;2357:2;2345:9;2336:7;2332:23;2328:32;2325:52;;;2373:1;2370;2363:12;2325:52;2409:9;2396:23;2386:33;;2438:35;2469:2;2458:9;2454:18;2438:35;:::i;:::-;2428:45;;2231:248;;;;;:::o;2484:306::-;2572:6;2580;2588;2641:2;2629:9;2620:7;2616:23;2612:32;2609:52;;;2657:1;2654;2647:12;2609:52;2686:9;2680:16;2670:26;;2736:2;2725:9;2721:18;2715:25;2705:35;;2780:2;2769:9;2765:18;2759:25;2749:35;;2484:306;;;;;:::o;4730:597::-;4842:4;4871:2;4900;4889:9;4882:21;4932:6;4926:13;4975:6;4970:2;4959:9;4955:18;4948:34;5000:1;5010:140;5024:6;5021:1;5018:13;5010:140;;;5119:14;;;5115:23;;5109:30;5085:17;;;5104:2;5081:26;5074:66;5039:10;;5010:140;;;5168:6;5165:1;5162:13;5159:91;;;5238:1;5233:2;5224:6;5213:9;5209:22;5205:31;5198:42;5159:91;-1:-1:-1;5311:2:10;5290:15;-1:-1:-1;;5286:29:10;5271:45;;;;5318:2;5267:54;;4730:597;-1:-1:-1;;;4730:597:10:o;6098:398::-;6300:2;6282:21;;;6339:2;6319:18;;;6312:30;6378:34;6373:2;6358:18;;6351:62;-1:-1:-1;;;6444:2:10;6429:18;;6422:32;6486:3;6471:19;;6098:398::o;15417:980::-;15679:4;15727:3;15716:9;15712:19;15758:6;15747:9;15740:25;15784:2;15822:6;15817:2;15806:9;15802:18;15795:34;15865:3;15860:2;15849:9;15845:18;15838:31;15889:6;15924;15918:13;15955:6;15947;15940:22;15993:3;15982:9;15978:19;15971:26;;16032:2;16024:6;16020:15;16006:29;;16053:1;16063:195;16077:6;16074:1;16071:13;16063:195;;;16142:13;;-1:-1:-1;;;;;16138:39:10;16126:52;;16233:15;;;;16198:12;;;;16174:1;16092:9;16063:195;;;-1:-1:-1;;;;;;;16314:32:10;;;;16309:2;16294:18;;16287:60;-1:-1:-1;;;16378:3:10;16363:19;16356:35;16275:3;15417:980;-1:-1:-1;;;15417:980:10:o;16915:128::-;16955:3;16986:1;16982:6;16979:1;16976:13;16973:39;;;16992:18;;:::i;:::-;-1:-1:-1;17028:9:10;;16915:128::o;17048:217::-;17088:1;17114;17104:132;;17158:10;17153:3;17149:20;17146:1;17139:31;17193:4;17190:1;17183:15;17221:4;17218:1;17211:15;17104:132;-1:-1:-1;17250:9:10;;17048:217::o;17270:168::-;17310:7;17376:1;17372;17368:6;17364:14;17361:1;17358:21;17353:1;17346:9;17339:17;17335:45;17332:71;;;17383:18;;:::i;:::-;-1:-1:-1;17423:9:10;;17270:168::o;17443:125::-;17483:4;17511:1;17508;17505:8;17502:34;;;17516:18;;:::i;:::-;-1:-1:-1;17553:9:10;;17443:125::o;17573:380::-;17652:1;17648:12;;;;17695;;;17716:61;;17770:4;17762:6;17758:17;17748:27;;17716:61;17823:2;17815:6;17812:14;17792:18;17789:38;17786:161;;;17869:10;17864:3;17860:20;17857:1;17850:31;17904:4;17901:1;17894:15;17932:4;17929:1;17922:15;17786:161;;17573:380;;;:::o;17958:135::-;17997:3;-1:-1:-1;;18018:17:10;;18015:43;;;18038:18;;:::i;:::-;-1:-1:-1;18085:1:10;18074:13;;17958:135::o;18098:127::-;18159:10;18154:3;18150:20;18147:1;18140:31;18190:4;18187:1;18180:15;18214:4;18211:1;18204:15;18230:127;18291:10;18286:3;18282:20;18279:1;18272:31;18322:4;18319:1;18312:15;18346:4;18343:1;18336:15;18362:127;18423:10;18418:3;18414:20;18411:1;18404:31;18454:4;18451:1;18444:15;18478:4;18475:1;18468:15;18626:131;-1:-1:-1;;;;;18701:31:10;;18691:42;;18681:70;;18747:1;18744;18737:12"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "2408200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"MAX_HOLDING_PERCENTS_DIVISOR()": "328",
								"_burnFee()": "2407",
								"_liquidityFee()": "2364",
								"_marketingFee()": "2386",
								"_maxHoldingPercents()": "2364",
								"_sellBurnFee()": "2407",
								"_sellLiquidityFee()": "2363",
								"_sellMarketingFee()": "2406",
								"_sellTaxFee()": "2364",
								"_taxFee()": "2364",
								"allowance(address,address)": "infinite",
								"antiBotEnabled()": "2421",
								"antiManager()": "2437",
								"antiWhaleEnabled()": "2422",
								"antisnipe()": "2471",
								"antisnipeDisable()": "2393",
								"approve(address,uint256)": "24705",
								"balanceOf(address)": "infinite",
								"decimals()": "2379",
								"decreaseAllowance(address,uint256)": "infinite",
								"deliver(uint256)": "infinite",
								"excludeFromFee(address)": "26881",
								"excludeFromReward(address)": "infinite",
								"includeInFee(address)": "26850",
								"includeInReward(address)": "infinite",
								"increaseAllowance(address,uint256)": "27105",
								"isExcludedFromFee(address)": "2633",
								"isExcludedFromReward(address)": "2633",
								"marketingWallet()": "2427",
								"name()": "infinite",
								"owner()": "2443",
								"pancakeV2Pair()": "2448",
								"pancakeV2Router()": "2472",
								"reflectionFromToken(uint256,bool)": "infinite",
								"renounceOwnership()": "infinite",
								"setAntiBot(bool)": "28892",
								"setAntiWhale(bool)": "28937",
								"setAntisnipeAddress(address)": "26818",
								"setAntisnipeDisable()": "28755",
								"setBurnFeePercent(uint256)": "24647",
								"setLiquidityFeePercent(uint256)": "24581",
								"setMarketingFeePercent(uint256)": "24604",
								"setMarketingWallet(address)": "26796",
								"setMaxHoldingPercents(uint256)": "24651",
								"setSellBurnFeePercent(uint256)": "24624",
								"setSellLiquidityFeePercent(uint256)": "24648",
								"setSellMarketingFeePercent(uint256)": "24604",
								"setSellTaxFeePercent(uint256)": "24581",
								"setSwapAndLiquifyEnabled(bool)": "27882",
								"setTaxFeePercent(uint256)": "24584",
								"swapAndLiquifyEnabled()": "2461",
								"symbol()": "infinite",
								"tokenFromReflection(uint256)": "infinite",
								"totalFees()": "2383",
								"totalSupply()": "2405",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "infinite"
							},
							"internal": {
								"_approve(address,address,uint256)": "infinite",
								"_beforeTokenTransfer(address,address,uint256)": "infinite",
								"_getCurrentSupply()": "infinite",
								"_getRValues(uint256,uint256,uint256,uint256)": "infinite",
								"_getRate()": "infinite",
								"_getTValues(uint256)": "infinite",
								"_getValues(uint256)": "infinite",
								"_reflectFee(uint256,uint256)": "infinite",
								"_takeLiquidity(uint256)": "infinite",
								"_tokenTransfer(address,address,uint256)": "infinite",
								"_transfer(address,address,uint256)": "infinite",
								"_transferBothExcluded(address,address,uint256)": "infinite",
								"_transferFromExcluded(address,address,uint256)": "infinite",
								"_transferStandard(address,address,uint256)": "infinite",
								"_transferToExcluded(address,address,uint256)": "infinite",
								"activateSellFee()": "infinite",
								"addLiquidity(uint256,uint256)": "infinite",
								"calculateLiquidityFee(uint256)": "infinite",
								"calculateTaxFee(uint256)": "infinite",
								"removeAllFee()": "125382",
								"restoreAllFee()": "infinite",
								"swapAndLiquify(uint256)": "infinite",
								"swapTokensForEth(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 541,
									"end": 25294,
									"name": "PUSH",
									"source": 9,
									"value": "80"
								},
								{
									"begin": 541,
									"end": 25294,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 541,
									"end": 25294,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 1043,
									"end": 1065,
									"name": "PUSH",
									"source": 9,
									"value": "1921A082258A73BFC3240000"
								},
								{
									"begin": 1017,
									"end": 1065,
									"name": "PUSH",
									"source": 9,
									"value": "7"
								},
								{
									"begin": 1017,
									"end": 1065,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1017,
									"end": 1065,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1017,
									"end": 1065,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 1105,
									"end": 1118,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 1105,
									"end": 1118,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1105,
									"end": 1118,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "2"
								},
								{
									"begin": 1105,
									"end": 1118,
									"name": "JUMP",
									"source": 9,
									"value": "[in]"
								},
								{
									"begin": 1105,
									"end": 1118,
									"name": "tag",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 1105,
									"end": 1118,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1098,
									"end": 1119,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "3"
								},
								{
									"begin": 1098,
									"end": 1119,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1098,
									"end": 1119,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 1098,
									"end": 1119,
									"name": "JUMP",
									"source": 9,
									"value": "[in]"
								},
								{
									"begin": 1098,
									"end": 1119,
									"name": "tag",
									"source": 9,
									"value": "3"
								},
								{
									"begin": 1098,
									"end": 1119,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1071,
									"end": 1120,
									"name": "PUSH",
									"source": 9,
									"value": "8"
								},
								{
									"begin": 1071,
									"end": 1120,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 1159,
									"end": 1196,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 1159,
									"end": 1196,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1159,
									"end": 1196,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 1159,
									"end": 1196,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1159,
									"end": 1196,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1159,
									"end": 1196,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1159,
									"end": 1196,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1159,
									"end": 1196,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 1159,
									"end": 1196,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 1159,
									"end": 1196,
									"name": "PUSH",
									"source": 9,
									"value": "C"
								},
								{
									"begin": 1159,
									"end": 1196,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1159,
									"end": 1196,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1159,
									"end": 1196,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "26B2BA3096B837B5B2B6B7B7"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1159,
									"end": 1196,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 1159,
									"end": 1196,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1159,
									"end": 1196,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 1159,
									"end": 1196,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1159,
									"end": 1196,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 1159,
									"end": 1196,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1159,
									"end": 1196,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 1159,
									"end": 1196,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "5"
								},
								{
									"begin": 1159,
									"end": 1196,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 1159,
									"end": 1196,
									"name": "PUSH",
									"source": 9,
									"value": "A"
								},
								{
									"begin": 1159,
									"end": 1196,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 1159,
									"end": 1196,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "6"
								},
								{
									"begin": 1159,
									"end": 1196,
									"name": "JUMP",
									"source": 9,
									"value": "[in]"
								},
								{
									"begin": 1159,
									"end": 1196,
									"name": "tag",
									"source": 9,
									"value": "5"
								},
								{
									"begin": 1159,
									"end": 1196,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1202,
									"end": 1236,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 1202,
									"end": 1236,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1202,
									"end": 1236,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 1202,
									"end": 1236,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1202,
									"end": 1236,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1202,
									"end": 1236,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1202,
									"end": 1236,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1202,
									"end": 1236,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 1202,
									"end": 1236,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 1202,
									"end": 1236,
									"name": "PUSH",
									"source": 9,
									"value": "7"
								},
								{
									"begin": 1202,
									"end": 1236,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1202,
									"end": 1236,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1202,
									"end": 1236,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "3837B5B2B6B7B7"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "C9"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1202,
									"end": 1236,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 1202,
									"end": 1236,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1202,
									"end": 1236,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 1202,
									"end": 1236,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1202,
									"end": 1236,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 1202,
									"end": 1236,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1202,
									"end": 1236,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 1202,
									"end": 1236,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "7"
								},
								{
									"begin": 1202,
									"end": 1236,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 1202,
									"end": 1236,
									"name": "PUSH",
									"source": 9,
									"value": "B"
								},
								{
									"begin": 1202,
									"end": 1236,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 1202,
									"end": 1236,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "6"
								},
								{
									"begin": 1202,
									"end": 1236,
									"name": "JUMP",
									"source": 9,
									"value": "[in]"
								},
								{
									"begin": 1202,
									"end": 1236,
									"name": "tag",
									"source": 9,
									"value": "7"
								},
								{
									"begin": 1202,
									"end": 1236,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1242,
									"end": 1270,
									"name": "PUSH",
									"source": 9,
									"value": "C"
								},
								{
									"begin": 1242,
									"end": 1270,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1242,
									"end": 1270,
									"name": "SLOAD",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1242,
									"end": 1270,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 1268,
									"end": 1270,
									"name": "PUSH",
									"source": 9,
									"value": "12"
								},
								{
									"begin": 1242,
									"end": 1270,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1242,
									"end": 1270,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1242,
									"end": 1270,
									"name": "OR",
									"source": 9
								},
								{
									"begin": 1242,
									"end": 1270,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1242,
									"end": 1270,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 1242,
									"end": 1270,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 1319,
									"end": 1320,
									"name": "PUSH",
									"source": 9,
									"value": "2"
								},
								{
									"begin": 1294,
									"end": 1320,
									"name": "PUSH",
									"source": 9,
									"value": "D"
								},
								{
									"begin": 1294,
									"end": 1320,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1294,
									"end": 1320,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1294,
									"end": 1320,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 1326,
									"end": 1367,
									"name": "PUSH",
									"source": 9,
									"value": "E"
								},
								{
									"begin": 1326,
									"end": 1367,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1326,
									"end": 1367,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1326,
									"end": 1367,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 1242,
									"end": 1270,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 1374,
									"end": 1406,
									"name": "PUSH",
									"source": 9,
									"value": "F"
								},
								{
									"begin": 1374,
									"end": 1406,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1374,
									"end": 1406,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1374,
									"end": 1406,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 1412,
									"end": 1465,
									"name": "PUSH",
									"source": 9,
									"value": "10"
								},
								{
									"begin": 1412,
									"end": 1465,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1412,
									"end": 1465,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1412,
									"end": 1465,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 1472,
									"end": 1499,
									"name": "PUSH",
									"source": 9,
									"value": "11"
								},
								{
									"begin": 1472,
									"end": 1499,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1472,
									"end": 1499,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1472,
									"end": 1499,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 1505,
									"end": 1548,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 1505,
									"end": 1548,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1505,
									"end": 1548,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1505,
									"end": 1548,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 1555,
									"end": 1587,
									"name": "PUSH",
									"source": 9,
									"value": "13"
								},
								{
									"begin": 1555,
									"end": 1587,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1555,
									"end": 1587,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1555,
									"end": 1587,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 1629,
									"end": 1682,
									"name": "PUSH",
									"source": 9,
									"value": "15"
								},
								{
									"begin": 1629,
									"end": 1682,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1629,
									"end": 1682,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1629,
									"end": 1682,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 1706,
									"end": 1736,
									"name": "PUSH",
									"source": 9,
									"value": "16"
								},
								{
									"begin": 1706,
									"end": 1736,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1706,
									"end": 1736,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1706,
									"end": 1736,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 1742,
									"end": 1778,
									"name": "PUSH",
									"source": 9,
									"value": "17"
								},
								{
									"begin": 1742,
									"end": 1778,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 1742,
									"end": 1778,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1742,
									"end": 1778,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 1742,
									"end": 1778,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 1784,
									"end": 1820,
									"name": "PUSH",
									"source": 9,
									"value": "18"
								},
								{
									"begin": 1784,
									"end": 1820,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1784,
									"end": 1820,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1784,
									"end": 1820,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 1826,
									"end": 1857,
									"name": "PUSH",
									"source": 9,
									"value": "19"
								},
								{
									"begin": 1826,
									"end": 1857,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 1984,
									"end": 1985,
									"name": "PUSH",
									"source": 9,
									"value": "5"
								},
								{
									"begin": 1947,
									"end": 1985,
									"name": "PUSH",
									"source": 9,
									"value": "1A"
								},
								{
									"begin": 1947,
									"end": 1985,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 2284,
									"end": 2325,
									"name": "PUSH",
									"source": 9,
									"value": "1F"
								},
								{
									"begin": 2284,
									"end": 2325,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 2284,
									"end": 2325,
									"name": "SLOAD",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A8"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2284,
									"end": 2325,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 2284,
									"end": 2325,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2284,
									"end": 2325,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 2379,
									"end": 2395,
									"name": "PUSH",
									"source": 9,
									"value": "D3C21BCECCEDA1000000"
								},
								{
									"begin": 2331,
									"end": 2395,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 2331,
									"end": 2395,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2331,
									"end": 2395,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2331,
									"end": 2395,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 2401,
									"end": 2622,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 2401,
									"end": 2622,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 2401,
									"end": 2622,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 2401,
									"end": 2622,
									"name": "PUSH",
									"source": 9,
									"value": "160"
								},
								{
									"begin": 2401,
									"end": 2622,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2401,
									"end": 2622,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 2401,
									"end": 2622,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 2401,
									"end": 2622,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 2441,
									"end": 2446,
									"name": "PUSH",
									"source": 9,
									"value": "1008E"
								},
								{
									"begin": 2401,
									"end": 2622,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2401,
									"end": 2622,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 2456,
									"end": 2462,
									"name": "PUSH",
									"source": 9,
									"value": "1F81C"
								},
								{
									"begin": 2401,
									"end": 2622,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 2401,
									"end": 2622,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2401,
									"end": 2622,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 2401,
									"end": 2622,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 2401,
									"end": 2622,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2401,
									"end": 2622,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 2401,
									"end": 2622,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 2472,
									"end": 2478,
									"name": "PUSH",
									"source": 9,
									"value": "40583"
								},
								{
									"begin": 2401,
									"end": 2622,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2401,
									"end": 2622,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 2401,
									"end": 2622,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 2401,
									"end": 2622,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 2488,
									"end": 2494,
									"name": "PUSH",
									"source": 9,
									"value": "7F447"
								},
								{
									"begin": 2401,
									"end": 2622,
									"name": "PUSH",
									"source": 9,
									"value": "60"
								},
								{
									"begin": 2401,
									"end": 2622,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 2401,
									"end": 2622,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 2401,
									"end": 2622,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 2504,
									"end": 2511,
									"name": "PUSH",
									"source": 9,
									"value": "FFC19"
								},
								{
									"begin": 2401,
									"end": 2622,
									"name": "PUSH",
									"source": 9,
									"value": "80"
								},
								{
									"begin": 2401,
									"end": 2622,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 2401,
									"end": 2622,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 2401,
									"end": 2622,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 2521,
									"end": 2528,
									"name": "PUSH",
									"source": 9,
									"value": "1FD8F0"
								},
								{
									"begin": 2401,
									"end": 2622,
									"name": "PUSH",
									"source": 9,
									"value": "A0"
								},
								{
									"begin": 2401,
									"end": 2622,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 2401,
									"end": 2622,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 2401,
									"end": 2622,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 2538,
									"end": 2545,
									"name": "PUSH",
									"source": 9,
									"value": "3FFFAD"
								},
								{
									"begin": 2401,
									"end": 2622,
									"name": "PUSH",
									"source": 9,
									"value": "C0"
								},
								{
									"begin": 2401,
									"end": 2622,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 2401,
									"end": 2622,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 2401,
									"end": 2622,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 2555,
									"end": 2562,
									"name": "PUSH",
									"source": 9,
									"value": "7FF82E"
								},
								{
									"begin": 2401,
									"end": 2622,
									"name": "PUSH",
									"source": 9,
									"value": "E0"
								},
								{
									"begin": 2401,
									"end": 2622,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 2401,
									"end": 2622,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 2401,
									"end": 2622,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 2572,
									"end": 2580,
									"name": "PUSH",
									"source": 9,
									"value": "101863B"
								},
								{
									"begin": 1242,
									"end": 1270,
									"name": "PUSH",
									"source": 9,
									"value": "100"
								},
								{
									"begin": 2401,
									"end": 2622,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 2401,
									"end": 2622,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 2401,
									"end": 2622,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 2590,
									"end": 2598,
									"name": "PUSH",
									"source": 9,
									"value": "200271A"
								},
								{
									"begin": 2401,
									"end": 2622,
									"name": "PUSH",
									"source": 9,
									"value": "120"
								},
								{
									"begin": 2401,
									"end": 2622,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 2401,
									"end": 2622,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 2401,
									"end": 2622,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 2608,
									"end": 2616,
									"name": "PUSH",
									"source": 9,
									"value": "4030D33"
								},
								{
									"begin": 2401,
									"end": 2622,
									"name": "PUSH",
									"source": 9,
									"value": "140"
								},
								{
									"begin": 2401,
									"end": 2622,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 2401,
									"end": 2622,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 2401,
									"end": 2622,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 2401,
									"end": 2622,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "8"
								},
								{
									"begin": 2401,
									"end": 2622,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2401,
									"end": 2622,
									"name": "PUSH",
									"source": 9,
									"value": "21"
								},
								{
									"begin": 2401,
									"end": 2622,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2401,
									"end": 2622,
									"name": "PUSH",
									"source": 9,
									"value": "B"
								},
								{
									"begin": 2401,
									"end": 2622,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "9"
								},
								{
									"begin": 2401,
									"end": 2622,
									"name": "JUMP",
									"source": 9,
									"value": "[in]"
								},
								{
									"begin": 2401,
									"end": 2622,
									"name": "tag",
									"source": 9,
									"value": "8"
								},
								{
									"begin": 2401,
									"end": 2622,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2401,
									"end": 2622,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2926,
									"end": 3944,
									"name": "CALLVALUE",
									"source": 9
								},
								{
									"begin": 2926,
									"end": 3944,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 2926,
									"end": 3944,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 2926,
									"end": 3944,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "10"
								},
								{
									"begin": 2926,
									"end": 3944,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 2926,
									"end": 3944,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 2926,
									"end": 3944,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 2926,
									"end": 3944,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 2926,
									"end": 3944,
									"name": "tag",
									"source": 9,
									"value": "10"
								},
								{
									"begin": 2926,
									"end": 3944,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2926,
									"end": 3944,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2926,
									"end": 3944,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 2926,
									"end": 3944,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 2926,
									"end": 3944,
									"name": "PUSHSIZE",
									"source": 9
								},
								{
									"begin": 2926,
									"end": 3944,
									"name": "CODESIZE",
									"source": 9
								},
								{
									"begin": 2926,
									"end": 3944,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 2926,
									"end": 3944,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 2926,
									"end": 3944,
									"name": "PUSHSIZE",
									"source": 9
								},
								{
									"begin": 2926,
									"end": 3944,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 2926,
									"end": 3944,
									"name": "CODECOPY",
									"source": 9
								},
								{
									"begin": 2926,
									"end": 3944,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2926,
									"end": 3944,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 2926,
									"end": 3944,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 2926,
									"end": 3944,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2926,
									"end": 3944,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2926,
									"end": 3944,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 2926,
									"end": 3944,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "11"
								},
								{
									"begin": 2926,
									"end": 3944,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 2926,
									"end": 3944,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "12"
								},
								{
									"begin": 2926,
									"end": 3944,
									"name": "JUMP",
									"source": 9,
									"value": "[in]"
								},
								{
									"begin": 2926,
									"end": 3944,
									"name": "tag",
									"source": 9,
									"value": "11"
								},
								{
									"begin": 2926,
									"end": 3944,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 936,
									"end": 968,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 719,
									"end": 729,
									"name": "CALLER",
									"source": 3
								},
								{
									"begin": 936,
									"end": 954,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 936,
									"end": 968,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 936,
									"end": 968,
									"name": "tag",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 936,
									"end": 968,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 3063,
									"end": 3078,
									"name": "PUSH",
									"source": 9,
									"value": "14"
								},
								{
									"begin": 3063,
									"end": 3097,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 3063,
									"end": 3097,
									"name": "SLOAD",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3063,
									"end": 3097,
									"name": "AND",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 3063,
									"end": 3097,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 3063,
									"end": 3097,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 3063,
									"end": 3097,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 3063,
									"end": 3097,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 3063,
									"end": 3097,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 3063,
									"end": 3097,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 3063,
									"end": 3097,
									"name": "OR",
									"source": 9
								},
								{
									"begin": 3063,
									"end": 3097,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 3063,
									"end": 3097,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 3063,
									"end": 3097,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 3107,
									"end": 3118,
									"name": "PUSH",
									"source": 9,
									"value": "1D"
								},
								{
									"begin": 3107,
									"end": 3133,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 3107,
									"end": 3133,
									"name": "SLOAD",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "100"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A8"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3107,
									"end": 3133,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 3063,
									"end": 3097,
									"name": "PUSH",
									"source": 9,
									"value": "100"
								},
								{
									"begin": 3107,
									"end": 3133,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 3107,
									"end": 3133,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 3107,
									"end": 3133,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 3107,
									"end": 3133,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 3107,
									"end": 3133,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 3107,
									"end": 3133,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 3107,
									"end": 3133,
									"name": "MUL",
									"source": 9
								},
								{
									"begin": 3107,
									"end": 3133,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 3107,
									"end": 3133,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 3107,
									"end": 3133,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 3107,
									"end": 3133,
									"name": "OR",
									"source": 9
								},
								{
									"begin": 3107,
									"end": 3133,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 3107,
									"end": 3133,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 3167,
									"end": 3174,
									"name": "PUSH",
									"source": 9,
									"value": "8"
								},
								{
									"begin": 3167,
									"end": 3174,
									"name": "SLOAD",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 3151,
									"end": 3163,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "21"
								},
								{
									"begin": 719,
									"end": 729,
									"name": "CALLER",
									"source": 3
								},
								{
									"begin": 719,
									"end": 729,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 640,
									"end": 736,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 3151,
									"end": 3163,
									"name": "tag",
									"source": 9,
									"value": "21"
								},
								{
									"begin": 3151,
									"end": 3163,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 3143,
									"end": 3164,
									"name": "AND",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 3143,
									"end": 3164,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 3143,
									"end": 3164,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 3143,
									"end": 3164,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 3143,
									"end": 3164,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 3143,
									"end": 3164,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 3143,
									"end": 3164,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 3143,
									"end": 3164,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 3143,
									"end": 3164,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 3143,
									"end": 3164,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 3143,
									"end": 3164,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 3143,
									"end": 3164,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 3143,
									"end": 3164,
									"name": "KECCAK256",
									"source": 9
								},
								{
									"begin": 3143,
									"end": 3174,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 3143,
									"end": 3174,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 3143,
									"end": 3174,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 3143,
									"end": 3174,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3271,
									"end": 3287,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 3271,
									"end": 3295,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 3271,
									"end": 3295,
									"name": "PUSH",
									"source": 9,
									"value": "C45A0155"
								},
								{
									"begin": 3271,
									"end": 3297,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 3271,
									"end": 3297,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 3271,
									"end": 3297,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 3271,
									"end": 3297,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFF"
								},
								{
									"begin": 3271,
									"end": 3297,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 3271,
									"end": 3297,
									"name": "PUSH",
									"source": 9,
									"value": "E0"
								},
								{
									"begin": 3271,
									"end": 3297,
									"name": "SHL",
									"source": 9
								},
								{
									"begin": 3271,
									"end": 3297,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 3271,
									"end": 3297,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 3271,
									"end": 3297,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 3271,
									"end": 3297,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 3271,
									"end": 3297,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 3271,
									"end": 3297,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 3271,
									"end": 3297,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 3271,
									"end": 3297,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 3271,
									"end": 3297,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 3271,
									"end": 3297,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 3271,
									"end": 3297,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 3271,
									"end": 3297,
									"name": "DUP7",
									"source": 9
								},
								{
									"begin": 3271,
									"end": 3297,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 3271,
									"end": 3297,
									"name": "EXTCODESIZE",
									"source": 9
								},
								{
									"begin": 3271,
									"end": 3297,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 3271,
									"end": 3297,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 3271,
									"end": 3297,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 3271,
									"end": 3297,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "22"
								},
								{
									"begin": 3271,
									"end": 3297,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 3271,
									"end": 3297,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 3271,
									"end": 3297,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 3271,
									"end": 3297,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 3271,
									"end": 3297,
									"name": "tag",
									"source": 9,
									"value": "22"
								},
								{
									"begin": 3271,
									"end": 3297,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3271,
									"end": 3297,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3271,
									"end": 3297,
									"name": "GAS",
									"source": 9
								},
								{
									"begin": 3271,
									"end": 3297,
									"name": "STATICCALL",
									"source": 9
								},
								{
									"begin": 3271,
									"end": 3297,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 3271,
									"end": 3297,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 3271,
									"end": 3297,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 3271,
									"end": 3297,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 3271,
									"end": 3297,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 3271,
									"end": 3297,
									"name": "RETURNDATASIZE",
									"source": 9
								},
								{
									"begin": 3271,
									"end": 3297,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 3271,
									"end": 3297,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 3271,
									"end": 3297,
									"name": "RETURNDATACOPY",
									"source": 9
								},
								{
									"begin": 3271,
									"end": 3297,
									"name": "RETURNDATASIZE",
									"source": 9
								},
								{
									"begin": 3271,
									"end": 3297,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 3271,
									"end": 3297,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 3271,
									"end": 3297,
									"name": "tag",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 3271,
									"end": 3297,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3271,
									"end": 3297,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3271,
									"end": 3297,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3271,
									"end": 3297,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3271,
									"end": 3297,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3271,
									"end": 3297,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 3271,
									"end": 3297,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 3271,
									"end": 3297,
									"name": "RETURNDATASIZE",
									"source": 9
								},
								{
									"begin": 3271,
									"end": 3297,
									"name": "PUSH",
									"source": 9,
									"value": "1F"
								},
								{
									"begin": 3271,
									"end": 3297,
									"name": "NOT",
									"source": 9
								},
								{
									"begin": 3271,
									"end": 3297,
									"name": "PUSH",
									"source": 9,
									"value": "1F"
								},
								{
									"begin": 3271,
									"end": 3297,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 3271,
									"end": 3297,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 3271,
									"end": 3297,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 3271,
									"end": 3297,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 3271,
									"end": 3297,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 3271,
									"end": 3297,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 3271,
									"end": 3297,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 3271,
									"end": 3297,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 3271,
									"end": 3297,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3271,
									"end": 3297,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 3271,
									"end": 3297,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 3271,
									"end": 3297,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 3271,
									"end": 3297,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "25"
								},
								{
									"begin": 3271,
									"end": 3297,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 3271,
									"end": 3297,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 3271,
									"end": 3297,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "26"
								},
								{
									"begin": 3271,
									"end": 3297,
									"name": "JUMP",
									"source": 9,
									"value": "[in]"
								},
								{
									"begin": 3271,
									"end": 3297,
									"name": "tag",
									"source": 9,
									"value": "25"
								},
								{
									"begin": 3271,
									"end": 3297,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 3253,
									"end": 3309,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 3253,
									"end": 3309,
									"name": "PUSH",
									"source": 9,
									"value": "C9C65396"
								},
								{
									"begin": 3331,
									"end": 3335,
									"name": "ADDRESS",
									"source": 9
								},
								{
									"begin": 3350,
									"end": 3366,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 3350,
									"end": 3371,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 3350,
									"end": 3371,
									"name": "PUSH",
									"source": 9,
									"value": "AD5C4648"
								},
								{
									"begin": 3350,
									"end": 3373,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 3350,
									"end": 3373,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 3350,
									"end": 3373,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 3350,
									"end": 3373,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFF"
								},
								{
									"begin": 3350,
									"end": 3373,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 3350,
									"end": 3373,
									"name": "PUSH",
									"source": 9,
									"value": "E0"
								},
								{
									"begin": 3350,
									"end": 3373,
									"name": "SHL",
									"source": 9
								},
								{
									"begin": 3350,
									"end": 3373,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 3350,
									"end": 3373,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 3350,
									"end": 3373,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 3350,
									"end": 3373,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 3350,
									"end": 3373,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 3350,
									"end": 3373,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 3350,
									"end": 3373,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 3350,
									"end": 3373,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 3350,
									"end": 3373,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 3350,
									"end": 3373,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 3350,
									"end": 3373,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 3350,
									"end": 3373,
									"name": "DUP7",
									"source": 9
								},
								{
									"begin": 3350,
									"end": 3373,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 3350,
									"end": 3373,
									"name": "EXTCODESIZE",
									"source": 9
								},
								{
									"begin": 3350,
									"end": 3373,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 3350,
									"end": 3373,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 3350,
									"end": 3373,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 3350,
									"end": 3373,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "27"
								},
								{
									"begin": 3350,
									"end": 3373,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 3350,
									"end": 3373,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 3350,
									"end": 3373,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 3350,
									"end": 3373,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 3350,
									"end": 3373,
									"name": "tag",
									"source": 9,
									"value": "27"
								},
								{
									"begin": 3350,
									"end": 3373,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3350,
									"end": 3373,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3350,
									"end": 3373,
									"name": "GAS",
									"source": 9
								},
								{
									"begin": 3350,
									"end": 3373,
									"name": "STATICCALL",
									"source": 9
								},
								{
									"begin": 3350,
									"end": 3373,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 3350,
									"end": 3373,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 3350,
									"end": 3373,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 3350,
									"end": 3373,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "29"
								},
								{
									"begin": 3350,
									"end": 3373,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 3350,
									"end": 3373,
									"name": "RETURNDATASIZE",
									"source": 9
								},
								{
									"begin": 3350,
									"end": 3373,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 3350,
									"end": 3373,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 3350,
									"end": 3373,
									"name": "RETURNDATACOPY",
									"source": 9
								},
								{
									"begin": 3350,
									"end": 3373,
									"name": "RETURNDATASIZE",
									"source": 9
								},
								{
									"begin": 3350,
									"end": 3373,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 3350,
									"end": 3373,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 3350,
									"end": 3373,
									"name": "tag",
									"source": 9,
									"value": "29"
								},
								{
									"begin": 3350,
									"end": 3373,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3350,
									"end": 3373,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3350,
									"end": 3373,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3350,
									"end": 3373,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3350,
									"end": 3373,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3350,
									"end": 3373,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 3350,
									"end": 3373,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 3350,
									"end": 3373,
									"name": "RETURNDATASIZE",
									"source": 9
								},
								{
									"begin": 3350,
									"end": 3373,
									"name": "PUSH",
									"source": 9,
									"value": "1F"
								},
								{
									"begin": 3350,
									"end": 3373,
									"name": "NOT",
									"source": 9
								},
								{
									"begin": 3350,
									"end": 3373,
									"name": "PUSH",
									"source": 9,
									"value": "1F"
								},
								{
									"begin": 3350,
									"end": 3373,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 3350,
									"end": 3373,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 3350,
									"end": 3373,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 3350,
									"end": 3373,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 3350,
									"end": 3373,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 3350,
									"end": 3373,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 3350,
									"end": 3373,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 3350,
									"end": 3373,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 3350,
									"end": 3373,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3350,
									"end": 3373,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 3350,
									"end": 3373,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 3350,
									"end": 3373,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 3350,
									"end": 3373,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "30"
								},
								{
									"begin": 3350,
									"end": 3373,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 3350,
									"end": 3373,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 3350,
									"end": 3373,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "26"
								},
								{
									"begin": 3350,
									"end": 3373,
									"name": "JUMP",
									"source": 9,
									"value": "[in]"
								},
								{
									"begin": 3350,
									"end": 3373,
									"name": "tag",
									"source": 9,
									"value": "30"
								},
								{
									"begin": 3350,
									"end": 3373,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3253,
									"end": 3383,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 3253,
									"end": 3383,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3253,
									"end": 3383,
									"name": "PUSH",
									"source": 9,
									"value": "E0"
								},
								{
									"begin": 3253,
									"end": 3383,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 3253,
									"end": 3383,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 3253,
									"end": 3383,
									"name": "SHL",
									"source": 9
								},
								{
									"begin": 3253,
									"end": 3383,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 3253,
									"end": 3383,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 3253,
									"end": 3383,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1051,
									"end": 1066,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 1051,
									"end": 1066,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 1051,
									"end": 1066,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 3253,
									"end": 3383,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 3253,
									"end": 3383,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 3253,
									"end": 3383,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1033,
									"end": 1067,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 1103,
									"end": 1118,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 1103,
									"end": 1118,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 1083,
									"end": 1101,
									"name": "PUSH",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 1083,
									"end": 1101,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1083,
									"end": 1101,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1076,
									"end": 1119,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 968,
									"end": 986,
									"name": "PUSH",
									"source": 10,
									"value": "44"
								},
								{
									"begin": 968,
									"end": 986,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 3253,
									"end": 3383,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 3253,
									"end": 3383,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 3253,
									"end": 3383,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 3253,
									"end": 3383,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 3253,
									"end": 3383,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 3253,
									"end": 3383,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 3253,
									"end": 3383,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 3253,
									"end": 3383,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 3253,
									"end": 3383,
									"name": "DUP8",
									"source": 9
								},
								{
									"begin": 3253,
									"end": 3383,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 3253,
									"end": 3383,
									"name": "EXTCODESIZE",
									"source": 9
								},
								{
									"begin": 3253,
									"end": 3383,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 3253,
									"end": 3383,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 3253,
									"end": 3383,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 3253,
									"end": 3383,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "33"
								},
								{
									"begin": 3253,
									"end": 3383,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 3253,
									"end": 3383,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 3253,
									"end": 3383,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 3253,
									"end": 3383,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 3253,
									"end": 3383,
									"name": "tag",
									"source": 9,
									"value": "33"
								},
								{
									"begin": 3253,
									"end": 3383,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3253,
									"end": 3383,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3253,
									"end": 3383,
									"name": "GAS",
									"source": 9
								},
								{
									"begin": 3253,
									"end": 3383,
									"name": "CALL",
									"source": 9
								},
								{
									"begin": 3253,
									"end": 3383,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 3253,
									"end": 3383,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 3253,
									"end": 3383,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 3253,
									"end": 3383,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "35"
								},
								{
									"begin": 3253,
									"end": 3383,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 3253,
									"end": 3383,
									"name": "RETURNDATASIZE",
									"source": 9
								},
								{
									"begin": 3253,
									"end": 3383,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 3253,
									"end": 3383,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 3253,
									"end": 3383,
									"name": "RETURNDATACOPY",
									"source": 9
								},
								{
									"begin": 3253,
									"end": 3383,
									"name": "RETURNDATASIZE",
									"source": 9
								},
								{
									"begin": 3253,
									"end": 3383,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 3253,
									"end": 3383,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 3253,
									"end": 3383,
									"name": "tag",
									"source": 9,
									"value": "35"
								},
								{
									"begin": 3253,
									"end": 3383,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3253,
									"end": 3383,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3253,
									"end": 3383,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3253,
									"end": 3383,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3253,
									"end": 3383,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3253,
									"end": 3383,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 3253,
									"end": 3383,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 3253,
									"end": 3383,
									"name": "RETURNDATASIZE",
									"source": 9
								},
								{
									"begin": 3253,
									"end": 3383,
									"name": "PUSH",
									"source": 9,
									"value": "1F"
								},
								{
									"begin": 3253,
									"end": 3383,
									"name": "NOT",
									"source": 9
								},
								{
									"begin": 3253,
									"end": 3383,
									"name": "PUSH",
									"source": 9,
									"value": "1F"
								},
								{
									"begin": 3253,
									"end": 3383,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 3253,
									"end": 3383,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 3253,
									"end": 3383,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 3253,
									"end": 3383,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 3253,
									"end": 3383,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 3253,
									"end": 3383,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 3253,
									"end": 3383,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 3253,
									"end": 3383,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 3253,
									"end": 3383,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3253,
									"end": 3383,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 3253,
									"end": 3383,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 3253,
									"end": 3383,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 3253,
									"end": 3383,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "36"
								},
								{
									"begin": 3253,
									"end": 3383,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 3253,
									"end": 3383,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 3253,
									"end": 3383,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "26"
								},
								{
									"begin": 3253,
									"end": 3383,
									"name": "JUMP",
									"source": 9,
									"value": "[in]"
								},
								{
									"begin": 3253,
									"end": 3383,
									"name": "tag",
									"source": 9,
									"value": "36"
								},
								{
									"begin": 3253,
									"end": 3383,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3237,
									"end": 3250,
									"name": "PUSH",
									"source": 9,
									"value": "1F"
								},
								{
									"begin": 3237,
									"end": 3383,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 3237,
									"end": 3383,
									"name": "SLOAD",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3237,
									"end": 3383,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 3237,
									"end": 3383,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 3237,
									"end": 3383,
									"name": "AND",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 3237,
									"end": 3383,
									"name": "SWAP4",
									"source": 9
								},
								{
									"begin": 3237,
									"end": 3383,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 3237,
									"end": 3383,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 3237,
									"end": 3383,
									"name": "OR",
									"source": 9
								},
								{
									"begin": 3237,
									"end": 3383,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 3237,
									"end": 3383,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 3237,
									"end": 3383,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 3444,
									"end": 3459,
									"name": "PUSH",
									"source": 9,
									"value": "1E"
								},
								{
									"begin": 3444,
									"end": 3478,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 3444,
									"end": 3478,
									"name": "SLOAD",
									"source": 9
								},
								{
									"begin": 3444,
									"end": 3478,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 3444,
									"end": 3478,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 3444,
									"end": 3478,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 3444,
									"end": 3478,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 3444,
									"end": 3478,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 3444,
									"end": 3478,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 3444,
									"end": 3478,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 3444,
									"end": 3478,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 3444,
									"end": 3478,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 3444,
									"end": 3478,
									"name": "OR",
									"source": 9
								},
								{
									"begin": 3444,
									"end": 3478,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 3444,
									"end": 3478,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": 3554,
									"end": 3572,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 3573,
									"end": 3580,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "37"
								},
								{
									"begin": 1247,
									"end": 1254,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1273,
									"end": 1279,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1273,
									"end": 1279,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1279,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1201,
									"end": 1286,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 3573,
									"end": 3580,
									"name": "tag",
									"source": 9,
									"value": "37"
								},
								{
									"begin": 3573,
									"end": 3580,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 3554,
									"end": 3581,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 3554,
									"end": 3581,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 3554,
									"end": 3581,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 3554,
									"end": 3581,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 3554,
									"end": 3581,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 3554,
									"end": 3581,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 3554,
									"end": 3581,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 3554,
									"end": 3581,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 3554,
									"end": 3581,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 3554,
									"end": 3581,
									"name": "SWAP4",
									"source": 9
								},
								{
									"begin": 3554,
									"end": 3581,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 3554,
									"end": 3581,
									"name": "SWAP4",
									"source": 9
								},
								{
									"begin": 3554,
									"end": 3581,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 3554,
									"end": 3581,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 3554,
									"end": 3581,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 3554,
									"end": 3581,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 3554,
									"end": 3581,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 3554,
									"end": 3581,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 3554,
									"end": 3581,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 3554,
									"end": 3581,
									"name": "KECCAK256",
									"source": 9
								},
								{
									"begin": 3554,
									"end": 3588,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 3554,
									"end": 3588,
									"name": "SLOAD",
									"source": 9
								},
								{
									"begin": 3554,
									"end": 3588,
									"name": "SWAP6",
									"source": 9
								},
								{
									"begin": 3554,
									"end": 3588,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 3554,
									"end": 3588,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3554,
									"end": 3588,
									"name": "SWAP7",
									"source": 9
								},
								{
									"begin": 3554,
									"end": 3588,
									"name": "DUP8",
									"source": 9
								},
								{
									"begin": 3554,
									"end": 3588,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 3554,
									"end": 3588,
									"name": "OR",
									"source": 9
								},
								{
									"begin": 3554,
									"end": 3588,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 3554,
									"end": 3588,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 3598,
									"end": 3630,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 3598,
									"end": 3630,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 3598,
									"end": 3630,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 3598,
									"end": 3630,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 3598,
									"end": 3630,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 3598,
									"end": 3616,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 3598,
									"end": 3630,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 3598,
									"end": 3630,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 3598,
									"end": 3630,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 3598,
									"end": 3630,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 3598,
									"end": 3630,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 3598,
									"end": 3630,
									"name": "KECCAK256",
									"source": 9
								},
								{
									"begin": 3598,
									"end": 3637,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 3598,
									"end": 3637,
									"name": "SLOAD",
									"source": 9
								},
								{
									"begin": 3598,
									"end": 3637,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 3598,
									"end": 3637,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 3554,
									"end": 3588,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 3598,
									"end": 3637,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 3598,
									"end": 3637,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 3598,
									"end": 3637,
									"name": "OR",
									"source": 9
								},
								{
									"begin": 3598,
									"end": 3637,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 3598,
									"end": 3637,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 3598,
									"end": 3637,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 3674,
									"end": 3678,
									"name": "ADDRESS",
									"source": 9
								},
								{
									"begin": 3647,
									"end": 3680,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 3647,
									"end": 3680,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 3647,
									"end": 3680,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 3647,
									"end": 3680,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 3647,
									"end": 3680,
									"name": "KECCAK256",
									"source": 9
								},
								{
									"begin": 3647,
									"end": 3687,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 3647,
									"end": 3687,
									"name": "SLOAD",
									"source": 9
								},
								{
									"begin": 3647,
									"end": 3687,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 3647,
									"end": 3687,
									"name": "SWAP4",
									"source": 9
								},
								{
									"begin": 3647,
									"end": 3687,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 3647,
									"end": 3687,
									"name": "OR",
									"source": 9
								},
								{
									"begin": 3647,
									"end": 3687,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 3647,
									"end": 3687,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 3647,
									"end": 3687,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 3745,
									"end": 3879,
									"name": "tag",
									"source": 9,
									"value": "39"
								},
								{
									"begin": 3745,
									"end": 3879,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3769,
									"end": 3786,
									"name": "PUSH",
									"source": 9,
									"value": "21"
								},
								{
									"begin": 3769,
									"end": 3793,
									"name": "SLOAD",
									"source": 9
								},
								{
									"begin": 3765,
									"end": 3793,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 3765,
									"end": 3793,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 3745,
									"end": 3879,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 3745,
									"end": 3879,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 3745,
									"end": 3879,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 3864,
									"end": 3868,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 3814,
									"end": 3830,
									"name": "PUSH",
									"source": 9,
									"value": "1C"
								},
								{
									"begin": 3814,
									"end": 3861,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 3831,
									"end": 3848,
									"name": "PUSH",
									"source": 9,
									"value": "21"
								},
								{
									"begin": 3849,
									"end": 3850,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 3831,
									"end": 3851,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 3831,
									"end": 3851,
									"name": "SLOAD",
									"source": 9
								},
								{
									"begin": 3831,
									"end": 3851,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 3831,
									"end": 3851,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 3831,
									"end": 3851,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "43"
								},
								{
									"begin": 3831,
									"end": 3851,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 3831,
									"end": 3851,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "43"
								},
								{
									"begin": 3831,
									"end": 3851,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "44"
								},
								{
									"begin": 3831,
									"end": 3851,
									"name": "JUMP",
									"source": 9,
									"value": "[in]"
								},
								{
									"begin": 3831,
									"end": 3851,
									"name": "tag",
									"source": 9,
									"value": "43"
								},
								{
									"begin": 3831,
									"end": 3851,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3831,
									"end": 3851,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 3831,
									"end": 3851,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 3831,
									"end": 3851,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 3831,
									"end": 3851,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 3831,
									"end": 3851,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 3831,
									"end": 3851,
									"name": "KECCAK256",
									"source": 9
								},
								{
									"begin": 3831,
									"end": 3851,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 3831,
									"end": 3851,
									"name": "SLOAD",
									"source": 9
								},
								{
									"begin": 3854,
									"end": 3860,
									"name": "PUSH",
									"source": 9,
									"value": "DE0B6B3A7640000"
								},
								{
									"begin": 3831,
									"end": 3860,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "46"
								},
								{
									"begin": 3831,
									"end": 3860,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 3831,
									"end": 3860,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 3831,
									"end": 3860,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "47"
								},
								{
									"begin": 3831,
									"end": 3860,
									"name": "JUMP",
									"source": 9,
									"value": "[in]"
								},
								{
									"begin": 3831,
									"end": 3860,
									"name": "tag",
									"source": 9,
									"value": "46"
								},
								{
									"begin": 3831,
									"end": 3860,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3814,
									"end": 3861,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 3814,
									"end": 3861,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 3814,
									"end": 3861,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 3814,
									"end": 3861,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 3814,
									"end": 3861,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 3814,
									"end": 3861,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 3814,
									"end": 3861,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 3814,
									"end": 3861,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 3814,
									"end": 3861,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 3814,
									"end": 3861,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 3814,
									"end": 3861,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 3814,
									"end": 3861,
									"name": "KECCAK256",
									"source": 9
								},
								{
									"begin": 3814,
									"end": 3868,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 3814,
									"end": 3868,
									"name": "SLOAD",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3814,
									"end": 3868,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 3814,
									"end": 3868,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 3814,
									"end": 3868,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 3814,
									"end": 3868,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 3814,
									"end": 3868,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 3814,
									"end": 3868,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 3814,
									"end": 3868,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 3814,
									"end": 3868,
									"name": "OR",
									"source": 9
								},
								{
									"begin": 3814,
									"end": 3868,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 3814,
									"end": 3868,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 3795,
									"end": 3798,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 3795,
									"end": 3798,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "48"
								},
								{
									"begin": 3795,
									"end": 3798,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 3795,
									"end": 3798,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "49"
								},
								{
									"begin": 3795,
									"end": 3798,
									"name": "JUMP",
									"source": 9,
									"value": "[in]"
								},
								{
									"begin": 3795,
									"end": 3798,
									"name": "tag",
									"source": 9,
									"value": "48"
								},
								{
									"begin": 3795,
									"end": 3798,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3795,
									"end": 3798,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 3795,
									"end": 3798,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3795,
									"end": 3798,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3745,
									"end": 3879,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "39"
								},
								{
									"begin": 3745,
									"end": 3879,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3745,
									"end": 3879,
									"name": "tag",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 3745,
									"end": 3879,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3929,
									"end": 3936,
									"name": "PUSH",
									"source": 9,
									"value": "7"
								},
								{
									"begin": 3929,
									"end": 3936,
									"name": "SLOAD",
									"source": 9
								},
								{
									"begin": 3894,
									"end": 3937,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 3894,
									"end": 3937,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 1276,
									"end": 1301,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1276,
									"end": 1301,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1276,
									"end": 1301,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 719,
									"end": 729,
									"name": "CALLER",
									"source": 3
								},
								{
									"begin": 719,
									"end": 729,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 3911,
									"end": 3912,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 3911,
									"end": 3912,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 3894,
									"end": 3937,
									"name": "PUSH",
									"source": 9,
									"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
								},
								{
									"begin": 3894,
									"end": 3937,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1264,
									"end": 1266,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 1249,
									"end": 1267,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 3894,
									"end": 3937,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 3894,
									"end": 3937,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 3894,
									"end": 3937,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 3894,
									"end": 3937,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 3894,
									"end": 3937,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 3894,
									"end": 3937,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 3894,
									"end": 3937,
									"name": "LOG3",
									"source": 9
								},
								{
									"begin": 2926,
									"end": 3944,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2926,
									"end": 3944,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2926,
									"end": 3944,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 541,
									"end": 25294,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "72"
								},
								{
									"begin": 541,
									"end": 25294,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "tag",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2506,
									"end": 2522,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "AND",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2506,
									"end": 2522,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2496,
									"end": 2620,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 541,
									"end": 25294,
									"name": "tag",
									"source": 9,
									"value": "6"
								},
								{
									"begin": 541,
									"end": 25294,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 541,
									"end": 25294,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 541,
									"end": 25294,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 541,
									"end": 25294,
									"name": "SLOAD",
									"source": 9
								},
								{
									"begin": 541,
									"end": 25294,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "57"
								},
								{
									"begin": 541,
									"end": 25294,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 541,
									"end": 25294,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "58"
								},
								{
									"begin": 541,
									"end": 25294,
									"name": "JUMP",
									"source": 9,
									"value": "[in]"
								},
								{
									"begin": 541,
									"end": 25294,
									"name": "tag",
									"source": 9,
									"value": "57"
								},
								{
									"begin": 541,
									"end": 25294,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 541,
									"end": 25294,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 541,
									"end": 25294,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 541,
									"end": 25294,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 541,
									"end": 25294,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 541,
									"end": 25294,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 541,
									"end": 25294,
									"name": "KECCAK256",
									"source": 9
								},
								{
									"begin": 541,
									"end": 25294,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 541,
									"end": 25294,
									"name": "PUSH",
									"source": 9,
									"value": "1F"
								},
								{
									"begin": 541,
									"end": 25294,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 541,
									"end": 25294,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 541,
									"end": 25294,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 541,
									"end": 25294,
									"name": "DIV",
									"source": 9
								},
								{
									"begin": 541,
									"end": 25294,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 541,
									"end": 25294,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 541,
									"end": 25294,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 541,
									"end": 25294,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 541,
									"end": 25294,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "60"
								},
								{
									"begin": 541,
									"end": 25294,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 541,
									"end": 25294,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 541,
									"end": 25294,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 541,
									"end": 25294,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 541,
									"end": 25294,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "63"
								},
								{
									"begin": 541,
									"end": 25294,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 541,
									"end": 25294,
									"name": "tag",
									"source": 9,
									"value": "60"
								},
								{
									"begin": 541,
									"end": 25294,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 541,
									"end": 25294,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 541,
									"end": 25294,
									"name": "PUSH",
									"source": 9,
									"value": "1F"
								},
								{
									"begin": 541,
									"end": 25294,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 541,
									"end": 25294,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "61"
								},
								{
									"begin": 541,
									"end": 25294,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 541,
									"end": 25294,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 541,
									"end": 25294,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 541,
									"end": 25294,
									"name": "PUSH",
									"source": 9,
									"value": "FF"
								},
								{
									"begin": 541,
									"end": 25294,
									"name": "NOT",
									"source": 9
								},
								{
									"begin": 541,
									"end": 25294,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 541,
									"end": 25294,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 541,
									"end": 25294,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 541,
									"end": 25294,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 541,
									"end": 25294,
									"name": "OR",
									"source": 9
								},
								{
									"begin": 541,
									"end": 25294,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 541,
									"end": 25294,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 541,
									"end": 25294,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "63"
								},
								{
									"begin": 541,
									"end": 25294,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 541,
									"end": 25294,
									"name": "tag",
									"source": 9,
									"value": "61"
								},
								{
									"begin": 541,
									"end": 25294,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 541,
									"end": 25294,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 541,
									"end": 25294,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 541,
									"end": 25294,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 541,
									"end": 25294,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 541,
									"end": 25294,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 541,
									"end": 25294,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 541,
									"end": 25294,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 541,
									"end": 25294,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 541,
									"end": 25294,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 541,
									"end": 25294,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "63"
								},
								{
									"begin": 541,
									"end": 25294,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 541,
									"end": 25294,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 541,
									"end": 25294,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 541,
									"end": 25294,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 541,
									"end": 25294,
									"name": "tag",
									"source": 9,
									"value": "62"
								},
								{
									"begin": 541,
									"end": 25294,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 541,
									"end": 25294,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 541,
									"end": 25294,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 541,
									"end": 25294,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 541,
									"end": 25294,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 541,
									"end": 25294,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "63"
								},
								{
									"begin": 541,
									"end": 25294,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 541,
									"end": 25294,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 541,
									"end": 25294,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 541,
									"end": 25294,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 541,
									"end": 25294,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 541,
									"end": 25294,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 541,
									"end": 25294,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 541,
									"end": 25294,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 541,
									"end": 25294,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 541,
									"end": 25294,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 541,
									"end": 25294,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 541,
									"end": 25294,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 541,
									"end": 25294,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 541,
									"end": 25294,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "62"
								},
								{
									"begin": 541,
									"end": 25294,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 541,
									"end": 25294,
									"name": "tag",
									"source": 9,
									"value": "63"
								},
								{
									"begin": 541,
									"end": 25294,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 541,
									"end": 25294,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "64"
								},
								{
									"begin": 541,
									"end": 25294,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 541,
									"end": 25294,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 541,
									"end": 25294,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "65"
								},
								{
									"begin": 541,
									"end": 25294,
									"name": "JUMP",
									"source": 9,
									"value": "[in]"
								},
								{
									"begin": 541,
									"end": 25294,
									"name": "tag",
									"source": 9,
									"value": "64"
								},
								{
									"begin": 541,
									"end": 25294,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 541,
									"end": 25294,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 541,
									"end": 25294,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 541,
									"end": 25294,
									"name": "JUMP",
									"source": 9,
									"value": "[out]"
								},
								{
									"begin": 541,
									"end": 25294,
									"name": "tag",
									"source": 9,
									"value": "9"
								},
								{
									"begin": 541,
									"end": 25294,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 541,
									"end": 25294,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 541,
									"end": 25294,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 541,
									"end": 25294,
									"name": "SLOAD",
									"source": 9
								},
								{
									"begin": 541,
									"end": 25294,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 541,
									"end": 25294,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 541,
									"end": 25294,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 541,
									"end": 25294,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 541,
									"end": 25294,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 541,
									"end": 25294,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 541,
									"end": 25294,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 541,
									"end": 25294,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 541,
									"end": 25294,
									"name": "KECCAK256",
									"source": 9
								},
								{
									"begin": 541,
									"end": 25294,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 541,
									"end": 25294,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 541,
									"end": 25294,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 541,
									"end": 25294,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 541,
									"end": 25294,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 541,
									"end": 25294,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 541,
									"end": 25294,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "63"
								},
								{
									"begin": 541,
									"end": 25294,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 541,
									"end": 25294,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 541,
									"end": 25294,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 541,
									"end": 25294,
									"name": "MUL",
									"source": 9
								},
								{
									"begin": 541,
									"end": 25294,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 541,
									"end": 25294,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 541,
									"end": 25294,
									"name": "tag",
									"source": 9,
									"value": "67"
								},
								{
									"begin": 541,
									"end": 25294,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 541,
									"end": 25294,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 541,
									"end": 25294,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 541,
									"end": 25294,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 541,
									"end": 25294,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 541,
									"end": 25294,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "63"
								},
								{
									"begin": 541,
									"end": 25294,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 541,
									"end": 25294,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 541,
									"end": 25294,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 541,
									"end": 25294,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 541,
									"end": 25294,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 541,
									"end": 25294,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFF"
								},
								{
									"begin": 541,
									"end": 25294,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 541,
									"end": 25294,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 541,
									"end": 25294,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 541,
									"end": 25294,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 541,
									"end": 25294,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 541,
									"end": 25294,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 541,
									"end": 25294,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 541,
									"end": 25294,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 541,
									"end": 25294,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 541,
									"end": 25294,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 541,
									"end": 25294,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 541,
									"end": 25294,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "67"
								},
								{
									"begin": 541,
									"end": 25294,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 541,
									"end": 25294,
									"name": "tag",
									"source": 9,
									"value": "65"
								},
								{
									"begin": 541,
									"end": 25294,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 541,
									"end": 25294,
									"name": "tag",
									"source": 9,
									"value": "70"
								},
								{
									"begin": 541,
									"end": 25294,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 541,
									"end": 25294,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 541,
									"end": 25294,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 541,
									"end": 25294,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 541,
									"end": 25294,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 541,
									"end": 25294,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "64"
								},
								{
									"begin": 541,
									"end": 25294,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 541,
									"end": 25294,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 541,
									"end": 25294,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 541,
									"end": 25294,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 541,
									"end": 25294,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 541,
									"end": 25294,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 541,
									"end": 25294,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "70"
								},
								{
									"begin": 541,
									"end": 25294,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 14,
									"end": 265,
									"name": "tag",
									"source": 10,
									"value": "26"
								},
								{
									"begin": 14,
									"end": 265,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 84,
									"end": 90,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 137,
									"end": 139,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 125,
									"end": 134,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 116,
									"end": 123,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 112,
									"end": 135,
									"name": "SUB",
									"source": 10
								},
								{
									"begin": 108,
									"end": 140,
									"name": "SLT",
									"source": 10
								},
								{
									"begin": 105,
									"end": 157,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 105,
									"end": 157,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "74"
								},
								{
									"begin": 105,
									"end": 157,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 153,
									"end": 154,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 150,
									"end": 151,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 143,
									"end": 155,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 105,
									"end": 157,
									"name": "tag",
									"source": 10,
									"value": "74"
								},
								{
									"begin": 105,
									"end": 157,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 185,
									"end": 194,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 179,
									"end": 195,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 204,
									"end": 235,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "75"
								},
								{
									"begin": 229,
									"end": 234,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 204,
									"end": 235,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "76"
								},
								{
									"begin": 204,
									"end": 235,
									"name": "JUMP",
									"source": 10,
									"value": "[in]"
								},
								{
									"begin": 204,
									"end": 235,
									"name": "tag",
									"source": 10,
									"value": "75"
								},
								{
									"begin": 204,
									"end": 235,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 254,
									"end": 259,
									"name": "SWAP4",
									"source": 10
								},
								{
									"begin": 14,
									"end": 265,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 14,
									"end": 265,
									"name": "JUMP",
									"source": 10,
									"value": "[out]"
								},
								{
									"begin": 270,
									"end": 816,
									"name": "tag",
									"source": 10,
									"value": "12"
								},
								{
									"begin": 270,
									"end": 816,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 385,
									"end": 391,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 393,
									"end": 399,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 401,
									"end": 407,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 454,
									"end": 456,
									"name": "PUSH",
									"source": 10,
									"value": "60"
								},
								{
									"begin": 442,
									"end": 451,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 433,
									"end": 440,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 429,
									"end": 452,
									"name": "SUB",
									"source": 10
								},
								{
									"begin": 425,
									"end": 457,
									"name": "SLT",
									"source": 10
								},
								{
									"begin": 422,
									"end": 474,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 422,
									"end": 474,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "78"
								},
								{
									"begin": 422,
									"end": 474,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 470,
									"end": 471,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 467,
									"end": 468,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 460,
									"end": 472,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 422,
									"end": 474,
									"name": "tag",
									"source": 10,
									"value": "78"
								},
								{
									"begin": 422,
									"end": 474,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 502,
									"end": 511,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 496,
									"end": 512,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 521,
									"end": 552,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "79"
								},
								{
									"begin": 546,
									"end": 551,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 521,
									"end": 552,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "76"
								},
								{
									"begin": 521,
									"end": 552,
									"name": "JUMP",
									"source": 10,
									"value": "[in]"
								},
								{
									"begin": 521,
									"end": 552,
									"name": "tag",
									"source": 10,
									"value": "79"
								},
								{
									"begin": 521,
									"end": 552,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 621,
									"end": 623,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 606,
									"end": 624,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 606,
									"end": 624,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 600,
									"end": 625,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 571,
									"end": 576,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 571,
									"end": 576,
									"name": "SWAP4",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 634,
									"end": 667,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "80"
								},
								{
									"begin": 600,
									"end": 625,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 634,
									"end": 667,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "76"
								},
								{
									"begin": 634,
									"end": 667,
									"name": "JUMP",
									"source": 10,
									"value": "[in]"
								},
								{
									"begin": 634,
									"end": 667,
									"name": "tag",
									"source": 10,
									"value": "80"
								},
								{
									"begin": 634,
									"end": 667,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 738,
									"end": 740,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 723,
									"end": 741,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 723,
									"end": 741,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 717,
									"end": 742,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 686,
									"end": 693,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 686,
									"end": 693,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 751,
									"end": 784,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "81"
								},
								{
									"begin": 717,
									"end": 742,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 751,
									"end": 784,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "76"
								},
								{
									"begin": 751,
									"end": 784,
									"name": "JUMP",
									"source": 10,
									"value": "[in]"
								},
								{
									"begin": 751,
									"end": 784,
									"name": "tag",
									"source": 10,
									"value": "81"
								},
								{
									"begin": 751,
									"end": 784,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 803,
									"end": 810,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 793,
									"end": 810,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 793,
									"end": 810,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 793,
									"end": 810,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 270,
									"end": 816,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 270,
									"end": 816,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 270,
									"end": 816,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 270,
									"end": 816,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 270,
									"end": 816,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 270,
									"end": 816,
									"name": "JUMP",
									"source": 10,
									"value": "[out]"
								},
								{
									"begin": 1312,
									"end": 1480,
									"name": "tag",
									"source": 10,
									"value": "47"
								},
								{
									"begin": 1312,
									"end": 1480,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1352,
									"end": 1359,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1418,
									"end": 1419,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1414,
									"end": 1415,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1410,
									"end": 1416,
									"name": "NOT",
									"source": 10
								},
								{
									"begin": 1406,
									"end": 1420,
									"name": "DIV",
									"source": 10
								},
								{
									"begin": 1403,
									"end": 1404,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 1400,
									"end": 1421,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 1395,
									"end": 1396,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1388,
									"end": 1397,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 1381,
									"end": 1398,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 1377,
									"end": 1422,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 1374,
									"end": 1445,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 1374,
									"end": 1445,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "86"
								},
								{
									"begin": 1374,
									"end": 1445,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 1425,
									"end": 1443,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "86"
								},
								{
									"begin": 1425,
									"end": 1443,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "87"
								},
								{
									"begin": 1425,
									"end": 1443,
									"name": "JUMP",
									"source": 10,
									"value": "[in]"
								},
								{
									"begin": 1425,
									"end": 1443,
									"name": "tag",
									"source": 10,
									"value": "86"
								},
								{
									"begin": 1425,
									"end": 1443,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1465,
									"end": 1474,
									"name": "MUL",
									"source": 10
								},
								{
									"begin": 1465,
									"end": 1474,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1312,
									"end": 1480,
									"name": "JUMP",
									"source": 10,
									"value": "[out]"
								},
								{
									"begin": 1485,
									"end": 1610,
									"name": "tag",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 1485,
									"end": 1610,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1525,
									"end": 1529,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1553,
									"end": 1554,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1550,
									"end": 1551,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1547,
									"end": 1555,
									"name": "LT",
									"source": 10
								},
								{
									"begin": 1544,
									"end": 1578,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 1544,
									"end": 1578,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "90"
								},
								{
									"begin": 1544,
									"end": 1578,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 1558,
									"end": 1576,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "90"
								},
								{
									"begin": 1558,
									"end": 1576,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "87"
								},
								{
									"begin": 1558,
									"end": 1576,
									"name": "JUMP",
									"source": 10,
									"value": "[in]"
								},
								{
									"begin": 1558,
									"end": 1576,
									"name": "tag",
									"source": 10,
									"value": "90"
								},
								{
									"begin": 1558,
									"end": 1576,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1595,
									"end": 1604,
									"name": "SUB",
									"source": 10
								},
								{
									"begin": 1595,
									"end": 1604,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1485,
									"end": 1610,
									"name": "JUMP",
									"source": 10,
									"value": "[out]"
								},
								{
									"begin": 1615,
									"end": 1995,
									"name": "tag",
									"source": 10,
									"value": "58"
								},
								{
									"begin": 1615,
									"end": 1995,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1694,
									"end": 1695,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 1690,
									"end": 1702,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1690,
									"end": 1702,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1690,
									"end": 1702,
									"name": "SHR",
									"source": 10
								},
								{
									"begin": 1690,
									"end": 1702,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1737,
									"end": 1749,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1737,
									"end": 1749,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 1737,
									"end": 1749,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 1758,
									"end": 1819,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "92"
								},
								{
									"begin": 1758,
									"end": 1819,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 1812,
									"end": 1816,
									"name": "PUSH",
									"source": 10,
									"value": "7F"
								},
								{
									"begin": 1804,
									"end": 1810,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1800,
									"end": 1817,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 1790,
									"end": 1817,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 1790,
									"end": 1817,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1758,
									"end": 1819,
									"name": "tag",
									"source": 10,
									"value": "92"
								},
								{
									"begin": 1758,
									"end": 1819,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1865,
									"end": 1867,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 1857,
									"end": 1863,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1854,
									"end": 1868,
									"name": "LT",
									"source": 10
								},
								{
									"begin": 1834,
									"end": 1852,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1831,
									"end": 1869,
									"name": "EQ",
									"source": 10
								},
								{
									"begin": 1828,
									"end": 1989,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 1828,
									"end": 1989,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "93"
								},
								{
									"begin": 1828,
									"end": 1989,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 1911,
									"end": 1921,
									"name": "PUSH",
									"source": 10,
									"value": "4E487B71"
								},
								{
									"begin": 1906,
									"end": 1909,
									"name": "PUSH",
									"source": 10,
									"value": "E0"
								},
								{
									"begin": 1902,
									"end": 1922,
									"name": "SHL",
									"source": 10
								},
								{
									"begin": 1899,
									"end": 1900,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1892,
									"end": 1923,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 1946,
									"end": 1950,
									"name": "PUSH",
									"source": 10,
									"value": "22"
								},
								{
									"begin": 1943,
									"end": 1944,
									"name": "PUSH",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 1936,
									"end": 1951,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 1974,
									"end": 1978,
									"name": "PUSH",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 1971,
									"end": 1972,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1964,
									"end": 1979,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 1828,
									"end": 1989,
									"name": "tag",
									"source": 10,
									"value": "93"
								},
								{
									"begin": 1828,
									"end": 1989,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1828,
									"end": 1989,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1615,
									"end": 1995,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 1615,
									"end": 1995,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1615,
									"end": 1995,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1615,
									"end": 1995,
									"name": "JUMP",
									"source": 10,
									"value": "[out]"
								},
								{
									"begin": 2000,
									"end": 2135,
									"name": "tag",
									"source": 10,
									"value": "49"
								},
								{
									"begin": 2000,
									"end": 2135,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2039,
									"end": 2042,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2060,
									"end": 2077,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 2060,
									"end": 2077,
									"name": "EQ",
									"source": 10
								},
								{
									"begin": 2057,
									"end": 2100,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 2057,
									"end": 2100,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "96"
								},
								{
									"begin": 2057,
									"end": 2100,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 2080,
									"end": 2098,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "96"
								},
								{
									"begin": 2080,
									"end": 2098,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "87"
								},
								{
									"begin": 2080,
									"end": 2098,
									"name": "JUMP",
									"source": 10,
									"value": "[in]"
								},
								{
									"begin": 2080,
									"end": 2098,
									"name": "tag",
									"source": 10,
									"value": "96"
								},
								{
									"begin": 2080,
									"end": 2098,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2127,
									"end": 2128,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 2116,
									"end": 2129,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2116,
									"end": 2129,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2000,
									"end": 2135,
									"name": "JUMP",
									"source": 10,
									"value": "[out]"
								},
								{
									"begin": 2140,
									"end": 2349,
									"name": "tag",
									"source": 10,
									"value": "2"
								},
								{
									"begin": 2140,
									"end": 2349,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2172,
									"end": 2173,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 2198,
									"end": 2199,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 2188,
									"end": 2320,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "98"
								},
								{
									"begin": 2188,
									"end": 2320,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 2242,
									"end": 2252,
									"name": "PUSH",
									"source": 10,
									"value": "4E487B71"
								},
								{
									"begin": 2237,
									"end": 2240,
									"name": "PUSH",
									"source": 10,
									"value": "E0"
								},
								{
									"begin": 2233,
									"end": 2253,
									"name": "SHL",
									"source": 10
								},
								{
									"begin": 2230,
									"end": 2231,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 2223,
									"end": 2254,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 2277,
									"end": 2281,
									"name": "PUSH",
									"source": 10,
									"value": "12"
								},
								{
									"begin": 2274,
									"end": 2275,
									"name": "PUSH",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 2267,
									"end": 2282,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 2305,
									"end": 2309,
									"name": "PUSH",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 2302,
									"end": 2303,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 2295,
									"end": 2310,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 2188,
									"end": 2320,
									"name": "tag",
									"source": 10,
									"value": "98"
								},
								{
									"begin": 2188,
									"end": 2320,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2334,
									"end": 2343,
									"name": "MOD",
									"source": 10
								},
								{
									"begin": 2334,
									"end": 2343,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2140,
									"end": 2349,
									"name": "JUMP",
									"source": 10,
									"value": "[out]"
								},
								{
									"begin": 2354,
									"end": 2481,
									"name": "tag",
									"source": 10,
									"value": "87"
								},
								{
									"begin": 2354,
									"end": 2481,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2415,
									"end": 2425,
									"name": "PUSH",
									"source": 10,
									"value": "4E487B71"
								},
								{
									"begin": 2410,
									"end": 2413,
									"name": "PUSH",
									"source": 10,
									"value": "E0"
								},
								{
									"begin": 2406,
									"end": 2426,
									"name": "SHL",
									"source": 10
								},
								{
									"begin": 2403,
									"end": 2404,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 2396,
									"end": 2427,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 2446,
									"end": 2450,
									"name": "PUSH",
									"source": 10,
									"value": "11"
								},
								{
									"begin": 2443,
									"end": 2444,
									"name": "PUSH",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 2436,
									"end": 2451,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 2470,
									"end": 2474,
									"name": "PUSH",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 2467,
									"end": 2468,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 2460,
									"end": 2475,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 2486,
									"end": 2613,
									"name": "tag",
									"source": 10,
									"value": "44"
								},
								{
									"begin": 2486,
									"end": 2613,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2547,
									"end": 2557,
									"name": "PUSH",
									"source": 10,
									"value": "4E487B71"
								},
								{
									"begin": 2542,
									"end": 2545,
									"name": "PUSH",
									"source": 10,
									"value": "E0"
								},
								{
									"begin": 2538,
									"end": 2558,
									"name": "SHL",
									"source": 10
								},
								{
									"begin": 2535,
									"end": 2536,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 2528,
									"end": 2559,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 2578,
									"end": 2582,
									"name": "PUSH",
									"source": 10,
									"value": "32"
								},
								{
									"begin": 2575,
									"end": 2576,
									"name": "PUSH",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 2568,
									"end": 2583,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 2602,
									"end": 2606,
									"name": "PUSH",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 2599,
									"end": 2600,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 2592,
									"end": 2607,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 2618,
									"end": 2749,
									"name": "tag",
									"source": 10,
									"value": "76"
								},
								{
									"begin": 2618,
									"end": 2749,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2693,
									"end": 2724,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2693,
									"end": 2724,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 2683,
									"end": 2725,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2683,
									"end": 2725,
									"name": "EQ",
									"source": 10
								},
								{
									"begin": 2673,
									"end": 2743,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "102"
								},
								{
									"begin": 2673,
									"end": 2743,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 2739,
									"end": 2740,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 2736,
									"end": 2737,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 2729,
									"end": 2741,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 2673,
									"end": 2743,
									"name": "tag",
									"source": 10,
									"value": "102"
								},
								{
									"begin": 2673,
									"end": 2743,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2618,
									"end": 2749,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2618,
									"end": 2749,
									"name": "JUMP",
									"source": 10,
									"value": "[out]"
								},
								{
									"begin": 2618,
									"end": 2749,
									"name": "tag",
									"source": 10,
									"value": "72"
								},
								{
									"begin": 2618,
									"end": 2749,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 541,
									"end": 25294,
									"name": "PUSH #[$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 541,
									"end": 25294,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 541,
									"end": 25294,
									"name": "PUSH [$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 541,
									"end": 25294,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 541,
									"end": 25294,
									"name": "CODECOPY",
									"source": 9
								},
								{
									"begin": 541,
									"end": 25294,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 541,
									"end": 25294,
									"name": "RETURN",
									"source": 9
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122020955769f4dc6c0af072ba7026476cba804cfb8d88c7106ec059d4363187ea5764736f6c63430008070033",
									".code": [
										{
											"begin": 541,
											"end": 25294,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "SHR",
											"source": 9
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "PUSH",
											"source": 9,
											"value": "6BC87C3A"
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "61"
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "PUSH",
											"source": 9,
											"value": "A9059CBB"
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "62"
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "PUSH",
											"source": 9,
											"value": "D0E03523"
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "63"
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "PUSH",
											"source": 9,
											"value": "E1E144DE"
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "PUSH",
											"source": 9,
											"value": "E1E144DE"
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "57"
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "PUSH",
											"source": 9,
											"value": "EA2F0B37"
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "58"
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "PUSH",
											"source": 9,
											"value": "EBF78663"
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "59"
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "PUSH",
											"source": 9,
											"value": "F2FDE38B"
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "tag",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "PUSH",
											"source": 9,
											"value": "D0E03523"
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "53"
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "PUSH",
											"source": 9,
											"value": "D5BDE46C"
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "54"
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "PUSH",
											"source": 9,
											"value": "D8C6404B"
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "55"
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "PUSH",
											"source": 9,
											"value": "DD62ED3E"
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "56"
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "tag",
											"source": 9,
											"value": "63"
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "PUSH",
											"source": 9,
											"value": "C2C7C03A"
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "65"
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "PUSH",
											"source": 9,
											"value": "C2C7C03A"
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "49"
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "PUSH",
											"source": 9,
											"value": "C49B9A80"
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "50"
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "PUSH",
											"source": 9,
											"value": "C8607952"
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "51"
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "PUSH",
											"source": 9,
											"value": "CEA26958"
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "52"
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "tag",
											"source": 9,
											"value": "65"
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "PUSH",
											"source": 9,
											"value": "A9059CBB"
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "46"
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "PUSH",
											"source": 9,
											"value": "A928681C"
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "47"
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "PUSH",
											"source": 9,
											"value": "C0B0FDA2"
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "48"
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "tag",
											"source": 9,
											"value": "62"
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "PUSH",
											"source": 9,
											"value": "88790A68"
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "66"
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "PUSH",
											"source": 9,
											"value": "8EE88C53"
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "67"
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "PUSH",
											"source": 9,
											"value": "8EE88C53"
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "42"
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "PUSH",
											"source": 9,
											"value": "95D89B41"
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "43"
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "PUSH",
											"source": 9,
											"value": "9655CAB5"
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "PUSH",
											"source": 9,
											"value": "A457C2D7"
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "45"
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "tag",
											"source": 9,
											"value": "67"
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "PUSH",
											"source": 9,
											"value": "88790A68"
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "39"
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "PUSH",
											"source": 9,
											"value": "88F82020"
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "PUSH",
											"source": 9,
											"value": "8DA5CB5B"
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "41"
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "tag",
											"source": 9,
											"value": "66"
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "PUSH",
											"source": 9,
											"value": "74FB20E1"
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "68"
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "PUSH",
											"source": 9,
											"value": "74FB20E1"
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "35"
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "PUSH",
											"source": 9,
											"value": "75F0A874"
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "36"
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "PUSH",
											"source": 9,
											"value": "7ABDC1CA"
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "37"
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "PUSH",
											"source": 9,
											"value": "882CFB3F"
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "38"
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "tag",
											"source": 9,
											"value": "68"
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "PUSH",
											"source": 9,
											"value": "6BC87C3A"
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "32"
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "PUSH",
											"source": 9,
											"value": "70A08231"
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "33"
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "PUSH",
											"source": 9,
											"value": "715018A6"
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "34"
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "tag",
											"source": 9,
											"value": "61"
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "PUSH",
											"source": 9,
											"value": "3B124FE7"
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "69"
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "PUSH",
											"source": 9,
											"value": "52390C02"
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "70"
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "PUSH",
											"source": 9,
											"value": "5D098B38"
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "71"
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "PUSH",
											"source": 9,
											"value": "5D098B38"
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "28"
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "PUSH",
											"source": 9,
											"value": "611BF629"
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "29"
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "PUSH",
											"source": 9,
											"value": "632A6A35"
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "30"
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "PUSH",
											"source": 9,
											"value": "64A06E80"
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "31"
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "tag",
											"source": 9,
											"value": "71"
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "PUSH",
											"source": 9,
											"value": "52390C02"
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "PUSH",
											"source": 9,
											"value": "5342ACB4"
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "25"
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "PUSH",
											"source": 9,
											"value": "57D87F0D"
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "26"
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "PUSH",
											"source": 9,
											"value": "5876CCC5"
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "27"
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "tag",
											"source": 9,
											"value": "70"
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "PUSH",
											"source": 9,
											"value": "4549B039"
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "72"
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "PUSH",
											"source": 9,
											"value": "4549B039"
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "PUSH",
											"source": 9,
											"value": "457C194C"
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "21"
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "PUSH",
											"source": 9,
											"value": "4A5566BF"
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "22"
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "PUSH",
											"source": 9,
											"value": "4A74BB02"
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "23"
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "tag",
											"source": 9,
											"value": "72"
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "PUSH",
											"source": 9,
											"value": "3B124FE7"
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "17"
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "PUSH",
											"source": 9,
											"value": "3BD5D173"
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "18"
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "PUSH",
											"source": 9,
											"value": "437823EC"
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "19"
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "tag",
											"source": 9,
											"value": "69"
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "PUSH",
											"source": 9,
											"value": "200A692D"
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "73"
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "PUSH",
											"source": 9,
											"value": "2D838119"
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "74"
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "PUSH",
											"source": 9,
											"value": "2D838119"
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "13"
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "PUSH",
											"source": 9,
											"value": "313CE567"
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "14"
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "PUSH",
											"source": 9,
											"value": "3685D419"
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "15"
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "PUSH",
											"source": 9,
											"value": "39509351"
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "16"
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "tag",
											"source": 9,
											"value": "74"
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "PUSH",
											"source": 9,
											"value": "200A692D"
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "10"
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "PUSH",
											"source": 9,
											"value": "22976E0D"
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "PUSH",
											"source": 9,
											"value": "23B872DD"
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "12"
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "tag",
											"source": 9,
											"value": "73"
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "PUSH",
											"source": 9,
											"value": "A7D2D87"
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "75"
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "PUSH",
											"source": 9,
											"value": "A7D2D87"
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "PUSH",
											"source": 9,
											"value": "13114A9D"
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "PUSH",
											"source": 9,
											"value": "18160DDD"
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "PUSH",
											"source": 9,
											"value": "1A4CD1B1"
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "tag",
											"source": 9,
											"value": "75"
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "PUSH",
											"source": 9,
											"value": "61C82D0"
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "PUSH",
											"source": 9,
											"value": "6FDDE03"
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "PUSH",
											"source": 9,
											"value": "95EA7B3"
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "tag",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "tag",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 541,
											"end": 25294,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 22752,
											"end": 22912,
											"name": "tag",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 22752,
											"end": 22912,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 22752,
											"end": 22912,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 22752,
											"end": 22912,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 22752,
											"end": 22912,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 22752,
											"end": 22912,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "78"
										},
										{
											"begin": 22752,
											"end": 22912,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 22752,
											"end": 22912,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 22752,
											"end": 22912,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 22752,
											"end": 22912,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 22752,
											"end": 22912,
											"name": "tag",
											"source": 9,
											"value": "78"
										},
										{
											"begin": 22752,
											"end": 22912,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 22752,
											"end": 22912,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "79"
										},
										{
											"begin": 22752,
											"end": 22912,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 22752,
											"end": 22912,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 22752,
											"end": 22912,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 22752,
											"end": 22912,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "81"
										},
										{
											"begin": 22752,
											"end": 22912,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 22752,
											"end": 22912,
											"name": "tag",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 22752,
											"end": 22912,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 22752,
											"end": 22912,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "82"
										},
										{
											"begin": 22752,
											"end": 22912,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 22752,
											"end": 22912,
											"name": "tag",
											"source": 9,
											"value": "79"
										},
										{
											"begin": 22752,
											"end": 22912,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 22752,
											"end": 22912,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 4585,
											"end": 4666,
											"name": "tag",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 4585,
											"end": 4666,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4585,
											"end": 4666,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 4585,
											"end": 4666,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4585,
											"end": 4666,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4585,
											"end": 4666,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "83"
										},
										{
											"begin": 4585,
											"end": 4666,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4585,
											"end": 4666,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4585,
											"end": 4666,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4585,
											"end": 4666,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 4585,
											"end": 4666,
											"name": "tag",
											"source": 9,
											"value": "83"
										},
										{
											"begin": 4585,
											"end": 4666,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4585,
											"end": 4666,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4585,
											"end": 4666,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 4585,
											"end": 4666,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "85"
										},
										{
											"begin": 4585,
											"end": 4666,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 4585,
											"end": 4666,
											"name": "tag",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 4585,
											"end": 4666,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4585,
											"end": 4666,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4585,
											"end": 4666,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4585,
											"end": 4666,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "86"
										},
										{
											"begin": 4585,
											"end": 4666,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4585,
											"end": 4666,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4585,
											"end": 4666,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "87"
										},
										{
											"begin": 4585,
											"end": 4666,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 4585,
											"end": 4666,
											"name": "tag",
											"source": 9,
											"value": "86"
										},
										{
											"begin": 4585,
											"end": 4666,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4585,
											"end": 4666,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4585,
											"end": 4666,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4585,
											"end": 4666,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4585,
											"end": 4666,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4585,
											"end": 4666,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 4585,
											"end": 4666,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4585,
											"end": 4666,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 5503,
											"end": 5661,
											"name": "tag",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 5503,
											"end": 5661,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5503,
											"end": 5661,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 5503,
											"end": 5661,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5503,
											"end": 5661,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 5503,
											"end": 5661,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "88"
										},
										{
											"begin": 5503,
											"end": 5661,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5503,
											"end": 5661,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5503,
											"end": 5661,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5503,
											"end": 5661,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 5503,
											"end": 5661,
											"name": "tag",
											"source": 9,
											"value": "88"
										},
										{
											"begin": 5503,
											"end": 5661,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5503,
											"end": 5661,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "89"
										},
										{
											"begin": 5503,
											"end": 5661,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "90"
										},
										{
											"begin": 5503,
											"end": 5661,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 5503,
											"end": 5661,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 5503,
											"end": 5661,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "91"
										},
										{
											"begin": 5503,
											"end": 5661,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 5503,
											"end": 5661,
											"name": "tag",
											"source": 9,
											"value": "90"
										},
										{
											"begin": 5503,
											"end": 5661,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5503,
											"end": 5661,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "92"
										},
										{
											"begin": 5503,
											"end": 5661,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 5503,
											"end": 5661,
											"name": "tag",
											"source": 9,
											"value": "89"
										},
										{
											"begin": 5503,
											"end": 5661,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5503,
											"end": 5661,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5503,
											"end": 5661,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4241,
											"end": 4255,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4241,
											"end": 4255,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4234,
											"end": 4256,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4216,
											"end": 4257,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4216,
											"end": 4257,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4204,
											"end": 4206,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4189,
											"end": 4207,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5503,
											"end": 5661,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "86"
										},
										{
											"begin": 4076,
											"end": 4263,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1947,
											"end": 1985,
											"name": "tag",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 1947,
											"end": 1985,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1947,
											"end": 1985,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 1947,
											"end": 1985,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1947,
											"end": 1985,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1947,
											"end": 1985,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "95"
										},
										{
											"begin": 1947,
											"end": 1985,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1947,
											"end": 1985,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1947,
											"end": 1985,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1947,
											"end": 1985,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1947,
											"end": 1985,
											"name": "tag",
											"source": 9,
											"value": "95"
										},
										{
											"begin": 1947,
											"end": 1985,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1947,
											"end": 1985,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1947,
											"end": 1985,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "96"
										},
										{
											"begin": 1947,
											"end": 1985,
											"name": "PUSH",
											"source": 9,
											"value": "1A"
										},
										{
											"begin": 1947,
											"end": 1985,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1947,
											"end": 1985,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1947,
											"end": 1985,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1947,
											"end": 1985,
											"name": "tag",
											"source": 9,
											"value": "96"
										},
										{
											"begin": 1947,
											"end": 1985,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1947,
											"end": 1985,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1947,
											"end": 1985,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 15381,
											"end": 15406,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15381,
											"end": 15406,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 15381,
											"end": 15406,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 15369,
											"end": 15371,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 15354,
											"end": 15372,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1947,
											"end": 1985,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "86"
										},
										{
											"begin": 15235,
											"end": 15412,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6915,
											"end": 7000,
											"name": "tag",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 6915,
											"end": 7000,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6915,
											"end": 7000,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 6915,
											"end": 7000,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6915,
											"end": 7000,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 6915,
											"end": 7000,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 6915,
											"end": 7000,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6915,
											"end": 7000,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6915,
											"end": 7000,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6915,
											"end": 7000,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 6915,
											"end": 7000,
											"name": "tag",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 6915,
											"end": 7000,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6983,
											"end": 6993,
											"name": "PUSH",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 6983,
											"end": 6993,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 6915,
											"end": 7000,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "96"
										},
										{
											"begin": 6915,
											"end": 7000,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4850,
											"end": 4943,
											"name": "tag",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 4850,
											"end": 4943,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4850,
											"end": 4943,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 4850,
											"end": 4943,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4850,
											"end": 4943,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4850,
											"end": 4943,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "104"
										},
										{
											"begin": 4850,
											"end": 4943,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4850,
											"end": 4943,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4850,
											"end": 4943,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4850,
											"end": 4943,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 4850,
											"end": 4943,
											"name": "tag",
											"source": 9,
											"value": "104"
										},
										{
											"begin": 4850,
											"end": 4943,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4929,
											"end": 4936,
											"name": "PUSH",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 4929,
											"end": 4936,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 4850,
											"end": 4943,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "96"
										},
										{
											"begin": 4850,
											"end": 4943,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2175,
											"end": 2216,
											"name": "tag",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 2175,
											"end": 2216,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2175,
											"end": 2216,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 2175,
											"end": 2216,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2175,
											"end": 2216,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2175,
											"end": 2216,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "108"
										},
										{
											"begin": 2175,
											"end": 2216,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2175,
											"end": 2216,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2175,
											"end": 2216,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2175,
											"end": 2216,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2175,
											"end": 2216,
											"name": "tag",
											"source": 9,
											"value": "108"
										},
										{
											"begin": 2175,
											"end": 2216,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2175,
											"end": 2216,
											"name": "PUSH",
											"source": 9,
											"value": "1E"
										},
										{
											"begin": 2175,
											"end": 2216,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 2175,
											"end": 2216,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "109"
										},
										{
											"begin": 2175,
											"end": 2216,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2175,
											"end": 2216,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2175,
											"end": 2216,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2175,
											"end": 2216,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2175,
											"end": 2216,
											"name": "tag",
											"source": 9,
											"value": "109"
										},
										{
											"begin": 2175,
											"end": 2216,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2175,
											"end": 2216,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2175,
											"end": 2216,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2959,
											"end": 2991,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2959,
											"end": 2991,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2959,
											"end": 2991,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2941,
											"end": 2992,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2941,
											"end": 2992,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2929,
											"end": 2931,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2914,
											"end": 2932,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2175,
											"end": 2216,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "86"
										},
										{
											"begin": 2795,
											"end": 2998,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1706,
											"end": 1736,
											"name": "tag",
											"source": 9,
											"value": "10"
										},
										{
											"begin": 1706,
											"end": 1736,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1706,
											"end": 1736,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 1706,
											"end": 1736,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1706,
											"end": 1736,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1706,
											"end": 1736,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "113"
										},
										{
											"begin": 1706,
											"end": 1736,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1706,
											"end": 1736,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1706,
											"end": 1736,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1706,
											"end": 1736,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1706,
											"end": 1736,
											"name": "tag",
											"source": 9,
											"value": "113"
										},
										{
											"begin": 1706,
											"end": 1736,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1706,
											"end": 1736,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1706,
											"end": 1736,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "96"
										},
										{
											"begin": 1706,
											"end": 1736,
											"name": "PUSH",
											"source": 9,
											"value": "16"
										},
										{
											"begin": 1706,
											"end": 1736,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1706,
											"end": 1736,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1706,
											"end": 1736,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1555,
											"end": 1587,
											"name": "tag",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 1555,
											"end": 1587,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1555,
											"end": 1587,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 1555,
											"end": 1587,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1555,
											"end": 1587,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1555,
											"end": 1587,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "117"
										},
										{
											"begin": 1555,
											"end": 1587,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1555,
											"end": 1587,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1555,
											"end": 1587,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1555,
											"end": 1587,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1555,
											"end": 1587,
											"name": "tag",
											"source": 9,
											"value": "117"
										},
										{
											"begin": 1555,
											"end": 1587,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1555,
											"end": 1587,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1555,
											"end": 1587,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "96"
										},
										{
											"begin": 1555,
											"end": 1587,
											"name": "PUSH",
											"source": 9,
											"value": "13"
										},
										{
											"begin": 1555,
											"end": 1587,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1555,
											"end": 1587,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1555,
											"end": 1587,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5667,
											"end": 6098,
											"name": "tag",
											"source": 9,
											"value": "12"
										},
										{
											"begin": 5667,
											"end": 6098,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5667,
											"end": 6098,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 5667,
											"end": 6098,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5667,
											"end": 6098,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 5667,
											"end": 6098,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "121"
										},
										{
											"begin": 5667,
											"end": 6098,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5667,
											"end": 6098,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5667,
											"end": 6098,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5667,
											"end": 6098,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 5667,
											"end": 6098,
											"name": "tag",
											"source": 9,
											"value": "121"
										},
										{
											"begin": 5667,
											"end": 6098,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5667,
											"end": 6098,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "89"
										},
										{
											"begin": 5667,
											"end": 6098,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "123"
										},
										{
											"begin": 5667,
											"end": 6098,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 5667,
											"end": 6098,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 5667,
											"end": 6098,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "124"
										},
										{
											"begin": 5667,
											"end": 6098,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 5667,
											"end": 6098,
											"name": "tag",
											"source": 9,
											"value": "123"
										},
										{
											"begin": 5667,
											"end": 6098,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5667,
											"end": 6098,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "125"
										},
										{
											"begin": 5667,
											"end": 6098,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 7859,
											"end": 8108,
											"name": "tag",
											"source": 9,
											"value": "13"
										},
										{
											"begin": 7859,
											"end": 8108,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7859,
											"end": 8108,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 7859,
											"end": 8108,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7859,
											"end": 8108,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 7859,
											"end": 8108,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "127"
										},
										{
											"begin": 7859,
											"end": 8108,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 7859,
											"end": 8108,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7859,
											"end": 8108,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7859,
											"end": 8108,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 7859,
											"end": 8108,
											"name": "tag",
											"source": 9,
											"value": "127"
										},
										{
											"begin": 7859,
											"end": 8108,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7859,
											"end": 8108,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "96"
										},
										{
											"begin": 7859,
											"end": 8108,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "129"
										},
										{
											"begin": 7859,
											"end": 8108,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 7859,
											"end": 8108,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 7859,
											"end": 8108,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "81"
										},
										{
											"begin": 7859,
											"end": 8108,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 7859,
											"end": 8108,
											"name": "tag",
											"source": 9,
											"value": "129"
										},
										{
											"begin": 7859,
											"end": 8108,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7859,
											"end": 8108,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "130"
										},
										{
											"begin": 7859,
											"end": 8108,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 4763,
											"end": 4844,
											"name": "tag",
											"source": 9,
											"value": "14"
										},
										{
											"begin": 4763,
											"end": 4844,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4763,
											"end": 4844,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 4763,
											"end": 4844,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4763,
											"end": 4844,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4763,
											"end": 4844,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "132"
										},
										{
											"begin": 4763,
											"end": 4844,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4763,
											"end": 4844,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4763,
											"end": 4844,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4763,
											"end": 4844,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 4763,
											"end": 4844,
											"name": "tag",
											"source": 9,
											"value": "132"
										},
										{
											"begin": 4763,
											"end": 4844,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4828,
											"end": 4837,
											"name": "PUSH",
											"source": 9,
											"value": "C"
										},
										{
											"begin": 4828,
											"end": 4837,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 4763,
											"end": 4844,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4763,
											"end": 4844,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4828,
											"end": 4837,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 4828,
											"end": 4837,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4828,
											"end": 4837,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4828,
											"end": 4837,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 16868,
											"end": 16904,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 16868,
											"end": 16904,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 16856,
											"end": 16858,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 16841,
											"end": 16859,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4763,
											"end": 4844,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "86"
										},
										{
											"begin": 16726,
											"end": 16910,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8571,
											"end": 9037,
											"name": "tag",
											"source": 9,
											"value": "15"
										},
										{
											"begin": 8571,
											"end": 9037,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8571,
											"end": 9037,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 8571,
											"end": 9037,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8571,
											"end": 9037,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 8571,
											"end": 9037,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "137"
										},
										{
											"begin": 8571,
											"end": 9037,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 8571,
											"end": 9037,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8571,
											"end": 9037,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8571,
											"end": 9037,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 8571,
											"end": 9037,
											"name": "tag",
											"source": 9,
											"value": "137"
										},
										{
											"begin": 8571,
											"end": 9037,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8571,
											"end": 9037,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "79"
										},
										{
											"begin": 8571,
											"end": 9037,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "139"
										},
										{
											"begin": 8571,
											"end": 9037,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 8571,
											"end": 9037,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 8571,
											"end": 9037,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "140"
										},
										{
											"begin": 8571,
											"end": 9037,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 8571,
											"end": 9037,
											"name": "tag",
											"source": 9,
											"value": "139"
										},
										{
											"begin": 8571,
											"end": 9037,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8571,
											"end": 9037,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "141"
										},
										{
											"begin": 8571,
											"end": 9037,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 6104,
											"end": 6393,
											"name": "tag",
											"source": 9,
											"value": "16"
										},
										{
											"begin": 6104,
											"end": 6393,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6104,
											"end": 6393,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 6104,
											"end": 6393,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6104,
											"end": 6393,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 6104,
											"end": 6393,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "142"
										},
										{
											"begin": 6104,
											"end": 6393,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6104,
											"end": 6393,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6104,
											"end": 6393,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6104,
											"end": 6393,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 6104,
											"end": 6393,
											"name": "tag",
											"source": 9,
											"value": "142"
										},
										{
											"begin": 6104,
											"end": 6393,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6104,
											"end": 6393,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "89"
										},
										{
											"begin": 6104,
											"end": 6393,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "144"
										},
										{
											"begin": 6104,
											"end": 6393,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 6104,
											"end": 6393,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 6104,
											"end": 6393,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "91"
										},
										{
											"begin": 6104,
											"end": 6393,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 6104,
											"end": 6393,
											"name": "tag",
											"source": 9,
											"value": "144"
										},
										{
											"begin": 6104,
											"end": 6393,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6104,
											"end": 6393,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "145"
										},
										{
											"begin": 6104,
											"end": 6393,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 1294,
											"end": 1320,
											"name": "tag",
											"source": 9,
											"value": "17"
										},
										{
											"begin": 1294,
											"end": 1320,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1294,
											"end": 1320,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 1294,
											"end": 1320,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1294,
											"end": 1320,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1294,
											"end": 1320,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "147"
										},
										{
											"begin": 1294,
											"end": 1320,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1294,
											"end": 1320,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1294,
											"end": 1320,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1294,
											"end": 1320,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1294,
											"end": 1320,
											"name": "tag",
											"source": 9,
											"value": "147"
										},
										{
											"begin": 1294,
											"end": 1320,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1294,
											"end": 1320,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1294,
											"end": 1320,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "96"
										},
										{
											"begin": 1294,
											"end": 1320,
											"name": "PUSH",
											"source": 9,
											"value": "D"
										},
										{
											"begin": 1294,
											"end": 1320,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1294,
											"end": 1320,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1294,
											"end": 1320,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7006,
											"end": 7381,
											"name": "tag",
											"source": 9,
											"value": "18"
										},
										{
											"begin": 7006,
											"end": 7381,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7006,
											"end": 7381,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 7006,
											"end": 7381,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7006,
											"end": 7381,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 7006,
											"end": 7381,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "151"
										},
										{
											"begin": 7006,
											"end": 7381,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 7006,
											"end": 7381,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7006,
											"end": 7381,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7006,
											"end": 7381,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 7006,
											"end": 7381,
											"name": "tag",
											"source": 9,
											"value": "151"
										},
										{
											"begin": 7006,
											"end": 7381,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7006,
											"end": 7381,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "79"
										},
										{
											"begin": 7006,
											"end": 7381,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "153"
										},
										{
											"begin": 7006,
											"end": 7381,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 7006,
											"end": 7381,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 7006,
											"end": 7381,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "81"
										},
										{
											"begin": 7006,
											"end": 7381,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 7006,
											"end": 7381,
											"name": "tag",
											"source": 9,
											"value": "153"
										},
										{
											"begin": 7006,
											"end": 7381,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7006,
											"end": 7381,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "154"
										},
										{
											"begin": 7006,
											"end": 7381,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 22407,
											"end": 22516,
											"name": "tag",
											"source": 9,
											"value": "19"
										},
										{
											"begin": 22407,
											"end": 22516,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 22407,
											"end": 22516,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 22407,
											"end": 22516,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 22407,
											"end": 22516,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 22407,
											"end": 22516,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "155"
										},
										{
											"begin": 22407,
											"end": 22516,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 22407,
											"end": 22516,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 22407,
											"end": 22516,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 22407,
											"end": 22516,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 22407,
											"end": 22516,
											"name": "tag",
											"source": 9,
											"value": "155"
										},
										{
											"begin": 22407,
											"end": 22516,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 22407,
											"end": 22516,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "79"
										},
										{
											"begin": 22407,
											"end": 22516,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "157"
										},
										{
											"begin": 22407,
											"end": 22516,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 22407,
											"end": 22516,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 22407,
											"end": 22516,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "140"
										},
										{
											"begin": 22407,
											"end": 22516,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 22407,
											"end": 22516,
											"name": "tag",
											"source": 9,
											"value": "157"
										},
										{
											"begin": 22407,
											"end": 22516,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 22407,
											"end": 22516,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "158"
										},
										{
											"begin": 22407,
											"end": 22516,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 7387,
											"end": 7853,
											"name": "tag",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7387,
											"end": 7853,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7387,
											"end": 7853,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 7387,
											"end": 7853,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7387,
											"end": 7853,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 7387,
											"end": 7853,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "159"
										},
										{
											"begin": 7387,
											"end": 7853,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 7387,
											"end": 7853,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7387,
											"end": 7853,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7387,
											"end": 7853,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 7387,
											"end": 7853,
											"name": "tag",
											"source": 9,
											"value": "159"
										},
										{
											"begin": 7387,
											"end": 7853,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7387,
											"end": 7853,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "96"
										},
										{
											"begin": 7387,
											"end": 7853,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "161"
										},
										{
											"begin": 7387,
											"end": 7853,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 7387,
											"end": 7853,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 7387,
											"end": 7853,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "162"
										},
										{
											"begin": 7387,
											"end": 7853,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 7387,
											"end": 7853,
											"name": "tag",
											"source": 9,
											"value": "161"
										},
										{
											"begin": 7387,
											"end": 7853,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7387,
											"end": 7853,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "163"
										},
										{
											"begin": 7387,
											"end": 7853,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 23120,
											"end": 23316,
											"name": "tag",
											"source": 9,
											"value": "21"
										},
										{
											"begin": 23120,
											"end": 23316,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 23120,
											"end": 23316,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 23120,
											"end": 23316,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 23120,
											"end": 23316,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 23120,
											"end": 23316,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "165"
										},
										{
											"begin": 23120,
											"end": 23316,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 23120,
											"end": 23316,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 23120,
											"end": 23316,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 23120,
											"end": 23316,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 23120,
											"end": 23316,
											"name": "tag",
											"source": 9,
											"value": "165"
										},
										{
											"begin": 23120,
											"end": 23316,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 23120,
											"end": 23316,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "79"
										},
										{
											"begin": 23120,
											"end": 23316,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "167"
										},
										{
											"begin": 23120,
											"end": 23316,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 23120,
											"end": 23316,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 23120,
											"end": 23316,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "81"
										},
										{
											"begin": 23120,
											"end": 23316,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 23120,
											"end": 23316,
											"name": "tag",
											"source": 9,
											"value": "167"
										},
										{
											"begin": 23120,
											"end": 23316,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 23120,
											"end": 23316,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "168"
										},
										{
											"begin": 23120,
											"end": 23316,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 24832,
											"end": 25061,
											"name": "tag",
											"source": 9,
											"value": "22"
										},
										{
											"begin": 24832,
											"end": 25061,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 24832,
											"end": 25061,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 24832,
											"end": 25061,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 24832,
											"end": 25061,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 24832,
											"end": 25061,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "169"
										},
										{
											"begin": 24832,
											"end": 25061,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 24832,
											"end": 25061,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 24832,
											"end": 25061,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 24832,
											"end": 25061,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 24832,
											"end": 25061,
											"name": "tag",
											"source": 9,
											"value": "169"
										},
										{
											"begin": 24832,
											"end": 25061,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 24832,
											"end": 25061,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "79"
										},
										{
											"begin": 24832,
											"end": 25061,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "171"
										},
										{
											"begin": 24832,
											"end": 25061,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 24832,
											"end": 25061,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 24832,
											"end": 25061,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "172"
										},
										{
											"begin": 24832,
											"end": 25061,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 24832,
											"end": 25061,
											"name": "tag",
											"source": 9,
											"value": "171"
										},
										{
											"begin": 24832,
											"end": 25061,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 24832,
											"end": 25061,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "173"
										},
										{
											"begin": 24832,
											"end": 25061,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 2284,
											"end": 2325,
											"name": "tag",
											"source": 9,
											"value": "23"
										},
										{
											"begin": 2284,
											"end": 2325,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2284,
											"end": 2325,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 2284,
											"end": 2325,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2284,
											"end": 2325,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2284,
											"end": 2325,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "174"
										},
										{
											"begin": 2284,
											"end": 2325,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2284,
											"end": 2325,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2284,
											"end": 2325,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2284,
											"end": 2325,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2284,
											"end": 2325,
											"name": "tag",
											"source": 9,
											"value": "174"
										},
										{
											"begin": 2284,
											"end": 2325,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2284,
											"end": 2325,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 2284,
											"end": 2325,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 2284,
											"end": 2325,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "89"
										},
										{
											"begin": 2284,
											"end": 2325,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2284,
											"end": 2325,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2284,
											"end": 2325,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 2284,
											"end": 2325,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 2284,
											"end": 2325,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2284,
											"end": 2325,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2284,
											"end": 2325,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8114,
											"end": 8565,
											"name": "tag",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 8114,
											"end": 8565,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8114,
											"end": 8565,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 8114,
											"end": 8565,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8114,
											"end": 8565,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 8114,
											"end": 8565,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "178"
										},
										{
											"begin": 8114,
											"end": 8565,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 8114,
											"end": 8565,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8114,
											"end": 8565,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8114,
											"end": 8565,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 8114,
											"end": 8565,
											"name": "tag",
											"source": 9,
											"value": "178"
										},
										{
											"begin": 8114,
											"end": 8565,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8114,
											"end": 8565,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "79"
										},
										{
											"begin": 8114,
											"end": 8565,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "180"
										},
										{
											"begin": 8114,
											"end": 8565,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 8114,
											"end": 8565,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 8114,
											"end": 8565,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "140"
										},
										{
											"begin": 8114,
											"end": 8565,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 8114,
											"end": 8565,
											"name": "tag",
											"source": 9,
											"value": "180"
										},
										{
											"begin": 8114,
											"end": 8565,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8114,
											"end": 8565,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "181"
										},
										{
											"begin": 8114,
											"end": 8565,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 13948,
											"end": 14070,
											"name": "tag",
											"source": 9,
											"value": "25"
										},
										{
											"begin": 13948,
											"end": 14070,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13948,
											"end": 14070,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 13948,
											"end": 14070,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 13948,
											"end": 14070,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 13948,
											"end": 14070,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "182"
										},
										{
											"begin": 13948,
											"end": 14070,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 13948,
											"end": 14070,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13948,
											"end": 14070,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 13948,
											"end": 14070,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 13948,
											"end": 14070,
											"name": "tag",
											"source": 9,
											"value": "182"
										},
										{
											"begin": 13948,
											"end": 14070,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13948,
											"end": 14070,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "89"
										},
										{
											"begin": 13948,
											"end": 14070,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "184"
										},
										{
											"begin": 13948,
											"end": 14070,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 13948,
											"end": 14070,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 13948,
											"end": 14070,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "140"
										},
										{
											"begin": 13948,
											"end": 14070,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 13948,
											"end": 14070,
											"name": "tag",
											"source": 9,
											"value": "184"
										},
										{
											"begin": 13948,
											"end": 14070,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14036,
											"end": 14063,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 14013,
											"end": 14017,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 14036,
											"end": 14063,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14036,
											"end": 14063,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 14036,
											"end": 14063,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 14036,
											"end": 14054,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 14036,
											"end": 14063,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 14036,
											"end": 14063,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 14036,
											"end": 14063,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 14036,
											"end": 14063,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14036,
											"end": 14063,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 14036,
											"end": 14063,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 14036,
											"end": 14063,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 14036,
											"end": 14063,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 14036,
											"end": 14063,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13948,
											"end": 14070,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1991,
											"end": 2019,
											"name": "tag",
											"source": 9,
											"value": "26"
										},
										{
											"begin": 1991,
											"end": 2019,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1991,
											"end": 2019,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 1991,
											"end": 2019,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1991,
											"end": 2019,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1991,
											"end": 2019,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "187"
										},
										{
											"begin": 1991,
											"end": 2019,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1991,
											"end": 2019,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1991,
											"end": 2019,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1991,
											"end": 2019,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1991,
											"end": 2019,
											"name": "tag",
											"source": 9,
											"value": "187"
										},
										{
											"begin": 1991,
											"end": 2019,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1991,
											"end": 2019,
											"name": "PUSH",
											"source": 9,
											"value": "1B"
										},
										{
											"begin": 1991,
											"end": 2019,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1991,
											"end": 2019,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "89"
										},
										{
											"begin": 1991,
											"end": 2019,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1991,
											"end": 2019,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 1991,
											"end": 2019,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1991,
											"end": 2019,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1991,
											"end": 2019,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 23918,
											"end": 24139,
											"name": "tag",
											"source": 9,
											"value": "27"
										},
										{
											"begin": 23918,
											"end": 24139,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 23918,
											"end": 24139,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 23918,
											"end": 24139,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 23918,
											"end": 24139,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 23918,
											"end": 24139,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "191"
										},
										{
											"begin": 23918,
											"end": 24139,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 23918,
											"end": 24139,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 23918,
											"end": 24139,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 23918,
											"end": 24139,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 23918,
											"end": 24139,
											"name": "tag",
											"source": 9,
											"value": "191"
										},
										{
											"begin": 23918,
											"end": 24139,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 23918,
											"end": 24139,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "79"
										},
										{
											"begin": 23918,
											"end": 24139,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "193"
										},
										{
											"begin": 23918,
											"end": 24139,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 23918,
											"end": 24139,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 23918,
											"end": 24139,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "81"
										},
										{
											"begin": 23918,
											"end": 24139,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 23918,
											"end": 24139,
											"name": "tag",
											"source": 9,
											"value": "193"
										},
										{
											"begin": 23918,
											"end": 24139,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 23918,
											"end": 24139,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "194"
										},
										{
											"begin": 23918,
											"end": 24139,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 22636,
											"end": 22746,
											"name": "tag",
											"source": 9,
											"value": "28"
										},
										{
											"begin": 22636,
											"end": 22746,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 22636,
											"end": 22746,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 22636,
											"end": 22746,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 22636,
											"end": 22746,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 22636,
											"end": 22746,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "195"
										},
										{
											"begin": 22636,
											"end": 22746,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 22636,
											"end": 22746,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 22636,
											"end": 22746,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 22636,
											"end": 22746,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 22636,
											"end": 22746,
											"name": "tag",
											"source": 9,
											"value": "195"
										},
										{
											"begin": 22636,
											"end": 22746,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 22636,
											"end": 22746,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "79"
										},
										{
											"begin": 22636,
											"end": 22746,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "197"
										},
										{
											"begin": 22636,
											"end": 22746,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 22636,
											"end": 22746,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 22636,
											"end": 22746,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "140"
										},
										{
											"begin": 22636,
											"end": 22746,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 22636,
											"end": 22746,
											"name": "tag",
											"source": 9,
											"value": "197"
										},
										{
											"begin": 22636,
											"end": 22746,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 22636,
											"end": 22746,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "198"
										},
										{
											"begin": 22636,
											"end": 22746,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 4472,
											"end": 4579,
											"name": "tag",
											"source": 9,
											"value": "29"
										},
										{
											"begin": 4472,
											"end": 4579,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4472,
											"end": 4579,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 4472,
											"end": 4579,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4472,
											"end": 4579,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4472,
											"end": 4579,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "199"
										},
										{
											"begin": 4472,
											"end": 4579,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4472,
											"end": 4579,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4472,
											"end": 4579,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4472,
											"end": 4579,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 4472,
											"end": 4579,
											"name": "tag",
											"source": 9,
											"value": "199"
										},
										{
											"begin": 4472,
											"end": 4579,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4472,
											"end": 4579,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "79"
										},
										{
											"begin": 4472,
											"end": 4579,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "201"
										},
										{
											"begin": 4472,
											"end": 4579,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 4472,
											"end": 4579,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 4472,
											"end": 4579,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "140"
										},
										{
											"begin": 4472,
											"end": 4579,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 4472,
											"end": 4579,
											"name": "tag",
											"source": 9,
											"value": "201"
										},
										{
											"begin": 4472,
											"end": 4579,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4472,
											"end": 4579,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "202"
										},
										{
											"begin": 4472,
											"end": 4579,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 2222,
											"end": 2250,
											"name": "tag",
											"source": 9,
											"value": "30"
										},
										{
											"begin": 2222,
											"end": 2250,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2222,
											"end": 2250,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 2222,
											"end": 2250,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2222,
											"end": 2250,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2222,
											"end": 2250,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "203"
										},
										{
											"begin": 2222,
											"end": 2250,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2222,
											"end": 2250,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2222,
											"end": 2250,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2222,
											"end": 2250,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2222,
											"end": 2250,
											"name": "tag",
											"source": 9,
											"value": "203"
										},
										{
											"begin": 2222,
											"end": 2250,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2222,
											"end": 2250,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 2222,
											"end": 2250,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 2222,
											"end": 2250,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "109"
										},
										{
											"begin": 2222,
											"end": 2250,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2222,
											"end": 2250,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2222,
											"end": 2250,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2222,
											"end": 2250,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1882,
											"end": 1941,
											"name": "tag",
											"source": 9,
											"value": "31"
										},
										{
											"begin": 1882,
											"end": 1941,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1882,
											"end": 1941,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 1882,
											"end": 1941,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1882,
											"end": 1941,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1882,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "208"
										},
										{
											"begin": 1882,
											"end": 1941,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1882,
											"end": 1941,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1882,
											"end": 1941,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1882,
											"end": 1941,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1882,
											"end": 1941,
											"name": "tag",
											"source": 9,
											"value": "208"
										},
										{
											"begin": 1882,
											"end": 1941,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1882,
											"end": 1941,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1882,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "96"
										},
										{
											"begin": 1937,
											"end": 1941,
											"name": "PUSH",
											"source": 9,
											"value": "3E8"
										},
										{
											"begin": 1882,
											"end": 1941,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1882,
											"end": 1941,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1374,
											"end": 1406,
											"name": "tag",
											"source": 9,
											"value": "32"
										},
										{
											"begin": 1374,
											"end": 1406,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1374,
											"end": 1406,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 1374,
											"end": 1406,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1374,
											"end": 1406,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1374,
											"end": 1406,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "212"
										},
										{
											"begin": 1374,
											"end": 1406,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1374,
											"end": 1406,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1374,
											"end": 1406,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1374,
											"end": 1406,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1374,
											"end": 1406,
											"name": "tag",
											"source": 9,
											"value": "212"
										},
										{
											"begin": 1374,
											"end": 1406,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1374,
											"end": 1406,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1374,
											"end": 1406,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "96"
										},
										{
											"begin": 1374,
											"end": 1406,
											"name": "PUSH",
											"source": 9,
											"value": "F"
										},
										{
											"begin": 1374,
											"end": 1406,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1374,
											"end": 1406,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1374,
											"end": 1406,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4949,
											"end": 5144,
											"name": "tag",
											"source": 9,
											"value": "33"
										},
										{
											"begin": 4949,
											"end": 5144,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4949,
											"end": 5144,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 4949,
											"end": 5144,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4949,
											"end": 5144,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4949,
											"end": 5144,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "216"
										},
										{
											"begin": 4949,
											"end": 5144,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4949,
											"end": 5144,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4949,
											"end": 5144,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4949,
											"end": 5144,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 4949,
											"end": 5144,
											"name": "tag",
											"source": 9,
											"value": "216"
										},
										{
											"begin": 4949,
											"end": 5144,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4949,
											"end": 5144,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "96"
										},
										{
											"begin": 4949,
											"end": 5144,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "218"
										},
										{
											"begin": 4949,
											"end": 5144,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 4949,
											"end": 5144,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 4949,
											"end": 5144,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "140"
										},
										{
											"begin": 4949,
											"end": 5144,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 4949,
											"end": 5144,
											"name": "tag",
											"source": 9,
											"value": "218"
										},
										{
											"begin": 4949,
											"end": 5144,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4949,
											"end": 5144,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "219"
										},
										{
											"begin": 4949,
											"end": 5144,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "221"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "tag",
											"source": 0,
											"value": "221"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4340,
											"end": 4466,
											"name": "tag",
											"source": 9,
											"value": "35"
										},
										{
											"begin": 4340,
											"end": 4466,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4340,
											"end": 4466,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 4340,
											"end": 4466,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4340,
											"end": 4466,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4340,
											"end": 4466,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "224"
										},
										{
											"begin": 4340,
											"end": 4466,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4340,
											"end": 4466,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4340,
											"end": 4466,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4340,
											"end": 4466,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 4340,
											"end": 4466,
											"name": "tag",
											"source": 9,
											"value": "224"
										},
										{
											"begin": 4340,
											"end": 4466,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4340,
											"end": 4466,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4340,
											"end": 4466,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "79"
										},
										{
											"begin": 4340,
											"end": 4466,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "226"
										},
										{
											"begin": 4340,
											"end": 4466,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 1593,
											"end": 1623,
											"name": "tag",
											"source": 9,
											"value": "36"
										},
										{
											"begin": 1593,
											"end": 1623,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1593,
											"end": 1623,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 1593,
											"end": 1623,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1593,
											"end": 1623,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1593,
											"end": 1623,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "227"
										},
										{
											"begin": 1593,
											"end": 1623,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1593,
											"end": 1623,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1593,
											"end": 1623,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1593,
											"end": 1623,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1593,
											"end": 1623,
											"name": "tag",
											"source": 9,
											"value": "227"
										},
										{
											"begin": 1593,
											"end": 1623,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1593,
											"end": 1623,
											"name": "PUSH",
											"source": 9,
											"value": "14"
										},
										{
											"begin": 1593,
											"end": 1623,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1593,
											"end": 1623,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "109"
										},
										{
											"begin": 1593,
											"end": 1623,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1593,
											"end": 1623,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1593,
											"end": 1623,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1593,
											"end": 1623,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1826,
											"end": 1857,
											"name": "tag",
											"source": 9,
											"value": "37"
										},
										{
											"begin": 1826,
											"end": 1857,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1826,
											"end": 1857,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 1826,
											"end": 1857,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1826,
											"end": 1857,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1826,
											"end": 1857,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "231"
										},
										{
											"begin": 1826,
											"end": 1857,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1826,
											"end": 1857,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1826,
											"end": 1857,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1826,
											"end": 1857,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1826,
											"end": 1857,
											"name": "tag",
											"source": 9,
											"value": "231"
										},
										{
											"begin": 1826,
											"end": 1857,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1826,
											"end": 1857,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1826,
											"end": 1857,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "96"
										},
										{
											"begin": 1826,
											"end": 1857,
											"name": "PUSH",
											"source": 9,
											"value": "19"
										},
										{
											"begin": 1826,
											"end": 1857,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1826,
											"end": 1857,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1826,
											"end": 1857,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3950,
											"end": 3977,
											"name": "tag",
											"source": 9,
											"value": "38"
										},
										{
											"begin": 3950,
											"end": 3977,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3950,
											"end": 3977,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 3950,
											"end": 3977,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3950,
											"end": 3977,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3950,
											"end": 3977,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "235"
										},
										{
											"begin": 3950,
											"end": 3977,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3950,
											"end": 3977,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3950,
											"end": 3977,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3950,
											"end": 3977,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 3950,
											"end": 3977,
											"name": "tag",
											"source": 9,
											"value": "235"
										},
										{
											"begin": 3950,
											"end": 3977,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3950,
											"end": 3977,
											"name": "PUSH",
											"source": 9,
											"value": "22"
										},
										{
											"begin": 3950,
											"end": 3977,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 3950,
											"end": 3977,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "109"
										},
										{
											"begin": 3950,
											"end": 3977,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3950,
											"end": 3977,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3950,
											"end": 3977,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3950,
											"end": 3977,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1742,
											"end": 1778,
											"name": "tag",
											"source": 9,
											"value": "39"
										},
										{
											"begin": 1742,
											"end": 1778,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1742,
											"end": 1778,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 1742,
											"end": 1778,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1742,
											"end": 1778,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1742,
											"end": 1778,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "240"
										},
										{
											"begin": 1742,
											"end": 1778,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1742,
											"end": 1778,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1742,
											"end": 1778,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1742,
											"end": 1778,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1742,
											"end": 1778,
											"name": "tag",
											"source": 9,
											"value": "240"
										},
										{
											"begin": 1742,
											"end": 1778,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1742,
											"end": 1778,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1742,
											"end": 1778,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "96"
										},
										{
											"begin": 1742,
											"end": 1778,
											"name": "PUSH",
											"source": 9,
											"value": "17"
										},
										{
											"begin": 1742,
											"end": 1778,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1742,
											"end": 1778,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1742,
											"end": 1778,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6791,
											"end": 6909,
											"name": "tag",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6791,
											"end": 6909,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6791,
											"end": 6909,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 6791,
											"end": 6909,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6791,
											"end": 6909,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 6791,
											"end": 6909,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "244"
										},
										{
											"begin": 6791,
											"end": 6909,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6791,
											"end": 6909,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6791,
											"end": 6909,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6791,
											"end": 6909,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 6791,
											"end": 6909,
											"name": "tag",
											"source": 9,
											"value": "244"
										},
										{
											"begin": 6791,
											"end": 6909,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6791,
											"end": 6909,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "89"
										},
										{
											"begin": 6791,
											"end": 6909,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "246"
										},
										{
											"begin": 6791,
											"end": 6909,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 6791,
											"end": 6909,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 6791,
											"end": 6909,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "140"
										},
										{
											"begin": 6791,
											"end": 6909,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 6791,
											"end": 6909,
											"name": "tag",
											"source": 9,
											"value": "246"
										},
										{
											"begin": 6791,
											"end": 6909,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6882,
											"end": 6902,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6859,
											"end": 6863,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6882,
											"end": 6902,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6882,
											"end": 6902,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6882,
											"end": 6902,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6882,
											"end": 6893,
											"name": "PUSH",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 6882,
											"end": 6902,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6882,
											"end": 6902,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6882,
											"end": 6902,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6882,
											"end": 6902,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6882,
											"end": 6902,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 6882,
											"end": 6902,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 6882,
											"end": 6902,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 6882,
											"end": 6902,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6882,
											"end": 6902,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6791,
											"end": 6909,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "249"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "249"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1247,
											"end": 1254,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22918,
											"end": 23114,
											"name": "tag",
											"source": 9,
											"value": "42"
										},
										{
											"begin": 22918,
											"end": 23114,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 22918,
											"end": 23114,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 22918,
											"end": 23114,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 22918,
											"end": 23114,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 22918,
											"end": 23114,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "253"
										},
										{
											"begin": 22918,
											"end": 23114,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 22918,
											"end": 23114,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 22918,
											"end": 23114,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 22918,
											"end": 23114,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 22918,
											"end": 23114,
											"name": "tag",
											"source": 9,
											"value": "253"
										},
										{
											"begin": 22918,
											"end": 23114,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 22918,
											"end": 23114,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "79"
										},
										{
											"begin": 22918,
											"end": 23114,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "255"
										},
										{
											"begin": 22918,
											"end": 23114,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 22918,
											"end": 23114,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 22918,
											"end": 23114,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "81"
										},
										{
											"begin": 22918,
											"end": 23114,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 22918,
											"end": 23114,
											"name": "tag",
											"source": 9,
											"value": "255"
										},
										{
											"begin": 22918,
											"end": 23114,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 22918,
											"end": 23114,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "256"
										},
										{
											"begin": 22918,
											"end": 23114,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 4672,
											"end": 4757,
											"name": "tag",
											"source": 9,
											"value": "43"
										},
										{
											"begin": 4672,
											"end": 4757,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4672,
											"end": 4757,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 4672,
											"end": 4757,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4672,
											"end": 4757,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4672,
											"end": 4757,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "257"
										},
										{
											"begin": 4672,
											"end": 4757,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4672,
											"end": 4757,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4672,
											"end": 4757,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4672,
											"end": 4757,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 4672,
											"end": 4757,
											"name": "tag",
											"source": 9,
											"value": "257"
										},
										{
											"begin": 4672,
											"end": 4757,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4672,
											"end": 4757,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4672,
											"end": 4757,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 4672,
											"end": 4757,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "259"
										},
										{
											"begin": 4672,
											"end": 4757,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 24336,
											"end": 24652,
											"name": "tag",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 24336,
											"end": 24652,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 24336,
											"end": 24652,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 24336,
											"end": 24652,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 24336,
											"end": 24652,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 24336,
											"end": 24652,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "261"
										},
										{
											"begin": 24336,
											"end": 24652,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 24336,
											"end": 24652,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 24336,
											"end": 24652,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 24336,
											"end": 24652,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 24336,
											"end": 24652,
											"name": "tag",
											"source": 9,
											"value": "261"
										},
										{
											"begin": 24336,
											"end": 24652,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 24336,
											"end": 24652,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "79"
										},
										{
											"begin": 24336,
											"end": 24652,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "263"
										},
										{
											"begin": 24336,
											"end": 24652,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 24336,
											"end": 24652,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 24336,
											"end": 24652,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "81"
										},
										{
											"begin": 24336,
											"end": 24652,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 24336,
											"end": 24652,
											"name": "tag",
											"source": 9,
											"value": "263"
										},
										{
											"begin": 24336,
											"end": 24652,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 24336,
											"end": 24652,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "264"
										},
										{
											"begin": 24336,
											"end": 24652,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 6399,
											"end": 6785,
											"name": "tag",
											"source": 9,
											"value": "45"
										},
										{
											"begin": 6399,
											"end": 6785,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6399,
											"end": 6785,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 6399,
											"end": 6785,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6399,
											"end": 6785,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 6399,
											"end": 6785,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "265"
										},
										{
											"begin": 6399,
											"end": 6785,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6399,
											"end": 6785,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6399,
											"end": 6785,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6399,
											"end": 6785,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 6399,
											"end": 6785,
											"name": "tag",
											"source": 9,
											"value": "265"
										},
										{
											"begin": 6399,
											"end": 6785,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6399,
											"end": 6785,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "89"
										},
										{
											"begin": 6399,
											"end": 6785,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "267"
										},
										{
											"begin": 6399,
											"end": 6785,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 6399,
											"end": 6785,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 6399,
											"end": 6785,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "91"
										},
										{
											"begin": 6399,
											"end": 6785,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 6399,
											"end": 6785,
											"name": "tag",
											"source": 9,
											"value": "267"
										},
										{
											"begin": 6399,
											"end": 6785,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6399,
											"end": 6785,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "268"
										},
										{
											"begin": 6399,
											"end": 6785,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 5150,
											"end": 5314,
											"name": "tag",
											"source": 9,
											"value": "46"
										},
										{
											"begin": 5150,
											"end": 5314,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5150,
											"end": 5314,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 5150,
											"end": 5314,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5150,
											"end": 5314,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 5150,
											"end": 5314,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "270"
										},
										{
											"begin": 5150,
											"end": 5314,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5150,
											"end": 5314,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5150,
											"end": 5314,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5150,
											"end": 5314,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 5150,
											"end": 5314,
											"name": "tag",
											"source": 9,
											"value": "270"
										},
										{
											"begin": 5150,
											"end": 5314,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5150,
											"end": 5314,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "89"
										},
										{
											"begin": 5150,
											"end": 5314,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "272"
										},
										{
											"begin": 5150,
											"end": 5314,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 5150,
											"end": 5314,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 5150,
											"end": 5314,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "91"
										},
										{
											"begin": 5150,
											"end": 5314,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 5150,
											"end": 5314,
											"name": "tag",
											"source": 9,
											"value": "272"
										},
										{
											"begin": 5150,
											"end": 5314,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5150,
											"end": 5314,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "273"
										},
										{
											"begin": 5150,
											"end": 5314,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 23691,
											"end": 23912,
											"name": "tag",
											"source": 9,
											"value": "47"
										},
										{
											"begin": 23691,
											"end": 23912,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 23691,
											"end": 23912,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 23691,
											"end": 23912,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 23691,
											"end": 23912,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 23691,
											"end": 23912,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "275"
										},
										{
											"begin": 23691,
											"end": 23912,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 23691,
											"end": 23912,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 23691,
											"end": 23912,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 23691,
											"end": 23912,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 23691,
											"end": 23912,
											"name": "tag",
											"source": 9,
											"value": "275"
										},
										{
											"begin": 23691,
											"end": 23912,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 23691,
											"end": 23912,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "79"
										},
										{
											"begin": 23691,
											"end": 23912,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "277"
										},
										{
											"begin": 23691,
											"end": 23912,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 23691,
											"end": 23912,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 23691,
											"end": 23912,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "81"
										},
										{
											"begin": 23691,
											"end": 23912,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 23691,
											"end": 23912,
											"name": "tag",
											"source": 9,
											"value": "277"
										},
										{
											"begin": 23691,
											"end": 23912,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 23691,
											"end": 23912,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "278"
										},
										{
											"begin": 23691,
											"end": 23912,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 1472,
											"end": 1499,
											"name": "tag",
											"source": 9,
											"value": "48"
										},
										{
											"begin": 1472,
											"end": 1499,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1472,
											"end": 1499,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 1472,
											"end": 1499,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1472,
											"end": 1499,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1472,
											"end": 1499,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "279"
										},
										{
											"begin": 1472,
											"end": 1499,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1472,
											"end": 1499,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1472,
											"end": 1499,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1472,
											"end": 1499,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1472,
											"end": 1499,
											"name": "tag",
											"source": 9,
											"value": "279"
										},
										{
											"begin": 1472,
											"end": 1499,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1472,
											"end": 1499,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1472,
											"end": 1499,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "96"
										},
										{
											"begin": 1472,
											"end": 1499,
											"name": "PUSH",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 1472,
											"end": 1499,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1472,
											"end": 1499,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1472,
											"end": 1499,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 25067,
											"end": 25292,
											"name": "tag",
											"source": 9,
											"value": "49"
										},
										{
											"begin": 25067,
											"end": 25292,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 25067,
											"end": 25292,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 25067,
											"end": 25292,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 25067,
											"end": 25292,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 25067,
											"end": 25292,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "283"
										},
										{
											"begin": 25067,
											"end": 25292,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 25067,
											"end": 25292,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 25067,
											"end": 25292,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 25067,
											"end": 25292,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 25067,
											"end": 25292,
											"name": "tag",
											"source": 9,
											"value": "283"
										},
										{
											"begin": 25067,
											"end": 25292,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 25067,
											"end": 25292,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "79"
										},
										{
											"begin": 25067,
											"end": 25292,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "285"
										},
										{
											"begin": 25067,
											"end": 25292,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 25067,
											"end": 25292,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 25067,
											"end": 25292,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "172"
										},
										{
											"begin": 25067,
											"end": 25292,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 25067,
											"end": 25292,
											"name": "tag",
											"source": 9,
											"value": "285"
										},
										{
											"begin": 25067,
											"end": 25292,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 25067,
											"end": 25292,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "286"
										},
										{
											"begin": 25067,
											"end": 25292,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 24658,
											"end": 24826,
											"name": "tag",
											"source": 9,
											"value": "50"
										},
										{
											"begin": 24658,
											"end": 24826,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 24658,
											"end": 24826,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 24658,
											"end": 24826,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 24658,
											"end": 24826,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 24658,
											"end": 24826,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "287"
										},
										{
											"begin": 24658,
											"end": 24826,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 24658,
											"end": 24826,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 24658,
											"end": 24826,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 24658,
											"end": 24826,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 24658,
											"end": 24826,
											"name": "tag",
											"source": 9,
											"value": "287"
										},
										{
											"begin": 24658,
											"end": 24826,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 24658,
											"end": 24826,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "79"
										},
										{
											"begin": 24658,
											"end": 24826,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "289"
										},
										{
											"begin": 24658,
											"end": 24826,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 24658,
											"end": 24826,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 24658,
											"end": 24826,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "172"
										},
										{
											"begin": 24658,
											"end": 24826,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 24658,
											"end": 24826,
											"name": "tag",
											"source": 9,
											"value": "289"
										},
										{
											"begin": 24658,
											"end": 24826,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 24658,
											"end": 24826,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "290"
										},
										{
											"begin": 24658,
											"end": 24826,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 1784,
											"end": 1820,
											"name": "tag",
											"source": 9,
											"value": "51"
										},
										{
											"begin": 1784,
											"end": 1820,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1784,
											"end": 1820,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 1784,
											"end": 1820,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1784,
											"end": 1820,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1784,
											"end": 1820,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "291"
										},
										{
											"begin": 1784,
											"end": 1820,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1784,
											"end": 1820,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1784,
											"end": 1820,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1784,
											"end": 1820,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1784,
											"end": 1820,
											"name": "tag",
											"source": 9,
											"value": "291"
										},
										{
											"begin": 1784,
											"end": 1820,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1784,
											"end": 1820,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1784,
											"end": 1820,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "96"
										},
										{
											"begin": 1784,
											"end": 1820,
											"name": "PUSH",
											"source": 9,
											"value": "18"
										},
										{
											"begin": 1784,
											"end": 1820,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1784,
											"end": 1820,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1784,
											"end": 1820,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 23322,
											"end": 23488,
											"name": "tag",
											"source": 9,
											"value": "52"
										},
										{
											"begin": 23322,
											"end": 23488,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 23322,
											"end": 23488,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 23322,
											"end": 23488,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 23322,
											"end": 23488,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 23322,
											"end": 23488,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "295"
										},
										{
											"begin": 23322,
											"end": 23488,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 23322,
											"end": 23488,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 23322,
											"end": 23488,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 23322,
											"end": 23488,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 23322,
											"end": 23488,
											"name": "tag",
											"source": 9,
											"value": "295"
										},
										{
											"begin": 23322,
											"end": 23488,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 23322,
											"end": 23488,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "79"
										},
										{
											"begin": 23322,
											"end": 23488,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "297"
										},
										{
											"begin": 23322,
											"end": 23488,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 23322,
											"end": 23488,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 23322,
											"end": 23488,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "81"
										},
										{
											"begin": 23322,
											"end": 23488,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 23322,
											"end": 23488,
											"name": "tag",
											"source": 9,
											"value": "297"
										},
										{
											"begin": 23322,
											"end": 23488,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 23322,
											"end": 23488,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "298"
										},
										{
											"begin": 23322,
											"end": 23488,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 24145,
											"end": 24330,
											"name": "tag",
											"source": 9,
											"value": "53"
										},
										{
											"begin": 24145,
											"end": 24330,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 24145,
											"end": 24330,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 24145,
											"end": 24330,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 24145,
											"end": 24330,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 24145,
											"end": 24330,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "299"
										},
										{
											"begin": 24145,
											"end": 24330,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 24145,
											"end": 24330,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 24145,
											"end": 24330,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 24145,
											"end": 24330,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 24145,
											"end": 24330,
											"name": "tag",
											"source": 9,
											"value": "299"
										},
										{
											"begin": 24145,
											"end": 24330,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 24145,
											"end": 24330,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "79"
										},
										{
											"begin": 24145,
											"end": 24330,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "301"
										},
										{
											"begin": 24145,
											"end": 24330,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 24145,
											"end": 24330,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 24145,
											"end": 24330,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "81"
										},
										{
											"begin": 24145,
											"end": 24330,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 24145,
											"end": 24330,
											"name": "tag",
											"source": 9,
											"value": "301"
										},
										{
											"begin": 24145,
											"end": 24330,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 24145,
											"end": 24330,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "302"
										},
										{
											"begin": 24145,
											"end": 24330,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 2142,
											"end": 2168,
											"name": "tag",
											"source": 9,
											"value": "54"
										},
										{
											"begin": 2142,
											"end": 2168,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2142,
											"end": 2168,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 2142,
											"end": 2168,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2142,
											"end": 2168,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2142,
											"end": 2168,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "303"
										},
										{
											"begin": 2142,
											"end": 2168,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2142,
											"end": 2168,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2142,
											"end": 2168,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2142,
											"end": 2168,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2142,
											"end": 2168,
											"name": "tag",
											"source": 9,
											"value": "303"
										},
										{
											"begin": 2142,
											"end": 2168,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2142,
											"end": 2168,
											"name": "PUSH",
											"source": 9,
											"value": "1D"
										},
										{
											"begin": 2142,
											"end": 2168,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 2142,
											"end": 2168,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "109"
										},
										{
											"begin": 2142,
											"end": 2168,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2142,
											"end": 2168,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 2142,
											"end": 2168,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2142,
											"end": 2168,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2142,
											"end": 2168,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2142,
											"end": 2168,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2142,
											"end": 2168,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2089,
											"end": 2115,
											"name": "tag",
											"source": 9,
											"value": "55"
										},
										{
											"begin": 2089,
											"end": 2115,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2089,
											"end": 2115,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 2089,
											"end": 2115,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2089,
											"end": 2115,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2089,
											"end": 2115,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "307"
										},
										{
											"begin": 2089,
											"end": 2115,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2089,
											"end": 2115,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2089,
											"end": 2115,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2089,
											"end": 2115,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2089,
											"end": 2115,
											"name": "tag",
											"source": 9,
											"value": "307"
										},
										{
											"begin": 2089,
											"end": 2115,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2089,
											"end": 2115,
											"name": "PUSH",
											"source": 9,
											"value": "1D"
										},
										{
											"begin": 2089,
											"end": 2115,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 2089,
											"end": 2115,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "89"
										},
										{
											"begin": 2089,
											"end": 2115,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2089,
											"end": 2115,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 2089,
											"end": 2115,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2089,
											"end": 2115,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2089,
											"end": 2115,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5320,
											"end": 5497,
											"name": "tag",
											"source": 9,
											"value": "56"
										},
										{
											"begin": 5320,
											"end": 5497,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5320,
											"end": 5497,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 5320,
											"end": 5497,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5320,
											"end": 5497,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 5320,
											"end": 5497,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "311"
										},
										{
											"begin": 5320,
											"end": 5497,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5320,
											"end": 5497,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5320,
											"end": 5497,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5320,
											"end": 5497,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 5320,
											"end": 5497,
											"name": "tag",
											"source": 9,
											"value": "311"
										},
										{
											"begin": 5320,
											"end": 5497,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5320,
											"end": 5497,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "96"
										},
										{
											"begin": 5320,
											"end": 5497,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "313"
										},
										{
											"begin": 5320,
											"end": 5497,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 5320,
											"end": 5497,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 5320,
											"end": 5497,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "314"
										},
										{
											"begin": 5320,
											"end": 5497,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 5320,
											"end": 5497,
											"name": "tag",
											"source": 9,
											"value": "313"
										},
										{
											"begin": 5320,
											"end": 5497,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5463,
											"end": 5481,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5463,
											"end": 5481,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5463,
											"end": 5481,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5433,
											"end": 5440,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5463,
											"end": 5481,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5463,
											"end": 5481,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5463,
											"end": 5481,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5463,
											"end": 5474,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 5463,
											"end": 5481,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5463,
											"end": 5481,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5463,
											"end": 5481,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5463,
											"end": 5481,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5463,
											"end": 5481,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5463,
											"end": 5481,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5463,
											"end": 5481,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 5463,
											"end": 5481,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 5463,
											"end": 5490,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 5463,
											"end": 5490,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5463,
											"end": 5490,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 5463,
											"end": 5490,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5463,
											"end": 5490,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5463,
											"end": 5490,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5463,
											"end": 5490,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5463,
											"end": 5490,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5463,
											"end": 5490,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5463,
											"end": 5490,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5463,
											"end": 5490,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 5463,
											"end": 5490,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 5463,
											"end": 5490,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5320,
											"end": 5497,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3983,
											"end": 4011,
											"name": "tag",
											"source": 9,
											"value": "57"
										},
										{
											"begin": 3983,
											"end": 4011,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3983,
											"end": 4011,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 3983,
											"end": 4011,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3983,
											"end": 4011,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3983,
											"end": 4011,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "317"
										},
										{
											"begin": 3983,
											"end": 4011,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3983,
											"end": 4011,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3983,
											"end": 4011,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3983,
											"end": 4011,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 3983,
											"end": 4011,
											"name": "tag",
											"source": 9,
											"value": "317"
										},
										{
											"begin": 3983,
											"end": 4011,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3983,
											"end": 4011,
											"name": "PUSH",
											"source": 9,
											"value": "22"
										},
										{
											"begin": 3983,
											"end": 4011,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 3983,
											"end": 4011,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "89"
										},
										{
											"begin": 3983,
											"end": 4011,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3983,
											"end": 4011,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3983,
											"end": 4011,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 3983,
											"end": 4011,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 3983,
											"end": 4011,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3983,
											"end": 4011,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3983,
											"end": 4011,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 22522,
											"end": 22630,
											"name": "tag",
											"source": 9,
											"value": "58"
										},
										{
											"begin": 22522,
											"end": 22630,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 22522,
											"end": 22630,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 22522,
											"end": 22630,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 22522,
											"end": 22630,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 22522,
											"end": 22630,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "321"
										},
										{
											"begin": 22522,
											"end": 22630,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 22522,
											"end": 22630,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 22522,
											"end": 22630,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 22522,
											"end": 22630,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 22522,
											"end": 22630,
											"name": "tag",
											"source": 9,
											"value": "321"
										},
										{
											"begin": 22522,
											"end": 22630,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 22522,
											"end": 22630,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "79"
										},
										{
											"begin": 22522,
											"end": 22630,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "323"
										},
										{
											"begin": 22522,
											"end": 22630,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 22522,
											"end": 22630,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 22522,
											"end": 22630,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "140"
										},
										{
											"begin": 22522,
											"end": 22630,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 22522,
											"end": 22630,
											"name": "tag",
											"source": 9,
											"value": "323"
										},
										{
											"begin": 22522,
											"end": 22630,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 22522,
											"end": 22630,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "324"
										},
										{
											"begin": 22522,
											"end": 22630,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 23494,
											"end": 23685,
											"name": "tag",
											"source": 9,
											"value": "59"
										},
										{
											"begin": 23494,
											"end": 23685,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 23494,
											"end": 23685,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 23494,
											"end": 23685,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 23494,
											"end": 23685,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 23494,
											"end": 23685,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "325"
										},
										{
											"begin": 23494,
											"end": 23685,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 23494,
											"end": 23685,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 23494,
											"end": 23685,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 23494,
											"end": 23685,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 23494,
											"end": 23685,
											"name": "tag",
											"source": 9,
											"value": "325"
										},
										{
											"begin": 23494,
											"end": 23685,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 23494,
											"end": 23685,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "79"
										},
										{
											"begin": 23494,
											"end": 23685,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "327"
										},
										{
											"begin": 23494,
											"end": 23685,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 23494,
											"end": 23685,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 23494,
											"end": 23685,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "81"
										},
										{
											"begin": 23494,
											"end": 23685,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 23494,
											"end": 23685,
											"name": "tag",
											"source": 9,
											"value": "327"
										},
										{
											"begin": 23494,
											"end": 23685,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 23494,
											"end": 23685,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "328"
										},
										{
											"begin": 23494,
											"end": 23685,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "329"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "329"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "331"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "331"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "332"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 22752,
											"end": 22912,
											"name": "tag",
											"source": 9,
											"value": "82"
										},
										{
											"begin": 22752,
											"end": 22912,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "334"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "335"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "334"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22841,
											"end": 22843,
											"name": "PUSH",
											"source": 9,
											"value": "A"
										},
										{
											"begin": 22831,
											"end": 22837,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 22831,
											"end": 22843,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 22831,
											"end": 22843,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 22823,
											"end": 22879,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "337"
										},
										{
											"begin": 22823,
											"end": 22879,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 22823,
											"end": 22879,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 22823,
											"end": 22879,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 22823,
											"end": 22879,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 22823,
											"end": 22879,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5534,
											"end": 5536,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 22823,
											"end": 22879,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 22823,
											"end": 22879,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 22823,
											"end": 22879,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5516,
											"end": 5537,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5573,
											"end": 5575,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 5553,
											"end": 5571,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 5553,
											"end": 5571,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5553,
											"end": 5571,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5546,
											"end": 5576,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5612,
											"end": 5645,
											"name": "PUSH",
											"source": 10,
											"value": "546178206665652063616E6E6F74206265206D6F7265207468616E2031302500"
										},
										{
											"begin": 5592,
											"end": 5610,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 5592,
											"end": 5610,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5592,
											"end": 5610,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5585,
											"end": 5646,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5663,
											"end": 5681,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 5663,
											"end": 5681,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 22823,
											"end": 22879,
											"name": "tag",
											"source": 9,
											"value": "338"
										},
										{
											"begin": 22823,
											"end": 22879,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 22823,
											"end": 22879,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 22823,
											"end": 22879,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 22823,
											"end": 22879,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 22823,
											"end": 22879,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 22823,
											"end": 22879,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 22823,
											"end": 22879,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 22823,
											"end": 22879,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 22823,
											"end": 22879,
											"name": "tag",
											"source": 9,
											"value": "337"
										},
										{
											"begin": 22823,
											"end": 22879,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 22889,
											"end": 22896,
											"name": "PUSH",
											"source": 9,
											"value": "D"
										},
										{
											"begin": 22889,
											"end": 22905,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 22752,
											"end": 22912,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 4585,
											"end": 4666,
											"name": "tag",
											"source": 9,
											"value": "85"
										},
										{
											"begin": 4585,
											"end": 4666,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4622,
											"end": 4635,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 4654,
											"end": 4659,
											"name": "PUSH",
											"source": 9,
											"value": "A"
										},
										{
											"begin": 4647,
											"end": 4659,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4647,
											"end": 4659,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 4647,
											"end": 4659,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "341"
										},
										{
											"begin": 4647,
											"end": 4659,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4647,
											"end": 4659,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "342"
										},
										{
											"begin": 4647,
											"end": 4659,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 4647,
											"end": 4659,
											"name": "tag",
											"source": 9,
											"value": "341"
										},
										{
											"begin": 4647,
											"end": 4659,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4647,
											"end": 4659,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4647,
											"end": 4659,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 4647,
											"end": 4659,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4647,
											"end": 4659,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4647,
											"end": 4659,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4647,
											"end": 4659,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4647,
											"end": 4659,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 4647,
											"end": 4659,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 4647,
											"end": 4659,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4647,
											"end": 4659,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4647,
											"end": 4659,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4647,
											"end": 4659,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4647,
											"end": 4659,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4647,
											"end": 4659,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4647,
											"end": 4659,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4647,
											"end": 4659,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4647,
											"end": 4659,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4647,
											"end": 4659,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4647,
											"end": 4659,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 4647,
											"end": 4659,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4647,
											"end": 4659,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4647,
											"end": 4659,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4647,
											"end": 4659,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4647,
											"end": 4659,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4647,
											"end": 4659,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4647,
											"end": 4659,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4647,
											"end": 4659,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4647,
											"end": 4659,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4647,
											"end": 4659,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 4647,
											"end": 4659,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "343"
										},
										{
											"begin": 4647,
											"end": 4659,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4647,
											"end": 4659,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "342"
										},
										{
											"begin": 4647,
											"end": 4659,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 4647,
											"end": 4659,
											"name": "tag",
											"source": 9,
											"value": "343"
										},
										{
											"begin": 4647,
											"end": 4659,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4647,
											"end": 4659,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4647,
											"end": 4659,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4647,
											"end": 4659,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "344"
										},
										{
											"begin": 4647,
											"end": 4659,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4647,
											"end": 4659,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4647,
											"end": 4659,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 4647,
											"end": 4659,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 4647,
											"end": 4659,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "345"
										},
										{
											"begin": 4647,
											"end": 4659,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4647,
											"end": 4659,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 4647,
											"end": 4659,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4647,
											"end": 4659,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4647,
											"end": 4659,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 4647,
											"end": 4659,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 4647,
											"end": 4659,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 4647,
											"end": 4659,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4647,
											"end": 4659,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4647,
											"end": 4659,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4647,
											"end": 4659,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4647,
											"end": 4659,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4647,
											"end": 4659,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4647,
											"end": 4659,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "344"
										},
										{
											"begin": 4647,
											"end": 4659,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4647,
											"end": 4659,
											"name": "tag",
											"source": 9,
											"value": "345"
										},
										{
											"begin": 4647,
											"end": 4659,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4647,
											"end": 4659,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4647,
											"end": 4659,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4647,
											"end": 4659,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4647,
											"end": 4659,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4647,
											"end": 4659,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4647,
											"end": 4659,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4647,
											"end": 4659,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4647,
											"end": 4659,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4647,
											"end": 4659,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 4647,
											"end": 4659,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4647,
											"end": 4659,
											"name": "tag",
											"source": 9,
											"value": "346"
										},
										{
											"begin": 4647,
											"end": 4659,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4647,
											"end": 4659,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4647,
											"end": 4659,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 4647,
											"end": 4659,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4647,
											"end": 4659,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4647,
											"end": 4659,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4647,
											"end": 4659,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 4647,
											"end": 4659,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4647,
											"end": 4659,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4647,
											"end": 4659,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4647,
											"end": 4659,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4647,
											"end": 4659,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4647,
											"end": 4659,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4647,
											"end": 4659,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 4647,
											"end": 4659,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "346"
										},
										{
											"begin": 4647,
											"end": 4659,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4647,
											"end": 4659,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4647,
											"end": 4659,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4647,
											"end": 4659,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 4647,
											"end": 4659,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 4647,
											"end": 4659,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4647,
											"end": 4659,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4647,
											"end": 4659,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4647,
											"end": 4659,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4647,
											"end": 4659,
											"name": "tag",
											"source": 9,
											"value": "344"
										},
										{
											"begin": 4647,
											"end": 4659,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4647,
											"end": 4659,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4647,
											"end": 4659,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4647,
											"end": 4659,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4647,
											"end": 4659,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4647,
											"end": 4659,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4647,
											"end": 4659,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4647,
											"end": 4659,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4585,
											"end": 4666,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4585,
											"end": 4666,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 5503,
											"end": 5661,
											"name": "tag",
											"source": 9,
											"value": "92"
										},
										{
											"begin": 5503,
											"end": 5661,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5578,
											"end": 5582,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5594,
											"end": 5633,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "348"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 5617,
											"end": 5624,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 5626,
											"end": 5632,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 5594,
											"end": 5602,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "351"
										},
										{
											"begin": 5594,
											"end": 5633,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 5594,
											"end": 5633,
											"name": "tag",
											"source": 9,
											"value": "348"
										},
										{
											"begin": 5594,
											"end": 5633,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5650,
											"end": 5654,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 5503,
											"end": 5661,
											"name": "tag",
											"source": 9,
											"value": "347"
										},
										{
											"begin": 5503,
											"end": 5661,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5503,
											"end": 5661,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 5503,
											"end": 5661,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5503,
											"end": 5661,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5503,
											"end": 5661,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5503,
											"end": 5661,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 5667,
											"end": 6098,
											"name": "tag",
											"source": 9,
											"value": "125"
										},
										{
											"begin": 5667,
											"end": 6098,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5795,
											"end": 5799,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5811,
											"end": 5847,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "355"
										},
										{
											"begin": 5821,
											"end": 5827,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 5829,
											"end": 5838,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 5840,
											"end": 5846,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 5811,
											"end": 5820,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "356"
										},
										{
											"begin": 5811,
											"end": 5847,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 5811,
											"end": 5847,
											"name": "tag",
											"source": 9,
											"value": "355"
										},
										{
											"begin": 5811,
											"end": 5847,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5857,
											"end": 6070,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "357"
										},
										{
											"begin": 5879,
											"end": 5885,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 5925,
											"end": 6060,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "359"
										},
										{
											"begin": 5980,
											"end": 5986,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 5925,
											"end": 6060,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5925,
											"end": 6060,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5925,
											"end": 6060,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5925,
											"end": 6060,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 5925,
											"end": 6060,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5925,
											"end": 6060,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5925,
											"end": 6060,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5925,
											"end": 6060,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5925,
											"end": 6060,
											"name": "PUSH",
											"source": 9,
											"value": "28"
										},
										{
											"begin": 5925,
											"end": 6060,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5925,
											"end": 6060,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5925,
											"end": 6060,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5925,
											"end": 6060,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5925,
											"end": 6060,
											"name": "PUSH data",
											"source": 9,
											"value": "4F3506F4BA71C79C3CBD442A3AFEB30E9B27AF2D84E116A4385B34E267D2287E"
										},
										{
											"begin": 5925,
											"end": 6060,
											"name": "PUSH",
											"source": 9,
											"value": "28"
										},
										{
											"begin": 5925,
											"end": 6060,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5925,
											"end": 6060,
											"name": "CODECOPY",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5925,
											"end": 5944,
											"name": "DUP11",
											"source": 9
										},
										{
											"begin": 5925,
											"end": 5944,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5925,
											"end": 5944,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5925,
											"end": 5944,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5925,
											"end": 5944,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5925,
											"end": 5944,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5925,
											"end": 5936,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 5925,
											"end": 5944,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5925,
											"end": 5944,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5925,
											"end": 5944,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5925,
											"end": 5944,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5925,
											"end": 5944,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5925,
											"end": 5944,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5925,
											"end": 5944,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 5925,
											"end": 5944,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 5925,
											"end": 5958,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 5925,
											"end": 5958,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5925,
											"end": 5958,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5925,
											"end": 5958,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5925,
											"end": 5958,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5925,
											"end": 5958,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5925,
											"end": 5958,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 5925,
											"end": 5958,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 5925,
											"end": 5958,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5925,
											"end": 5958,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5925,
											"end": 5962,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "361"
										},
										{
											"begin": 5925,
											"end": 6060,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 5925,
											"end": 6060,
											"name": "tag",
											"source": 9,
											"value": "359"
										},
										{
											"begin": 5925,
											"end": 6060,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5857,
											"end": 5865,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "351"
										},
										{
											"begin": 5857,
											"end": 6070,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 5857,
											"end": 6070,
											"name": "tag",
											"source": 9,
											"value": "357"
										},
										{
											"begin": 5857,
											"end": 6070,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6087,
											"end": 6091,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 5667,
											"end": 6098,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 5667,
											"end": 6098,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 5667,
											"end": 6098,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5667,
											"end": 6098,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5667,
											"end": 6098,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5667,
											"end": 6098,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 7859,
											"end": 8108,
											"name": "tag",
											"source": 9,
											"value": "130"
										},
										{
											"begin": 7859,
											"end": 8108,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7926,
											"end": 7933,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7964,
											"end": 7971,
											"name": "PUSH",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 7964,
											"end": 7971,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 7953,
											"end": 7960,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7953,
											"end": 7971,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 7953,
											"end": 7971,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 7945,
											"end": 8018,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "363"
										},
										{
											"begin": 7945,
											"end": 8018,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 7945,
											"end": 8018,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 7945,
											"end": 8018,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7945,
											"end": 8018,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7945,
											"end": 8018,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7875,
											"end": 7877,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7945,
											"end": 8018,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 7945,
											"end": 8018,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7945,
											"end": 8018,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7857,
											"end": 7878,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7914,
											"end": 7916,
											"name": "PUSH",
											"source": 10,
											"value": "2A"
										},
										{
											"begin": 7894,
											"end": 7912,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 7894,
											"end": 7912,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7894,
											"end": 7912,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7887,
											"end": 7917,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7953,
											"end": 7987,
											"name": "PUSH",
											"source": 10,
											"value": "416D6F756E74206D757374206265206C657373207468616E20746F74616C2072"
										},
										{
											"begin": 7933,
											"end": 7951,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 7933,
											"end": 7951,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7933,
											"end": 7951,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7926,
											"end": 7988,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "65666C656374696F6E73"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8004,
											"end": 8022,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 8004,
											"end": 8022,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8004,
											"end": 8022,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7997,
											"end": 8037,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8054,
											"end": 8073,
											"name": "PUSH",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 8054,
											"end": 8073,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7945,
											"end": 8018,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "338"
										},
										{
											"begin": 7673,
											"end": 8079,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7945,
											"end": 8018,
											"name": "tag",
											"source": 9,
											"value": "363"
										},
										{
											"begin": 7945,
											"end": 8018,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8028,
											"end": 8047,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8050,
											"end": 8060,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "366"
										},
										{
											"begin": 8050,
											"end": 8058,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "367"
										},
										{
											"begin": 8050,
											"end": 8060,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 8050,
											"end": 8060,
											"name": "tag",
											"source": 9,
											"value": "366"
										},
										{
											"begin": 8050,
											"end": 8060,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8028,
											"end": 8060,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8077,
											"end": 8101,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "368"
										},
										{
											"begin": 8077,
											"end": 8084,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 8028,
											"end": 8060,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8077,
											"end": 8088,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "369"
										},
										{
											"begin": 8077,
											"end": 8101,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 8077,
											"end": 8101,
											"name": "tag",
											"source": 9,
											"value": "368"
										},
										{
											"begin": 8077,
											"end": 8101,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8070,
											"end": 8101,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 7859,
											"end": 8108,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7859,
											"end": 8108,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 8571,
											"end": 9037,
											"name": "tag",
											"source": 9,
											"value": "141"
										},
										{
											"begin": 8571,
											"end": 9037,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "372"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "335"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "372"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8650,
											"end": 8670,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8650,
											"end": 8670,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 8650,
											"end": 8670,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8650,
											"end": 8670,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8650,
											"end": 8670,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8650,
											"end": 8670,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8650,
											"end": 8661,
											"name": "PUSH",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 8650,
											"end": 8670,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8650,
											"end": 8670,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8650,
											"end": 8670,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 8650,
											"end": 8670,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8650,
											"end": 8670,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 8650,
											"end": 8670,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 8650,
											"end": 8670,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 8650,
											"end": 8670,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 8642,
											"end": 8702,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "374"
										},
										{
											"begin": 8642,
											"end": 8702,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 8642,
											"end": 8702,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 8642,
											"end": 8702,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8642,
											"end": 8702,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8642,
											"end": 8702,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9104,
											"end": 9106,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 8642,
											"end": 8702,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 8642,
											"end": 8702,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8642,
											"end": 8702,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9086,
											"end": 9107,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9143,
											"end": 9145,
											"name": "PUSH",
											"source": 10,
											"value": "1B"
										},
										{
											"begin": 9123,
											"end": 9141,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 9123,
											"end": 9141,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9123,
											"end": 9141,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9116,
											"end": 9146,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9182,
											"end": 9211,
											"name": "PUSH",
											"source": 10,
											"value": "4163636F756E7420697320616C7265616479206578636C756465640000000000"
										},
										{
											"begin": 9162,
											"end": 9180,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 9162,
											"end": 9180,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9162,
											"end": 9180,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9155,
											"end": 9212,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9229,
											"end": 9247,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 9229,
											"end": 9247,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8642,
											"end": 8702,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "338"
										},
										{
											"begin": 8902,
											"end": 9253,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8642,
											"end": 8702,
											"name": "tag",
											"source": 9,
											"value": "374"
										},
										{
											"begin": 8642,
											"end": 8702,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8717,
											"end": 8726,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8712,
											"end": 9031,
											"name": "tag",
											"source": 9,
											"value": "377"
										},
										{
											"begin": 8712,
											"end": 9031,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8736,
											"end": 8745,
											"name": "PUSH",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 8736,
											"end": 8752,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 8732,
											"end": 8752,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8732,
											"end": 8752,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 8712,
											"end": 9031,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 8712,
											"end": 9031,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "378"
										},
										{
											"begin": 8712,
											"end": 9031,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 8793,
											"end": 8800,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8777,
											"end": 8800,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 8777,
											"end": 8786,
											"name": "PUSH",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 8787,
											"end": 8788,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8777,
											"end": 8789,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8777,
											"end": 8789,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 8777,
											"end": 8789,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8777,
											"end": 8789,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 8777,
											"end": 8789,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "381"
										},
										{
											"begin": 8777,
											"end": 8789,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 8777,
											"end": 8789,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "381"
										},
										{
											"begin": 8777,
											"end": 8789,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "382"
										},
										{
											"begin": 8777,
											"end": 8789,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 8777,
											"end": 8789,
											"name": "tag",
											"source": 9,
											"value": "381"
										},
										{
											"begin": 8777,
											"end": 8789,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8777,
											"end": 8789,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8777,
											"end": 8789,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8777,
											"end": 8789,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8777,
											"end": 8789,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8777,
											"end": 8789,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8777,
											"end": 8789,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8777,
											"end": 8789,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8777,
											"end": 8789,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 8777,
											"end": 8789,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8777,
											"end": 8789,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8777,
											"end": 8789,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 8777,
											"end": 8800,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 8773,
											"end": 9021,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 8773,
											"end": 9021,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "384"
										},
										{
											"begin": 8773,
											"end": 9021,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 8835,
											"end": 8844,
											"name": "PUSH",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 8845,
											"end": 8861,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8845,
											"end": 8861,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 8845,
											"end": 8865,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "385"
										},
										{
											"begin": 8845,
											"end": 8865,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8864,
											"end": 8865,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 8864,
											"end": 8865,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8845,
											"end": 8865,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "386"
										},
										{
											"begin": 8845,
											"end": 8865,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 8845,
											"end": 8865,
											"name": "tag",
											"source": 9,
											"value": "385"
										},
										{
											"begin": 8845,
											"end": 8865,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8835,
											"end": 8866,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8835,
											"end": 8866,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 8835,
											"end": 8866,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8835,
											"end": 8866,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 8835,
											"end": 8866,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "388"
										},
										{
											"begin": 8835,
											"end": 8866,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 8835,
											"end": 8866,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "388"
										},
										{
											"begin": 8835,
											"end": 8866,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "382"
										},
										{
											"begin": 8835,
											"end": 8866,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 8835,
											"end": 8866,
											"name": "tag",
											"source": 9,
											"value": "388"
										},
										{
											"begin": 8835,
											"end": 8866,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8835,
											"end": 8866,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8835,
											"end": 8866,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8835,
											"end": 8866,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8835,
											"end": 8866,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8835,
											"end": 8866,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8835,
											"end": 8866,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8835,
											"end": 8866,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8835,
											"end": 8866,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 8835,
											"end": 8866,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8835,
											"end": 8866,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 8820,
											"end": 8829,
											"name": "PUSH",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 8820,
											"end": 8832,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8820,
											"end": 8832,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8835,
											"end": 8866,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8835,
											"end": 8866,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 8835,
											"end": 8866,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 8835,
											"end": 8866,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8830,
											"end": 8831,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 8830,
											"end": 8831,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8820,
											"end": 8832,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8820,
											"end": 8832,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 8820,
											"end": 8832,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "391"
										},
										{
											"begin": 8820,
											"end": 8832,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 8820,
											"end": 8832,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "391"
										},
										{
											"begin": 8820,
											"end": 8832,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "382"
										},
										{
											"begin": 8820,
											"end": 8832,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 8820,
											"end": 8832,
											"name": "tag",
											"source": 9,
											"value": "391"
										},
										{
											"begin": 8820,
											"end": 8832,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8820,
											"end": 8832,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8820,
											"end": 8832,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8820,
											"end": 8832,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8820,
											"end": 8832,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8820,
											"end": 8832,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8820,
											"end": 8832,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8820,
											"end": 8832,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 8820,
											"end": 8832,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 8820,
											"end": 8832,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8820,
											"end": 8832,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8820,
											"end": 8832,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8820,
											"end": 8832,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8820,
											"end": 8866,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8820,
											"end": 8866,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 8820,
											"end": 8866,
											"name": "AND",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8820,
											"end": 8866,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 8820,
											"end": 8866,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 8820,
											"end": 8866,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 8820,
											"end": 8866,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 8820,
											"end": 8866,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8820,
											"end": 8866,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 8884,
											"end": 8900,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8884,
											"end": 8900,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 8884,
											"end": 8900,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 8884,
											"end": 8900,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8884,
											"end": 8900,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8884,
											"end": 8891,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 8884,
											"end": 8900,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8884,
											"end": 8900,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8884,
											"end": 8900,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 8884,
											"end": 8900,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8884,
											"end": 8900,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8884,
											"end": 8900,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 8884,
											"end": 8904,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8884,
											"end": 8904,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8884,
											"end": 8904,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 8922,
											"end": 8933,
											"name": "PUSH",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 8922,
											"end": 8942,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8922,
											"end": 8942,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 8922,
											"end": 8942,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8922,
											"end": 8942,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 8922,
											"end": 8950,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8922,
											"end": 8950,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 8922,
											"end": 8950,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 8922,
											"end": 8950,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8922,
											"end": 8950,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 8968,
											"end": 8977,
											"name": "PUSH",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 8968,
											"end": 8983,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8968,
											"end": 8983,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 8968,
											"end": 8983,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8968,
											"end": 8983,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "394"
										},
										{
											"begin": 8968,
											"end": 8983,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 8968,
											"end": 8983,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "394"
										},
										{
											"begin": 8968,
											"end": 8983,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "395"
										},
										{
											"begin": 8968,
											"end": 8983,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 8968,
											"end": 8983,
											"name": "tag",
											"source": 9,
											"value": "394"
										},
										{
											"begin": 8968,
											"end": 8983,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8968,
											"end": 8983,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8968,
											"end": 8983,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8968,
											"end": 8983,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8968,
											"end": 8983,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8968,
											"end": 8983,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8968,
											"end": 8983,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8968,
											"end": 8983,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 8968,
											"end": 8983,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8968,
											"end": 8983,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 8968,
											"end": 8983,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8968,
											"end": 8983,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8968,
											"end": 8983,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8968,
											"end": 8983,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8968,
											"end": 8983,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 8968,
											"end": 8983,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 8968,
											"end": 8983,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8968,
											"end": 8983,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 8968,
											"end": 8983,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8968,
											"end": 8983,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8968,
											"end": 8983,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 8712,
											"end": 9031,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8571,
											"end": 9037,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8571,
											"end": 9037,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 8773,
											"end": 9021,
											"name": "tag",
											"source": 9,
											"value": "384"
										},
										{
											"begin": 8773,
											"end": 9021,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8754,
											"end": 8757,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8754,
											"end": 8757,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "397"
										},
										{
											"begin": 8754,
											"end": 8757,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8754,
											"end": 8757,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "398"
										},
										{
											"begin": 8754,
											"end": 8757,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 8754,
											"end": 8757,
											"name": "tag",
											"source": 9,
											"value": "397"
										},
										{
											"begin": 8754,
											"end": 8757,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8754,
											"end": 8757,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8754,
											"end": 8757,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8754,
											"end": 8757,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8712,
											"end": 9031,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "377"
										},
										{
											"begin": 8712,
											"end": 9031,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8712,
											"end": 9031,
											"name": "tag",
											"source": 9,
											"value": "378"
										},
										{
											"begin": 8712,
											"end": 9031,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8712,
											"end": 9031,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8571,
											"end": 9037,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8571,
											"end": 9037,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 6104,
											"end": 6393,
											"name": "tag",
											"source": 9,
											"value": "145"
										},
										{
											"begin": 6104,
											"end": 6393,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 6216,
											"end": 6220,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6305,
											"end": 6330,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6305,
											"end": 6330,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6305,
											"end": 6330,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6305,
											"end": 6316,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 6305,
											"end": 6330,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6305,
											"end": 6330,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6305,
											"end": 6330,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6305,
											"end": 6330,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6305,
											"end": 6330,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6305,
											"end": 6330,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6305,
											"end": 6330,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 6305,
											"end": 6330,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6305,
											"end": 6339,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 6305,
											"end": 6339,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6305,
											"end": 6339,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 6305,
											"end": 6339,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6305,
											"end": 6339,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6305,
											"end": 6339,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6305,
											"end": 6339,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6305,
											"end": 6339,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6305,
											"end": 6339,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 6305,
											"end": 6339,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 6216,
											"end": 6220,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6216,
											"end": 6220,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6236,
											"end": 6365,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "348"
										},
										{
											"begin": 6236,
											"end": 6365,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6284,
											"end": 6291,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 6284,
											"end": 6291,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6305,
											"end": 6355,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "359"
										},
										{
											"begin": 6305,
											"end": 6355,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6344,
											"end": 6354,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 6305,
											"end": 6343,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "404"
										},
										{
											"begin": 6305,
											"end": 6355,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 7006,
											"end": 7381,
											"name": "tag",
											"source": 9,
											"value": "154"
										},
										{
											"begin": 7006,
											"end": 7381,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 7057,
											"end": 7071,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7105,
											"end": 7124,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7105,
											"end": 7124,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7105,
											"end": 7124,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7105,
											"end": 7116,
											"name": "PUSH",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 7105,
											"end": 7124,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7105,
											"end": 7124,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7105,
											"end": 7124,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 7105,
											"end": 7124,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7105,
											"end": 7124,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 7105,
											"end": 7124,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 7105,
											"end": 7124,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 7105,
											"end": 7124,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 7104,
											"end": 7124,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 7096,
											"end": 7173,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "407"
										},
										{
											"begin": 7096,
											"end": 7173,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 7096,
											"end": 7173,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 7096,
											"end": 7173,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7096,
											"end": 7173,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7096,
											"end": 7173,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 14215,
											"end": 14217,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7096,
											"end": 7173,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 7096,
											"end": 7173,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7096,
											"end": 7173,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14197,
											"end": 14218,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 14254,
											"end": 14256,
											"name": "PUSH",
											"source": 10,
											"value": "2C"
										},
										{
											"begin": 14234,
											"end": 14252,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 14234,
											"end": 14252,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14234,
											"end": 14252,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14227,
											"end": 14257,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 14293,
											"end": 14327,
											"name": "PUSH",
											"source": 10,
											"value": "4578636C75646564206164647265737365732063616E6E6F742063616C6C2074"
										},
										{
											"begin": 14273,
											"end": 14291,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 14273,
											"end": 14291,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14273,
											"end": 14291,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14266,
											"end": 14328,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3434B990333AB731BA34B7B7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14344,
											"end": 14362,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 14344,
											"end": 14362,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14344,
											"end": 14362,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14337,
											"end": 14379,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 14396,
											"end": 14415,
											"name": "PUSH",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 14396,
											"end": 14415,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7096,
											"end": 7173,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "338"
										},
										{
											"begin": 14013,
											"end": 14421,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7096,
											"end": 7173,
											"name": "tag",
											"source": 9,
											"value": "407"
										},
										{
											"begin": 7096,
											"end": 7173,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7184,
											"end": 7199,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7213,
											"end": 7232,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "410"
										},
										{
											"begin": 7224,
											"end": 7231,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 7213,
											"end": 7223,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "411"
										},
										{
											"begin": 7213,
											"end": 7232,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 7213,
											"end": 7232,
											"name": "tag",
											"source": 9,
											"value": "410"
										},
										{
											"begin": 7213,
											"end": 7232,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7260,
											"end": 7275,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 7260,
											"end": 7275,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 7260,
											"end": 7275,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7260,
											"end": 7275,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7260,
											"end": 7275,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7260,
											"end": 7275,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7260,
											"end": 7267,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 7260,
											"end": 7275,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7260,
											"end": 7275,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7260,
											"end": 7275,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 7260,
											"end": 7275,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7260,
											"end": 7275,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 7260,
											"end": 7275,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 7183,
											"end": 7232,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7183,
											"end": 7232,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7260,
											"end": 7288,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "412"
										},
										{
											"begin": 7260,
											"end": 7288,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7260,
											"end": 7275,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7183,
											"end": 7232,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7260,
											"end": 7279,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "413"
										},
										{
											"begin": 7260,
											"end": 7288,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 7260,
											"end": 7288,
											"name": "tag",
											"source": 9,
											"value": "412"
										},
										{
											"begin": 7260,
											"end": 7288,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7242,
											"end": 7257,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 7242,
											"end": 7257,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 7242,
											"end": 7257,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7242,
											"end": 7257,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7242,
											"end": 7257,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7242,
											"end": 7257,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7242,
											"end": 7249,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 7242,
											"end": 7257,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7242,
											"end": 7257,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7242,
											"end": 7257,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 7242,
											"end": 7257,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7242,
											"end": 7257,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 7242,
											"end": 7288,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 7308,
											"end": 7315,
											"name": "PUSH",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 7308,
											"end": 7315,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 7308,
											"end": 7328,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "414"
										},
										{
											"begin": 7308,
											"end": 7328,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7320,
											"end": 7327,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7308,
											"end": 7319,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "413"
										},
										{
											"begin": 7308,
											"end": 7328,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 7308,
											"end": 7328,
											"name": "tag",
											"source": 9,
											"value": "414"
										},
										{
											"begin": 7308,
											"end": 7328,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7298,
											"end": 7305,
											"name": "PUSH",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 7298,
											"end": 7328,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 7351,
											"end": 7361,
											"name": "PUSH",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 7351,
											"end": 7361,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 7351,
											"end": 7374,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "415"
										},
										{
											"begin": 7351,
											"end": 7374,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7366,
											"end": 7373,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 7351,
											"end": 7365,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "404"
										},
										{
											"begin": 7351,
											"end": 7374,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 7351,
											"end": 7374,
											"name": "tag",
											"source": 9,
											"value": "415"
										},
										{
											"begin": 7351,
											"end": 7374,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7338,
											"end": 7348,
											"name": "PUSH",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 7338,
											"end": 7374,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7006,
											"end": 7381,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 22407,
											"end": 22516,
											"name": "tag",
											"source": 9,
											"value": "158"
										},
										{
											"begin": 22407,
											"end": 22516,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "417"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "335"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "417"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 22475,
											"end": 22502,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 22475,
											"end": 22502,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 22475,
											"end": 22502,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 22475,
											"end": 22502,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 22475,
											"end": 22502,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 22475,
											"end": 22493,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 22475,
											"end": 22502,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 22475,
											"end": 22502,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 22475,
											"end": 22502,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 22475,
											"end": 22502,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 22475,
											"end": 22502,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 22475,
											"end": 22509,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 22475,
											"end": 22509,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 22475,
											"end": 22509,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 22505,
											"end": 22509,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 22475,
											"end": 22509,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 22475,
											"end": 22509,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 22475,
											"end": 22509,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 22407,
											"end": 22516,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 7387,
											"end": 7853,
											"name": "tag",
											"source": 9,
											"value": "163"
										},
										{
											"begin": 7387,
											"end": 7853,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7502,
											"end": 7509,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7544,
											"end": 7551,
											"name": "PUSH",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 7544,
											"end": 7551,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 7533,
											"end": 7540,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 7533,
											"end": 7551,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 7533,
											"end": 7551,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 7525,
											"end": 7587,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "420"
										},
										{
											"begin": 7525,
											"end": 7587,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 7525,
											"end": 7587,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 7525,
											"end": 7587,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7525,
											"end": 7587,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7525,
											"end": 7587,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10633,
											"end": 10635,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7525,
											"end": 7587,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 7525,
											"end": 7587,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7525,
											"end": 7587,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10615,
											"end": 10636,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10672,
											"end": 10674,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 10652,
											"end": 10670,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 10652,
											"end": 10670,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10652,
											"end": 10670,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10645,
											"end": 10675,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10711,
											"end": 10744,
											"name": "PUSH",
											"source": 10,
											"value": "416D6F756E74206D757374206265206C657373207468616E20737570706C7900"
										},
										{
											"begin": 10691,
											"end": 10709,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 10691,
											"end": 10709,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10691,
											"end": 10709,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10684,
											"end": 10745,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10762,
											"end": 10780,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 10762,
											"end": 10780,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7525,
											"end": 7587,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "338"
										},
										{
											"begin": 10431,
											"end": 10786,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7525,
											"end": 7587,
											"name": "tag",
											"source": 9,
											"value": "420"
										},
										{
											"begin": 7525,
											"end": 7587,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7602,
											"end": 7619,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7597,
											"end": 7847,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "423"
										},
										{
											"begin": 7597,
											"end": 7847,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 7636,
											"end": 7651,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7665,
											"end": 7684,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "424"
										},
										{
											"begin": 7676,
											"end": 7683,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 7665,
											"end": 7675,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "411"
										},
										{
											"begin": 7665,
											"end": 7684,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 7665,
											"end": 7684,
											"name": "tag",
											"source": 9,
											"value": "424"
										},
										{
											"begin": 7665,
											"end": 7684,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7635,
											"end": 7684,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 7635,
											"end": 7684,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7698,
											"end": 7712,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "347"
										},
										{
											"begin": 7698,
											"end": 7712,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7698,
											"end": 7712,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7597,
											"end": 7847,
											"name": "tag",
											"source": 9,
											"value": "423"
										},
										{
											"begin": 7597,
											"end": 7847,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7746,
											"end": 7769,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7781,
											"end": 7800,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "426"
										},
										{
											"begin": 7792,
											"end": 7799,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 7781,
											"end": 7791,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "411"
										},
										{
											"begin": 7781,
											"end": 7800,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 7781,
											"end": 7800,
											"name": "tag",
											"source": 9,
											"value": "426"
										},
										{
											"begin": 7781,
											"end": 7800,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7743,
											"end": 7800,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 7743,
											"end": 7800,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7814,
											"end": 7836,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "347"
										},
										{
											"begin": 7814,
											"end": 7836,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7814,
											"end": 7836,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 23120,
											"end": 23316,
											"name": "tag",
											"source": 9,
											"value": "168"
										},
										{
											"begin": 23120,
											"end": 23316,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "428"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "335"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "428"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23227,
											"end": 23229,
											"name": "PUSH",
											"source": 9,
											"value": "A"
										},
										{
											"begin": 23211,
											"end": 23223,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 23211,
											"end": 23229,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 23211,
											"end": 23229,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 23203,
											"end": 23271,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "430"
										},
										{
											"begin": 23203,
											"end": 23271,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 23203,
											"end": 23271,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 23203,
											"end": 23271,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 23203,
											"end": 23271,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 23203,
											"end": 23271,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9874,
											"end": 9876,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 23203,
											"end": 23271,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 23203,
											"end": 23271,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 23203,
											"end": 23271,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9856,
											"end": 9877,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9913,
											"end": 9915,
											"name": "PUSH",
											"source": 10,
											"value": "25"
										},
										{
											"begin": 9893,
											"end": 9911,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 9893,
											"end": 9911,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9893,
											"end": 9911,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9886,
											"end": 9916,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9952,
											"end": 9986,
											"name": "PUSH",
											"source": 10,
											"value": "4D61726B6574696E67206665652063616E6E6F74206265206D6F726520746861"
										},
										{
											"begin": 9932,
											"end": 9950,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 9932,
											"end": 9950,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9932,
											"end": 9950,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9925,
											"end": 9987,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6E20313025"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10003,
											"end": 10021,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 10003,
											"end": 10021,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10003,
											"end": 10021,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9996,
											"end": 10031,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10048,
											"end": 10067,
											"name": "PUSH",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 10048,
											"end": 10067,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 23203,
											"end": 23271,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "338"
										},
										{
											"begin": 9672,
											"end": 10073,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 23203,
											"end": 23271,
											"name": "tag",
											"source": 9,
											"value": "430"
										},
										{
											"begin": 23203,
											"end": 23271,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 23281,
											"end": 23294,
											"name": "PUSH",
											"source": 9,
											"value": "13"
										},
										{
											"begin": 23281,
											"end": 23309,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 23120,
											"end": 23316,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 24832,
											"end": 25061,
											"name": "tag",
											"source": 9,
											"value": "173"
										},
										{
											"begin": 24832,
											"end": 25061,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1247,
											"end": 1254,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24908,
											"end": 24918,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 24908,
											"end": 24929,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 24908,
											"end": 24929,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 24908,
											"end": 24958,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "435"
										},
										{
											"begin": 24908,
											"end": 24958,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 24947,
											"end": 24958,
											"name": "PUSH",
											"source": 9,
											"value": "1D"
										},
										{
											"begin": 24947,
											"end": 24958,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 24947,
											"end": 24958,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 24947,
											"end": 24958,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 24947,
											"end": 24958,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 24947,
											"end": 24958,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 24933,
											"end": 24943,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 24933,
											"end": 24958,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 24908,
											"end": 24958,
											"name": "tag",
											"source": 9,
											"value": "435"
										},
										{
											"begin": 24908,
											"end": 24958,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 24887,
											"end": 25018,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "436"
										},
										{
											"begin": 24887,
											"end": 25018,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 24887,
											"end": 25018,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 24887,
											"end": 25018,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 24887,
											"end": 25018,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 24887,
											"end": 25018,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 24887,
											"end": 25018,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 24887,
											"end": 25018,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 24887,
											"end": 25018,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "338"
										},
										{
											"begin": 24887,
											"end": 25018,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 24887,
											"end": 25018,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "438"
										},
										{
											"begin": 24887,
											"end": 25018,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 24887,
											"end": 25018,
											"name": "tag",
											"source": 9,
											"value": "436"
										},
										{
											"begin": 24887,
											"end": 25018,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 25028,
											"end": 25044,
											"name": "PUSH",
											"source": 9,
											"value": "1B"
										},
										{
											"begin": 25028,
											"end": 25054,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 25028,
											"end": 25054,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 25028,
											"end": 25054,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 25028,
											"end": 25054,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 25028,
											"end": 25054,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 25028,
											"end": 25054,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 25028,
											"end": 25054,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 25028,
											"end": 25054,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 25028,
											"end": 25054,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 25028,
											"end": 25054,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 25028,
											"end": 25054,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 25028,
											"end": 25054,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 24832,
											"end": 25061,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 8114,
											"end": 8565,
											"name": "tag",
											"source": 9,
											"value": "181"
										},
										{
											"begin": 8114,
											"end": 8565,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "440"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "335"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "440"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8225,
											"end": 8240,
											"name": "PUSH",
											"source": 9,
											"value": "1E"
										},
										{
											"begin": 8225,
											"end": 8240,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8206,
											"end": 8241,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8206,
											"end": 8241,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8206,
											"end": 8241,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 8225,
											"end": 8240,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8225,
											"end": 8240,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 8206,
											"end": 8241,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 8206,
											"end": 8241,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 8185,
											"end": 8301,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "442"
										},
										{
											"begin": 8185,
											"end": 8301,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 8185,
											"end": 8301,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 8185,
											"end": 8301,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8185,
											"end": 8301,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8185,
											"end": 8301,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 13812,
											"end": 13814,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 8185,
											"end": 8301,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 8185,
											"end": 8301,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8185,
											"end": 8301,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13794,
											"end": 13815,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 13851,
											"end": 13853,
											"name": "PUSH",
											"source": 10,
											"value": "22"
										},
										{
											"begin": 13831,
											"end": 13849,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 13831,
											"end": 13849,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13831,
											"end": 13849,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13824,
											"end": 13854,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 13890,
											"end": 13924,
											"name": "PUSH",
											"source": 10,
											"value": "57652063616E206E6F74206578636C7564652050616E63616B6520726F757465"
										},
										{
											"begin": 13870,
											"end": 13888,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 13870,
											"end": 13888,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13870,
											"end": 13888,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13863,
											"end": 13925,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3917"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13941,
											"end": 13959,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 13941,
											"end": 13959,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13941,
											"end": 13959,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13934,
											"end": 13966,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 13983,
											"end": 14002,
											"name": "PUSH",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 13983,
											"end": 14002,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8185,
											"end": 8301,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "338"
										},
										{
											"begin": 13610,
											"end": 14008,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8185,
											"end": 8301,
											"name": "tag",
											"source": 9,
											"value": "442"
										},
										{
											"begin": 8185,
											"end": 8301,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8320,
											"end": 8340,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8320,
											"end": 8340,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 8320,
											"end": 8340,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8320,
											"end": 8340,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8320,
											"end": 8340,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8320,
											"end": 8340,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8320,
											"end": 8331,
											"name": "PUSH",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 8320,
											"end": 8340,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8320,
											"end": 8340,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8320,
											"end": 8340,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 8320,
											"end": 8340,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8320,
											"end": 8340,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 8320,
											"end": 8340,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 8320,
											"end": 8340,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 8320,
											"end": 8340,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 8319,
											"end": 8340,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 8311,
											"end": 8372,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "445"
										},
										{
											"begin": 8311,
											"end": 8372,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 8311,
											"end": 8372,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 8311,
											"end": 8372,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8311,
											"end": 8372,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8311,
											"end": 8372,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9104,
											"end": 9106,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 8311,
											"end": 8372,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 8311,
											"end": 8372,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8311,
											"end": 8372,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9086,
											"end": 9107,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9143,
											"end": 9145,
											"name": "PUSH",
											"source": 10,
											"value": "1B"
										},
										{
											"begin": 9123,
											"end": 9141,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 9123,
											"end": 9141,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9123,
											"end": 9141,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9116,
											"end": 9146,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9182,
											"end": 9211,
											"name": "PUSH",
											"source": 10,
											"value": "4163636F756E7420697320616C7265616479206578636C756465640000000000"
										},
										{
											"begin": 9162,
											"end": 9180,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 9162,
											"end": 9180,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9162,
											"end": 9180,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9155,
											"end": 9212,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9229,
											"end": 9247,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 9229,
											"end": 9247,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8311,
											"end": 8372,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "338"
										},
										{
											"begin": 8902,
											"end": 9253,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8311,
											"end": 8372,
											"name": "tag",
											"source": 9,
											"value": "445"
										},
										{
											"begin": 8311,
											"end": 8372,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8386,
											"end": 8402,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8386,
											"end": 8402,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 8405,
											"end": 8406,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8386,
											"end": 8402,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8386,
											"end": 8402,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8386,
											"end": 8402,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8386,
											"end": 8393,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 8386,
											"end": 8402,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8386,
											"end": 8402,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8386,
											"end": 8402,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 8386,
											"end": 8402,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8386,
											"end": 8402,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 8386,
											"end": 8402,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 8386,
											"end": 8406,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 8382,
											"end": 8489,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "447"
										},
										{
											"begin": 8382,
											"end": 8489,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8461,
											"end": 8477,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8461,
											"end": 8477,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 8461,
											"end": 8477,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8461,
											"end": 8477,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8461,
											"end": 8477,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8461,
											"end": 8477,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8461,
											"end": 8468,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 8461,
											"end": 8477,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8461,
											"end": 8477,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8461,
											"end": 8477,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 8461,
											"end": 8477,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8461,
											"end": 8477,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 8461,
											"end": 8477,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 8441,
											"end": 8478,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "448"
										},
										{
											"begin": 8441,
											"end": 8478,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8441,
											"end": 8460,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "130"
										},
										{
											"begin": 8441,
											"end": 8478,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 8441,
											"end": 8478,
											"name": "tag",
											"source": 9,
											"value": "448"
										},
										{
											"begin": 8441,
											"end": 8478,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8422,
											"end": 8438,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8422,
											"end": 8438,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 8422,
											"end": 8438,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8422,
											"end": 8438,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8422,
											"end": 8438,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8422,
											"end": 8438,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8422,
											"end": 8429,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 8422,
											"end": 8438,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8422,
											"end": 8438,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8422,
											"end": 8438,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 8422,
											"end": 8438,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8422,
											"end": 8438,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 8422,
											"end": 8478,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 8382,
											"end": 8489,
											"name": "tag",
											"source": 9,
											"value": "447"
										},
										{
											"begin": 8382,
											"end": 8489,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8498,
											"end": 8518,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 8498,
											"end": 8518,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8498,
											"end": 8518,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8498,
											"end": 8518,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8498,
											"end": 8518,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8498,
											"end": 8509,
											"name": "PUSH",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 8498,
											"end": 8518,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8498,
											"end": 8518,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8498,
											"end": 8518,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 8498,
											"end": 8518,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8498,
											"end": 8518,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 8498,
											"end": 8525,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8498,
											"end": 8525,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 8498,
											"end": 8525,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 8521,
											"end": 8525,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 8498,
											"end": 8525,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8498,
											"end": 8525,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8498,
											"end": 8525,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 8498,
											"end": 8525,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8498,
											"end": 8525,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8498,
											"end": 8525,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 8535,
											"end": 8544,
											"name": "PUSH",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 8535,
											"end": 8558,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8535,
											"end": 8558,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 8535,
											"end": 8558,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8535,
											"end": 8558,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8535,
											"end": 8558,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8535,
											"end": 8558,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8535,
											"end": 8558,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 8535,
											"end": 8558,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8535,
											"end": 8558,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8535,
											"end": 8558,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8535,
											"end": 8558,
											"name": "PUSH",
											"source": 9,
											"value": "F652222313E28459528D920B65115C16C04F3EFC82AAEDC97BE59F3F377C0D3F"
										},
										{
											"begin": 8535,
											"end": 8558,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8535,
											"end": 8558,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8535,
											"end": 8558,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 8535,
											"end": 8558,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 8535,
											"end": 8558,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8535,
											"end": 8558,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8535,
											"end": 8558,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 8535,
											"end": 8558,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8535,
											"end": 8558,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 8114,
											"end": 8565,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 23918,
											"end": 24139,
											"name": "tag",
											"source": 9,
											"value": "194"
										},
										{
											"begin": 23918,
											"end": 24139,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "452"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "335"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "452"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24037,
											"end": 24039,
											"name": "PUSH",
											"source": 9,
											"value": "A"
										},
										{
											"begin": 24017,
											"end": 24033,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 24017,
											"end": 24039,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 24017,
											"end": 24039,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 24009,
											"end": 24086,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "454"
										},
										{
											"begin": 24009,
											"end": 24086,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 24009,
											"end": 24086,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 24009,
											"end": 24086,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 24009,
											"end": 24086,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 24009,
											"end": 24086,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10993,
											"end": 10995,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 24009,
											"end": 24086,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 24009,
											"end": 24086,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 24009,
											"end": 24086,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10975,
											"end": 10996,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11032,
											"end": 11034,
											"name": "PUSH",
											"source": 10,
											"value": "2A"
										},
										{
											"begin": 11012,
											"end": 11030,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 11012,
											"end": 11030,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11012,
											"end": 11030,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11005,
											"end": 11035,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11071,
											"end": 11105,
											"name": "PUSH",
											"source": 10,
											"value": "53656C6C206C6971756964697479206665652063616E6E6F74206265206D6F72"
										},
										{
											"begin": 11051,
											"end": 11069,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 11051,
											"end": 11069,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11051,
											"end": 11069,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11044,
											"end": 11106,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "65207468616E20313025"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11122,
											"end": 11140,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 11122,
											"end": 11140,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11122,
											"end": 11140,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11115,
											"end": 11155,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11172,
											"end": 11191,
											"name": "PUSH",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 11172,
											"end": 11191,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 24009,
											"end": 24086,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "338"
										},
										{
											"begin": 10791,
											"end": 11197,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 24009,
											"end": 24086,
											"name": "tag",
											"source": 9,
											"value": "454"
										},
										{
											"begin": 24009,
											"end": 24086,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 24096,
											"end": 24113,
											"name": "PUSH",
											"source": 9,
											"value": "17"
										},
										{
											"begin": 24096,
											"end": 24132,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 23918,
											"end": 24139,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 22636,
											"end": 22746,
											"name": "tag",
											"source": 9,
											"value": "198"
										},
										{
											"begin": 22636,
											"end": 22746,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "458"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "335"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "458"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22712,
											"end": 22727,
											"name": "PUSH",
											"source": 9,
											"value": "14"
										},
										{
											"begin": 22712,
											"end": 22739,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 22712,
											"end": 22739,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 22712,
											"end": 22739,
											"name": "AND",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 22712,
											"end": 22739,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 22712,
											"end": 22739,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 22712,
											"end": 22739,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 22712,
											"end": 22739,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 22712,
											"end": 22739,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 22712,
											"end": 22739,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 22712,
											"end": 22739,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 22712,
											"end": 22739,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 22712,
											"end": 22739,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 22712,
											"end": 22739,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 22636,
											"end": 22746,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 4472,
											"end": 4579,
											"name": "tag",
											"source": 9,
											"value": "202"
										},
										{
											"begin": 4472,
											"end": 4579,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "461"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "335"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "461"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4544,
											"end": 4553,
											"name": "PUSH",
											"source": 9,
											"value": "22"
										},
										{
											"begin": 4544,
											"end": 4572,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4544,
											"end": 4572,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4544,
											"end": 4572,
											"name": "AND",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4544,
											"end": 4572,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 4544,
											"end": 4572,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4544,
											"end": 4572,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 4544,
											"end": 4572,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4544,
											"end": 4572,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4544,
											"end": 4572,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4544,
											"end": 4572,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4544,
											"end": 4572,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 4544,
											"end": 4572,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4544,
											"end": 4572,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 4472,
											"end": 4579,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 4949,
											"end": 5144,
											"name": "tag",
											"source": 9,
											"value": "219"
										},
										{
											"begin": 4949,
											"end": 5144,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5038,
											"end": 5058,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5038,
											"end": 5058,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5015,
											"end": 5022,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5038,
											"end": 5058,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5038,
											"end": 5058,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5038,
											"end": 5058,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5038,
											"end": 5049,
											"name": "PUSH",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 5038,
											"end": 5058,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5038,
											"end": 5058,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5038,
											"end": 5058,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5038,
											"end": 5058,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5038,
											"end": 5058,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 5038,
											"end": 5058,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 5038,
											"end": 5058,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 5038,
											"end": 5058,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5034,
											"end": 5083,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 5034,
											"end": 5083,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "464"
										},
										{
											"begin": 5034,
											"end": 5083,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5067,
											"end": 5083,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5067,
											"end": 5083,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5067,
											"end": 5083,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5067,
											"end": 5083,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5067,
											"end": 5083,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5067,
											"end": 5074,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 5067,
											"end": 5083,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5067,
											"end": 5083,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5067,
											"end": 5083,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5067,
											"end": 5083,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5067,
											"end": 5083,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 5067,
											"end": 5083,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 5067,
											"end": 5083,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4949,
											"end": 5144,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 5034,
											"end": 5083,
											"name": "tag",
											"source": 9,
											"value": "464"
										},
										{
											"begin": 5034,
											"end": 5083,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5120,
											"end": 5136,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5120,
											"end": 5136,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5120,
											"end": 5136,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5120,
											"end": 5136,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5120,
											"end": 5136,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5120,
											"end": 5136,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5120,
											"end": 5127,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 5120,
											"end": 5136,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5120,
											"end": 5136,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5120,
											"end": 5136,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5120,
											"end": 5136,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5120,
											"end": 5136,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 5120,
											"end": 5136,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 5100,
											"end": 5137,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "347"
										},
										{
											"begin": 5100,
											"end": 5137,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5100,
											"end": 5119,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "130"
										},
										{
											"begin": 5100,
											"end": 5137,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "tag",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "467"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "335"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "467"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1895,
											"end": 1925,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "469"
										},
										{
											"begin": 1922,
											"end": 1923,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1895,
											"end": 1913,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "470"
										},
										{
											"begin": 1895,
											"end": 1925,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1895,
											"end": 1925,
											"name": "tag",
											"source": 0,
											"value": "469"
										},
										{
											"begin": 1895,
											"end": 1925,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 4340,
											"end": 4466,
											"name": "tag",
											"source": 9,
											"value": "226"
										},
										{
											"begin": 4340,
											"end": 4466,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "472"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "335"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "472"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4409,
											"end": 4425,
											"name": "PUSH",
											"source": 9,
											"value": "22"
										},
										{
											"begin": 4409,
											"end": 4425,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4409,
											"end": 4425,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4409,
											"end": 4425,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 4409,
											"end": 4425,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 4409,
											"end": 4425,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4408,
											"end": 4425,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4400,
											"end": 4426,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "474"
										},
										{
											"begin": 4400,
											"end": 4426,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4400,
											"end": 4426,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4400,
											"end": 4426,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4400,
											"end": 4426,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 4400,
											"end": 4426,
											"name": "tag",
											"source": 9,
											"value": "474"
										},
										{
											"begin": 4400,
											"end": 4426,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4436,
											"end": 4452,
											"name": "PUSH",
											"source": 9,
											"value": "22"
										},
										{
											"begin": 4436,
											"end": 4459,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4436,
											"end": 4459,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4436,
											"end": 4459,
											"name": "AND",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4436,
											"end": 4459,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 4436,
											"end": 4459,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4436,
											"end": 4459,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 4340,
											"end": 4466,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 22918,
											"end": 23114,
											"name": "tag",
											"source": 9,
											"value": "256"
										},
										{
											"begin": 22918,
											"end": 23114,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "478"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "335"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "478"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23025,
											"end": 23027,
											"name": "PUSH",
											"source": 9,
											"value": "A"
										},
										{
											"begin": 23009,
											"end": 23021,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 23009,
											"end": 23027,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 23009,
											"end": 23027,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 23001,
											"end": 23069,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "480"
										},
										{
											"begin": 23001,
											"end": 23069,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 23001,
											"end": 23069,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 23001,
											"end": 23069,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 23001,
											"end": 23069,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 23001,
											"end": 23069,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 15031,
											"end": 15033,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 23001,
											"end": 23069,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 23001,
											"end": 23069,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 23001,
											"end": 23069,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 15013,
											"end": 15034,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 15070,
											"end": 15072,
											"name": "PUSH",
											"source": 10,
											"value": "25"
										},
										{
											"begin": 15050,
											"end": 15068,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 15050,
											"end": 15068,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15050,
											"end": 15068,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15043,
											"end": 15073,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 15109,
											"end": 15143,
											"name": "PUSH",
											"source": 10,
											"value": "4C6971756964697479206665652063616E6E6F74206265206D6F726520746861"
										},
										{
											"begin": 15089,
											"end": 15107,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 15089,
											"end": 15107,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15089,
											"end": 15107,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15082,
											"end": 15144,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6E20313025"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 15160,
											"end": 15178,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 15160,
											"end": 15178,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15160,
											"end": 15178,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15153,
											"end": 15188,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 15205,
											"end": 15224,
											"name": "PUSH",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 15205,
											"end": 15224,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 23001,
											"end": 23069,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "338"
										},
										{
											"begin": 14829,
											"end": 15230,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 23001,
											"end": 23069,
											"name": "tag",
											"source": 9,
											"value": "480"
										},
										{
											"begin": 23001,
											"end": 23069,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 23079,
											"end": 23092,
											"name": "PUSH",
											"source": 9,
											"value": "F"
										},
										{
											"begin": 23079,
											"end": 23107,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 22918,
											"end": 23114,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 4672,
											"end": 4757,
											"name": "tag",
											"source": 9,
											"value": "259"
										},
										{
											"begin": 4672,
											"end": 4757,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4711,
											"end": 4724,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 4743,
											"end": 4750,
											"name": "PUSH",
											"source": 9,
											"value": "B"
										},
										{
											"begin": 4736,
											"end": 4750,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4736,
											"end": 4750,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 4736,
											"end": 4750,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "341"
										},
										{
											"begin": 4736,
											"end": 4750,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4736,
											"end": 4750,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "342"
										},
										{
											"begin": 4736,
											"end": 4750,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 24336,
											"end": 24652,
											"name": "tag",
											"source": 9,
											"value": "264"
										},
										{
											"begin": 24336,
											"end": 24652,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "490"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "335"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "490"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24454,
											"end": 24455,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 24432,
											"end": 24450,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 24432,
											"end": 24455,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 24432,
											"end": 24455,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 24424,
											"end": 24505,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "492"
										},
										{
											"begin": 24424,
											"end": 24505,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 24424,
											"end": 24505,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 24424,
											"end": 24505,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 24424,
											"end": 24505,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 24424,
											"end": 24505,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9460,
											"end": 9462,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 24424,
											"end": 24505,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 24424,
											"end": 24505,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 24424,
											"end": 24505,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9442,
											"end": 9463,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9499,
											"end": 9501,
											"name": "PUSH",
											"source": 10,
											"value": "2D"
										},
										{
											"begin": 9479,
											"end": 9497,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 9479,
											"end": 9497,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9479,
											"end": 9497,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9472,
											"end": 9502,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9538,
											"end": 9572,
											"name": "PUSH",
											"source": 10,
											"value": "4D617820686F6C64696E672070657263656E74732063616E6E6F74206265206C"
										},
										{
											"begin": 9518,
											"end": 9536,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 9518,
											"end": 9536,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9518,
											"end": 9536,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9511,
											"end": 9573,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "657373207468616E20302E3125"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "98"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9589,
											"end": 9607,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 9589,
											"end": 9607,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9589,
											"end": 9607,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9582,
											"end": 9625,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9642,
											"end": 9661,
											"name": "PUSH",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 9642,
											"end": 9661,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 24424,
											"end": 24505,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "338"
										},
										{
											"begin": 9258,
											"end": 9667,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 24424,
											"end": 24505,
											"name": "tag",
											"source": 9,
											"value": "492"
										},
										{
											"begin": 24424,
											"end": 24505,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 24545,
											"end": 24547,
											"name": "PUSH",
											"source": 9,
											"value": "1E"
										},
										{
											"begin": 24523,
											"end": 24541,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 24523,
											"end": 24547,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 24523,
											"end": 24547,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 24515,
											"end": 24595,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "495"
										},
										{
											"begin": 24515,
											"end": 24595,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 24515,
											"end": 24595,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 24515,
											"end": 24595,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 24515,
											"end": 24595,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 24515,
											"end": 24595,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12170,
											"end": 12172,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 24515,
											"end": 24595,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 24515,
											"end": 24595,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 24515,
											"end": 24595,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12152,
											"end": 12173,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12209,
											"end": 12211,
											"name": "PUSH",
											"source": 10,
											"value": "2B"
										},
										{
											"begin": 12189,
											"end": 12207,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 12189,
											"end": 12207,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12189,
											"end": 12207,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12182,
											"end": 12212,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12248,
											"end": 12282,
											"name": "PUSH",
											"source": 10,
											"value": "4D617820686F6C64696E672070657263656E74732063616E6E6F74206265206D"
										},
										{
											"begin": 12228,
											"end": 12246,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 12228,
											"end": 12246,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12228,
											"end": 12246,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12221,
											"end": 12283,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6F7265207468616E203325"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12299,
											"end": 12317,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 12299,
											"end": 12317,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12299,
											"end": 12317,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12292,
											"end": 12333,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12350,
											"end": 12369,
											"name": "PUSH",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 12350,
											"end": 12369,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 24515,
											"end": 24595,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "338"
										},
										{
											"begin": 11968,
											"end": 12375,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 24515,
											"end": 24595,
											"name": "tag",
											"source": 9,
											"value": "495"
										},
										{
											"begin": 24515,
											"end": 24595,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 24605,
											"end": 24624,
											"name": "PUSH",
											"source": 9,
											"value": "1A"
										},
										{
											"begin": 24605,
											"end": 24645,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 24336,
											"end": 24652,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 6399,
											"end": 6785,
											"name": "tag",
											"source": 9,
											"value": "268"
										},
										{
											"begin": 6399,
											"end": 6785,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6516,
											"end": 6520,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6536,
											"end": 6757,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "348"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 6584,
											"end": 6591,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 6605,
											"end": 6747,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "359"
										},
										{
											"begin": 6661,
											"end": 6676,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 6605,
											"end": 6747,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6605,
											"end": 6747,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 6605,
											"end": 6747,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6605,
											"end": 6747,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 6605,
											"end": 6747,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6605,
											"end": 6747,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6605,
											"end": 6747,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6605,
											"end": 6747,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6605,
											"end": 6747,
											"name": "PUSH",
											"source": 9,
											"value": "25"
										},
										{
											"begin": 6605,
											"end": 6747,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6605,
											"end": 6747,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6605,
											"end": 6747,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6605,
											"end": 6747,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6605,
											"end": 6747,
											"name": "PUSH data",
											"source": 9,
											"value": "B7060B3538DCD3DDC8A941C91636A8115A1AA46914747FD9809D543BBB46CD22"
										},
										{
											"begin": 6605,
											"end": 6747,
											"name": "PUSH",
											"source": 9,
											"value": "25"
										},
										{
											"begin": 6605,
											"end": 6747,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6605,
											"end": 6747,
											"name": "CODECOPY",
											"source": 9
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 6605,
											"end": 6630,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6605,
											"end": 6630,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6605,
											"end": 6630,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6605,
											"end": 6630,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6605,
											"end": 6616,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 6605,
											"end": 6630,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6605,
											"end": 6630,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6605,
											"end": 6630,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6605,
											"end": 6630,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6605,
											"end": 6630,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6605,
											"end": 6630,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6605,
											"end": 6630,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 6605,
											"end": 6630,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6605,
											"end": 6639,
											"name": "DUP14",
											"source": 9
										},
										{
											"begin": 6605,
											"end": 6639,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6605,
											"end": 6639,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 6605,
											"end": 6639,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6605,
											"end": 6639,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6605,
											"end": 6639,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6605,
											"end": 6639,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6605,
											"end": 6639,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6605,
											"end": 6639,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 6605,
											"end": 6639,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 6605,
											"end": 6639,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6605,
											"end": 6639,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6605,
											"end": 6643,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "361"
										},
										{
											"begin": 6605,
											"end": 6747,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 5150,
											"end": 5314,
											"name": "tag",
											"source": 9,
											"value": "273"
										},
										{
											"begin": 5150,
											"end": 5314,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5228,
											"end": 5232,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5244,
											"end": 5286,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "348"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 5268,
											"end": 5277,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 5279,
											"end": 5285,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 5244,
											"end": 5253,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "356"
										},
										{
											"begin": 5244,
											"end": 5286,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 23691,
											"end": 23912,
											"name": "tag",
											"source": 9,
											"value": "278"
										},
										{
											"begin": 23691,
											"end": 23912,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "507"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "335"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "507"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23810,
											"end": 23812,
											"name": "PUSH",
											"source": 9,
											"value": "A"
										},
										{
											"begin": 23790,
											"end": 23806,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 23790,
											"end": 23812,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 23790,
											"end": 23812,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 23782,
											"end": 23859,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "509"
										},
										{
											"begin": 23782,
											"end": 23859,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 23782,
											"end": 23859,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 23782,
											"end": 23859,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 23782,
											"end": 23859,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 23782,
											"end": 23859,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8693,
											"end": 8695,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 23782,
											"end": 23859,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 23782,
											"end": 23859,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 23782,
											"end": 23859,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8675,
											"end": 8696,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8732,
											"end": 8734,
											"name": "PUSH",
											"source": 10,
											"value": "2A"
										},
										{
											"begin": 8712,
											"end": 8730,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 8712,
											"end": 8730,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8712,
											"end": 8730,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8705,
											"end": 8735,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8771,
											"end": 8805,
											"name": "PUSH",
											"source": 10,
											"value": "53656C6C206D61726B6574696E67206665652063616E6E6F74206265206D6F72"
										},
										{
											"begin": 8751,
											"end": 8769,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 8751,
											"end": 8769,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8751,
											"end": 8769,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8744,
											"end": 8806,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "65207468616E20313025"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8822,
											"end": 8840,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 8822,
											"end": 8840,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8822,
											"end": 8840,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8815,
											"end": 8855,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8872,
											"end": 8891,
											"name": "PUSH",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 8872,
											"end": 8891,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 23782,
											"end": 23859,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "338"
										},
										{
											"begin": 8491,
											"end": 8897,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 23782,
											"end": 23859,
											"name": "tag",
											"source": 9,
											"value": "509"
										},
										{
											"begin": 23782,
											"end": 23859,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 23869,
											"end": 23886,
											"name": "PUSH",
											"source": 9,
											"value": "18"
										},
										{
											"begin": 23869,
											"end": 23905,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 23691,
											"end": 23912,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 25067,
											"end": 25292,
											"name": "tag",
											"source": 9,
											"value": "286"
										},
										{
											"begin": 25067,
											"end": 25292,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1247,
											"end": 1254,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 25141,
											"end": 25151,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 25141,
											"end": 25162,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 25141,
											"end": 25162,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 25141,
											"end": 25191,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "514"
										},
										{
											"begin": 25141,
											"end": 25191,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 25180,
											"end": 25191,
											"name": "PUSH",
											"source": 9,
											"value": "1D"
										},
										{
											"begin": 25180,
											"end": 25191,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 25180,
											"end": 25191,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 25180,
											"end": 25191,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 25180,
											"end": 25191,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 25180,
											"end": 25191,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 25166,
											"end": 25176,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 25166,
											"end": 25191,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 25141,
											"end": 25191,
											"name": "tag",
											"source": 9,
											"value": "514"
										},
										{
											"begin": 25141,
											"end": 25191,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 25120,
											"end": 25251,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "515"
										},
										{
											"begin": 25120,
											"end": 25251,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 25120,
											"end": 25251,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 25120,
											"end": 25251,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 25120,
											"end": 25251,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 25120,
											"end": 25251,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 25120,
											"end": 25251,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 25120,
											"end": 25251,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 25120,
											"end": 25251,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "338"
										},
										{
											"begin": 25120,
											"end": 25251,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 25120,
											"end": 25251,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "438"
										},
										{
											"begin": 25120,
											"end": 25251,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 25120,
											"end": 25251,
											"name": "tag",
											"source": 9,
											"value": "515"
										},
										{
											"begin": 25120,
											"end": 25251,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 25261,
											"end": 25275,
											"name": "PUSH",
											"source": 9,
											"value": "1D"
										},
										{
											"begin": 25261,
											"end": 25285,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 25261,
											"end": 25285,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 25261,
											"end": 25285,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 25261,
											"end": 25285,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 25261,
											"end": 25285,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 25261,
											"end": 25285,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 25261,
											"end": 25285,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 25261,
											"end": 25285,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 25261,
											"end": 25285,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 25261,
											"end": 25285,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 25261,
											"end": 25285,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 25261,
											"end": 25285,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 25067,
											"end": 25292,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 24658,
											"end": 24826,
											"name": "tag",
											"source": 9,
											"value": "290"
										},
										{
											"begin": 24658,
											"end": 24826,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "518"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "335"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "518"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24734,
											"end": 24755,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 24734,
											"end": 24766,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 24734,
											"end": 24766,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 24734,
											"end": 24766,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 24734,
											"end": 24766,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 24734,
											"end": 24766,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 24734,
											"end": 24766,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 24734,
											"end": 24766,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 24734,
											"end": 24766,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 24734,
											"end": 24766,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 24734,
											"end": 24766,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 24734,
											"end": 24766,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 24734,
											"end": 24766,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 24781,
											"end": 24819,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 24781,
											"end": 24819,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 24781,
											"end": 24819,
											"name": "PUSH",
											"source": 9,
											"value": "53726DFCAF90650AA7EB35524F4D3220F07413C8D6CB404CC8C18BF5591BC159"
										},
										{
											"begin": 24781,
											"end": 24819,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 24781,
											"end": 24819,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "520"
										},
										{
											"begin": 24781,
											"end": 24819,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 24758,
											"end": 24766,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4241,
											"end": 4255,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4234,
											"end": 4256,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4216,
											"end": 4257,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4216,
											"end": 4257,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4204,
											"end": 4206,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4189,
											"end": 4207,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4189,
											"end": 4207,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4076,
											"end": 4263,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 24781,
											"end": 24819,
											"name": "tag",
											"source": 9,
											"value": "520"
										},
										{
											"begin": 24781,
											"end": 24819,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 24781,
											"end": 24819,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 24781,
											"end": 24819,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 24781,
											"end": 24819,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 24781,
											"end": 24819,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 24781,
											"end": 24819,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 24781,
											"end": 24819,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 24781,
											"end": 24819,
											"name": "LOG1",
											"source": 9
										},
										{
											"begin": 24658,
											"end": 24826,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 24658,
											"end": 24826,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 23322,
											"end": 23488,
											"name": "tag",
											"source": 9,
											"value": "298"
										},
										{
											"begin": 23322,
											"end": 23488,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "522"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "335"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "522"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23414,
											"end": 23416,
											"name": "PUSH",
											"source": 9,
											"value": "A"
										},
										{
											"begin": 23403,
											"end": 23410,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 23403,
											"end": 23416,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 23403,
											"end": 23416,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 23395,
											"end": 23453,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "524"
										},
										{
											"begin": 23395,
											"end": 23453,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 23395,
											"end": 23453,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 23395,
											"end": 23453,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 23395,
											"end": 23453,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 23395,
											"end": 23453,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7108,
											"end": 7110,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 23395,
											"end": 23453,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 23395,
											"end": 23453,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 23395,
											"end": 23453,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7090,
											"end": 7111,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7090,
											"end": 7111,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7090,
											"end": 7111,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7127,
											"end": 7145,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 7127,
											"end": 7145,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7127,
											"end": 7145,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7120,
											"end": 7150,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7186,
											"end": 7220,
											"name": "PUSH",
											"source": 10,
											"value": "4275726E206665652063616E6E6F74206265206D6F7265207468616E20313025"
										},
										{
											"begin": 7166,
											"end": 7184,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 7166,
											"end": 7184,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7166,
											"end": 7184,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7159,
											"end": 7221,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7238,
											"end": 7256,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 7238,
											"end": 7256,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 23395,
											"end": 23453,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "338"
										},
										{
											"begin": 6906,
											"end": 7262,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 23395,
											"end": 23453,
											"name": "tag",
											"source": 9,
											"value": "524"
										},
										{
											"begin": 23395,
											"end": 23453,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 23463,
											"end": 23471,
											"name": "PUSH",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 23463,
											"end": 23481,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 23322,
											"end": 23488,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 24145,
											"end": 24330,
											"name": "tag",
											"source": 9,
											"value": "302"
										},
										{
											"begin": 24145,
											"end": 24330,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "528"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "335"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "528"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24246,
											"end": 24248,
											"name": "PUSH",
											"source": 9,
											"value": "A"
										},
										{
											"begin": 24232,
											"end": 24242,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 24232,
											"end": 24248,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 24232,
											"end": 24248,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 24224,
											"end": 24289,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "530"
										},
										{
											"begin": 24224,
											"end": 24289,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 24224,
											"end": 24289,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 24224,
											"end": 24289,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 24224,
											"end": 24289,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 24224,
											"end": 24289,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11404,
											"end": 11406,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 24224,
											"end": 24289,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 24224,
											"end": 24289,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 24224,
											"end": 24289,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11386,
											"end": 11407,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11443,
											"end": 11445,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 11423,
											"end": 11441,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 11423,
											"end": 11441,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11423,
											"end": 11441,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11416,
											"end": 11446,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11482,
											"end": 11516,
											"name": "PUSH",
											"source": 10,
											"value": "53656C6C20746178206665652063616E6E6F74206265206D6F7265207468616E"
										},
										{
											"begin": 11462,
											"end": 11480,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 11462,
											"end": 11480,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11462,
											"end": 11480,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11455,
											"end": 11517,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20313025"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11533,
											"end": 11551,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 11533,
											"end": 11551,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11533,
											"end": 11551,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11526,
											"end": 11560,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11577,
											"end": 11596,
											"name": "PUSH",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 11577,
											"end": 11596,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 24224,
											"end": 24289,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "338"
										},
										{
											"begin": 11202,
											"end": 11602,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 24224,
											"end": 24289,
											"name": "tag",
											"source": 9,
											"value": "530"
										},
										{
											"begin": 24224,
											"end": 24289,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 24299,
											"end": 24310,
											"name": "PUSH",
											"source": 9,
											"value": "16"
										},
										{
											"begin": 24299,
											"end": 24323,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 24145,
											"end": 24330,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 22522,
											"end": 22630,
											"name": "tag",
											"source": 9,
											"value": "324"
										},
										{
											"begin": 22522,
											"end": 22630,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "535"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "335"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "535"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 22588,
											"end": 22615,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 22618,
											"end": 22623,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 22588,
											"end": 22615,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 22588,
											"end": 22615,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 22588,
											"end": 22615,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 22588,
											"end": 22606,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 22588,
											"end": 22615,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 22588,
											"end": 22615,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 22588,
											"end": 22615,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 22588,
											"end": 22615,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 22588,
											"end": 22615,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 22588,
											"end": 22623,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 22588,
											"end": 22623,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 22588,
											"end": 22623,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 22588,
											"end": 22623,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 22588,
											"end": 22623,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 22522,
											"end": 22630,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 23494,
											"end": 23685,
											"name": "tag",
											"source": 9,
											"value": "328"
										},
										{
											"begin": 23494,
											"end": 23685,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "538"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "335"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "538"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23598,
											"end": 23600,
											"name": "PUSH",
											"source": 9,
											"value": "A"
										},
										{
											"begin": 23583,
											"end": 23594,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 23583,
											"end": 23600,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 23583,
											"end": 23600,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 23575,
											"end": 23642,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "540"
										},
										{
											"begin": 23575,
											"end": 23642,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 23575,
											"end": 23642,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 23575,
											"end": 23642,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 23575,
											"end": 23642,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 23575,
											"end": 23642,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7469,
											"end": 7471,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 23575,
											"end": 23642,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 23575,
											"end": 23642,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 23575,
											"end": 23642,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7451,
											"end": 7472,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7508,
											"end": 7510,
											"name": "PUSH",
											"source": 10,
											"value": "25"
										},
										{
											"begin": 7488,
											"end": 7506,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 7488,
											"end": 7506,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7488,
											"end": 7506,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7481,
											"end": 7511,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7547,
											"end": 7581,
											"name": "PUSH",
											"source": 10,
											"value": "53656C6C206275726E206665652063616E6E6F74206265206D6F726520746861"
										},
										{
											"begin": 7527,
											"end": 7545,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 7527,
											"end": 7545,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7527,
											"end": 7545,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7520,
											"end": 7582,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6E20313025"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7598,
											"end": 7616,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 7598,
											"end": 7616,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7598,
											"end": 7616,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7591,
											"end": 7626,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7643,
											"end": 7662,
											"name": "PUSH",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 7643,
											"end": 7662,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 23575,
											"end": 23642,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "338"
										},
										{
											"begin": 7267,
											"end": 7668,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 23575,
											"end": 23642,
											"name": "tag",
											"source": 9,
											"value": "540"
										},
										{
											"begin": 23575,
											"end": 23642,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 23652,
											"end": 23664,
											"name": "PUSH",
											"source": 9,
											"value": "19"
										},
										{
											"begin": 23652,
											"end": 23678,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 23494,
											"end": 23685,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "332"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "544"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "335"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "544"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2169,
											"end": 2191,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2169,
											"end": 2191,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "546"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8286,
											"end": 8288,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8268,
											"end": 8289,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8325,
											"end": 8327,
											"name": "PUSH",
											"source": 10,
											"value": "26"
										},
										{
											"begin": 8305,
											"end": 8323,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 8305,
											"end": 8323,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8305,
											"end": 8323,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8298,
											"end": 8328,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8364,
											"end": 8398,
											"name": "PUSH",
											"source": 10,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 8344,
											"end": 8362,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 8344,
											"end": 8362,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8344,
											"end": 8362,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8337,
											"end": 8399,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8415,
											"end": 8433,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 8415,
											"end": 8433,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8415,
											"end": 8433,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8408,
											"end": 8444,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8461,
											"end": 8480,
											"name": "PUSH",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 8461,
											"end": 8480,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "338"
										},
										{
											"begin": 8084,
											"end": 8486,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "tag",
											"source": 0,
											"value": "546"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2244,
											"end": 2272,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "549"
										},
										{
											"begin": 2263,
											"end": 2271,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2244,
											"end": 2262,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "470"
										},
										{
											"begin": 2244,
											"end": 2272,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2244,
											"end": 2272,
											"name": "tag",
											"source": 0,
											"value": "549"
										},
										{
											"begin": 2244,
											"end": 2272,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1359,
											"end": 1489,
											"name": "tag",
											"source": 0,
											"value": "335"
										},
										{
											"begin": 1359,
											"end": 1489,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1247,
											"end": 1254,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "469"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11809,
											"end": 11811,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11791,
											"end": 11812,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 11791,
											"end": 11812,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11791,
											"end": 11812,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11828,
											"end": 11846,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 11828,
											"end": 11846,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11828,
											"end": 11846,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11821,
											"end": 11851,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11887,
											"end": 11921,
											"name": "PUSH",
											"source": 10,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 11867,
											"end": 11885,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 11867,
											"end": 11885,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11867,
											"end": 11885,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11860,
											"end": 11922,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11939,
											"end": 11957,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 11939,
											"end": 11957,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "338"
										},
										{
											"begin": 11607,
											"end": 11963,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14076,
											"end": 14437,
											"name": "tag",
											"source": 9,
											"value": "351"
										},
										{
											"begin": 14076,
											"end": 14437,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14198,
											"end": 14217,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 14198,
											"end": 14217,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 14190,
											"end": 14258,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "558"
										},
										{
											"begin": 14190,
											"end": 14258,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 14190,
											"end": 14258,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 14190,
											"end": 14258,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14190,
											"end": 14258,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 14190,
											"end": 14258,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6703,
											"end": 6705,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 14190,
											"end": 14258,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 14190,
											"end": 14258,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 14190,
											"end": 14258,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6685,
											"end": 6706,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6742,
											"end": 6744,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 6722,
											"end": 6740,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6722,
											"end": 6740,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6722,
											"end": 6740,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6715,
											"end": 6745,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6781,
											"end": 6815,
											"name": "PUSH",
											"source": 10,
											"value": "42455032303A20617070726F76652066726F6D20746865207A65726F20616464"
										},
										{
											"begin": 6761,
											"end": 6779,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 6761,
											"end": 6779,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6761,
											"end": 6779,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6754,
											"end": 6816,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "72657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6832,
											"end": 6850,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 6832,
											"end": 6850,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6832,
											"end": 6850,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6825,
											"end": 6859,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6876,
											"end": 6895,
											"name": "PUSH",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 6876,
											"end": 6895,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14190,
											"end": 14258,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "338"
										},
										{
											"begin": 6501,
											"end": 6901,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14190,
											"end": 14258,
											"name": "tag",
											"source": 9,
											"value": "558"
										},
										{
											"begin": 14190,
											"end": 14258,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14276,
											"end": 14297,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 14276,
											"end": 14297,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 14268,
											"end": 14336,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "561"
										},
										{
											"begin": 14268,
											"end": 14336,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 14268,
											"end": 14336,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 14268,
											"end": 14336,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14268,
											"end": 14336,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 14268,
											"end": 14336,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 14628,
											"end": 14630,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 14268,
											"end": 14336,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 14268,
											"end": 14336,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 14268,
											"end": 14336,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14610,
											"end": 14631,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 14667,
											"end": 14669,
											"name": "PUSH",
											"source": 10,
											"value": "22"
										},
										{
											"begin": 14647,
											"end": 14665,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 14647,
											"end": 14665,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14647,
											"end": 14665,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14640,
											"end": 14670,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 14706,
											"end": 14740,
											"name": "PUSH",
											"source": 10,
											"value": "42455032303A20617070726F766520746F20746865207A65726F206164647265"
										},
										{
											"begin": 14686,
											"end": 14704,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 14686,
											"end": 14704,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14686,
											"end": 14704,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14679,
											"end": 14741,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14757,
											"end": 14775,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 14757,
											"end": 14775,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14757,
											"end": 14775,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14750,
											"end": 14782,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 14799,
											"end": 14818,
											"name": "PUSH",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 14799,
											"end": 14818,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14268,
											"end": 14336,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "338"
										},
										{
											"begin": 14426,
											"end": 14824,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14268,
											"end": 14336,
											"name": "tag",
											"source": 9,
											"value": "561"
										},
										{
											"begin": 14268,
											"end": 14336,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14347,
											"end": 14365,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 14347,
											"end": 14365,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 14347,
											"end": 14365,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 14347,
											"end": 14365,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 14347,
											"end": 14365,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 14347,
											"end": 14365,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 14347,
											"end": 14365,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 14347,
											"end": 14358,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 14347,
											"end": 14365,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 14347,
											"end": 14365,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14347,
											"end": 14365,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 14347,
											"end": 14365,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 14347,
											"end": 14365,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 14347,
											"end": 14365,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 14347,
											"end": 14365,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 14347,
											"end": 14365,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 14347,
											"end": 14374,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 14347,
											"end": 14374,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 14347,
											"end": 14374,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 14347,
											"end": 14374,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 14347,
											"end": 14374,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 14347,
											"end": 14374,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 14347,
											"end": 14374,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 14347,
											"end": 14374,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 14347,
											"end": 14374,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 14347,
											"end": 14374,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 14347,
											"end": 14374,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 14347,
											"end": 14374,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14347,
											"end": 14374,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 14347,
											"end": 14383,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 14347,
											"end": 14383,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14347,
											"end": 14383,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 14398,
											"end": 14430,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14398,
											"end": 14430,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 15381,
											"end": 15406,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 15381,
											"end": 15406,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 15381,
											"end": 15406,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 14398,
											"end": 14430,
											"name": "PUSH",
											"source": 9,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 14398,
											"end": 14430,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 15354,
											"end": 15372,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14398,
											"end": 14430,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 14398,
											"end": 14430,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 14398,
											"end": 14430,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 14398,
											"end": 14430,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 14398,
											"end": 14430,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 14398,
											"end": 14430,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14398,
											"end": 14430,
											"name": "LOG3",
											"source": 9
										},
										{
											"begin": 14076,
											"end": 14437,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14076,
											"end": 14437,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14076,
											"end": 14437,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14076,
											"end": 14437,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 14443,
											"end": 16288,
											"name": "tag",
											"source": 9,
											"value": "356"
										},
										{
											"begin": 14443,
											"end": 16288,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14560,
											"end": 14578,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 14560,
											"end": 14578,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 14552,
											"end": 14620,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "566"
										},
										{
											"begin": 14552,
											"end": 14620,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 14552,
											"end": 14620,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 14552,
											"end": 14620,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14552,
											"end": 14620,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 14552,
											"end": 14620,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5894,
											"end": 5896,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 14552,
											"end": 14620,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 14552,
											"end": 14620,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 14552,
											"end": 14620,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5876,
											"end": 5897,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5933,
											"end": 5935,
											"name": "PUSH",
											"source": 10,
											"value": "25"
										},
										{
											"begin": 5913,
											"end": 5931,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 5913,
											"end": 5931,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5913,
											"end": 5931,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5906,
											"end": 5936,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5972,
											"end": 6006,
											"name": "PUSH",
											"source": 10,
											"value": "42455032303A207472616E736665722066726F6D20746865207A65726F206164"
										},
										{
											"begin": 5952,
											"end": 5970,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 5952,
											"end": 5970,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5952,
											"end": 5970,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5945,
											"end": 6007,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6023,
											"end": 6041,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 6023,
											"end": 6041,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6023,
											"end": 6041,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6016,
											"end": 6051,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6068,
											"end": 6087,
											"name": "PUSH",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 6068,
											"end": 6087,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14552,
											"end": 14620,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "338"
										},
										{
											"begin": 5692,
											"end": 6093,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14552,
											"end": 14620,
											"name": "tag",
											"source": 9,
											"value": "566"
										},
										{
											"begin": 14552,
											"end": 14620,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14647,
											"end": 14648,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 14638,
											"end": 14644,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 14638,
											"end": 14648,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 14630,
											"end": 14694,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "569"
										},
										{
											"begin": 14630,
											"end": 14694,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 14630,
											"end": 14694,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 14630,
											"end": 14694,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14630,
											"end": 14694,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 14630,
											"end": 14694,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12582,
											"end": 12584,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 14630,
											"end": 14694,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 14630,
											"end": 14694,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 14630,
											"end": 14694,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12564,
											"end": 12585,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12621,
											"end": 12623,
											"name": "PUSH",
											"source": 10,
											"value": "29"
										},
										{
											"begin": 12601,
											"end": 12619,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 12601,
											"end": 12619,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12601,
											"end": 12619,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12594,
											"end": 12624,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12660,
											"end": 12694,
											"name": "PUSH",
											"source": 10,
											"value": "5472616E7366657220616D6F756E74206D757374206265206772656174657220"
										},
										{
											"begin": 12640,
											"end": 12658,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 12640,
											"end": 12658,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12640,
											"end": 12658,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12633,
											"end": 12695,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7468616E207A65726F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12711,
											"end": 12729,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 12711,
											"end": 12729,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12711,
											"end": 12729,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12704,
											"end": 12743,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12760,
											"end": 12779,
											"name": "PUSH",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 12760,
											"end": 12779,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14630,
											"end": 14694,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "338"
										},
										{
											"begin": 12380,
											"end": 12785,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14630,
											"end": 14694,
											"name": "tag",
											"source": 9,
											"value": "569"
										},
										{
											"begin": 14630,
											"end": 14694,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14705,
											"end": 14743,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "572"
										},
										{
											"begin": 14726,
											"end": 14730,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 14732,
											"end": 14734,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 14736,
											"end": 14742,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 14705,
											"end": 14725,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "573"
										},
										{
											"begin": 14705,
											"end": 14743,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 14705,
											"end": 14743,
											"name": "tag",
											"source": 9,
											"value": "572"
										},
										{
											"begin": 14705,
											"end": 14743,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14758,
											"end": 14772,
											"name": "PUSH",
											"source": 9,
											"value": "1D"
										},
										{
											"begin": 14758,
											"end": 14772,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 14758,
											"end": 14772,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 14758,
											"end": 14772,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 14758,
											"end": 14797,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 14758,
											"end": 14797,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 14758,
											"end": 14797,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "574"
										},
										{
											"begin": 14758,
											"end": 14797,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14784,
											"end": 14797,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 14784,
											"end": 14797,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14776,
											"end": 14797,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 14776,
											"end": 14797,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 14776,
											"end": 14797,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 14784,
											"end": 14797,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 14784,
											"end": 14797,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 14776,
											"end": 14797,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 14758,
											"end": 14797,
											"name": "tag",
											"source": 9,
											"value": "574"
										},
										{
											"begin": 14758,
											"end": 14797,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14754,
											"end": 14885,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 14754,
											"end": 14885,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "576"
										},
										{
											"begin": 14754,
											"end": 14885,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 14821,
											"end": 14845,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 14821,
											"end": 14845,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 14821,
											"end": 14845,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 14821,
											"end": 14845,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 14821,
											"end": 14837,
											"name": "PUSH",
											"source": 9,
											"value": "1C"
										},
										{
											"begin": 14821,
											"end": 14845,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 14821,
											"end": 14845,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 14821,
											"end": 14845,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 14821,
											"end": 14845,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14821,
											"end": 14845,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 14821,
											"end": 14845,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 14821,
											"end": 14845,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 14821,
											"end": 14845,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 14813,
											"end": 14874,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "576"
										},
										{
											"begin": 14813,
											"end": 14874,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 14813,
											"end": 14874,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 14813,
											"end": 14874,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14813,
											"end": 14874,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 14813,
											"end": 14874,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10280,
											"end": 10282,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 14813,
											"end": 14874,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 14813,
											"end": 14874,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 14813,
											"end": 14874,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10262,
											"end": 10283,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10319,
											"end": 10321,
											"name": "PUSH",
											"source": 10,
											"value": "18"
										},
										{
											"begin": 10299,
											"end": 10317,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 10299,
											"end": 10317,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10299,
											"end": 10317,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10292,
											"end": 10322,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10358,
											"end": 10384,
											"name": "PUSH",
											"source": 10,
											"value": "4F6E6C7920616C6C6F7765642062757920616D6F756E74730000000000000000"
										},
										{
											"begin": 10338,
											"end": 10356,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 10338,
											"end": 10356,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10338,
											"end": 10356,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10331,
											"end": 10385,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10402,
											"end": 10420,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 10402,
											"end": 10420,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14813,
											"end": 14874,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "338"
										},
										{
											"begin": 10078,
											"end": 10426,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14813,
											"end": 14874,
											"name": "tag",
											"source": 9,
											"value": "576"
										},
										{
											"begin": 14813,
											"end": 14874,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15173,
											"end": 15201,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 15204,
											"end": 15228,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "579"
										},
										{
											"begin": 15222,
											"end": 15226,
											"name": "ADDRESS",
											"source": 9
										},
										{
											"begin": 15204,
											"end": 15213,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "219"
										},
										{
											"begin": 15204,
											"end": 15228,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 15204,
											"end": 15228,
											"name": "tag",
											"source": 9,
											"value": "579"
										},
										{
											"begin": 15204,
											"end": 15228,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15289,
											"end": 15318,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 15289,
											"end": 15318,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 15173,
											"end": 15228,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 15173,
											"end": 15228,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15265,
											"end": 15318,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 15265,
											"end": 15318,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 15265,
											"end": 15318,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 15265,
											"end": 15318,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 15265,
											"end": 15318,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 15265,
											"end": 15318,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 15265,
											"end": 15318,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 15345,
											"end": 15397,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "580"
										},
										{
											"begin": 15345,
											"end": 15397,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15381,
											"end": 15397,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 15381,
											"end": 15397,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 15381,
											"end": 15397,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 15381,
											"end": 15397,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 15381,
											"end": 15397,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 15381,
											"end": 15397,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 15380,
											"end": 15397,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 15345,
											"end": 15397,
											"name": "tag",
											"source": 9,
											"value": "580"
										},
										{
											"begin": 15345,
											"end": 15397,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15345,
											"end": 15434,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 15345,
											"end": 15434,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 15345,
											"end": 15434,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "581"
										},
										{
											"begin": 15345,
											"end": 15434,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15421,
											"end": 15434,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 15421,
											"end": 15434,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15413,
											"end": 15434,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 15413,
											"end": 15434,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 15413,
											"end": 15434,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 15421,
											"end": 15434,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 15421,
											"end": 15434,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 15413,
											"end": 15434,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 15413,
											"end": 15434,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 15345,
											"end": 15434,
											"name": "tag",
											"source": 9,
											"value": "581"
										},
										{
											"begin": 15345,
											"end": 15434,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15345,
											"end": 15471,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 15345,
											"end": 15471,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 15345,
											"end": 15471,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "582"
										},
										{
											"begin": 15345,
											"end": 15471,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15450,
											"end": 15471,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 15450,
											"end": 15471,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 15450,
											"end": 15471,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 15450,
											"end": 15471,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 15450,
											"end": 15471,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 15450,
											"end": 15471,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 15345,
											"end": 15471,
											"name": "tag",
											"source": 9,
											"value": "582"
										},
										{
											"begin": 15345,
											"end": 15471,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15328,
											"end": 15637,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 15328,
											"end": 15637,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "584"
										},
										{
											"begin": 15328,
											"end": 15637,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 15519,
											"end": 15548,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 15519,
											"end": 15548,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 15496,
											"end": 15548,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 15496,
											"end": 15548,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15590,
											"end": 15626,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "584"
										},
										{
											"begin": 15605,
											"end": 15625,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 15590,
											"end": 15604,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "585"
										},
										{
											"begin": 15590,
											"end": 15626,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 15590,
											"end": 15626,
											"name": "tag",
											"source": 9,
											"value": "584"
										},
										{
											"begin": 15590,
											"end": 15626,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15712,
											"end": 15744,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "586"
										},
										{
											"begin": 15727,
											"end": 15731,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 15733,
											"end": 15735,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 15737,
											"end": 15743,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 15712,
											"end": 15726,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "587"
										},
										{
											"begin": 15712,
											"end": 15744,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 15712,
											"end": 15744,
											"name": "tag",
											"source": 9,
											"value": "586"
										},
										{
											"begin": 15712,
											"end": 15744,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15759,
											"end": 15775,
											"name": "PUSH",
											"source": 9,
											"value": "1B"
										},
										{
											"begin": 15759,
											"end": 15775,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 15759,
											"end": 15775,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 15759,
											"end": 15775,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 15755,
											"end": 16282,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 15755,
											"end": 16282,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "588"
										},
										{
											"begin": 15755,
											"end": 16282,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 15791,
											"end": 15809,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1937,
											"end": 1941,
											"name": "PUSH",
											"source": 9,
											"value": "3E8"
										},
										{
											"begin": 15823,
											"end": 15842,
											"name": "PUSH",
											"source": 9,
											"value": "1A"
										},
										{
											"begin": 15823,
											"end": 15842,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 15813,
											"end": 15820,
											"name": "PUSH",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 15813,
											"end": 15820,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 15813,
											"end": 15842,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "589"
										},
										{
											"begin": 15813,
											"end": 15842,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 15813,
											"end": 15842,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 15813,
											"end": 15842,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "590"
										},
										{
											"begin": 15813,
											"end": 15842,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 15813,
											"end": 15842,
											"name": "tag",
											"source": 9,
											"value": "589"
										},
										{
											"begin": 15813,
											"end": 15842,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15812,
											"end": 15890,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "591"
										},
										{
											"begin": 15812,
											"end": 15890,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 15812,
											"end": 15890,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 15812,
											"end": 15890,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "592"
										},
										{
											"begin": 15812,
											"end": 15890,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 15812,
											"end": 15890,
											"name": "tag",
											"source": 9,
											"value": "591"
										},
										{
											"begin": 15812,
											"end": 15890,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15914,
											"end": 15927,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 15914,
											"end": 15927,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 15791,
											"end": 15890,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 15791,
											"end": 15890,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15908,
											"end": 15927,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 15908,
											"end": 15927,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 15908,
											"end": 15927,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 15914,
											"end": 15927,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 15914,
											"end": 15927,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 15908,
											"end": 15927,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 15904,
											"end": 16272,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 15904,
											"end": 16272,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "593"
										},
										{
											"begin": 15904,
											"end": 16272,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 15986,
											"end": 15996,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 15976,
											"end": 15982,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 15976,
											"end": 15996,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 15976,
											"end": 15996,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 15947,
											"end": 16084,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "594"
										},
										{
											"begin": 15947,
											"end": 16084,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 15947,
											"end": 16084,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 15947,
											"end": 16084,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 15947,
											"end": 16084,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 15947,
											"end": 16084,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 13397,
											"end": 13399,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 15947,
											"end": 16084,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 15947,
											"end": 16084,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 15947,
											"end": 16084,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13379,
											"end": 13400,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 13436,
											"end": 13438,
											"name": "PUSH",
											"source": 10,
											"value": "2E"
										},
										{
											"begin": 13416,
											"end": 13434,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 13416,
											"end": 13434,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13416,
											"end": 13434,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13409,
											"end": 13439,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 13475,
											"end": 13509,
											"name": "PUSH",
											"source": 10,
											"value": "5472616E73616374656420616D6F756E742065786365656420746865206D6178"
										},
										{
											"begin": 13455,
											"end": 13473,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 13455,
											"end": 13473,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13455,
											"end": 13473,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13448,
											"end": 13510,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20616C6C6F7765642076616C7565"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "90"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13526,
											"end": 13544,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 13526,
											"end": 13544,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13526,
											"end": 13544,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13519,
											"end": 13563,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 13580,
											"end": 13599,
											"name": "PUSH",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 13580,
											"end": 13599,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15947,
											"end": 16084,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "338"
										},
										{
											"begin": 13195,
											"end": 13605,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15947,
											"end": 16084,
											"name": "tag",
											"source": 9,
											"value": "594"
										},
										{
											"begin": 15947,
											"end": 16084,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15904,
											"end": 16272,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "599"
										},
										{
											"begin": 15904,
											"end": 16272,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 15904,
											"end": 16272,
											"name": "tag",
											"source": 9,
											"value": "593"
										},
										{
											"begin": 15904,
											"end": 16272,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16169,
											"end": 16179,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 16152,
											"end": 16165,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "598"
										},
										{
											"begin": 16162,
											"end": 16164,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 16152,
											"end": 16161,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "219"
										},
										{
											"begin": 16152,
											"end": 16165,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 16152,
											"end": 16165,
											"name": "tag",
											"source": 9,
											"value": "598"
										},
										{
											"begin": 16152,
											"end": 16165,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16152,
											"end": 16179,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 16152,
											"end": 16179,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 16123,
											"end": 16257,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "599"
										},
										{
											"begin": 16123,
											"end": 16257,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 16123,
											"end": 16257,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 16123,
											"end": 16257,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 16123,
											"end": 16257,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 16123,
											"end": 16257,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12992,
											"end": 12994,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 16123,
											"end": 16257,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 16123,
											"end": 16257,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 16123,
											"end": 16257,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12974,
											"end": 12995,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 13031,
											"end": 13033,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 13011,
											"end": 13029,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 13011,
											"end": 13029,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13011,
											"end": 13029,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13004,
											"end": 13034,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 13070,
											"end": 13104,
											"name": "PUSH",
											"source": 10,
											"value": "57616C6C65742062616C616E6365206578636565647320746865206D6178206C"
										},
										{
											"begin": 13050,
											"end": 13068,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 13050,
											"end": 13068,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13050,
											"end": 13068,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13043,
											"end": 13105,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1A5B5A5D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13121,
											"end": 13139,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 13121,
											"end": 13139,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13121,
											"end": 13139,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13114,
											"end": 13148,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 13165,
											"end": 13184,
											"name": "PUSH",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 13165,
											"end": 13184,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16123,
											"end": 16257,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "338"
										},
										{
											"begin": 12790,
											"end": 13190,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16123,
											"end": 16257,
											"name": "tag",
											"source": 9,
											"value": "599"
										},
										{
											"begin": 16123,
											"end": 16257,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15777,
											"end": 16282,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15755,
											"end": 16282,
											"name": "tag",
											"source": 9,
											"value": "588"
										},
										{
											"begin": 15755,
											"end": 16282,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14542,
											"end": 16288,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14542,
											"end": 16288,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14443,
											"end": 16288,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14443,
											"end": 16288,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14443,
											"end": 16288,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14443,
											"end": 16288,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 4959,
											"end": 5190,
											"name": "tag",
											"source": 4,
											"value": "361"
										},
										{
											"begin": 4959,
											"end": 5190,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5075,
											"end": 5082,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5134,
											"end": 5146,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5126,
											"end": 5132,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5126,
											"end": 5132,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5126,
											"end": 5132,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 5126,
											"end": 5132,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5118,
											"end": 5147,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "603"
										},
										{
											"begin": 5118,
											"end": 5147,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5118,
											"end": 5147,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5118,
											"end": 5147,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5118,
											"end": 5147,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5118,
											"end": 5147,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5118,
											"end": 5147,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 5118,
											"end": 5147,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5118,
											"end": 5147,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "338"
										},
										{
											"begin": 5118,
											"end": 5147,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5118,
											"end": 5147,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5118,
											"end": 5147,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "87"
										},
										{
											"begin": 5118,
											"end": 5147,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5118,
											"end": 5147,
											"name": "tag",
											"source": 4,
											"value": "603"
										},
										{
											"begin": 5118,
											"end": 5147,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5168,
											"end": 5173,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5168,
											"end": 5173,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5168,
											"end": 5173,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4959,
											"end": 5190,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 11584,
											"end": 11745,
											"name": "tag",
											"source": 9,
											"value": "367"
										},
										{
											"begin": 11584,
											"end": 11745,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11626,
											"end": 11633,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11646,
											"end": 11661,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 11663,
											"end": 11678,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11682,
											"end": 11701,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "606"
										},
										{
											"begin": 11682,
											"end": 11699,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "607"
										},
										{
											"begin": 11682,
											"end": 11701,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 11682,
											"end": 11701,
											"name": "tag",
											"source": 9,
											"value": "606"
										},
										{
											"begin": 11682,
											"end": 11701,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11645,
											"end": 11701,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11645,
											"end": 11701,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11645,
											"end": 11701,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11718,
											"end": 11738,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "608"
										},
										{
											"begin": 11645,
											"end": 11701,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11645,
											"end": 11701,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11718,
											"end": 11729,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "369"
										},
										{
											"begin": 11718,
											"end": 11738,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 11718,
											"end": 11738,
											"name": "tag",
											"source": 9,
											"value": "608"
										},
										{
											"begin": 11718,
											"end": 11738,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11711,
											"end": 11738,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 11711,
											"end": 11738,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11711,
											"end": 11738,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11711,
											"end": 11738,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11584,
											"end": 11745,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11584,
											"end": 11745,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "tag",
											"source": 4,
											"value": "369"
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3908,
											"end": 3915,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "368"
										},
										{
											"begin": 3938,
											"end": 3939,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3934,
											"end": 3935,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "592"
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "tag",
											"source": 4,
											"value": "404"
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2813,
											"end": 2820,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "368"
										},
										{
											"begin": 2843,
											"end": 2844,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2840,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "613"
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 10027,
											"end": 10632,
											"name": "tag",
											"source": 9,
											"value": "411"
										},
										{
											"begin": 10027,
											"end": 10632,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10123,
											"end": 10130,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10144,
											"end": 10151,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 10165,
											"end": 10172,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10186,
											"end": 10193,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 10207,
											"end": 10214,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10228,
											"end": 10235,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 10261,
											"end": 10284,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10286,
											"end": 10298,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 10300,
											"end": 10318,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10322,
											"end": 10364,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "615"
										},
										{
											"begin": 10347,
											"end": 10354,
											"name": "DUP11",
											"source": 9
										},
										{
											"begin": 10322,
											"end": 10333,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "616"
										},
										{
											"begin": 10322,
											"end": 10364,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 10322,
											"end": 10364,
											"name": "tag",
											"source": 9,
											"value": "615"
										},
										{
											"begin": 10322,
											"end": 10364,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10260,
											"end": 10364,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 10260,
											"end": 10364,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10260,
											"end": 10364,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 10260,
											"end": 10364,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10260,
											"end": 10364,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 10260,
											"end": 10364,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10375,
											"end": 10390,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10392,
											"end": 10415,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 10417,
											"end": 10429,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10433,
											"end": 10541,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "617"
										},
										{
											"begin": 10458,
											"end": 10465,
											"name": "DUP14",
											"source": 9
										},
										{
											"begin": 10479,
											"end": 10483,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 10497,
											"end": 10507,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 10521,
											"end": 10531,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "618"
										},
										{
											"begin": 10521,
											"end": 10529,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "367"
										},
										{
											"begin": 10521,
											"end": 10531,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 10521,
											"end": 10531,
											"name": "tag",
											"source": 9,
											"value": "618"
										},
										{
											"begin": 10521,
											"end": 10531,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10433,
											"end": 10444,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "619"
										},
										{
											"begin": 10433,
											"end": 10541,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 10433,
											"end": 10541,
											"name": "tag",
											"source": 9,
											"value": "617"
										},
										{
											"begin": 10433,
											"end": 10541,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10374,
											"end": 10541,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10374,
											"end": 10541,
											"name": "SWAP16",
											"source": 9
										},
										{
											"begin": 10374,
											"end": 10541,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10374,
											"end": 10541,
											"name": "SWAP15",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10374,
											"end": 10541,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10374,
											"end": 10541,
											"name": "SWAP13",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10591,
											"end": 10606,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 10591,
											"end": 10606,
											"name": "SWAP11",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10608,
											"end": 10612,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 10608,
											"end": 10612,
											"name": "SWAP9",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10614,
											"end": 10624,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10614,
											"end": 10624,
											"name": "SWAP7",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10027,
											"end": 10632,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 10027,
											"end": 10632,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10027,
											"end": 10632,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "tag",
											"source": 4,
											"value": "413"
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3180,
											"end": 3187,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "368"
										},
										{
											"begin": 3210,
											"end": 3211,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3206,
											"end": 3207,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "386"
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "tag",
											"source": 0,
											"value": "470"
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2506,
											"end": 2522,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2506,
											"end": 2522,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2496,
											"end": 2620,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 4018,
											"end": 4334,
											"name": "tag",
											"source": 9,
											"value": "573"
										},
										{
											"begin": 4018,
											"end": 4334,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4143,
											"end": 4161,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4143,
											"end": 4161,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4143,
											"end": 4161,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4143,
											"end": 4161,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4143,
											"end": 4181,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "624"
										},
										{
											"begin": 4143,
											"end": 4181,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4165,
											"end": 4181,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4165,
											"end": 4181,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4165,
											"end": 4181,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4143,
											"end": 4181,
											"name": "tag",
											"source": 9,
											"value": "624"
										},
										{
											"begin": 4143,
											"end": 4181,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4139,
											"end": 4190,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4139,
											"end": 4190,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "625"
										},
										{
											"begin": 4139,
											"end": 4190,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4018,
											"end": 4334,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4018,
											"end": 4334,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4018,
											"end": 4334,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4018,
											"end": 4334,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 4139,
											"end": 4190,
											"name": "tag",
											"source": 9,
											"value": "625"
										},
										{
											"begin": 4139,
											"end": 4190,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4204,
											"end": 4220,
											"name": "PUSH",
											"source": 9,
											"value": "22"
										},
										{
											"begin": 4204,
											"end": 4220,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4204,
											"end": 4220,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4204,
											"end": 4220,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 4204,
											"end": 4220,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 4204,
											"end": 4220,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4203,
											"end": 4220,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4203,
											"end": 4256,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4203,
											"end": 4256,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4203,
											"end": 4256,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "626"
										},
										{
											"begin": 4203,
											"end": 4256,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4232,
											"end": 4241,
											"name": "PUSH",
											"source": 9,
											"value": "22"
										},
										{
											"begin": 4232,
											"end": 4241,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4232,
											"end": 4241,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4224,
											"end": 4256,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4224,
											"end": 4256,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4203,
											"end": 4256,
											"name": "tag",
											"source": 9,
											"value": "626"
										},
										{
											"begin": 4203,
											"end": 4256,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4199,
											"end": 4327,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4199,
											"end": 4327,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "627"
										},
										{
											"begin": 4199,
											"end": 4327,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4270,
											"end": 4279,
											"name": "PUSH",
											"source": 9,
											"value": "22"
										},
										{
											"begin": 4270,
											"end": 4279,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 4270,
											"end": 4327,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4270,
											"end": 4327,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "5D37A8DD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4270,
											"end": 4327,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4270,
											"end": 4327,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4298,
											"end": 4308,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 4270,
											"end": 4327,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 4270,
											"end": 4327,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4270,
											"end": 4327,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3272,
											"end": 3306,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3342,
											"end": 3357,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 3342,
											"end": 3357,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3342,
											"end": 3357,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3322,
											"end": 3340,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 3322,
											"end": 3340,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3322,
											"end": 3340,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3315,
											"end": 3358,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3394,
											"end": 3409,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3394,
											"end": 3409,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3394,
											"end": 3409,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3374,
											"end": 3392,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 3374,
											"end": 3392,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3374,
											"end": 3392,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3367,
											"end": 3410,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3426,
											"end": 3444,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 3426,
											"end": 3444,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3426,
											"end": 3444,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3419,
											"end": 3453,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3419,
											"end": 3453,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3419,
											"end": 3453,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4270,
											"end": 4279,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4270,
											"end": 4279,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4270,
											"end": 4279,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4270,
											"end": 4279,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4270,
											"end": 4297,
											"name": "PUSH",
											"source": 9,
											"value": "5D37A8DD"
										},
										{
											"begin": 4270,
											"end": 4297,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3206,
											"end": 3225,
											"name": "PUSH",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 3206,
											"end": 3225,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4270,
											"end": 4327,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4270,
											"end": 4327,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4270,
											"end": 4327,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4270,
											"end": 4327,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4270,
											"end": 4327,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4270,
											"end": 4327,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 4270,
											"end": 4327,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4270,
											"end": 4327,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4270,
											"end": 4327,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 4270,
											"end": 4327,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4270,
											"end": 4327,
											"name": "EXTCODESIZE",
											"source": 9
										},
										{
											"begin": 4270,
											"end": 4327,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4270,
											"end": 4327,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4270,
											"end": 4327,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4270,
											"end": 4327,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "630"
										},
										{
											"begin": 4270,
											"end": 4327,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4270,
											"end": 4327,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4270,
											"end": 4327,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4270,
											"end": 4327,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 4270,
											"end": 4327,
											"name": "tag",
											"source": 9,
											"value": "630"
										},
										{
											"begin": 4270,
											"end": 4327,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4270,
											"end": 4327,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4270,
											"end": 4327,
											"name": "GAS",
											"source": 9
										},
										{
											"begin": 4270,
											"end": 4327,
											"name": "CALL",
											"source": 9
										},
										{
											"begin": 4270,
											"end": 4327,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4270,
											"end": 4327,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4270,
											"end": 4327,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4270,
											"end": 4327,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "632"
										},
										{
											"begin": 4270,
											"end": 4327,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4270,
											"end": 4327,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 4270,
											"end": 4327,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4270,
											"end": 4327,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4270,
											"end": 4327,
											"name": "RETURNDATACOPY",
											"source": 9
										},
										{
											"begin": 4270,
											"end": 4327,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 4270,
											"end": 4327,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4270,
											"end": 4327,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 4270,
											"end": 4327,
											"name": "tag",
											"source": 9,
											"value": "632"
										},
										{
											"begin": 4270,
											"end": 4327,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4270,
											"end": 4327,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4270,
											"end": 4327,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4270,
											"end": 4327,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4270,
											"end": 4327,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4199,
											"end": 4327,
											"name": "tag",
											"source": 9,
											"value": "627"
										},
										{
											"begin": 4199,
											"end": 4327,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4018,
											"end": 4334,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4018,
											"end": 4334,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4018,
											"end": 4334,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4018,
											"end": 4334,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 16294,
											"end": 17258,
											"name": "tag",
											"source": 9,
											"value": "585"
										},
										{
											"begin": 16294,
											"end": 17258,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2845,
											"end": 2861,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 2845,
											"end": 2868,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2845,
											"end": 2868,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2845,
											"end": 2868,
											"name": "AND",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2845,
											"end": 2868,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 2845,
											"end": 2868,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2845,
											"end": 2868,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 2845,
											"end": 2868,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 16443,
											"end": 16470,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "635"
										},
										{
											"begin": 16443,
											"end": 16463,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 16468,
											"end": 16469,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 16443,
											"end": 16467,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "369"
										},
										{
											"begin": 16443,
											"end": 16470,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 16443,
											"end": 16470,
											"name": "tag",
											"source": 9,
											"value": "635"
										},
										{
											"begin": 16443,
											"end": 16470,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16428,
											"end": 16470,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 16480,
											"end": 16497,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 16500,
											"end": 16530,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "636"
										},
										{
											"begin": 16500,
											"end": 16520,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 16428,
											"end": 16470,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 16500,
											"end": 16524,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "413"
										},
										{
											"begin": 16500,
											"end": 16530,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 16500,
											"end": 16530,
											"name": "tag",
											"source": 9,
											"value": "636"
										},
										{
											"begin": 16500,
											"end": 16530,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16480,
											"end": 16530,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 16827,
											"end": 16848,
											"name": "SELFBALANCE",
											"source": 9
										},
										{
											"begin": 16890,
											"end": 16912,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "637"
										},
										{
											"begin": 16907,
											"end": 16911,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 16890,
											"end": 16906,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "638"
										},
										{
											"begin": 16890,
											"end": 16912,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 16890,
											"end": 16912,
											"name": "tag",
											"source": 9,
											"value": "637"
										},
										{
											"begin": 16890,
											"end": 16912,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 17048,
											"end": 17066,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 17069,
											"end": 17110,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "639"
										},
										{
											"begin": 17069,
											"end": 17090,
											"name": "SELFBALANCE",
											"source": 9
										},
										{
											"begin": 17095,
											"end": 17109,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 17069,
											"end": 17094,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "413"
										},
										{
											"begin": 17069,
											"end": 17110,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 17069,
											"end": 17110,
											"name": "tag",
											"source": 9,
											"value": "639"
										},
										{
											"begin": 17069,
											"end": 17110,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 17048,
											"end": 17110,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 17048,
											"end": 17110,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17157,
											"end": 17192,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "640"
										},
										{
											"begin": 17170,
											"end": 17179,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 17181,
											"end": 17191,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 17157,
											"end": 17169,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "641"
										},
										{
											"begin": 17157,
											"end": 17192,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 17157,
											"end": 17192,
											"name": "tag",
											"source": 9,
											"value": "640"
										},
										{
											"begin": 17157,
											"end": 17192,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 17208,
											"end": 17251,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 17208,
											"end": 17251,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 17208,
											"end": 17251,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 16604,
											"end": 16629,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 16604,
											"end": 16629,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 16604,
											"end": 16629,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 16660,
											"end": 16662,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 16645,
											"end": 16663,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 16645,
											"end": 16663,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16638,
											"end": 16672,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 16638,
											"end": 16672,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 16638,
											"end": 16672,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 16688,
											"end": 16706,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 16688,
											"end": 16706,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 16688,
											"end": 16706,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16681,
											"end": 16715,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 16681,
											"end": 16715,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 16681,
											"end": 16715,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 17208,
											"end": 17251,
											"name": "PUSH",
											"source": 9,
											"value": "17BBFB9A6069321B6DED73BD96327C9E6B7212A5CD51FF219CD61370ACAFB561"
										},
										{
											"begin": 17208,
											"end": 17251,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 16592,
											"end": 16594,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 16577,
											"end": 16595,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 17208,
											"end": 17251,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 17208,
											"end": 17251,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 17208,
											"end": 17251,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 17208,
											"end": 17251,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 17208,
											"end": 17251,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 17208,
											"end": 17251,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 17208,
											"end": 17251,
											"name": "LOG1",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2889,
											"end": 2905,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 2889,
											"end": 2913,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2889,
											"end": 2913,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2889,
											"end": 2913,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2889,
											"end": 2913,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2889,
											"end": 2913,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 16294,
											"end": 17258,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 18421,
											"end": 20430,
											"name": "tag",
											"source": 9,
											"value": "587"
										},
										{
											"begin": 18421,
											"end": 20430,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 18548,
											"end": 18574,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 18548,
											"end": 18574,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 18548,
											"end": 18574,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 18548,
											"end": 18574,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 18548,
											"end": 18574,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 18548,
											"end": 18574,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 18548,
											"end": 18566,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 18548,
											"end": 18574,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 18548,
											"end": 18574,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 18548,
											"end": 18574,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 18548,
											"end": 18574,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 18548,
											"end": 18574,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 18548,
											"end": 18574,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 18548,
											"end": 18574,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 18548,
											"end": 18574,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 18548,
											"end": 18574,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 18548,
											"end": 18607,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "645"
										},
										{
											"begin": 18548,
											"end": 18607,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 18578,
											"end": 18607,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 18578,
											"end": 18607,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 18578,
											"end": 18607,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 18578,
											"end": 18607,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 18578,
											"end": 18607,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 18578,
											"end": 18607,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 18578,
											"end": 18596,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 18578,
											"end": 18607,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 18578,
											"end": 18607,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 18578,
											"end": 18607,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 18578,
											"end": 18607,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 18578,
											"end": 18607,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 18578,
											"end": 18607,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 18578,
											"end": 18607,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 18578,
											"end": 18607,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 18548,
											"end": 18607,
											"name": "tag",
											"source": 9,
											"value": "645"
										},
										{
											"begin": 18548,
											"end": 18607,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 18544,
											"end": 18728,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 18544,
											"end": 18728,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "646"
										},
										{
											"begin": 18544,
											"end": 18728,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 18623,
											"end": 18637,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "647"
										},
										{
											"begin": 18623,
											"end": 18635,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "648"
										},
										{
											"begin": 18623,
											"end": 18637,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 18623,
											"end": 18637,
											"name": "tag",
											"source": 9,
											"value": "647"
										},
										{
											"begin": 18623,
											"end": 18637,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 18544,
											"end": 18728,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "651"
										},
										{
											"begin": 18544,
											"end": 18728,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 18544,
											"end": 18728,
											"name": "tag",
											"source": 9,
											"value": "646"
										},
										{
											"begin": 18544,
											"end": 18728,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 18671,
											"end": 18684,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 18671,
											"end": 18684,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 18658,
											"end": 18684,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 18658,
											"end": 18684,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 18658,
											"end": 18684,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 18671,
											"end": 18684,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 18671,
											"end": 18684,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 18658,
											"end": 18684,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 18654,
											"end": 18728,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 18654,
											"end": 18728,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "651"
										},
										{
											"begin": 18654,
											"end": 18728,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 18700,
											"end": 18717,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "651"
										},
										{
											"begin": 13017,
											"end": 13024,
											"name": "PUSH",
											"source": 9,
											"value": "D"
										},
										{
											"begin": 13017,
											"end": 13024,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 13017,
											"end": 13024,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 12999,
											"end": 13014,
											"name": "PUSH",
											"source": 9,
											"value": "E"
										},
										{
											"begin": 12999,
											"end": 13024,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 13058,
											"end": 13071,
											"name": "PUSH",
											"source": 9,
											"value": "F"
										},
										{
											"begin": 13058,
											"end": 13071,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 13058,
											"end": 13071,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 13034,
											"end": 13055,
											"name": "PUSH",
											"source": 9,
											"value": "10"
										},
										{
											"begin": 13034,
											"end": 13071,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 13100,
											"end": 13108,
											"name": "PUSH",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 13100,
											"end": 13108,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 13100,
											"end": 13108,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 13081,
											"end": 13097,
											"name": "PUSH",
											"source": 9,
											"value": "12"
										},
										{
											"begin": 13081,
											"end": 13108,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 13142,
											"end": 13155,
											"name": "PUSH",
											"source": 9,
											"value": "13"
										},
										{
											"begin": 13142,
											"end": 13155,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 13142,
											"end": 13155,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 13118,
											"end": 13139,
											"name": "PUSH",
											"source": 9,
											"value": "15"
										},
										{
											"begin": 13118,
											"end": 13155,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 13176,
											"end": 13187,
											"name": "PUSH",
											"source": 9,
											"value": "16"
										},
										{
											"begin": 13176,
											"end": 13187,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 13166,
											"end": 13187,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13166,
											"end": 13187,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 13166,
											"end": 13187,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 13213,
											"end": 13230,
											"name": "PUSH",
											"source": 9,
											"value": "17"
										},
										{
											"begin": 13213,
											"end": 13230,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 13197,
											"end": 13230,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13197,
											"end": 13230,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 13197,
											"end": 13230,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 13256,
											"end": 13273,
											"name": "PUSH",
											"source": 9,
											"value": "18"
										},
										{
											"begin": 13256,
											"end": 13273,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 13240,
											"end": 13273,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13240,
											"end": 13273,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 13240,
											"end": 13273,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 13294,
											"end": 13306,
											"name": "PUSH",
											"source": 9,
											"value": "19"
										},
										{
											"begin": 13294,
											"end": 13306,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 13283,
											"end": 13306,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13283,
											"end": 13306,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 12954,
											"end": 13313,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 18700,
											"end": 18717,
											"name": "tag",
											"source": 9,
											"value": "651"
										},
										{
											"begin": 18700,
											"end": 18717,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 18791,
											"end": 18806,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 18809,
											"end": 18838,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "653"
										},
										{
											"begin": 18834,
											"end": 18837,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 18809,
											"end": 18829,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "654"
										},
										{
											"begin": 18820,
											"end": 18828,
											"name": "PUSH",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 18820,
											"end": 18828,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 18809,
											"end": 18815,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 18809,
											"end": 18819,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "655"
										},
										{
											"begin": 18809,
											"end": 18819,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 18809,
											"end": 18829,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 18809,
											"end": 18829,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 18809,
											"end": 18829,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 18809,
											"end": 18829,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 18809,
											"end": 18829,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 18809,
											"end": 18829,
											"name": "tag",
											"source": 9,
											"value": "654"
										},
										{
											"begin": 18809,
											"end": 18829,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 18809,
											"end": 18833,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 18809,
											"end": 18833,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "369"
										},
										{
											"begin": 18809,
											"end": 18838,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 18809,
											"end": 18838,
											"name": "tag",
											"source": 9,
											"value": "653"
										},
										{
											"begin": 18809,
											"end": 18838,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 18791,
											"end": 18838,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 18791,
											"end": 18838,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 18848,
											"end": 18868,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 18871,
											"end": 18905,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "656"
										},
										{
											"begin": 18901,
											"end": 18904,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 18871,
											"end": 18896,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "654"
										},
										{
											"begin": 18882,
											"end": 18895,
											"name": "PUSH",
											"source": 9,
											"value": "13"
										},
										{
											"begin": 18882,
											"end": 18895,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 18871,
											"end": 18877,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 18871,
											"end": 18881,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "655"
										},
										{
											"begin": 18871,
											"end": 18881,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 18871,
											"end": 18896,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 18871,
											"end": 18896,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 18871,
											"end": 18896,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 18871,
											"end": 18896,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 18871,
											"end": 18896,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 18871,
											"end": 18905,
											"name": "tag",
											"source": 9,
											"value": "656"
										},
										{
											"begin": 18871,
											"end": 18905,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 18920,
											"end": 18939,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 18920,
											"end": 18939,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 18920,
											"end": 18939,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 18920,
											"end": 18939,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 18920,
											"end": 18939,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 18920,
											"end": 18939,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 18920,
											"end": 18931,
											"name": "PUSH",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 18920,
											"end": 18939,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 18920,
											"end": 18939,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 18920,
											"end": 18939,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 18920,
											"end": 18939,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 18920,
											"end": 18939,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 18920,
											"end": 18939,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 18848,
											"end": 18905,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 18848,
											"end": 18905,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 18920,
											"end": 18939,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 18920,
											"end": 18939,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 18920,
											"end": 18966,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 18920,
											"end": 18966,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 18920,
											"end": 18966,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "658"
										},
										{
											"begin": 18920,
											"end": 18966,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 18944,
											"end": 18966,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 18944,
											"end": 18966,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 18944,
											"end": 18966,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 18944,
											"end": 18966,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 18944,
											"end": 18966,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 18944,
											"end": 18966,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 18944,
											"end": 18955,
											"name": "PUSH",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 18944,
											"end": 18966,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 18944,
											"end": 18966,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 18944,
											"end": 18966,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 18944,
											"end": 18966,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 18944,
											"end": 18966,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 18944,
											"end": 18966,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 18944,
											"end": 18966,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 18944,
											"end": 18966,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 18943,
											"end": 18966,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 18920,
											"end": 18966,
											"name": "tag",
											"source": 9,
											"value": "658"
										},
										{
											"begin": 18920,
											"end": 18966,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 18916,
											"end": 19854,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 18916,
											"end": 19854,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "659"
										},
										{
											"begin": 18916,
											"end": 19854,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 18982,
											"end": 19125,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "660"
										},
										{
											"begin": 19021,
											"end": 19027,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 19045,
											"end": 19054,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 19073,
											"end": 19110,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "661"
										},
										{
											"begin": 19097,
											"end": 19109,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 19073,
											"end": 19092,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "662"
										},
										{
											"begin": 19073,
											"end": 19079,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 19084,
											"end": 19091,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 19073,
											"end": 19083,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "413"
										},
										{
											"begin": 19073,
											"end": 19092,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 19073,
											"end": 19092,
											"name": "tag",
											"source": 9,
											"value": "662"
										},
										{
											"begin": 19073,
											"end": 19092,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 19073,
											"end": 19096,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 19073,
											"end": 19096,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "413"
										},
										{
											"begin": 19073,
											"end": 19110,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 19073,
											"end": 19110,
											"name": "tag",
											"source": 9,
											"value": "661"
										},
										{
											"begin": 19073,
											"end": 19110,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 18982,
											"end": 19003,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "663"
										},
										{
											"begin": 18982,
											"end": 19125,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 18982,
											"end": 19125,
											"name": "tag",
											"source": 9,
											"value": "660"
										},
										{
											"begin": 18982,
											"end": 19125,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 18916,
											"end": 19854,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "686"
										},
										{
											"begin": 18916,
											"end": 19854,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 18916,
											"end": 19854,
											"name": "tag",
											"source": 9,
											"value": "659"
										},
										{
											"begin": 18916,
											"end": 19854,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 19147,
											"end": 19166,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 19147,
											"end": 19166,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 19147,
											"end": 19166,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 19147,
											"end": 19166,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 19147,
											"end": 19166,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 19147,
											"end": 19166,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 19147,
											"end": 19158,
											"name": "PUSH",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 19147,
											"end": 19166,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 19147,
											"end": 19166,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 19147,
											"end": 19166,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 19147,
											"end": 19166,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 19147,
											"end": 19166,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 19147,
											"end": 19166,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 19147,
											"end": 19166,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 19147,
											"end": 19166,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 19146,
											"end": 19166,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 19146,
											"end": 19192,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 19146,
											"end": 19192,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 19146,
											"end": 19192,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "665"
										},
										{
											"begin": 19146,
											"end": 19192,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 19170,
											"end": 19192,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 19170,
											"end": 19192,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 19170,
											"end": 19192,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 19170,
											"end": 19192,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 19170,
											"end": 19192,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 19170,
											"end": 19192,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 19170,
											"end": 19181,
											"name": "PUSH",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 19170,
											"end": 19192,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 19170,
											"end": 19192,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 19170,
											"end": 19192,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 19170,
											"end": 19192,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 19170,
											"end": 19192,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 19170,
											"end": 19192,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 19170,
											"end": 19192,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 19170,
											"end": 19192,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 19146,
											"end": 19192,
											"name": "tag",
											"source": 9,
											"value": "665"
										},
										{
											"begin": 19146,
											"end": 19192,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 19142,
											"end": 19854,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 19142,
											"end": 19854,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "666"
										},
										{
											"begin": 19142,
											"end": 19854,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 19208,
											"end": 19349,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "660"
										},
										{
											"begin": 19245,
											"end": 19251,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 19269,
											"end": 19278,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 19297,
											"end": 19334,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "668"
										},
										{
											"begin": 19321,
											"end": 19333,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 19297,
											"end": 19316,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "662"
										},
										{
											"begin": 19297,
											"end": 19303,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 19308,
											"end": 19315,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 19297,
											"end": 19307,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "413"
										},
										{
											"begin": 19297,
											"end": 19316,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 19297,
											"end": 19334,
											"name": "tag",
											"source": 9,
											"value": "668"
										},
										{
											"begin": 19297,
											"end": 19334,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 19208,
											"end": 19227,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "670"
										},
										{
											"begin": 19208,
											"end": 19349,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 19142,
											"end": 19854,
											"name": "tag",
											"source": 9,
											"value": "666"
										},
										{
											"begin": 19142,
											"end": 19854,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 19371,
											"end": 19390,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 19371,
											"end": 19390,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 19371,
											"end": 19390,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 19371,
											"end": 19390,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 19371,
											"end": 19390,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 19371,
											"end": 19390,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 19371,
											"end": 19382,
											"name": "PUSH",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 19371,
											"end": 19390,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 19371,
											"end": 19390,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 19371,
											"end": 19390,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 19371,
											"end": 19390,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 19371,
											"end": 19390,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 19371,
											"end": 19390,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 19371,
											"end": 19390,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 19371,
											"end": 19390,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 19370,
											"end": 19390,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 19370,
											"end": 19417,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 19370,
											"end": 19417,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 19370,
											"end": 19417,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "672"
										},
										{
											"begin": 19370,
											"end": 19417,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 19395,
											"end": 19417,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 19395,
											"end": 19417,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 19395,
											"end": 19417,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 19395,
											"end": 19417,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 19395,
											"end": 19417,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 19395,
											"end": 19417,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 19395,
											"end": 19406,
											"name": "PUSH",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 19395,
											"end": 19417,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 19395,
											"end": 19417,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 19395,
											"end": 19417,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 19395,
											"end": 19417,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 19395,
											"end": 19417,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 19395,
											"end": 19417,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 19395,
											"end": 19417,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 19395,
											"end": 19417,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 19394,
											"end": 19417,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 19370,
											"end": 19417,
											"name": "tag",
											"source": 9,
											"value": "672"
										},
										{
											"begin": 19370,
											"end": 19417,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 19366,
											"end": 19854,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 19366,
											"end": 19854,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "673"
										},
										{
											"begin": 19366,
											"end": 19854,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 19433,
											"end": 19510,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "660"
										},
										{
											"begin": 19451,
											"end": 19457,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 19459,
											"end": 19468,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 19471,
											"end": 19508,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "675"
										},
										{
											"begin": 19495,
											"end": 19507,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 19471,
											"end": 19490,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "662"
										},
										{
											"begin": 19471,
											"end": 19477,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 19482,
											"end": 19489,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 19471,
											"end": 19481,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "413"
										},
										{
											"begin": 19471,
											"end": 19490,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 19471,
											"end": 19508,
											"name": "tag",
											"source": 9,
											"value": "675"
										},
										{
											"begin": 19471,
											"end": 19508,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 19433,
											"end": 19450,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "677"
										},
										{
											"begin": 19433,
											"end": 19510,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 19366,
											"end": 19854,
											"name": "tag",
											"source": 9,
											"value": "673"
										},
										{
											"begin": 19366,
											"end": 19854,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 19531,
											"end": 19550,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 19531,
											"end": 19550,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 19531,
											"end": 19550,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 19531,
											"end": 19550,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 19531,
											"end": 19550,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 19531,
											"end": 19550,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 19531,
											"end": 19542,
											"name": "PUSH",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 19531,
											"end": 19550,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 19531,
											"end": 19550,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 19531,
											"end": 19550,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 19531,
											"end": 19550,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 19531,
											"end": 19550,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 19531,
											"end": 19550,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 19531,
											"end": 19550,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 19531,
											"end": 19550,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 19531,
											"end": 19576,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 19531,
											"end": 19576,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 19531,
											"end": 19576,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "679"
										},
										{
											"begin": 19531,
											"end": 19576,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 19554,
											"end": 19576,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 19554,
											"end": 19576,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 19554,
											"end": 19576,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 19554,
											"end": 19576,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 19554,
											"end": 19576,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 19554,
											"end": 19576,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 19554,
											"end": 19565,
											"name": "PUSH",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 19554,
											"end": 19576,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 19554,
											"end": 19576,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 19554,
											"end": 19576,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 19554,
											"end": 19576,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 19554,
											"end": 19576,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 19554,
											"end": 19576,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 19554,
											"end": 19576,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 19554,
											"end": 19576,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 19531,
											"end": 19576,
											"name": "tag",
											"source": 9,
											"value": "679"
										},
										{
											"begin": 19531,
											"end": 19576,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 19527,
											"end": 19854,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 19527,
											"end": 19854,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "680"
										},
										{
											"begin": 19527,
											"end": 19854,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 19592,
											"end": 19735,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "660"
										},
										{
											"begin": 19631,
											"end": 19637,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 19655,
											"end": 19664,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 19683,
											"end": 19720,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "682"
										},
										{
											"begin": 19707,
											"end": 19719,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 19683,
											"end": 19702,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "662"
										},
										{
											"begin": 19683,
											"end": 19689,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 19694,
											"end": 19701,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 19683,
											"end": 19693,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "413"
										},
										{
											"begin": 19683,
											"end": 19702,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 19683,
											"end": 19720,
											"name": "tag",
											"source": 9,
											"value": "682"
										},
										{
											"begin": 19683,
											"end": 19720,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 19592,
											"end": 19613,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "684"
										},
										{
											"begin": 19592,
											"end": 19735,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 19527,
											"end": 19854,
											"name": "tag",
											"source": 9,
											"value": "680"
										},
										{
											"begin": 19527,
											"end": 19854,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 19766,
											"end": 19843,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "686"
										},
										{
											"begin": 19784,
											"end": 19790,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 19792,
											"end": 19801,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 19804,
											"end": 19841,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "675"
										},
										{
											"begin": 19828,
											"end": 19840,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 19804,
											"end": 19823,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "662"
										},
										{
											"begin": 19804,
											"end": 19810,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 19815,
											"end": 19822,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 19804,
											"end": 19814,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "413"
										},
										{
											"begin": 19804,
											"end": 19823,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 19766,
											"end": 19843,
											"name": "tag",
											"source": 9,
											"value": "686"
										},
										{
											"begin": 19766,
											"end": 19843,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 19957,
											"end": 19958,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 19947,
											"end": 19954,
											"name": "PUSH",
											"source": 9,
											"value": "D"
										},
										{
											"begin": 19947,
											"end": 19958,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 19947,
											"end": 19958,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 19947,
											"end": 19958,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 19968,
											"end": 19981,
											"name": "PUSH",
											"source": 9,
											"value": "F"
										},
										{
											"begin": 19968,
											"end": 19985,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 19968,
											"end": 19985,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 19968,
											"end": 19985,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 19996,
											"end": 20042,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "689"
										},
										{
											"begin": 19996,
											"end": 20042,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 20014,
											"end": 20020,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 20014,
											"end": 20020,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 20034,
											"end": 20041,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 19996,
											"end": 20013,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "677"
										},
										{
											"begin": 19996,
											"end": 20042,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 19996,
											"end": 20042,
											"name": "tag",
											"source": 9,
											"value": "689"
										},
										{
											"begin": 19996,
											"end": 20042,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 20078,
											"end": 20093,
											"name": "PUSH",
											"source": 9,
											"value": "14"
										},
										{
											"begin": 20078,
											"end": 20093,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 20052,
											"end": 20108,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "690"
										},
										{
											"begin": 20052,
											"end": 20108,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 20070,
											"end": 20076,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 20070,
											"end": 20076,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 20078,
											"end": 20093,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 20095,
											"end": 20107,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 20052,
											"end": 20069,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "677"
										},
										{
											"begin": 20052,
											"end": 20108,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 20052,
											"end": 20108,
											"name": "tag",
											"source": 9,
											"value": "690"
										},
										{
											"begin": 20052,
											"end": 20108,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 20170,
											"end": 20185,
											"name": "PUSH",
											"source": 9,
											"value": "E"
										},
										{
											"begin": 20170,
											"end": 20185,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 20160,
											"end": 20167,
											"name": "PUSH",
											"source": 9,
											"value": "D"
										},
										{
											"begin": 20160,
											"end": 20185,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 20211,
											"end": 20232,
											"name": "PUSH",
											"source": 9,
											"value": "10"
										},
										{
											"begin": 20211,
											"end": 20232,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 20195,
											"end": 20208,
											"name": "PUSH",
											"source": 9,
											"value": "F"
										},
										{
											"begin": 20195,
											"end": 20232,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 20260,
											"end": 20286,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 20260,
											"end": 20286,
											"name": "AND",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 20260,
											"end": 20286,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 20260,
											"end": 20286,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 20260,
											"end": 20286,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 20260,
											"end": 20278,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 20260,
											"end": 20286,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 20260,
											"end": 20286,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 20260,
											"end": 20286,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 20260,
											"end": 20286,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 20260,
											"end": 20286,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 20260,
											"end": 20286,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 20260,
											"end": 20286,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 20260,
											"end": 20286,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 20260,
											"end": 20286,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 20260,
											"end": 20331,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "691"
										},
										{
											"begin": 20260,
											"end": 20331,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 20302,
											"end": 20331,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 20302,
											"end": 20331,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 20302,
											"end": 20331,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 20302,
											"end": 20331,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 20302,
											"end": 20331,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 20302,
											"end": 20331,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 20302,
											"end": 20320,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 20302,
											"end": 20331,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 20302,
											"end": 20331,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 20302,
											"end": 20331,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 20302,
											"end": 20331,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 20302,
											"end": 20331,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 20302,
											"end": 20331,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 20302,
											"end": 20331,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 20302,
											"end": 20331,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 20260,
											"end": 20331,
											"name": "tag",
											"source": 9,
											"value": "691"
										},
										{
											"begin": 20260,
											"end": 20331,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 20260,
											"end": 20373,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 20260,
											"end": 20373,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "692"
										},
										{
											"begin": 20260,
											"end": 20373,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 20360,
											"end": 20373,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 20360,
											"end": 20373,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 20347,
											"end": 20373,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 20347,
											"end": 20373,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 20347,
											"end": 20373,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 20360,
											"end": 20373,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 20360,
											"end": 20373,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 20347,
											"end": 20373,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 20260,
											"end": 20373,
											"name": "tag",
											"source": 9,
											"value": "692"
										},
										{
											"begin": 20260,
											"end": 20373,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 20243,
											"end": 20424,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 20243,
											"end": 20424,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "588"
										},
										{
											"begin": 20243,
											"end": 20424,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 20398,
											"end": 20413,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "588"
										},
										{
											"begin": 13789,
											"end": 13804,
											"name": "PUSH",
											"source": 9,
											"value": "E"
										},
										{
											"begin": 13789,
											"end": 13804,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 13779,
											"end": 13786,
											"name": "PUSH",
											"source": 9,
											"value": "D"
										},
										{
											"begin": 13779,
											"end": 13804,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 13830,
											"end": 13851,
											"name": "PUSH",
											"source": 9,
											"value": "10"
										},
										{
											"begin": 13830,
											"end": 13851,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 13814,
											"end": 13827,
											"name": "PUSH",
											"source": 9,
											"value": "F"
										},
										{
											"begin": 13814,
											"end": 13851,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 13872,
											"end": 13888,
											"name": "PUSH",
											"source": 9,
											"value": "12"
										},
										{
											"begin": 13872,
											"end": 13888,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 13861,
											"end": 13869,
											"name": "PUSH",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 13861,
											"end": 13888,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 13914,
											"end": 13935,
											"name": "PUSH",
											"source": 9,
											"value": "15"
										},
										{
											"begin": 13914,
											"end": 13935,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 13898,
											"end": 13911,
											"name": "PUSH",
											"source": 9,
											"value": "13"
										},
										{
											"begin": 13898,
											"end": 13935,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 13736,
											"end": 13942,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11751,
											"end": 12313,
											"name": "tag",
											"source": 9,
											"value": "607"
										},
										{
											"begin": 11751,
											"end": 12313,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11848,
											"end": 11855,
											"name": "PUSH",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 11848,
											"end": 11855,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 11883,
											"end": 11890,
											"name": "PUSH",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 11883,
											"end": 11890,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 11802,
											"end": 11809,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11802,
											"end": 11809,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 11802,
											"end": 11809,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11802,
											"end": 11809,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 11802,
											"end": 11809,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11900,
											"end": 12201,
											"name": "tag",
											"source": 9,
											"value": "697"
										},
										{
											"begin": 11900,
											"end": 12201,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11924,
											"end": 11933,
											"name": "PUSH",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 11924,
											"end": 11940,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 11920,
											"end": 11940,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11920,
											"end": 11940,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 11900,
											"end": 12201,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 11900,
											"end": 12201,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "698"
										},
										{
											"begin": 11900,
											"end": 12201,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 11989,
											"end": 11996,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11965,
											"end": 11972,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 11965,
											"end": 11986,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11973,
											"end": 11982,
											"name": "PUSH",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 11983,
											"end": 11984,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 11973,
											"end": 11985,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11973,
											"end": 11985,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 11973,
											"end": 11985,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11973,
											"end": 11985,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 11973,
											"end": 11985,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "701"
										},
										{
											"begin": 11973,
											"end": 11985,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 11973,
											"end": 11985,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "701"
										},
										{
											"begin": 11973,
											"end": 11985,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "382"
										},
										{
											"begin": 11973,
											"end": 11985,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 11973,
											"end": 11985,
											"name": "tag",
											"source": 9,
											"value": "701"
										},
										{
											"begin": 11973,
											"end": 11985,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11973,
											"end": 11985,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11973,
											"end": 11985,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 11973,
											"end": 11985,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11973,
											"end": 11985,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11973,
											"end": 11985,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 11973,
											"end": 11985,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 11973,
											"end": 11985,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 11973,
											"end": 11985,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 11973,
											"end": 11985,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11973,
											"end": 11985,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 11973,
											"end": 11985,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11973,
											"end": 11985,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11973,
											"end": 11985,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 11965,
											"end": 11986,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 11965,
											"end": 11986,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11965,
											"end": 11986,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11965,
											"end": 11986,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11965,
											"end": 11986,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 11965,
											"end": 11986,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11965,
											"end": 11986,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 11965,
											"end": 11986,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11965,
											"end": 11986,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 11965,
											"end": 11986,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11965,
											"end": 11986,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11965,
											"end": 11986,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 11965,
											"end": 11986,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 11965,
											"end": 11996,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 11965,
											"end": 11996,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 11965,
											"end": 12031,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "703"
										},
										{
											"begin": 11965,
											"end": 12031,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 11965,
											"end": 12031,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12024,
											"end": 12031,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12000,
											"end": 12007,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 12000,
											"end": 12021,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12008,
											"end": 12017,
											"name": "PUSH",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 12018,
											"end": 12019,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 12008,
											"end": 12020,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12008,
											"end": 12020,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 12008,
											"end": 12020,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12008,
											"end": 12020,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 12008,
											"end": 12020,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "705"
										},
										{
											"begin": 12008,
											"end": 12020,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 12008,
											"end": 12020,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "705"
										},
										{
											"begin": 12008,
											"end": 12020,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "382"
										},
										{
											"begin": 12008,
											"end": 12020,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 12008,
											"end": 12020,
											"name": "tag",
											"source": 9,
											"value": "705"
										},
										{
											"begin": 12008,
											"end": 12020,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12008,
											"end": 12020,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12008,
											"end": 12020,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 12008,
											"end": 12020,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12008,
											"end": 12020,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12008,
											"end": 12020,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 12008,
											"end": 12020,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 12008,
											"end": 12020,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 12008,
											"end": 12020,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 12008,
											"end": 12020,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12008,
											"end": 12020,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 12008,
											"end": 12020,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12008,
											"end": 12020,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12008,
											"end": 12020,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 12000,
											"end": 12021,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 12000,
											"end": 12021,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12000,
											"end": 12021,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12000,
											"end": 12021,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12000,
											"end": 12021,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 12000,
											"end": 12021,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12000,
											"end": 12021,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 12000,
											"end": 12021,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12000,
											"end": 12021,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 12000,
											"end": 12021,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12000,
											"end": 12021,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12000,
											"end": 12021,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 12000,
											"end": 12021,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 12000,
											"end": 12031,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 11965,
											"end": 12031,
											"name": "tag",
											"source": 9,
											"value": "703"
										},
										{
											"begin": 11965,
											"end": 12031,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11961,
											"end": 12074,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 11961,
											"end": 12074,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "707"
										},
										{
											"begin": 11961,
											"end": 12074,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 12057,
											"end": 12064,
											"name": "PUSH",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 12057,
											"end": 12064,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 12066,
											"end": 12073,
											"name": "PUSH",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 12066,
											"end": 12073,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 12049,
											"end": 12074,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 12049,
											"end": 12074,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12049,
											"end": 12074,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 12049,
											"end": 12074,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12049,
											"end": 12074,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12049,
											"end": 12074,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12049,
											"end": 12074,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11751,
											"end": 12313,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11751,
											"end": 12313,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 11751,
											"end": 12313,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 11961,
											"end": 12074,
											"name": "tag",
											"source": 9,
											"value": "707"
										},
										{
											"begin": 11961,
											"end": 12074,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12098,
											"end": 12132,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "708"
										},
										{
											"begin": 12110,
											"end": 12117,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 12110,
											"end": 12131,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12118,
											"end": 12127,
											"name": "PUSH",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 12128,
											"end": 12129,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 12118,
											"end": 12130,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12118,
											"end": 12130,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 12118,
											"end": 12130,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12118,
											"end": 12130,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 12118,
											"end": 12130,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "710"
										},
										{
											"begin": 12118,
											"end": 12130,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 12118,
											"end": 12130,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "710"
										},
										{
											"begin": 12118,
											"end": 12130,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "382"
										},
										{
											"begin": 12118,
											"end": 12130,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 12118,
											"end": 12130,
											"name": "tag",
											"source": 9,
											"value": "710"
										},
										{
											"begin": 12118,
											"end": 12130,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12118,
											"end": 12130,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12118,
											"end": 12130,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 12118,
											"end": 12130,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12118,
											"end": 12130,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12118,
											"end": 12130,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 12118,
											"end": 12130,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 12118,
											"end": 12130,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 12118,
											"end": 12130,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 12118,
											"end": 12130,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12118,
											"end": 12130,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 12118,
											"end": 12130,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12118,
											"end": 12130,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12118,
											"end": 12130,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 12110,
											"end": 12131,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 12110,
											"end": 12131,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12110,
											"end": 12131,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12110,
											"end": 12131,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12110,
											"end": 12131,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 12110,
											"end": 12131,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12110,
											"end": 12131,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 12110,
											"end": 12131,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12110,
											"end": 12131,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 12110,
											"end": 12131,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12110,
											"end": 12131,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12110,
											"end": 12131,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 12110,
											"end": 12131,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 12098,
											"end": 12105,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 12098,
											"end": 12105,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12098,
											"end": 12109,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "413"
										},
										{
											"begin": 12098,
											"end": 12132,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 12098,
											"end": 12132,
											"name": "tag",
											"source": 9,
											"value": "708"
										},
										{
											"begin": 12098,
											"end": 12132,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12088,
											"end": 12132,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 12088,
											"end": 12132,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12156,
											"end": 12190,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "712"
										},
										{
											"begin": 12168,
											"end": 12175,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 12168,
											"end": 12189,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12176,
											"end": 12185,
											"name": "PUSH",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 12186,
											"end": 12187,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 12176,
											"end": 12188,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12176,
											"end": 12188,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 12176,
											"end": 12188,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12176,
											"end": 12188,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 12176,
											"end": 12188,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "714"
										},
										{
											"begin": 12176,
											"end": 12188,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 12176,
											"end": 12188,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "714"
										},
										{
											"begin": 12176,
											"end": 12188,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "382"
										},
										{
											"begin": 12176,
											"end": 12188,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 12176,
											"end": 12188,
											"name": "tag",
											"source": 9,
											"value": "714"
										},
										{
											"begin": 12176,
											"end": 12188,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12176,
											"end": 12188,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12176,
											"end": 12188,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 12176,
											"end": 12188,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12176,
											"end": 12188,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12176,
											"end": 12188,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 12176,
											"end": 12188,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 12176,
											"end": 12188,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 12176,
											"end": 12188,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 12176,
											"end": 12188,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12176,
											"end": 12188,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 12176,
											"end": 12188,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12176,
											"end": 12188,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12176,
											"end": 12188,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 12168,
											"end": 12189,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 12168,
											"end": 12189,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12168,
											"end": 12189,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12168,
											"end": 12189,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12168,
											"end": 12189,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 12168,
											"end": 12189,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12168,
											"end": 12189,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 12168,
											"end": 12189,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12168,
											"end": 12189,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 12168,
											"end": 12189,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12168,
											"end": 12189,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12168,
											"end": 12189,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 12168,
											"end": 12189,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 12156,
											"end": 12163,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 12156,
											"end": 12163,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12156,
											"end": 12167,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "413"
										},
										{
											"begin": 12156,
											"end": 12190,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 12156,
											"end": 12190,
											"name": "tag",
											"source": 9,
											"value": "712"
										},
										{
											"begin": 12156,
											"end": 12190,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12146,
											"end": 12190,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11942,
											"end": 11945,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 11942,
											"end": 11945,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "716"
										},
										{
											"begin": 11942,
											"end": 11945,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11942,
											"end": 11945,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "398"
										},
										{
											"begin": 11942,
											"end": 11945,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 11942,
											"end": 11945,
											"name": "tag",
											"source": 9,
											"value": "716"
										},
										{
											"begin": 11942,
											"end": 11945,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11942,
											"end": 11945,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 11942,
											"end": 11945,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11942,
											"end": 11945,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11900,
											"end": 12201,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "697"
										},
										{
											"begin": 11900,
											"end": 12201,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11900,
											"end": 12201,
											"name": "tag",
											"source": 9,
											"value": "698"
										},
										{
											"begin": 11900,
											"end": 12201,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12236,
											"end": 12243,
											"name": "PUSH",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 12236,
											"end": 12243,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 12224,
											"end": 12231,
											"name": "PUSH",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 12224,
											"end": 12231,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 12224,
											"end": 12244,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "717"
										},
										{
											"begin": 12224,
											"end": 12244,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 12224,
											"end": 12235,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "369"
										},
										{
											"begin": 12224,
											"end": 12244,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 12224,
											"end": 12244,
											"name": "tag",
											"source": 9,
											"value": "717"
										},
										{
											"begin": 12224,
											"end": 12244,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12214,
											"end": 12221,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12214,
											"end": 12244,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 12210,
											"end": 12271,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 12210,
											"end": 12271,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "718"
										},
										{
											"begin": 12210,
											"end": 12271,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 12254,
											"end": 12261,
											"name": "PUSH",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 12254,
											"end": 12261,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 12263,
											"end": 12270,
											"name": "PUSH",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 12263,
											"end": 12270,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 12246,
											"end": 12271,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 12246,
											"end": 12271,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12246,
											"end": 12271,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 12246,
											"end": 12271,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12246,
											"end": 12271,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12246,
											"end": 12271,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11751,
											"end": 12313,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11751,
											"end": 12313,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 11751,
											"end": 12313,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 12210,
											"end": 12271,
											"name": "tag",
											"source": 9,
											"value": "718"
										},
										{
											"begin": 12210,
											"end": 12271,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12289,
											"end": 12296,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12289,
											"end": 12296,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 12298,
											"end": 12305,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12298,
											"end": 12305,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11751,
											"end": 12313,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11751,
											"end": 12313,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 10638,
											"end": 11037,
											"name": "tag",
											"source": 9,
											"value": "616"
										},
										{
											"begin": 10638,
											"end": 11037,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10735,
											"end": 10742,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10756,
											"end": 10763,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 10777,
											"end": 10784,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10809,
											"end": 10821,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 10824,
											"end": 10848,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "720"
										},
										{
											"begin": 10840,
											"end": 10847,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 10824,
											"end": 10839,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "721"
										},
										{
											"begin": 10824,
											"end": 10848,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 10824,
											"end": 10848,
											"name": "tag",
											"source": 9,
											"value": "720"
										},
										{
											"begin": 10824,
											"end": 10848,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10809,
											"end": 10848,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10809,
											"end": 10848,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10858,
											"end": 10876,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10879,
											"end": 10909,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "722"
										},
										{
											"begin": 10901,
											"end": 10908,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 10879,
											"end": 10900,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "723"
										},
										{
											"begin": 10879,
											"end": 10909,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 10879,
											"end": 10909,
											"name": "tag",
											"source": 9,
											"value": "722"
										},
										{
											"begin": 10879,
											"end": 10909,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10858,
											"end": 10909,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10919,
											"end": 10942,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10945,
											"end": 10978,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "724"
										},
										{
											"begin": 10858,
											"end": 10909,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10945,
											"end": 10962,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "662"
										},
										{
											"begin": 10945,
											"end": 10952,
											"name": "DUP10",
											"source": 9
										},
										{
											"begin": 10957,
											"end": 10961,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 10945,
											"end": 10956,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "413"
										},
										{
											"begin": 10945,
											"end": 10962,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 10945,
											"end": 10978,
											"name": "tag",
											"source": 9,
											"value": "724"
										},
										{
											"begin": 10945,
											"end": 10978,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10919,
											"end": 10978,
											"name": "SWAP8",
											"source": 9
										},
										{
											"begin": 11013,
											"end": 11017,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 11013,
											"end": 11017,
											"name": "SWAP7",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11019,
											"end": 11029,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11019,
											"end": 11029,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10638,
											"end": 11037,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10638,
											"end": 11037,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10638,
											"end": 11037,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 11043,
											"end": 11578,
											"name": "tag",
											"source": 9,
											"value": "619"
										},
										{
											"begin": 11043,
											"end": 11578,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11233,
											"end": 11240,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11233,
											"end": 11240,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 11233,
											"end": 11240,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 11233,
											"end": 11240,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 11325,
											"end": 11349,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "727"
										},
										{
											"begin": 11325,
											"end": 11332,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 11337,
											"end": 11348,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 11325,
											"end": 11336,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "655"
										},
										{
											"begin": 11325,
											"end": 11349,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 11325,
											"end": 11349,
											"name": "tag",
											"source": 9,
											"value": "727"
										},
										{
											"begin": 11325,
											"end": 11349,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11307,
											"end": 11349,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11359,
											"end": 11371,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11374,
											"end": 11395,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "728"
										},
										{
											"begin": 11374,
											"end": 11378,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 11383,
											"end": 11394,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 11374,
											"end": 11382,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "655"
										},
										{
											"begin": 11374,
											"end": 11395,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 11374,
											"end": 11395,
											"name": "tag",
											"source": 9,
											"value": "728"
										},
										{
											"begin": 11374,
											"end": 11395,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11359,
											"end": 11395,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11405,
											"end": 11423,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11426,
											"end": 11453,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "729"
										},
										{
											"begin": 11426,
											"end": 11436,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 11441,
											"end": 11452,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 11426,
											"end": 11440,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "655"
										},
										{
											"begin": 11426,
											"end": 11453,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 11426,
											"end": 11453,
											"name": "tag",
											"source": 9,
											"value": "729"
										},
										{
											"begin": 11426,
											"end": 11453,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11405,
											"end": 11453,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11463,
											"end": 11486,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11489,
											"end": 11522,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "730"
										},
										{
											"begin": 11405,
											"end": 11453,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11489,
											"end": 11506,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "662"
										},
										{
											"begin": 11489,
											"end": 11496,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 11501,
											"end": 11505,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 11489,
											"end": 11500,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "413"
										},
										{
											"begin": 11489,
											"end": 11506,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 11489,
											"end": 11522,
											"name": "tag",
											"source": 9,
											"value": "730"
										},
										{
											"begin": 11489,
											"end": 11522,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11540,
											"end": 11547,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 11540,
											"end": 11547,
											"name": "SWAP12",
											"source": 9
										},
										{
											"begin": 11540,
											"end": 11547,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 11540,
											"end": 11547,
											"name": "SWAP11",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11566,
											"end": 11570,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 11566,
											"end": 11570,
											"name": "SWAP9",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11043,
											"end": 11578,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 11043,
											"end": 11578,
											"name": "SWAP7",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11043,
											"end": 11578,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 17264,
											"end": 17837,
											"name": "tag",
											"source": 9,
											"value": "638"
										},
										{
											"begin": 17264,
											"end": 17837,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 17412,
											"end": 17428,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 17412,
											"end": 17428,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 17412,
											"end": 17428,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 17426,
											"end": 17427,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 17412,
											"end": 17428,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 17412,
											"end": 17428,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 17412,
											"end": 17428,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 17412,
											"end": 17428,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 17412,
											"end": 17428,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 17412,
											"end": 17428,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 17412,
											"end": 17428,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 17412,
											"end": 17428,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 17388,
											"end": 17409,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 17388,
											"end": 17409,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 17412,
											"end": 17428,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 17412,
											"end": 17428,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 17412,
											"end": 17428,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 17412,
											"end": 17428,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 17412,
											"end": 17428,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 17412,
											"end": 17428,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 17412,
											"end": 17428,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 17412,
											"end": 17428,
											"name": "CALLDATACOPY",
											"source": 9
										},
										{
											"begin": 17412,
											"end": 17428,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 17412,
											"end": 17428,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 17412,
											"end": 17428,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17388,
											"end": 17428,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 17388,
											"end": 17428,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17456,
											"end": 17460,
											"name": "ADDRESS",
											"source": 9
										},
										{
											"begin": 17438,
											"end": 17442,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 17443,
											"end": 17444,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 17438,
											"end": 17445,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 17438,
											"end": 17445,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 17438,
											"end": 17445,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 17438,
											"end": 17445,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 17438,
											"end": 17445,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "738"
										},
										{
											"begin": 17438,
											"end": 17445,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 17438,
											"end": 17445,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "738"
										},
										{
											"begin": 17438,
											"end": 17445,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "382"
										},
										{
											"begin": 17438,
											"end": 17445,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 17438,
											"end": 17445,
											"name": "tag",
											"source": 9,
											"value": "738"
										},
										{
											"begin": 17438,
											"end": 17445,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17438,
											"end": 17461,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 17438,
											"end": 17461,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 17438,
											"end": 17461,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 17438,
											"end": 17445,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 17438,
											"end": 17445,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 17438,
											"end": 17445,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 17438,
											"end": 17445,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 17438,
											"end": 17445,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 17438,
											"end": 17445,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 17438,
											"end": 17445,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 17438,
											"end": 17445,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 17438,
											"end": 17445,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 17438,
											"end": 17445,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 17438,
											"end": 17461,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 17438,
											"end": 17461,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 17438,
											"end": 17461,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 17438,
											"end": 17461,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 17481,
											"end": 17496,
											"name": "PUSH",
											"source": 9,
											"value": "1E"
										},
										{
											"begin": 17481,
											"end": 17496,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 17481,
											"end": 17503,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 17481,
											"end": 17503,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 17481,
											"end": 17503,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "15AB88C9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 17481,
											"end": 17503,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 17481,
											"end": 17503,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 17481,
											"end": 17503,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 17481,
											"end": 17503,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 17481,
											"end": 17496,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 17481,
											"end": 17496,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 17481,
											"end": 17496,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 17481,
											"end": 17496,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 17481,
											"end": 17496,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 17481,
											"end": 17501,
											"name": "PUSH",
											"source": 9,
											"value": "AD5C4648"
										},
										{
											"begin": 17481,
											"end": 17501,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 17481,
											"end": 17503,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 17481,
											"end": 17503,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 17481,
											"end": 17503,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 17481,
											"end": 17503,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 17481,
											"end": 17503,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 17438,
											"end": 17445,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 17438,
											"end": 17445,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 17481,
											"end": 17503,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 17481,
											"end": 17503,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 17481,
											"end": 17503,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 17481,
											"end": 17503,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 17481,
											"end": 17503,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 17481,
											"end": 17496,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 17481,
											"end": 17503,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 17481,
											"end": 17503,
											"name": "EXTCODESIZE",
											"source": 9
										},
										{
											"begin": 17481,
											"end": 17503,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 17481,
											"end": 17503,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 17481,
											"end": 17503,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 17481,
											"end": 17503,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "739"
										},
										{
											"begin": 17481,
											"end": 17503,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 17481,
											"end": 17503,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 17481,
											"end": 17503,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 17481,
											"end": 17503,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 17481,
											"end": 17503,
											"name": "tag",
											"source": 9,
											"value": "739"
										},
										{
											"begin": 17481,
											"end": 17503,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 17481,
											"end": 17503,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17481,
											"end": 17503,
											"name": "GAS",
											"source": 9
										},
										{
											"begin": 17481,
											"end": 17503,
											"name": "STATICCALL",
											"source": 9
										},
										{
											"begin": 17481,
											"end": 17503,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 17481,
											"end": 17503,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 17481,
											"end": 17503,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 17481,
											"end": 17503,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "741"
										},
										{
											"begin": 17481,
											"end": 17503,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 17481,
											"end": 17503,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 17481,
											"end": 17503,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 17481,
											"end": 17503,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 17481,
											"end": 17503,
											"name": "RETURNDATACOPY",
											"source": 9
										},
										{
											"begin": 17481,
											"end": 17503,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 17481,
											"end": 17503,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 17481,
											"end": 17503,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 17481,
											"end": 17503,
											"name": "tag",
											"source": 9,
											"value": "741"
										},
										{
											"begin": 17481,
											"end": 17503,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 17481,
											"end": 17503,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17481,
											"end": 17503,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17481,
											"end": 17503,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17481,
											"end": 17503,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17481,
											"end": 17503,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 17481,
											"end": 17503,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 17481,
											"end": 17503,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 17481,
											"end": 17503,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 17481,
											"end": 17503,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 17481,
											"end": 17503,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 17481,
											"end": 17503,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 17481,
											"end": 17503,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 17481,
											"end": 17503,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 17481,
											"end": 17503,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 17481,
											"end": 17503,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 17481,
											"end": 17503,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 17481,
											"end": 17503,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 17481,
											"end": 17503,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 17481,
											"end": 17503,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17481,
											"end": 17503,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 17481,
											"end": 17503,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 17481,
											"end": 17503,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 17481,
											"end": 17503,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "742"
										},
										{
											"begin": 17481,
											"end": 17503,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 17481,
											"end": 17503,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 17481,
											"end": 17503,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "743"
										},
										{
											"begin": 17481,
											"end": 17503,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 17481,
											"end": 17503,
											"name": "tag",
											"source": 9,
											"value": "742"
										},
										{
											"begin": 17481,
											"end": 17503,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 17471,
											"end": 17475,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 17476,
											"end": 17477,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 17471,
											"end": 17478,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 17471,
											"end": 17478,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 17471,
											"end": 17478,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 17471,
											"end": 17478,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 17471,
											"end": 17478,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "745"
										},
										{
											"begin": 17471,
											"end": 17478,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 17471,
											"end": 17478,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "745"
										},
										{
											"begin": 17471,
											"end": 17478,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "382"
										},
										{
											"begin": 17471,
											"end": 17478,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 17471,
											"end": 17478,
											"name": "tag",
											"source": 9,
											"value": "745"
										},
										{
											"begin": 17471,
											"end": 17478,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17471,
											"end": 17503,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 17471,
											"end": 17503,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 17471,
											"end": 17503,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 17471,
											"end": 17478,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 17471,
											"end": 17478,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 17471,
											"end": 17478,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 17471,
											"end": 17478,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 17471,
											"end": 17478,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 17471,
											"end": 17478,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 17471,
											"end": 17478,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 17471,
											"end": 17478,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 17471,
											"end": 17478,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 17471,
											"end": 17503,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 17546,
											"end": 17561,
											"name": "PUSH",
											"source": 9,
											"value": "1E"
										},
										{
											"begin": 17546,
											"end": 17561,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 17514,
											"end": 17576,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "746"
										},
										{
											"begin": 17514,
											"end": 17576,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 17531,
											"end": 17535,
											"name": "ADDRESS",
											"source": 9
										},
										{
											"begin": 17531,
											"end": 17535,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 17546,
											"end": 17561,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 17564,
											"end": 17575,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 17514,
											"end": 17522,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "351"
										},
										{
											"begin": 17514,
											"end": 17576,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 17514,
											"end": 17576,
											"name": "tag",
											"source": 9,
											"value": "746"
										},
										{
											"begin": 17514,
											"end": 17576,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 17612,
											"end": 17627,
											"name": "PUSH",
											"source": 9,
											"value": "1E"
										},
										{
											"begin": 17612,
											"end": 17627,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 17612,
											"end": 17830,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 17612,
											"end": 17830,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "791AC947"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 17612,
											"end": 17830,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 17612,
											"end": 17830,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17612,
											"end": 17627,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 17612,
											"end": 17627,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 17612,
											"end": 17627,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 17612,
											"end": 17627,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 17612,
											"end": 17678,
											"name": "PUSH",
											"source": 9,
											"value": "791AC947"
										},
										{
											"begin": 17612,
											"end": 17678,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 17612,
											"end": 17830,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "747"
										},
										{
											"begin": 17612,
											"end": 17830,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 17692,
											"end": 17703,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 17692,
											"end": 17703,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 17612,
											"end": 17627,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 17612,
											"end": 17627,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 17760,
											"end": 17764,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 17760,
											"end": 17764,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 17786,
											"end": 17790,
											"name": "ADDRESS",
											"source": 9
										},
										{
											"begin": 17786,
											"end": 17790,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 17805,
											"end": 17820,
											"name": "TIMESTAMP",
											"source": 9
										},
										{
											"begin": 17805,
											"end": 17820,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 17612,
											"end": 17830,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 17612,
											"end": 17830,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 17612,
											"end": 17830,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "748"
										},
										{
											"begin": 17612,
											"end": 17830,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 17612,
											"end": 17830,
											"name": "tag",
											"source": 9,
											"value": "747"
										},
										{
											"begin": 17612,
											"end": 17830,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 17612,
											"end": 17830,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 17612,
											"end": 17830,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 17612,
											"end": 17830,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 17612,
											"end": 17830,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 17612,
											"end": 17830,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 17612,
											"end": 17830,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 17612,
											"end": 17830,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 17612,
											"end": 17830,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 17612,
											"end": 17830,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 17612,
											"end": 17830,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 17612,
											"end": 17830,
											"name": "EXTCODESIZE",
											"source": 9
										},
										{
											"begin": 17612,
											"end": 17830,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 17612,
											"end": 17830,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 17612,
											"end": 17830,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 17612,
											"end": 17830,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "749"
										},
										{
											"begin": 17612,
											"end": 17830,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 17612,
											"end": 17830,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 17612,
											"end": 17830,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 17612,
											"end": 17830,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 17612,
											"end": 17830,
											"name": "tag",
											"source": 9,
											"value": "749"
										},
										{
											"begin": 17612,
											"end": 17830,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 17612,
											"end": 17830,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17612,
											"end": 17830,
											"name": "GAS",
											"source": 9
										},
										{
											"begin": 17612,
											"end": 17830,
											"name": "CALL",
											"source": 9
										},
										{
											"begin": 17612,
											"end": 17830,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 17612,
											"end": 17830,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 17612,
											"end": 17830,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 17612,
											"end": 17830,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "599"
										},
										{
											"begin": 17612,
											"end": 17830,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 17612,
											"end": 17830,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 17612,
											"end": 17830,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 17612,
											"end": 17830,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 17612,
											"end": 17830,
											"name": "RETURNDATACOPY",
											"source": 9
										},
										{
											"begin": 17612,
											"end": 17830,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 17612,
											"end": 17830,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 17612,
											"end": 17830,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 17843,
											"end": 18343,
											"name": "tag",
											"source": 9,
											"value": "641"
										},
										{
											"begin": 17843,
											"end": 18343,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 18021,
											"end": 18036,
											"name": "PUSH",
											"source": 9,
											"value": "1E"
										},
										{
											"begin": 18021,
											"end": 18036,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 17989,
											"end": 18051,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "753"
										},
										{
											"begin": 17989,
											"end": 18051,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 18006,
											"end": 18010,
											"name": "ADDRESS",
											"source": 9
										},
										{
											"begin": 18006,
											"end": 18010,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 18021,
											"end": 18036,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 18039,
											"end": 18050,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 17989,
											"end": 17997,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "351"
										},
										{
											"begin": 17989,
											"end": 18051,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 17989,
											"end": 18051,
											"name": "tag",
											"source": 9,
											"value": "753"
										},
										{
											"begin": 17989,
											"end": 18051,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 18091,
											"end": 18106,
											"name": "PUSH",
											"source": 9,
											"value": "1E"
										},
										{
											"begin": 18091,
											"end": 18106,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 18091,
											"end": 18106,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 18091,
											"end": 18122,
											"name": "PUSH",
											"source": 9,
											"value": "F305D719"
										},
										{
											"begin": 18130,
											"end": 18139,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 18162,
											"end": 18166,
											"name": "ADDRESS",
											"source": 9
										},
										{
											"begin": 18181,
											"end": 18192,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 18091,
											"end": 18106,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 18091,
											"end": 18106,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 18290,
											"end": 18297,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "754"
										},
										{
											"begin": 1247,
											"end": 1254,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 18290,
											"end": 18297,
											"name": "tag",
											"source": 9,
											"value": "754"
										},
										{
											"begin": 18290,
											"end": 18297,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 18091,
											"end": 18336,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 18091,
											"end": 18336,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 18091,
											"end": 18336,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 18091,
											"end": 18336,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 18091,
											"end": 18336,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 18091,
											"end": 18336,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 18091,
											"end": 18336,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 18091,
											"end": 18336,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 18091,
											"end": 18336,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3823,
											"end": 3838,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 3823,
											"end": 3838,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 3823,
											"end": 3838,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 18091,
											"end": 18336,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 18091,
											"end": 18336,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 18091,
											"end": 18336,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3805,
											"end": 3839,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3855,
											"end": 3873,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 3855,
											"end": 3873,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3855,
											"end": 3873,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3848,
											"end": 3882,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 3848,
											"end": 3882,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3848,
											"end": 3882,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 3848,
											"end": 3882,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3898,
											"end": 3916,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 3898,
											"end": 3916,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3898,
											"end": 3916,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3891,
											"end": 3925,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3891,
											"end": 3925,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3891,
											"end": 3925,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3891,
											"end": 3925,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3941,
											"end": 3959,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 3941,
											"end": 3959,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3941,
											"end": 3959,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3934,
											"end": 3968,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4005,
											"end": 4020,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4005,
											"end": 4020,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4005,
											"end": 4020,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3984,
											"end": 4003,
											"name": "PUSH",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 3984,
											"end": 4003,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3984,
											"end": 4003,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3977,
											"end": 4021,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 18311,
											"end": 18326,
											"name": "TIMESTAMP",
											"source": 9
										},
										{
											"begin": 4037,
											"end": 4056,
											"name": "PUSH",
											"source": 10,
											"value": "A4"
										},
										{
											"begin": 4037,
											"end": 4056,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4037,
											"end": 4056,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4030,
											"end": 4065,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3739,
											"end": 3758,
											"name": "PUSH",
											"source": 10,
											"value": "C4"
										},
										{
											"begin": 3739,
											"end": 3758,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 18091,
											"end": 18336,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 18091,
											"end": 18336,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 18091,
											"end": 18336,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 18091,
											"end": 18336,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 18091,
											"end": 18336,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 18091,
											"end": 18336,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 18091,
											"end": 18336,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 18091,
											"end": 18336,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 18091,
											"end": 18336,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 18091,
											"end": 18336,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 18091,
											"end": 18336,
											"name": "EXTCODESIZE",
											"source": 9
										},
										{
											"begin": 18091,
											"end": 18336,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 18091,
											"end": 18336,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 18091,
											"end": 18336,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 18091,
											"end": 18336,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "757"
										},
										{
											"begin": 18091,
											"end": 18336,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 18091,
											"end": 18336,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 18091,
											"end": 18336,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 18091,
											"end": 18336,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 18091,
											"end": 18336,
											"name": "tag",
											"source": 9,
											"value": "757"
										},
										{
											"begin": 18091,
											"end": 18336,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 18091,
											"end": 18336,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 18091,
											"end": 18336,
											"name": "GAS",
											"source": 9
										},
										{
											"begin": 18091,
											"end": 18336,
											"name": "CALL",
											"source": 9
										},
										{
											"begin": 18091,
											"end": 18336,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 18091,
											"end": 18336,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 18091,
											"end": 18336,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 18091,
											"end": 18336,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "759"
										},
										{
											"begin": 18091,
											"end": 18336,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 18091,
											"end": 18336,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 18091,
											"end": 18336,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 18091,
											"end": 18336,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 18091,
											"end": 18336,
											"name": "RETURNDATACOPY",
											"source": 9
										},
										{
											"begin": 18091,
											"end": 18336,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 18091,
											"end": 18336,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 18091,
											"end": 18336,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 18091,
											"end": 18336,
											"name": "tag",
											"source": 9,
											"value": "759"
										},
										{
											"begin": 18091,
											"end": 18336,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 18091,
											"end": 18336,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 18091,
											"end": 18336,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 18091,
											"end": 18336,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 18091,
											"end": 18336,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 18091,
											"end": 18336,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 18091,
											"end": 18336,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 18091,
											"end": 18336,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 18091,
											"end": 18336,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 18091,
											"end": 18336,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 18091,
											"end": 18336,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 18091,
											"end": 18336,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 18091,
											"end": 18336,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 18091,
											"end": 18336,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 18091,
											"end": 18336,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 18091,
											"end": 18336,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 18091,
											"end": 18336,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 18091,
											"end": 18336,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 18091,
											"end": 18336,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 18091,
											"end": 18336,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 18091,
											"end": 18336,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 18091,
											"end": 18336,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 18091,
											"end": 18336,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 18091,
											"end": 18336,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 18091,
											"end": 18336,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "588"
										},
										{
											"begin": 18091,
											"end": 18336,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 18091,
											"end": 18336,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 18091,
											"end": 18336,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "761"
										},
										{
											"begin": 18091,
											"end": 18336,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 13319,
											"end": 13730,
											"name": "tag",
											"source": 9,
											"value": "648"
										},
										{
											"begin": 13319,
											"end": 13730,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13365,
											"end": 13372,
											"name": "PUSH",
											"source": 9,
											"value": "D"
										},
										{
											"begin": 13365,
											"end": 13372,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 13365,
											"end": 13377,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 13365,
											"end": 13399,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 13365,
											"end": 13399,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 13365,
											"end": 13399,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "763"
										},
										{
											"begin": 13365,
											"end": 13399,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13381,
											"end": 13394,
											"name": "PUSH",
											"source": 9,
											"value": "F"
										},
										{
											"begin": 13381,
											"end": 13394,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 13381,
											"end": 13399,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 13365,
											"end": 13399,
											"name": "tag",
											"source": 9,
											"value": "763"
										},
										{
											"begin": 13365,
											"end": 13399,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13365,
											"end": 13421,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 13365,
											"end": 13421,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 13365,
											"end": 13421,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "764"
										},
										{
											"begin": 13365,
											"end": 13421,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13403,
											"end": 13416,
											"name": "PUSH",
											"source": 9,
											"value": "13"
										},
										{
											"begin": 13403,
											"end": 13416,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 13403,
											"end": 13421,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 13365,
											"end": 13421,
											"name": "tag",
											"source": 9,
											"value": "764"
										},
										{
											"begin": 13365,
											"end": 13421,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13365,
											"end": 13438,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 13365,
											"end": 13438,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 13365,
											"end": 13438,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "765"
										},
										{
											"begin": 13365,
											"end": 13438,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13425,
											"end": 13433,
											"name": "PUSH",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 13425,
											"end": 13433,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 13425,
											"end": 13438,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 13365,
											"end": 13438,
											"name": "tag",
											"source": 9,
											"value": "765"
										},
										{
											"begin": 13365,
											"end": 13438,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13361,
											"end": 13459,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 13361,
											"end": 13459,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "766"
										},
										{
											"begin": 13361,
											"end": 13459,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 13319,
											"end": 13730,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 13361,
											"end": 13459,
											"name": "tag",
											"source": 9,
											"value": "766"
										},
										{
											"begin": 13361,
											"end": 13459,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13487,
											"end": 13494,
											"name": "PUSH",
											"source": 9,
											"value": "D"
										},
										{
											"begin": 13487,
											"end": 13494,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 13487,
											"end": 13494,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 13469,
											"end": 13484,
											"name": "PUSH",
											"source": 9,
											"value": "E"
										},
										{
											"begin": 13469,
											"end": 13494,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 13528,
											"end": 13541,
											"name": "PUSH",
											"source": 9,
											"value": "F"
										},
										{
											"begin": 13528,
											"end": 13541,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 13528,
											"end": 13541,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 13504,
											"end": 13525,
											"name": "PUSH",
											"source": 9,
											"value": "10"
										},
										{
											"begin": 13504,
											"end": 13541,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 13570,
											"end": 13578,
											"name": "PUSH",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 13570,
											"end": 13578,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 13570,
											"end": 13578,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 13551,
											"end": 13567,
											"name": "PUSH",
											"source": 9,
											"value": "12"
										},
										{
											"begin": 13551,
											"end": 13578,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 13612,
											"end": 13625,
											"name": "PUSH",
											"source": 9,
											"value": "13"
										},
										{
											"begin": 13612,
											"end": 13625,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 13612,
											"end": 13625,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 13588,
											"end": 13609,
											"name": "PUSH",
											"source": 9,
											"value": "15"
										},
										{
											"begin": 13588,
											"end": 13625,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 13636,
											"end": 13647,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 13636,
											"end": 13647,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 13636,
											"end": 13647,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13636,
											"end": 13647,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 13657,
											"end": 13674,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 13657,
											"end": 13674,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 13657,
											"end": 13674,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13657,
											"end": 13674,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 13684,
											"end": 13701,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13684,
											"end": 13701,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 13684,
											"end": 13701,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13684,
											"end": 13701,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 13711,
											"end": 13723,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 13319,
											"end": 13730,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "tag",
											"source": 4,
											"value": "655"
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3523,
											"end": 3530,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "368"
										},
										{
											"begin": 3553,
											"end": 3554,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3549,
											"end": 3550,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "590"
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 21734,
											"end": 22401,
											"name": "tag",
											"source": 9,
											"value": "663"
										},
										{
											"begin": 21734,
											"end": 22401,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 21879,
											"end": 21894,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 21908,
											"end": 21931,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 21945,
											"end": 21957,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 21971,
											"end": 21994,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 22008,
											"end": 22020,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 22034,
											"end": 22052,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 22065,
											"end": 22084,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "771"
										},
										{
											"begin": 22076,
											"end": 22083,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 22065,
											"end": 22075,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "411"
										},
										{
											"begin": 22065,
											"end": 22084,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 22065,
											"end": 22084,
											"name": "tag",
											"source": 9,
											"value": "771"
										},
										{
											"begin": 22065,
											"end": 22084,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 22112,
											"end": 22127,
											"name": "DUP16",
											"source": 9
										},
										{
											"begin": 22112,
											"end": 22127,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 22112,
											"end": 22127,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 22112,
											"end": 22127,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 22112,
											"end": 22127,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 22112,
											"end": 22127,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 22112,
											"end": 22119,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 22112,
											"end": 22127,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 22112,
											"end": 22127,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 22112,
											"end": 22127,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 22112,
											"end": 22127,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 22112,
											"end": 22127,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 22112,
											"end": 22127,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 21865,
											"end": 22084,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 21865,
											"end": 22084,
											"name": "SWAP12",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 21865,
											"end": 22084,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 21865,
											"end": 22084,
											"name": "SWAP10",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 21865,
											"end": 22084,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 21865,
											"end": 22084,
											"name": "SWAP8",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 21865,
											"end": 22084,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 21865,
											"end": 22084,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 21865,
											"end": 22084,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 22112,
											"end": 22140,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "772"
										},
										{
											"begin": 22112,
											"end": 22140,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 22132,
											"end": 22139,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 22112,
											"end": 22131,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "413"
										},
										{
											"begin": 22112,
											"end": 22140,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 22112,
											"end": 22140,
											"name": "tag",
											"source": 9,
											"value": "772"
										},
										{
											"begin": 22112,
											"end": 22140,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 22094,
											"end": 22109,
											"name": "DUP11",
											"source": 9
										},
										{
											"begin": 22094,
											"end": 22109,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 22094,
											"end": 22109,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 22094,
											"end": 22109,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 22094,
											"end": 22109,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 22094,
											"end": 22109,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 22094,
											"end": 22101,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 22094,
											"end": 22109,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 22094,
											"end": 22109,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 22094,
											"end": 22109,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 22094,
											"end": 22109,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 22094,
											"end": 22109,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 22094,
											"end": 22109,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 22094,
											"end": 22109,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 22094,
											"end": 22109,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 22094,
											"end": 22140,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 22094,
											"end": 22140,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 22094,
											"end": 22140,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 22094,
											"end": 22140,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 22168,
											"end": 22175,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 22168,
											"end": 22183,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 22168,
											"end": 22183,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 22168,
											"end": 22183,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 22168,
											"end": 22183,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 22168,
											"end": 22196,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "773"
										},
										{
											"begin": 22168,
											"end": 22196,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 22188,
											"end": 22195,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 22168,
											"end": 22187,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "413"
										},
										{
											"begin": 22168,
											"end": 22196,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 22168,
											"end": 22196,
											"name": "tag",
											"source": 9,
											"value": "773"
										},
										{
											"begin": 22168,
											"end": 22196,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 22150,
											"end": 22165,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 22150,
											"end": 22165,
											"name": "DUP12",
											"source": 9
										},
										{
											"begin": 22150,
											"end": 22165,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 22150,
											"end": 22165,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 22150,
											"end": 22165,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 22150,
											"end": 22165,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 22150,
											"end": 22165,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 22150,
											"end": 22157,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 22150,
											"end": 22165,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 22150,
											"end": 22165,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 22150,
											"end": 22165,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 22150,
											"end": 22165,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 22150,
											"end": 22165,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 22150,
											"end": 22165,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 22150,
											"end": 22196,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 22150,
											"end": 22196,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 22150,
											"end": 22196,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 22150,
											"end": 22196,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 22227,
											"end": 22245,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 22227,
											"end": 22245,
											"name": "DUP11",
											"source": 9
										},
										{
											"begin": 22227,
											"end": 22245,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 22227,
											"end": 22245,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 22227,
											"end": 22245,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 22227,
											"end": 22245,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 22227,
											"end": 22245,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 22227,
											"end": 22266,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "774"
										},
										{
											"begin": 22227,
											"end": 22266,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 22250,
											"end": 22265,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 22227,
											"end": 22249,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "404"
										},
										{
											"begin": 22227,
											"end": 22266,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 22227,
											"end": 22266,
											"name": "tag",
											"source": 9,
											"value": "774"
										},
										{
											"begin": 22227,
											"end": 22266,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 22206,
											"end": 22224,
											"name": "DUP10",
											"source": 9
										},
										{
											"begin": 22206,
											"end": 22224,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 22206,
											"end": 22224,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 22206,
											"end": 22224,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 22206,
											"end": 22224,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 22206,
											"end": 22224,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 22206,
											"end": 22213,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 22206,
											"end": 22224,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 22206,
											"end": 22224,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 22206,
											"end": 22224,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 22206,
											"end": 22224,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 22206,
											"end": 22224,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 22206,
											"end": 22266,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 22276,
											"end": 22302,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "775"
										},
										{
											"begin": 22291,
											"end": 22301,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 22276,
											"end": 22290,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "776"
										},
										{
											"begin": 22276,
											"end": 22302,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 22276,
											"end": 22302,
											"name": "tag",
											"source": 9,
											"value": "775"
										},
										{
											"begin": 22276,
											"end": 22302,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 22312,
											"end": 22335,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "777"
										},
										{
											"begin": 22324,
											"end": 22328,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 22330,
											"end": 22334,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 22312,
											"end": 22323,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "778"
										},
										{
											"begin": 22312,
											"end": 22335,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 22312,
											"end": 22335,
											"name": "tag",
											"source": 9,
											"value": "777"
										},
										{
											"begin": 22312,
											"end": 22335,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 22367,
											"end": 22376,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 22350,
											"end": 22394,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 22359,
											"end": 22365,
											"name": "DUP10",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 22350,
											"end": 22394,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 22350,
											"end": 22394,
											"name": "PUSH",
											"source": 9,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 22378,
											"end": 22393,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 22350,
											"end": 22394,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 22350,
											"end": 22394,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 22350,
											"end": 22394,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "779"
										},
										{
											"begin": 22350,
											"end": 22394,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 15381,
											"end": 15406,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 15381,
											"end": 15406,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 15369,
											"end": 15371,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 15354,
											"end": 15372,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15354,
											"end": 15372,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15235,
											"end": 15412,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 22350,
											"end": 22394,
											"name": "tag",
											"source": 9,
											"value": "779"
										},
										{
											"begin": 22350,
											"end": 22394,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 22350,
											"end": 22394,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 22350,
											"end": 22394,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 22350,
											"end": 22394,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 22350,
											"end": 22394,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 22350,
											"end": 22394,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 22350,
											"end": 22394,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 22350,
											"end": 22394,
											"name": "LOG3",
											"source": 9
										},
										{
											"begin": 21855,
											"end": 22401,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 21855,
											"end": 22401,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 21855,
											"end": 22401,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 21855,
											"end": 22401,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 21855,
											"end": 22401,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 21855,
											"end": 22401,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 21734,
											"end": 22401,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 21734,
											"end": 22401,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 21734,
											"end": 22401,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 21734,
											"end": 22401,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 21049,
											"end": 21728,
											"name": "tag",
											"source": 9,
											"value": "670"
										},
										{
											"begin": 21049,
											"end": 21728,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 21192,
											"end": 21207,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 21221,
											"end": 21244,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 21258,
											"end": 21270,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 21284,
											"end": 21307,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 21321,
											"end": 21333,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 21347,
											"end": 21365,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 21378,
											"end": 21397,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "781"
										},
										{
											"begin": 21389,
											"end": 21396,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 21378,
											"end": 21388,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "411"
										},
										{
											"begin": 21378,
											"end": 21397,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 21378,
											"end": 21397,
											"name": "tag",
											"source": 9,
											"value": "781"
										},
										{
											"begin": 21378,
											"end": 21397,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 21425,
											"end": 21440,
											"name": "DUP16",
											"source": 9
										},
										{
											"begin": 21425,
											"end": 21440,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 21425,
											"end": 21440,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 21425,
											"end": 21440,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 21425,
											"end": 21440,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 21425,
											"end": 21440,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 21425,
											"end": 21432,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 21425,
											"end": 21440,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 21425,
											"end": 21440,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 21425,
											"end": 21440,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 21425,
											"end": 21440,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 21425,
											"end": 21440,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 21425,
											"end": 21440,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 21178,
											"end": 21397,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 21178,
											"end": 21397,
											"name": "SWAP12",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 21178,
											"end": 21397,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 21178,
											"end": 21397,
											"name": "SWAP10",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 21178,
											"end": 21397,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 21178,
											"end": 21397,
											"name": "SWAP8",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 21178,
											"end": 21397,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 21178,
											"end": 21397,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 21178,
											"end": 21397,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 21425,
											"end": 21453,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "782"
										},
										{
											"begin": 21425,
											"end": 21453,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 21178,
											"end": 21397,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 21425,
											"end": 21444,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "413"
										},
										{
											"begin": 21425,
											"end": 21453,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 21425,
											"end": 21453,
											"name": "tag",
											"source": 9,
											"value": "782"
										},
										{
											"begin": 21425,
											"end": 21453,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 21407,
											"end": 21422,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 21407,
											"end": 21422,
											"name": "DUP12",
											"source": 9
										},
										{
											"begin": 21407,
											"end": 21422,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 21407,
											"end": 21422,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 21407,
											"end": 21422,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 21407,
											"end": 21422,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 21407,
											"end": 21422,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 21407,
											"end": 21414,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 21407,
											"end": 21422,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 21407,
											"end": 21422,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 21407,
											"end": 21422,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 21407,
											"end": 21422,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 21407,
											"end": 21422,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 21407,
											"end": 21422,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 21407,
											"end": 21422,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 21407,
											"end": 21422,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 21407,
											"end": 21453,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 21407,
											"end": 21453,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 21407,
											"end": 21453,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 21407,
											"end": 21453,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 21484,
											"end": 21502,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 21484,
											"end": 21502,
											"name": "DUP12",
											"source": 9
										},
										{
											"begin": 21484,
											"end": 21502,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 21484,
											"end": 21502,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 21484,
											"end": 21502,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 21484,
											"end": 21491,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 21484,
											"end": 21502,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 21484,
											"end": 21502,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 21484,
											"end": 21502,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 21484,
											"end": 21502,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 21484,
											"end": 21502,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 21484,
											"end": 21523,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "783"
										},
										{
											"begin": 21484,
											"end": 21523,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 21507,
											"end": 21522,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 21484,
											"end": 21506,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "404"
										},
										{
											"begin": 21484,
											"end": 21523,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 21484,
											"end": 21523,
											"name": "tag",
											"source": 9,
											"value": "783"
										},
										{
											"begin": 21484,
											"end": 21523,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 21463,
											"end": 21481,
											"name": "DUP10",
											"source": 9
										},
										{
											"begin": 21463,
											"end": 21481,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 21463,
											"end": 21481,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 21463,
											"end": 21481,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 21463,
											"end": 21481,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 21463,
											"end": 21481,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 21463,
											"end": 21470,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 21463,
											"end": 21481,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 21463,
											"end": 21481,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 21463,
											"end": 21481,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 21463,
											"end": 21481,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 21463,
											"end": 21481,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 21463,
											"end": 21481,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 21463,
											"end": 21481,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 21463,
											"end": 21481,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 21463,
											"end": 21523,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 21463,
											"end": 21523,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 21463,
											"end": 21523,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 21463,
											"end": 21523,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 21554,
											"end": 21561,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 21554,
											"end": 21572,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 21554,
											"end": 21572,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 21554,
											"end": 21572,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 21554,
											"end": 21572,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 21554,
											"end": 21593,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "774"
										},
										{
											"begin": 21554,
											"end": 21593,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 21577,
											"end": 21592,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 21554,
											"end": 21576,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "404"
										},
										{
											"begin": 21554,
											"end": 21593,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 20436,
											"end": 21043,
											"name": "tag",
											"source": 9,
											"value": "677"
										},
										{
											"begin": 20436,
											"end": 21043,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 20577,
											"end": 20592,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 20606,
											"end": 20629,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 20643,
											"end": 20655,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 20669,
											"end": 20692,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 20706,
											"end": 20718,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 20732,
											"end": 20750,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 20763,
											"end": 20782,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "789"
										},
										{
											"begin": 20774,
											"end": 20781,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 20763,
											"end": 20773,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "411"
										},
										{
											"begin": 20763,
											"end": 20782,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 20763,
											"end": 20782,
											"name": "tag",
											"source": 9,
											"value": "789"
										},
										{
											"begin": 20763,
											"end": 20782,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 20810,
											"end": 20825,
											"name": "DUP16",
											"source": 9
										},
										{
											"begin": 20810,
											"end": 20825,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 20810,
											"end": 20825,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 20810,
											"end": 20825,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 20810,
											"end": 20825,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 20810,
											"end": 20825,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 20810,
											"end": 20817,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 20810,
											"end": 20825,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 20810,
											"end": 20825,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 20810,
											"end": 20825,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 20810,
											"end": 20825,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 20810,
											"end": 20825,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 20810,
											"end": 20825,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 20563,
											"end": 20782,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 20563,
											"end": 20782,
											"name": "SWAP12",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 20563,
											"end": 20782,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 20563,
											"end": 20782,
											"name": "SWAP10",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 20563,
											"end": 20782,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 20563,
											"end": 20782,
											"name": "SWAP8",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 20563,
											"end": 20782,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 20563,
											"end": 20782,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 20563,
											"end": 20782,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 20810,
											"end": 20838,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "773"
										},
										{
											"begin": 20810,
											"end": 20838,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 20563,
											"end": 20782,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 20810,
											"end": 20829,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "413"
										},
										{
											"begin": 20810,
											"end": 20838,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 9043,
											"end": 9780,
											"name": "tag",
											"source": 9,
											"value": "684"
										},
										{
											"begin": 9043,
											"end": 9780,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9188,
											"end": 9203,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9217,
											"end": 9240,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 9254,
											"end": 9266,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9280,
											"end": 9303,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 9317,
											"end": 9329,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9343,
											"end": 9361,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 9374,
											"end": 9393,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "796"
										},
										{
											"begin": 9385,
											"end": 9392,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 9374,
											"end": 9384,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "411"
										},
										{
											"begin": 9374,
											"end": 9393,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 9374,
											"end": 9393,
											"name": "tag",
											"source": 9,
											"value": "796"
										},
										{
											"begin": 9374,
											"end": 9393,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9421,
											"end": 9436,
											"name": "DUP16",
											"source": 9
										},
										{
											"begin": 9421,
											"end": 9436,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 9421,
											"end": 9436,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9421,
											"end": 9436,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9421,
											"end": 9436,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9421,
											"end": 9436,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9421,
											"end": 9428,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 9421,
											"end": 9436,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 9421,
											"end": 9436,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9421,
											"end": 9436,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 9421,
											"end": 9436,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9421,
											"end": 9436,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 9421,
											"end": 9436,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 9174,
											"end": 9393,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 9174,
											"end": 9393,
											"name": "SWAP12",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9174,
											"end": 9393,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 9174,
											"end": 9393,
											"name": "SWAP10",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9174,
											"end": 9393,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9174,
											"end": 9393,
											"name": "SWAP8",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9174,
											"end": 9393,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9174,
											"end": 9393,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9174,
											"end": 9393,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9421,
											"end": 9449,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "797"
										},
										{
											"begin": 9421,
											"end": 9449,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9441,
											"end": 9448,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 9421,
											"end": 9440,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "413"
										},
										{
											"begin": 9421,
											"end": 9449,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 9421,
											"end": 9449,
											"name": "tag",
											"source": 9,
											"value": "797"
										},
										{
											"begin": 9421,
											"end": 9449,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9403,
											"end": 9418,
											"name": "DUP11",
											"source": 9
										},
										{
											"begin": 9403,
											"end": 9418,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 9403,
											"end": 9418,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9403,
											"end": 9418,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9403,
											"end": 9418,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9403,
											"end": 9418,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9403,
											"end": 9410,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 9403,
											"end": 9418,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 9403,
											"end": 9418,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9403,
											"end": 9418,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9403,
											"end": 9418,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9403,
											"end": 9418,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 9403,
											"end": 9418,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 9403,
											"end": 9418,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 9403,
											"end": 9418,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 9403,
											"end": 9449,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 9403,
											"end": 9449,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9403,
											"end": 9449,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 9403,
											"end": 9449,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 9477,
											"end": 9484,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 9477,
											"end": 9492,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9477,
											"end": 9492,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9477,
											"end": 9492,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 9477,
											"end": 9492,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 9477,
											"end": 9505,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "782"
										},
										{
											"begin": 9477,
											"end": 9505,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9497,
											"end": 9504,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 9477,
											"end": 9496,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "413"
										},
										{
											"begin": 9477,
											"end": 9505,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 12674,
											"end": 12802,
											"name": "tag",
											"source": 9,
											"value": "721"
										},
										{
											"begin": 12674,
											"end": 12802,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12738,
											"end": 12745,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12764,
											"end": 12795,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "347"
										},
										{
											"begin": 12789,
											"end": 12794,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 12764,
											"end": 12784,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "654"
										},
										{
											"begin": 12776,
											"end": 12783,
											"name": "PUSH",
											"source": 9,
											"value": "D"
										},
										{
											"begin": 12776,
											"end": 12783,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 12764,
											"end": 12771,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 12764,
											"end": 12775,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "655"
										},
										{
											"begin": 12764,
											"end": 12775,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12764,
											"end": 12784,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 12764,
											"end": 12784,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12764,
											"end": 12784,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 12764,
											"end": 12784,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 12764,
											"end": 12784,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 12808,
											"end": 12948,
											"name": "tag",
											"source": 9,
											"value": "723"
										},
										{
											"begin": 12808,
											"end": 12948,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12878,
											"end": 12885,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12904,
											"end": 12941,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "347"
										},
										{
											"begin": 12935,
											"end": 12940,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 12904,
											"end": 12930,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "654"
										},
										{
											"begin": 12916,
											"end": 12929,
											"name": "PUSH",
											"source": 9,
											"value": "F"
										},
										{
											"begin": 12916,
											"end": 12929,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 12904,
											"end": 12911,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 12904,
											"end": 12915,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "655"
										},
										{
											"begin": 12904,
											"end": 12915,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12904,
											"end": 12930,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 12904,
											"end": 12930,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12904,
											"end": 12930,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 12904,
											"end": 12930,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 12904,
											"end": 12930,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 12319,
											"end": 12668,
											"name": "tag",
											"source": 9,
											"value": "776"
										},
										{
											"begin": 12319,
											"end": 12668,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12381,
											"end": 12400,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12403,
											"end": 12413,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "812"
										},
										{
											"begin": 12403,
											"end": 12411,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "367"
										},
										{
											"begin": 12403,
											"end": 12413,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 12403,
											"end": 12413,
											"name": "tag",
											"source": 9,
											"value": "812"
										},
										{
											"begin": 12403,
											"end": 12413,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12381,
											"end": 12413,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12423,
											"end": 12441,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12444,
											"end": 12471,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "813"
										},
										{
											"begin": 12444,
											"end": 12454,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 12381,
											"end": 12413,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 12444,
											"end": 12458,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "655"
										},
										{
											"begin": 12444,
											"end": 12471,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 12444,
											"end": 12471,
											"name": "tag",
											"source": 9,
											"value": "813"
										},
										{
											"begin": 12444,
											"end": 12471,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12522,
											"end": 12526,
											"name": "ADDRESS",
											"source": 9
										},
										{
											"begin": 12506,
											"end": 12528,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12506,
											"end": 12528,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12506,
											"end": 12528,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12506,
											"end": 12528,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12506,
											"end": 12513,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 12506,
											"end": 12528,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 12506,
											"end": 12528,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12506,
											"end": 12528,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 12506,
											"end": 12528,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12506,
											"end": 12528,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 12506,
											"end": 12528,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 12423,
											"end": 12471,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12423,
											"end": 12471,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12506,
											"end": 12544,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "814"
										},
										{
											"begin": 12506,
											"end": 12544,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12423,
											"end": 12471,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12506,
											"end": 12532,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "404"
										},
										{
											"begin": 12506,
											"end": 12544,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 12506,
											"end": 12544,
											"name": "tag",
											"source": 9,
											"value": "814"
										},
										{
											"begin": 12506,
											"end": 12544,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12497,
											"end": 12501,
											"name": "ADDRESS",
											"source": 9
										},
										{
											"begin": 12481,
											"end": 12503,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12481,
											"end": 12503,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12481,
											"end": 12503,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12481,
											"end": 12503,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12481,
											"end": 12488,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 12481,
											"end": 12503,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 12481,
											"end": 12503,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12481,
											"end": 12503,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12481,
											"end": 12503,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12481,
											"end": 12503,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 12481,
											"end": 12503,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 12481,
											"end": 12503,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 12481,
											"end": 12503,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 12481,
											"end": 12544,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 12481,
											"end": 12544,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12481,
											"end": 12544,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 12481,
											"end": 12544,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 12558,
											"end": 12569,
											"name": "PUSH",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 12558,
											"end": 12584,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12558,
											"end": 12584,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12558,
											"end": 12584,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 12558,
											"end": 12584,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 12558,
											"end": 12584,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 12558,
											"end": 12584,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 12554,
											"end": 12661,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 12554,
											"end": 12661,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "627"
										},
										{
											"begin": 12554,
											"end": 12661,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 12639,
											"end": 12643,
											"name": "ADDRESS",
											"source": 9
										},
										{
											"begin": 12623,
											"end": 12645,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12623,
											"end": 12645,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12623,
											"end": 12645,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12623,
											"end": 12645,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12623,
											"end": 12630,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 12623,
											"end": 12645,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 12623,
											"end": 12645,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12623,
											"end": 12645,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 12623,
											"end": 12645,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12623,
											"end": 12645,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 12623,
											"end": 12645,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 12623,
											"end": 12661,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "816"
										},
										{
											"begin": 12623,
											"end": 12661,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12650,
											"end": 12660,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 12623,
											"end": 12649,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "404"
										},
										{
											"begin": 12623,
											"end": 12661,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 12623,
											"end": 12661,
											"name": "tag",
											"source": 9,
											"value": "816"
										},
										{
											"begin": 12623,
											"end": 12661,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12614,
											"end": 12618,
											"name": "ADDRESS",
											"source": 9
										},
										{
											"begin": 12598,
											"end": 12620,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12598,
											"end": 12620,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12598,
											"end": 12620,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12598,
											"end": 12620,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12598,
											"end": 12605,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 12598,
											"end": 12620,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 12598,
											"end": 12620,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12598,
											"end": 12620,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 12598,
											"end": 12620,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12598,
											"end": 12620,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 12598,
											"end": 12661,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 12371,
											"end": 12668,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12371,
											"end": 12668,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12319,
											"end": 12668,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12319,
											"end": 12668,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 9877,
											"end": 10021,
											"name": "tag",
											"source": 9,
											"value": "778"
										},
										{
											"begin": 9877,
											"end": 10021,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9954,
											"end": 9961,
											"name": "PUSH",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 9954,
											"end": 9961,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 9954,
											"end": 9971,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "818"
										},
										{
											"begin": 9954,
											"end": 9971,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9966,
											"end": 9970,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 9954,
											"end": 9965,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "413"
										},
										{
											"begin": 9954,
											"end": 9971,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 9954,
											"end": 9971,
											"name": "tag",
											"source": 9,
											"value": "818"
										},
										{
											"begin": 9954,
											"end": 9971,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9944,
											"end": 9951,
											"name": "PUSH",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 9944,
											"end": 9971,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 9994,
											"end": 10004,
											"name": "PUSH",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 9994,
											"end": 10004,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 9994,
											"end": 10014,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "819"
										},
										{
											"begin": 9994,
											"end": 10014,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10009,
											"end": 10013,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9994,
											"end": 10008,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "404"
										},
										{
											"begin": 9994,
											"end": 10014,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 9994,
											"end": 10014,
											"name": "tag",
											"source": 9,
											"value": "819"
										},
										{
											"begin": 9994,
											"end": 10014,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9981,
											"end": 9991,
											"name": "PUSH",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 9981,
											"end": 10014,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9877,
											"end": 10021,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 14,
											"end": 174,
											"name": "tag",
											"source": 10,
											"value": "821"
										},
										{
											"begin": 14,
											"end": 174,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 79,
											"end": 99,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 79,
											"end": 99,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 135,
											"end": 148,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 135,
											"end": 148,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 128,
											"end": 149,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 118,
											"end": 150,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 118,
											"end": 150,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 108,
											"end": 168,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "823"
										},
										{
											"begin": 108,
											"end": 168,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 164,
											"end": 165,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 161,
											"end": 162,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 154,
											"end": 166,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 108,
											"end": 168,
											"name": "tag",
											"source": 10,
											"value": "823"
										},
										{
											"begin": 108,
											"end": 168,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14,
											"end": 174,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 14,
											"end": 174,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14,
											"end": 174,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14,
											"end": 174,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 179,
											"end": 426,
											"name": "tag",
											"source": 10,
											"value": "140"
										},
										{
											"begin": 179,
											"end": 426,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 238,
											"end": 244,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 291,
											"end": 293,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 279,
											"end": 288,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 270,
											"end": 277,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 266,
											"end": 289,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 262,
											"end": 294,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 259,
											"end": 311,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 259,
											"end": 311,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "825"
										},
										{
											"begin": 259,
											"end": 311,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 307,
											"end": 308,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 304,
											"end": 305,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 297,
											"end": 309,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 259,
											"end": 311,
											"name": "tag",
											"source": 10,
											"value": "825"
										},
										{
											"begin": 259,
											"end": 311,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 346,
											"end": 355,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 333,
											"end": 356,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 365,
											"end": 396,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "368"
										},
										{
											"begin": 390,
											"end": 395,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 365,
											"end": 396,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "827"
										},
										{
											"begin": 365,
											"end": 396,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 431,
											"end": 682,
											"name": "tag",
											"source": 10,
											"value": "743"
										},
										{
											"begin": 431,
											"end": 682,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 501,
											"end": 507,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 554,
											"end": 556,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 542,
											"end": 551,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 533,
											"end": 540,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 529,
											"end": 552,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 525,
											"end": 557,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 522,
											"end": 574,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 522,
											"end": 574,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "829"
										},
										{
											"begin": 522,
											"end": 574,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 570,
											"end": 571,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 567,
											"end": 568,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 560,
											"end": 572,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 522,
											"end": 574,
											"name": "tag",
											"source": 10,
											"value": "829"
										},
										{
											"begin": 522,
											"end": 574,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 602,
											"end": 611,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 596,
											"end": 612,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 621,
											"end": 652,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "368"
										},
										{
											"begin": 646,
											"end": 651,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 621,
											"end": 652,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "827"
										},
										{
											"begin": 621,
											"end": 652,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 687,
											"end": 1075,
											"name": "tag",
											"source": 10,
											"value": "314"
										},
										{
											"begin": 687,
											"end": 1075,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 755,
											"end": 761,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 763,
											"end": 769,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 816,
											"end": 818,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 804,
											"end": 813,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 795,
											"end": 802,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 791,
											"end": 814,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 787,
											"end": 819,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 784,
											"end": 836,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 784,
											"end": 836,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "832"
										},
										{
											"begin": 784,
											"end": 836,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 832,
											"end": 833,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 829,
											"end": 830,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 822,
											"end": 834,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 784,
											"end": 836,
											"name": "tag",
											"source": 10,
											"value": "832"
										},
										{
											"begin": 784,
											"end": 836,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 871,
											"end": 880,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 858,
											"end": 881,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 890,
											"end": 921,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "833"
										},
										{
											"begin": 915,
											"end": 920,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 890,
											"end": 921,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "827"
										},
										{
											"begin": 890,
											"end": 921,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 890,
											"end": 921,
											"name": "tag",
											"source": 10,
											"value": "833"
										},
										{
											"begin": 890,
											"end": 921,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 940,
											"end": 945,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 997,
											"end": 999,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 982,
											"end": 1000,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 982,
											"end": 1000,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 969,
											"end": 1001,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 1010,
											"end": 1043,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "834"
										},
										{
											"begin": 969,
											"end": 1001,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1010,
											"end": 1043,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "827"
										},
										{
											"begin": 1010,
											"end": 1043,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 1010,
											"end": 1043,
											"name": "tag",
											"source": 10,
											"value": "834"
										},
										{
											"begin": 1010,
											"end": 1043,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1062,
											"end": 1069,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1052,
											"end": 1069,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1052,
											"end": 1069,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1052,
											"end": 1069,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 687,
											"end": 1075,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 687,
											"end": 1075,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 687,
											"end": 1075,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 687,
											"end": 1075,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 687,
											"end": 1075,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 687,
											"end": 1075,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 1080,
											"end": 1536,
											"name": "tag",
											"source": 10,
											"value": "124"
										},
										{
											"begin": 1080,
											"end": 1536,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1157,
											"end": 1163,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1165,
											"end": 1171,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1173,
											"end": 1179,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1226,
											"end": 1228,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 1214,
											"end": 1223,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 1205,
											"end": 1212,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 1201,
											"end": 1224,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1197,
											"end": 1229,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 1194,
											"end": 1246,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1194,
											"end": 1246,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "836"
										},
										{
											"begin": 1194,
											"end": 1246,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1242,
											"end": 1243,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1239,
											"end": 1240,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1232,
											"end": 1244,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1194,
											"end": 1246,
											"name": "tag",
											"source": 10,
											"value": "836"
										},
										{
											"begin": 1194,
											"end": 1246,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1281,
											"end": 1290,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1268,
											"end": 1291,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 1300,
											"end": 1331,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "837"
										},
										{
											"begin": 1325,
											"end": 1330,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1300,
											"end": 1331,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "827"
										},
										{
											"begin": 1300,
											"end": 1331,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 1300,
											"end": 1331,
											"name": "tag",
											"source": 10,
											"value": "837"
										},
										{
											"begin": 1300,
											"end": 1331,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1350,
											"end": 1355,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1407,
											"end": 1409,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1392,
											"end": 1410,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 1392,
											"end": 1410,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1379,
											"end": 1411,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 1420,
											"end": 1453,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "838"
										},
										{
											"begin": 1379,
											"end": 1411,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1420,
											"end": 1453,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "827"
										},
										{
											"begin": 1420,
											"end": 1453,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 1420,
											"end": 1453,
											"name": "tag",
											"source": 10,
											"value": "838"
										},
										{
											"begin": 1420,
											"end": 1453,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1080,
											"end": 1536,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1080,
											"end": 1536,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 1472,
											"end": 1479,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1472,
											"end": 1479,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1526,
											"end": 1528,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1511,
											"end": 1529,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1511,
											"end": 1529,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1511,
											"end": 1529,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1511,
											"end": 1529,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1498,
											"end": 1530,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 1498,
											"end": 1530,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1080,
											"end": 1536,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 1541,
											"end": 1856,
											"name": "tag",
											"source": 10,
											"value": "91"
										},
										{
											"begin": 1541,
											"end": 1856,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1609,
											"end": 1615,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1617,
											"end": 1623,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1670,
											"end": 1672,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1658,
											"end": 1667,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1649,
											"end": 1656,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 1645,
											"end": 1668,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1641,
											"end": 1673,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 1638,
											"end": 1690,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1638,
											"end": 1690,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "840"
										},
										{
											"begin": 1638,
											"end": 1690,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1686,
											"end": 1687,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1683,
											"end": 1684,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1676,
											"end": 1688,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1638,
											"end": 1690,
											"name": "tag",
											"source": 10,
											"value": "840"
										},
										{
											"begin": 1638,
											"end": 1690,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1725,
											"end": 1734,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1712,
											"end": 1735,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 1744,
											"end": 1775,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "841"
										},
										{
											"begin": 1769,
											"end": 1774,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1744,
											"end": 1775,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "827"
										},
										{
											"begin": 1744,
											"end": 1775,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 1744,
											"end": 1775,
											"name": "tag",
											"source": 10,
											"value": "841"
										},
										{
											"begin": 1744,
											"end": 1775,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1794,
											"end": 1799,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 1846,
											"end": 1848,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1831,
											"end": 1849,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 1831,
											"end": 1849,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1831,
											"end": 1849,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 1831,
											"end": 1849,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1818,
											"end": 1850,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 1818,
											"end": 1850,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1541,
											"end": 1856,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 1861,
											"end": 2041,
											"name": "tag",
											"source": 10,
											"value": "172"
										},
										{
											"begin": 1861,
											"end": 2041,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1917,
											"end": 1923,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1970,
											"end": 1972,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1958,
											"end": 1967,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1949,
											"end": 1956,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 1945,
											"end": 1968,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1941,
											"end": 1973,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 1938,
											"end": 1990,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1938,
											"end": 1990,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "843"
										},
										{
											"begin": 1938,
											"end": 1990,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1986,
											"end": 1987,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1983,
											"end": 1984,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1976,
											"end": 1988,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1938,
											"end": 1990,
											"name": "tag",
											"source": 10,
											"value": "843"
										},
										{
											"begin": 1938,
											"end": 1990,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2009,
											"end": 2035,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "368"
										},
										{
											"begin": 2025,
											"end": 2034,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2009,
											"end": 2035,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "821"
										},
										{
											"begin": 2009,
											"end": 2035,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 2046,
											"end": 2226,
											"name": "tag",
											"source": 10,
											"value": "81"
										},
										{
											"begin": 2046,
											"end": 2226,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2105,
											"end": 2111,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2158,
											"end": 2160,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2146,
											"end": 2155,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2137,
											"end": 2144,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 2133,
											"end": 2156,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2129,
											"end": 2161,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 2126,
											"end": 2178,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2126,
											"end": 2178,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "846"
										},
										{
											"begin": 2126,
											"end": 2178,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2174,
											"end": 2175,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2171,
											"end": 2172,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2164,
											"end": 2176,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2126,
											"end": 2178,
											"name": "tag",
											"source": 10,
											"value": "846"
										},
										{
											"begin": 2126,
											"end": 2178,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2197,
											"end": 2220,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 2197,
											"end": 2220,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2046,
											"end": 2226,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2046,
											"end": 2226,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 2231,
											"end": 2479,
											"name": "tag",
											"source": 10,
											"value": "162"
										},
										{
											"begin": 2231,
											"end": 2479,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2296,
											"end": 2302,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2304,
											"end": 2310,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2357,
											"end": 2359,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2345,
											"end": 2354,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2336,
											"end": 2343,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 2332,
											"end": 2355,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2328,
											"end": 2360,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 2325,
											"end": 2377,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2325,
											"end": 2377,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "848"
										},
										{
											"begin": 2325,
											"end": 2377,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2373,
											"end": 2374,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2370,
											"end": 2371,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2363,
											"end": 2375,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2325,
											"end": 2377,
											"name": "tag",
											"source": 10,
											"value": "848"
										},
										{
											"begin": 2325,
											"end": 2377,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2409,
											"end": 2418,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2396,
											"end": 2419,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 2386,
											"end": 2419,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2386,
											"end": 2419,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2438,
											"end": 2473,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "849"
										},
										{
											"begin": 2469,
											"end": 2471,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2458,
											"end": 2467,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 2454,
											"end": 2472,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2438,
											"end": 2473,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "821"
										},
										{
											"begin": 2438,
											"end": 2473,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 2438,
											"end": 2473,
											"name": "tag",
											"source": 10,
											"value": "849"
										},
										{
											"begin": 2438,
											"end": 2473,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2428,
											"end": 2473,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2428,
											"end": 2473,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2231,
											"end": 2479,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2231,
											"end": 2479,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2231,
											"end": 2479,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2231,
											"end": 2479,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2231,
											"end": 2479,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2231,
											"end": 2479,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 2484,
											"end": 2790,
											"name": "tag",
											"source": 10,
											"value": "761"
										},
										{
											"begin": 2484,
											"end": 2790,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2572,
											"end": 2578,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2580,
											"end": 2586,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2588,
											"end": 2594,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2641,
											"end": 2643,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 2629,
											"end": 2638,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 2620,
											"end": 2627,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 2616,
											"end": 2639,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2612,
											"end": 2644,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 2609,
											"end": 2661,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2609,
											"end": 2661,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "851"
										},
										{
											"begin": 2609,
											"end": 2661,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2657,
											"end": 2658,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2654,
											"end": 2655,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2647,
											"end": 2659,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2609,
											"end": 2661,
											"name": "tag",
											"source": 10,
											"value": "851"
										},
										{
											"begin": 2609,
											"end": 2661,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2686,
											"end": 2695,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2680,
											"end": 2696,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2670,
											"end": 2696,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2670,
											"end": 2696,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2736,
											"end": 2738,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2725,
											"end": 2734,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 2721,
											"end": 2739,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2715,
											"end": 2740,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2705,
											"end": 2740,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2705,
											"end": 2740,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2780,
											"end": 2782,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2769,
											"end": 2778,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 2765,
											"end": 2783,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2759,
											"end": 2784,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2749,
											"end": 2784,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2749,
											"end": 2784,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2484,
											"end": 2790,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2484,
											"end": 2790,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2484,
											"end": 2790,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2484,
											"end": 2790,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2484,
											"end": 2790,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2484,
											"end": 2790,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 4730,
											"end": 5327,
											"name": "tag",
											"source": 10,
											"value": "87"
										},
										{
											"begin": 4730,
											"end": 5327,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4842,
											"end": 4846,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4871,
											"end": 4873,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4900,
											"end": 4902,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4889,
											"end": 4898,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4882,
											"end": 4903,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4932,
											"end": 4938,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4926,
											"end": 4939,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4975,
											"end": 4981,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4970,
											"end": 4972,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4959,
											"end": 4968,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 4955,
											"end": 4973,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4948,
											"end": 4982,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5000,
											"end": 5001,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5010,
											"end": 5150,
											"name": "tag",
											"source": 10,
											"value": "859"
										},
										{
											"begin": 5010,
											"end": 5150,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5024,
											"end": 5030,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5021,
											"end": 5022,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5018,
											"end": 5031,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 5010,
											"end": 5150,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5010,
											"end": 5150,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "861"
										},
										{
											"begin": 5010,
											"end": 5150,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5119,
											"end": 5133,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 5119,
											"end": 5133,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5119,
											"end": 5133,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5115,
											"end": 5138,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5115,
											"end": 5138,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5109,
											"end": 5139,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 5085,
											"end": 5102,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 5085,
											"end": 5102,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5085,
											"end": 5102,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5104,
											"end": 5106,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5081,
											"end": 5107,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5074,
											"end": 5140,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5039,
											"end": 5049,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5039,
											"end": 5049,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5010,
											"end": 5150,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "859"
										},
										{
											"begin": 5010,
											"end": 5150,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5010,
											"end": 5150,
											"name": "tag",
											"source": 10,
											"value": "861"
										},
										{
											"begin": 5010,
											"end": 5150,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5168,
											"end": 5174,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5165,
											"end": 5166,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5162,
											"end": 5175,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 5159,
											"end": 5250,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5159,
											"end": 5250,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "862"
										},
										{
											"begin": 5159,
											"end": 5250,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5238,
											"end": 5239,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5233,
											"end": 5235,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5224,
											"end": 5230,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5213,
											"end": 5222,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 5209,
											"end": 5231,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5205,
											"end": 5236,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5198,
											"end": 5240,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5159,
											"end": 5250,
											"name": "tag",
											"source": 10,
											"value": "862"
										},
										{
											"begin": 5159,
											"end": 5250,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5311,
											"end": 5313,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 5290,
											"end": 5305,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 5286,
											"end": 5315,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 5271,
											"end": 5316,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 5271,
											"end": 5316,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5271,
											"end": 5316,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 5271,
											"end": 5316,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5318,
											"end": 5320,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5267,
											"end": 5321,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5267,
											"end": 5321,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 4730,
											"end": 5327,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4730,
											"end": 5327,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 6098,
											"end": 6496,
											"name": "tag",
											"source": 10,
											"value": "438"
										},
										{
											"begin": 6098,
											"end": 6496,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6300,
											"end": 6302,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6282,
											"end": 6303,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6282,
											"end": 6303,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6282,
											"end": 6303,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6339,
											"end": 6341,
											"name": "PUSH",
											"source": 10,
											"value": "22"
										},
										{
											"begin": 6319,
											"end": 6337,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6319,
											"end": 6337,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6319,
											"end": 6337,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6312,
											"end": 6342,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6378,
											"end": 6412,
											"name": "PUSH",
											"source": 10,
											"value": "4F6E6C792061646D696E206F7220616E7469206D616E6167657220616C6C6F77"
										},
										{
											"begin": 6373,
											"end": 6375,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 6358,
											"end": 6376,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6358,
											"end": 6376,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6351,
											"end": 6413,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6444,
											"end": 6446,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 6429,
											"end": 6447,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6429,
											"end": 6447,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6422,
											"end": 6454,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6486,
											"end": 6489,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 6471,
											"end": 6490,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6471,
											"end": 6490,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6098,
											"end": 6496,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 15417,
											"end": 16397,
											"name": "tag",
											"source": 10,
											"value": "748"
										},
										{
											"begin": 15417,
											"end": 16397,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15679,
											"end": 15683,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15727,
											"end": 15730,
											"name": "PUSH",
											"source": 10,
											"value": "A0"
										},
										{
											"begin": 15716,
											"end": 15725,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15712,
											"end": 15731,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15758,
											"end": 15764,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 15747,
											"end": 15756,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 15740,
											"end": 15765,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 15784,
											"end": 15786,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 15822,
											"end": 15828,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 15817,
											"end": 15819,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 15806,
											"end": 15815,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 15802,
											"end": 15820,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15795,
											"end": 15829,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 15865,
											"end": 15868,
											"name": "PUSH",
											"source": 10,
											"value": "A0"
										},
										{
											"begin": 15860,
											"end": 15862,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 15849,
											"end": 15858,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 15845,
											"end": 15863,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15838,
											"end": 15869,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 15889,
											"end": 15895,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 15924,
											"end": 15930,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 15918,
											"end": 15931,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 15955,
											"end": 15961,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 15947,
											"end": 15953,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 15940,
											"end": 15962,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 15993,
											"end": 15996,
											"name": "PUSH",
											"source": 10,
											"value": "C0"
										},
										{
											"begin": 15982,
											"end": 15991,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 15978,
											"end": 15997,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15971,
											"end": 15997,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 15971,
											"end": 15997,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16032,
											"end": 16034,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 16024,
											"end": 16030,
											"name": "DUP10",
											"source": 10
										},
										{
											"begin": 16020,
											"end": 16035,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16006,
											"end": 16035,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 16006,
											"end": 16035,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16053,
											"end": 16054,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 16063,
											"end": 16258,
											"name": "tag",
											"source": 10,
											"value": "890"
										},
										{
											"begin": 16063,
											"end": 16258,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16077,
											"end": 16083,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 16074,
											"end": 16075,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 16071,
											"end": 16084,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 16063,
											"end": 16258,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 16063,
											"end": 16258,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "892"
										},
										{
											"begin": 16063,
											"end": 16258,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 16142,
											"end": 16155,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 16142,
											"end": 16155,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 16138,
											"end": 16177,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 16126,
											"end": 16178,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 16126,
											"end": 16178,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 16233,
											"end": 16248,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 16233,
											"end": 16248,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 16233,
											"end": 16248,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16233,
											"end": 16248,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 16198,
											"end": 16210,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 16198,
											"end": 16210,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 16198,
											"end": 16210,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16198,
											"end": 16210,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 16174,
											"end": 16175,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 16092,
											"end": 16101,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16063,
											"end": 16258,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "890"
										},
										{
											"begin": 16063,
											"end": 16258,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16063,
											"end": 16258,
											"name": "tag",
											"source": 10,
											"value": "892"
										},
										{
											"begin": 16063,
											"end": 16258,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 16314,
											"end": 16346,
											"name": "SWAP7",
											"source": 10
										},
										{
											"begin": 16314,
											"end": 16346,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 16314,
											"end": 16346,
											"name": "SWAP7",
											"source": 10
										},
										{
											"begin": 16314,
											"end": 16346,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 16309,
											"end": 16311,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 16294,
											"end": 16312,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 16294,
											"end": 16312,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16287,
											"end": 16347,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 16378,
											"end": 16381,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 16363,
											"end": 16382,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16356,
											"end": 16391,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 16275,
											"end": 16278,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 15417,
											"end": 16397,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15417,
											"end": 16397,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 16915,
											"end": 17043,
											"name": "tag",
											"source": 10,
											"value": "613"
										},
										{
											"begin": 16915,
											"end": 17043,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16955,
											"end": 16958,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 16986,
											"end": 16987,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 16982,
											"end": 16988,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 16979,
											"end": 16980,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 16976,
											"end": 16989,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 16973,
											"end": 17012,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 16973,
											"end": 17012,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "897"
										},
										{
											"begin": 16973,
											"end": 17012,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 16992,
											"end": 17010,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "897"
										},
										{
											"begin": 16992,
											"end": 17010,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "898"
										},
										{
											"begin": 16992,
											"end": 17010,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 16992,
											"end": 17010,
											"name": "tag",
											"source": 10,
											"value": "897"
										},
										{
											"begin": 16992,
											"end": 17010,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 17028,
											"end": 17037,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 17028,
											"end": 17037,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 16915,
											"end": 17043,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 17048,
											"end": 17265,
											"name": "tag",
											"source": 10,
											"value": "592"
										},
										{
											"begin": 17048,
											"end": 17265,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17088,
											"end": 17089,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 17114,
											"end": 17115,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 17104,
											"end": 17236,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "900"
										},
										{
											"begin": 17104,
											"end": 17236,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 17158,
											"end": 17168,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B71"
										},
										{
											"begin": 17153,
											"end": 17156,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 17149,
											"end": 17169,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 17146,
											"end": 17147,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 17139,
											"end": 17170,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 17193,
											"end": 17197,
											"name": "PUSH",
											"source": 10,
											"value": "12"
										},
										{
											"begin": 17190,
											"end": 17191,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 17183,
											"end": 17198,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 17221,
											"end": 17225,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 17218,
											"end": 17219,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 17211,
											"end": 17226,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 17104,
											"end": 17236,
											"name": "tag",
											"source": 10,
											"value": "900"
										},
										{
											"begin": 17104,
											"end": 17236,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 17250,
											"end": 17259,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 17250,
											"end": 17259,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 17048,
											"end": 17265,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 17270,
											"end": 17438,
											"name": "tag",
											"source": 10,
											"value": "590"
										},
										{
											"begin": 17270,
											"end": 17438,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17310,
											"end": 17317,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 17376,
											"end": 17377,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 17372,
											"end": 17373,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 17368,
											"end": 17374,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 17364,
											"end": 17378,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 17361,
											"end": 17362,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 17358,
											"end": 17379,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 17353,
											"end": 17354,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 17346,
											"end": 17355,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 17339,
											"end": 17356,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 17335,
											"end": 17380,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 17332,
											"end": 17403,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 17332,
											"end": 17403,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "903"
										},
										{
											"begin": 17332,
											"end": 17403,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 17383,
											"end": 17401,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "903"
										},
										{
											"begin": 17383,
											"end": 17401,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "898"
										},
										{
											"begin": 17383,
											"end": 17401,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 17383,
											"end": 17401,
											"name": "tag",
											"source": 10,
											"value": "903"
										},
										{
											"begin": 17383,
											"end": 17401,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 17423,
											"end": 17432,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 17423,
											"end": 17432,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 17270,
											"end": 17438,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 17443,
											"end": 17568,
											"name": "tag",
											"source": 10,
											"value": "386"
										},
										{
											"begin": 17443,
											"end": 17568,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17483,
											"end": 17487,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 17511,
											"end": 17512,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 17508,
											"end": 17509,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 17505,
											"end": 17513,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 17502,
											"end": 17536,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 17502,
											"end": 17536,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "906"
										},
										{
											"begin": 17502,
											"end": 17536,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 17516,
											"end": 17534,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "906"
										},
										{
											"begin": 17516,
											"end": 17534,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "898"
										},
										{
											"begin": 17516,
											"end": 17534,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 17516,
											"end": 17534,
											"name": "tag",
											"source": 10,
											"value": "906"
										},
										{
											"begin": 17516,
											"end": 17534,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 17553,
											"end": 17562,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 17553,
											"end": 17562,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 17443,
											"end": 17568,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 17573,
											"end": 17953,
											"name": "tag",
											"source": 10,
											"value": "342"
										},
										{
											"begin": 17573,
											"end": 17953,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17652,
											"end": 17653,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 17648,
											"end": 17660,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 17648,
											"end": 17660,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 17648,
											"end": 17660,
											"name": "SHR",
											"source": 10
										},
										{
											"begin": 17648,
											"end": 17660,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 17695,
											"end": 17707,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 17695,
											"end": 17707,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 17695,
											"end": 17707,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 17716,
											"end": 17777,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "908"
										},
										{
											"begin": 17716,
											"end": 17777,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 17770,
											"end": 17774,
											"name": "PUSH",
											"source": 10,
											"value": "7F"
										},
										{
											"begin": 17762,
											"end": 17768,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 17758,
											"end": 17775,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 17748,
											"end": 17775,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 17748,
											"end": 17775,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17716,
											"end": 17777,
											"name": "tag",
											"source": 10,
											"value": "908"
										},
										{
											"begin": 17716,
											"end": 17777,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17823,
											"end": 17825,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 17815,
											"end": 17821,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 17812,
											"end": 17826,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 17792,
											"end": 17810,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 17789,
											"end": 17827,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 17786,
											"end": 17947,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 17786,
											"end": 17947,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "909"
										},
										{
											"begin": 17786,
											"end": 17947,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 17869,
											"end": 17879,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B71"
										},
										{
											"begin": 17864,
											"end": 17867,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 17860,
											"end": 17880,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 17857,
											"end": 17858,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 17850,
											"end": 17881,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 17904,
											"end": 17908,
											"name": "PUSH",
											"source": 10,
											"value": "22"
										},
										{
											"begin": 17901,
											"end": 17902,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 17894,
											"end": 17909,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 17932,
											"end": 17936,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 17929,
											"end": 17930,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 17922,
											"end": 17937,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 17786,
											"end": 17947,
											"name": "tag",
											"source": 10,
											"value": "909"
										},
										{
											"begin": 17786,
											"end": 17947,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17786,
											"end": 17947,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17573,
											"end": 17953,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 17573,
											"end": 17953,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 17573,
											"end": 17953,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17573,
											"end": 17953,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 17958,
											"end": 18093,
											"name": "tag",
											"source": 10,
											"value": "398"
										},
										{
											"begin": 17958,
											"end": 18093,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17997,
											"end": 18000,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 18018,
											"end": 18035,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 18018,
											"end": 18035,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 18015,
											"end": 18058,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 18015,
											"end": 18058,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "912"
										},
										{
											"begin": 18015,
											"end": 18058,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 18038,
											"end": 18056,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "912"
										},
										{
											"begin": 18038,
											"end": 18056,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "898"
										},
										{
											"begin": 18038,
											"end": 18056,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 18038,
											"end": 18056,
											"name": "tag",
											"source": 10,
											"value": "912"
										},
										{
											"begin": 18038,
											"end": 18056,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 18085,
											"end": 18086,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 18074,
											"end": 18087,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 18074,
											"end": 18087,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 17958,
											"end": 18093,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 18098,
											"end": 18225,
											"name": "tag",
											"source": 10,
											"value": "898"
										},
										{
											"begin": 18098,
											"end": 18225,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 18159,
											"end": 18169,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B71"
										},
										{
											"begin": 18154,
											"end": 18157,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 18150,
											"end": 18170,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 18147,
											"end": 18148,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 18140,
											"end": 18171,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 18190,
											"end": 18194,
											"name": "PUSH",
											"source": 10,
											"value": "11"
										},
										{
											"begin": 18187,
											"end": 18188,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 18180,
											"end": 18195,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 18214,
											"end": 18218,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 18211,
											"end": 18212,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 18204,
											"end": 18219,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 18230,
											"end": 18357,
											"name": "tag",
											"source": 10,
											"value": "395"
										},
										{
											"begin": 18230,
											"end": 18357,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 18291,
											"end": 18301,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B71"
										},
										{
											"begin": 18286,
											"end": 18289,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 18282,
											"end": 18302,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 18279,
											"end": 18280,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 18272,
											"end": 18303,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 18322,
											"end": 18326,
											"name": "PUSH",
											"source": 10,
											"value": "31"
										},
										{
											"begin": 18319,
											"end": 18320,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 18312,
											"end": 18327,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 18346,
											"end": 18350,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 18343,
											"end": 18344,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 18336,
											"end": 18351,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 18362,
											"end": 18489,
											"name": "tag",
											"source": 10,
											"value": "382"
										},
										{
											"begin": 18362,
											"end": 18489,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 18423,
											"end": 18433,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B71"
										},
										{
											"begin": 18418,
											"end": 18421,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 18414,
											"end": 18434,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 18411,
											"end": 18412,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 18404,
											"end": 18435,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 18454,
											"end": 18458,
											"name": "PUSH",
											"source": 10,
											"value": "32"
										},
										{
											"begin": 18451,
											"end": 18452,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 18444,
											"end": 18459,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 18478,
											"end": 18482,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 18475,
											"end": 18476,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 18468,
											"end": 18483,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 18626,
											"end": 18757,
											"name": "tag",
											"source": 10,
											"value": "827"
										},
										{
											"begin": 18626,
											"end": 18757,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 18701,
											"end": 18732,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 18701,
											"end": 18732,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 18691,
											"end": 18733,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 18691,
											"end": 18733,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 18681,
											"end": 18751,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "549"
										},
										{
											"begin": 18681,
											"end": 18751,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 18747,
											"end": 18748,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 18744,
											"end": 18745,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 18737,
											"end": 18749,
											"name": "REVERT",
											"source": 10
										}
									],
									".data": {
										"4F3506F4BA71C79C3CBD442A3AFEB30E9B27AF2D84E116A4385B34E267D2287E": "42455032303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365",
										"B7060B3538DCD3DDC8A941C91636A8115A1AA46914747FD9809D543BBB46CD22": "42455032303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f"
									}
								}
							}
						},
						"methodIdentifiers": {
							"MAX_HOLDING_PERCENTS_DIVISOR()": "64a06e80",
							"_burnFee()": "c0b0fda2",
							"_liquidityFee()": "6bc87c3a",
							"_marketingFee()": "22976e0d",
							"_maxHoldingPercents()": "0a7d2d87",
							"_sellBurnFee()": "7abdc1ca",
							"_sellLiquidityFee()": "88790a68",
							"_sellMarketingFee()": "c8607952",
							"_sellTaxFee()": "200a692d",
							"_taxFee()": "3b124fe7",
							"allowance(address,address)": "dd62ed3e",
							"antiBotEnabled()": "d8c6404b",
							"antiManager()": "d5bde46c",
							"antiWhaleEnabled()": "57d87f0d",
							"antisnipe()": "882cfb3f",
							"antisnipeDisable()": "e1e144de",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"deliver(uint256)": "3bd5d173",
							"excludeFromFee(address)": "437823ec",
							"excludeFromReward(address)": "52390c02",
							"includeInFee(address)": "ea2f0b37",
							"includeInReward(address)": "3685d419",
							"increaseAllowance(address,uint256)": "39509351",
							"isExcludedFromFee(address)": "5342acb4",
							"isExcludedFromReward(address)": "88f82020",
							"marketingWallet()": "75f0a874",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"pancakeV2Pair()": "632a6a35",
							"pancakeV2Router()": "1a4cd1b1",
							"reflectionFromToken(uint256,bool)": "4549b039",
							"renounceOwnership()": "715018a6",
							"setAntiBot(bool)": "c2c7c03a",
							"setAntiWhale(bool)": "4a5566bf",
							"setAntisnipeAddress(address)": "611bf629",
							"setAntisnipeDisable()": "74fb20e1",
							"setBurnFeePercent(uint256)": "cea26958",
							"setLiquidityFeePercent(uint256)": "8ee88c53",
							"setMarketingFeePercent(uint256)": "457c194c",
							"setMarketingWallet(address)": "5d098b38",
							"setMaxHoldingPercents(uint256)": "9655cab5",
							"setSellBurnFeePercent(uint256)": "ebf78663",
							"setSellLiquidityFeePercent(uint256)": "5876ccc5",
							"setSellMarketingFeePercent(uint256)": "a928681c",
							"setSellTaxFeePercent(uint256)": "d0e03523",
							"setSwapAndLiquifyEnabled(bool)": "c49b9a80",
							"setTaxFeePercent(uint256)": "061c82d0",
							"swapAndLiquifyEnabled()": "4a74bb02",
							"symbol()": "95d89b41",
							"tokenFromReflection(uint256)": "2d838119",
							"totalFees()": "13114a9d",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IPancakeV2Router02\",\"name\":\"_pancakeV2Router\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_marketingWallet\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_antiManager\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokensSwapped\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"ethReceived\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokensIntoLiqudity\",\"type\":\"uint256\"}],\"name\":\"SwapAndLiquify\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"enabled\",\"type\":\"bool\"}],\"name\":\"SwapAndLiquifyEnabledUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"MAX_HOLDING_PERCENTS_DIVISOR\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_burnFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_liquidityFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_marketingFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_maxHoldingPercents\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_sellBurnFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_sellLiquidityFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_sellMarketingFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_sellTaxFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_taxFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"antiBotEnabled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"antiManager\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"antiWhaleEnabled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"antisnipe\",\"outputs\":[{\"internalType\":\"contract IAntisnipe\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"antisnipeDisable\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tAmount\",\"type\":\"uint256\"}],\"name\":\"deliver\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"excludeFromFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"excludeFromReward\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"includeInFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"includeInReward\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isExcludedFromFee\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isExcludedFromReward\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"marketingWallet\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pancakeV2Pair\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pancakeV2Router\",\"outputs\":[{\"internalType\":\"contract IPancakeV2Router02\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tAmount\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"deductTransferFee\",\"type\":\"bool\"}],\"name\":\"reflectionFromToken\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"enabled\",\"type\":\"bool\"}],\"name\":\"setAntiBot\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"enabled\",\"type\":\"bool\"}],\"name\":\"setAntiWhale\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"setAntisnipeAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"setAntisnipeDisable\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"burnFee\",\"type\":\"uint256\"}],\"name\":\"setBurnFeePercent\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"liquidityFee\",\"type\":\"uint256\"}],\"name\":\"setLiquidityFeePercent\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"marketingFee\",\"type\":\"uint256\"}],\"name\":\"setMarketingFeePercent\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newWallet\",\"type\":\"address\"}],\"name\":\"setMarketingWallet\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"maxHoldingPercents\",\"type\":\"uint256\"}],\"name\":\"setMaxHoldingPercents\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"sellBurnFee\",\"type\":\"uint256\"}],\"name\":\"setSellBurnFeePercent\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"sellLiquidityFee\",\"type\":\"uint256\"}],\"name\":\"setSellLiquidityFeePercent\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"sellMarketingFee\",\"type\":\"uint256\"}],\"name\":\"setSellMarketingFeePercent\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"sellTaxFee\",\"type\":\"uint256\"}],\"name\":\"setSellTaxFeePercent\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_enabled\",\"type\":\"bool\"}],\"name\":\"setSwapAndLiquifyEnabled\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"taxFee\",\"type\":\"uint256\"}],\"name\":\"setTaxFeePercent\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"swapAndLiquifyEnabled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"rAmount\",\"type\":\"uint256\"}],\"name\":\"tokenFromReflection\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalFees\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/MyToken.sol\":\"Pokemon\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269\",\"dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://864a40efcffdf408044c332a5aa38ec5618ed7b4eecb8f65faf45671bd6cdc65\",\"dweb:/ipfs/QmQJquTMtc6fgm5JQzGdsGpA2fqBe3MHWEdt2qzaLySMdN\"]},\"contracts/IPancakeV2Factory.sol\":{\"keccak256\":\"0x60dbe5cba4b179a7c1f959ff040f96cbb60b09a1e60de938a2aebc85687ad434\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6b0966829afb7234c9b8ce213d67445631234da9bb2ea4176a22a66e1ed0606e\",\"dweb:/ipfs/QmWAycZmKAos2fWeSYeYEKhitp3eieLRvmXpKGCzNyFhuc\"]},\"contracts/IPancakeV2Pair.sol\":{\"keccak256\":\"0x251bdc1c3466923503c66115c81995cdec945196e8288d80c0e0923b3e907f30\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7cec88b076597889dbf1df2da0712030ca1673f0a1917361012550c7287720b0\",\"dweb:/ipfs/QmfPTVZ9sKtyoKpbBK4RcSmaZDcVRQH46Han6dkYGLBi9r\"]},\"contracts/IPancakeV2Router01.sol\":{\"keccak256\":\"0x4d6b22a71a4c8b18a3b492c766f5ebe893d4c00183ad148ce4b0ec9e9af2964c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ffb9ab3901dd80fbe3a99e279b3eda57129fdb65d8b19f2f42d8b9f43a150107\",\"dweb:/ipfs/QmVWLnGMRWhdekgjrSzLmnScGFiWzzYxRKh5s4WSfevB4V\"]},\"contracts/IPancakeV2Router02.sol\":{\"keccak256\":\"0x532b5781d79cda434572b7cb562bb7141e54cbf9b03261a5ee39a70b614100ab\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://559d8d0a676fd42b0e0a9316e10cd097afd5d7fe4e6f1c95a6772414114beb82\",\"dweb:/ipfs/Qmd4FLJY5LHzLRJY448ixH8N9DWJSaa73aJWhVehHrWHUb\"]},\"contracts/MyToken.sol\":{\"keccak256\":\"0x2630a78facbef88563a0e218d779a54dbedd0fbe11253dda6a0cfd45691547c3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bfc5945a06be55721a857c11481f9f86c37e8434f59fef73542cc0b504b47fbc\",\"dweb:/ipfs/QmVjUo7Axa8hVXkR5rX83uiUFFyuy2Zky5VjX66wi4P1ou\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "contracts/MyToken.sol:Pokemon",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 1592,
								"contract": "contracts/MyToken.sol:Pokemon",
								"label": "_rOwned",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 1596,
								"contract": "contracts/MyToken.sol:Pokemon",
								"label": "_tOwned",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 1602,
								"contract": "contracts/MyToken.sol:Pokemon",
								"label": "_allowances",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 1606,
								"contract": "contracts/MyToken.sol:Pokemon",
								"label": "_isExcludedFromFee",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_address,t_bool)"
							},
							{
								"astId": 1610,
								"contract": "contracts/MyToken.sol:Pokemon",
								"label": "_isExcluded",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_bool)"
							},
							{
								"astId": 1613,
								"contract": "contracts/MyToken.sol:Pokemon",
								"label": "_excluded",
								"offset": 0,
								"slot": "6",
								"type": "t_array(t_address)dyn_storage"
							},
							{
								"astId": 1627,
								"contract": "contracts/MyToken.sol:Pokemon",
								"label": "_tTotal",
								"offset": 0,
								"slot": "7",
								"type": "t_uint256"
							},
							{
								"astId": 1636,
								"contract": "contracts/MyToken.sol:Pokemon",
								"label": "_rTotal",
								"offset": 0,
								"slot": "8",
								"type": "t_uint256"
							},
							{
								"astId": 1638,
								"contract": "contracts/MyToken.sol:Pokemon",
								"label": "_tFeeTotal",
								"offset": 0,
								"slot": "9",
								"type": "t_uint256"
							},
							{
								"astId": 1641,
								"contract": "contracts/MyToken.sol:Pokemon",
								"label": "_name",
								"offset": 0,
								"slot": "10",
								"type": "t_string_storage"
							},
							{
								"astId": 1644,
								"contract": "contracts/MyToken.sol:Pokemon",
								"label": "_symbol",
								"offset": 0,
								"slot": "11",
								"type": "t_string_storage"
							},
							{
								"astId": 1647,
								"contract": "contracts/MyToken.sol:Pokemon",
								"label": "_decimals",
								"offset": 0,
								"slot": "12",
								"type": "t_uint8"
							},
							{
								"astId": 1650,
								"contract": "contracts/MyToken.sol:Pokemon",
								"label": "_taxFee",
								"offset": 0,
								"slot": "13",
								"type": "t_uint256"
							},
							{
								"astId": 1653,
								"contract": "contracts/MyToken.sol:Pokemon",
								"label": "_previousTaxFee",
								"offset": 0,
								"slot": "14",
								"type": "t_uint256"
							},
							{
								"astId": 1656,
								"contract": "contracts/MyToken.sol:Pokemon",
								"label": "_liquidityFee",
								"offset": 0,
								"slot": "15",
								"type": "t_uint256"
							},
							{
								"astId": 1659,
								"contract": "contracts/MyToken.sol:Pokemon",
								"label": "_previousLiquidityFee",
								"offset": 0,
								"slot": "16",
								"type": "t_uint256"
							},
							{
								"astId": 1662,
								"contract": "contracts/MyToken.sol:Pokemon",
								"label": "_burnFee",
								"offset": 0,
								"slot": "17",
								"type": "t_uint256"
							},
							{
								"astId": 1665,
								"contract": "contracts/MyToken.sol:Pokemon",
								"label": "_previousBurnFee",
								"offset": 0,
								"slot": "18",
								"type": "t_uint256"
							},
							{
								"astId": 1668,
								"contract": "contracts/MyToken.sol:Pokemon",
								"label": "_marketingFee",
								"offset": 0,
								"slot": "19",
								"type": "t_uint256"
							},
							{
								"astId": 1670,
								"contract": "contracts/MyToken.sol:Pokemon",
								"label": "marketingWallet",
								"offset": 0,
								"slot": "20",
								"type": "t_address"
							},
							{
								"astId": 1673,
								"contract": "contracts/MyToken.sol:Pokemon",
								"label": "_previousMarketingFee",
								"offset": 0,
								"slot": "21",
								"type": "t_uint256"
							},
							{
								"astId": 1676,
								"contract": "contracts/MyToken.sol:Pokemon",
								"label": "_sellTaxFee",
								"offset": 0,
								"slot": "22",
								"type": "t_uint256"
							},
							{
								"astId": 1679,
								"contract": "contracts/MyToken.sol:Pokemon",
								"label": "_sellLiquidityFee",
								"offset": 0,
								"slot": "23",
								"type": "t_uint256"
							},
							{
								"astId": 1682,
								"contract": "contracts/MyToken.sol:Pokemon",
								"label": "_sellMarketingFee",
								"offset": 0,
								"slot": "24",
								"type": "t_uint256"
							},
							{
								"astId": 1685,
								"contract": "contracts/MyToken.sol:Pokemon",
								"label": "_sellBurnFee",
								"offset": 0,
								"slot": "25",
								"type": "t_uint256"
							},
							{
								"astId": 1691,
								"contract": "contracts/MyToken.sol:Pokemon",
								"label": "_maxHoldingPercents",
								"offset": 0,
								"slot": "26",
								"type": "t_uint256"
							},
							{
								"astId": 1693,
								"contract": "contracts/MyToken.sol:Pokemon",
								"label": "antiWhaleEnabled",
								"offset": 0,
								"slot": "27",
								"type": "t_bool"
							},
							{
								"astId": 1697,
								"contract": "contracts/MyToken.sol:Pokemon",
								"label": "allowedBuyAmount",
								"offset": 0,
								"slot": "28",
								"type": "t_mapping(t_uint256,t_bool)"
							},
							{
								"astId": 1699,
								"contract": "contracts/MyToken.sol:Pokemon",
								"label": "antiBotEnabled",
								"offset": 0,
								"slot": "29",
								"type": "t_bool"
							},
							{
								"astId": 1701,
								"contract": "contracts/MyToken.sol:Pokemon",
								"label": "antiManager",
								"offset": 1,
								"slot": "29",
								"type": "t_address"
							},
							{
								"astId": 1704,
								"contract": "contracts/MyToken.sol:Pokemon",
								"label": "pancakeV2Router",
								"offset": 0,
								"slot": "30",
								"type": "t_contract(IPancakeV2Router02)1555"
							},
							{
								"astId": 1706,
								"contract": "contracts/MyToken.sol:Pokemon",
								"label": "pancakeV2Pair",
								"offset": 0,
								"slot": "31",
								"type": "t_address"
							},
							{
								"astId": 1708,
								"contract": "contracts/MyToken.sol:Pokemon",
								"label": "inSwapAndLiquify",
								"offset": 20,
								"slot": "31",
								"type": "t_bool"
							},
							{
								"astId": 1711,
								"contract": "contracts/MyToken.sol:Pokemon",
								"label": "swapAndLiquifyEnabled",
								"offset": 21,
								"slot": "31",
								"type": "t_bool"
							},
							{
								"astId": 1718,
								"contract": "contracts/MyToken.sol:Pokemon",
								"label": "numTokensSellToAddToLiquidity",
								"offset": 0,
								"slot": "32",
								"type": "t_uint256"
							},
							{
								"astId": 1733,
								"contract": "contracts/MyToken.sol:Pokemon",
								"label": "_allowedBuyAmount",
								"offset": 0,
								"slot": "33",
								"type": "t_array(t_uint256)dyn_storage"
							},
							{
								"astId": 1864,
								"contract": "contracts/MyToken.sol:Pokemon",
								"label": "antisnipe",
								"offset": 0,
								"slot": "34",
								"type": "t_contract(IAntisnipe)1576"
							},
							{
								"astId": 1866,
								"contract": "contracts/MyToken.sol:Pokemon",
								"label": "antisnipeDisable",
								"offset": 20,
								"slot": "34",
								"type": "t_bool"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_address)dyn_storage": {
								"base": "t_address",
								"encoding": "dynamic_array",
								"label": "address[]",
								"numberOfBytes": "32"
							},
							"t_array(t_uint256)dyn_storage": {
								"base": "t_uint256",
								"encoding": "dynamic_array",
								"label": "uint256[]",
								"numberOfBytes": "32"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_contract(IAntisnipe)1576": {
								"encoding": "inplace",
								"label": "contract IAntisnipe",
								"numberOfBytes": "20"
							},
							"t_contract(IPancakeV2Router02)1555": {
								"encoding": "inplace",
								"label": "contract IPancakeV2Router02",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_bool)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							542
						],
						"Ownable": [
							112
						]
					},
					"id": 113,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "102:23:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 113,
							"sourceUnit": 543,
							"src": "127:30:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 4,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 542,
										"src": "683:7:0"
									},
									"id": 5,
									"nodeType": "InheritanceSpecifier",
									"src": "683:7:0"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 3,
								"nodeType": "StructuredDocumentation",
								"src": "159:494:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 112,
							"linearizedBaseContracts": [
								112,
								542
							],
							"name": "Ownable",
							"nameLocation": "672:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 7,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "713:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 112,
									"src": "697:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 6,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "697:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"id": 13,
									"name": "OwnershipTransferred",
									"nameLocation": "732:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "769:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "753:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 8,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "753:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 11,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "800:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "784:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "784:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "752:57:0"
									},
									"src": "726:84:0"
								},
								{
									"body": {
										"id": 22,
										"nodeType": "Block",
										"src": "926:49:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 18,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 532,
																"src": "955:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 19,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "955:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 17,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "936:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 20,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "936:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 21,
												"nodeType": "ExpressionStatement",
												"src": "936:32:0"
											}
										]
									},
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "816:91:0",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 23,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "923:2:0"
									},
									"returnParameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "926:0:0"
									},
									"scope": 112,
									"src": "912:63:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 30,
										"nodeType": "Block",
										"src": "1084:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 26,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 54,
														"src": "1094:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 27,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1094:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 28,
												"nodeType": "ExpressionStatement",
												"src": "1094:13:0"
											},
											{
												"id": 29,
												"nodeType": "PlaceholderStatement",
												"src": "1117:1:0"
											}
										]
									},
									"documentation": {
										"id": 24,
										"nodeType": "StructuredDocumentation",
										"src": "981:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 31,
									"name": "onlyOwner",
									"nameLocation": "1072:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1081:2:0"
									},
									"src": "1063:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 39,
										"nodeType": "Block",
										"src": "1256:30:0",
										"statements": [
											{
												"expression": {
													"id": 37,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "1273:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 36,
												"id": 38,
												"nodeType": "Return",
												"src": "1266:13:0"
											}
										]
									},
									"documentation": {
										"id": 32,
										"nodeType": "StructuredDocumentation",
										"src": "1131:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 40,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1210:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1215:2:0"
									},
									"returnParameters": {
										"id": 36,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 35,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "1247:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 34,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1247:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1246:9:0"
									},
									"scope": 112,
									"src": "1201:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 53,
										"nodeType": "Block",
										"src": "1404:85:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 49,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 45,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 40,
																	"src": "1422:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 46,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1422:7:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 47,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 532,
																	"src": "1433:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 48,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1433:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1422:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 50,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1447:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 44,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1414:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 51,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1414:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 52,
												"nodeType": "ExpressionStatement",
												"src": "1414:68:0"
											}
										]
									},
									"documentation": {
										"id": 41,
										"nodeType": "StructuredDocumentation",
										"src": "1292:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 54,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1368:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 42,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1379:2:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1404:0:0"
									},
									"scope": 112,
									"src": "1359:130:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 67,
										"nodeType": "Block",
										"src": "1885:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 63,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1922:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 62,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1914:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 61,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1914:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 64,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1914:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 60,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "1895:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 65,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1895:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 66,
												"nodeType": "ExpressionStatement",
												"src": "1895:30:0"
											}
										]
									},
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "1495:331:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 68,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 58,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 57,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "1875:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1875:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "1840:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 56,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1857:2:0"
									},
									"returnParameters": {
										"id": 59,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1885:0:0"
									},
									"scope": 112,
									"src": "1831:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 90,
										"nodeType": "Block",
										"src": "2151:128:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 82,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 77,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 71,
																"src": "2169:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 80,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2189:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 79,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2181:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 78,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2181:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 81,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2181:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2169:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 83,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2193:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 76,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2161:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 84,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2161:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 85,
												"nodeType": "ExpressionStatement",
												"src": "2161:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 87,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 71,
															"src": "2263:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 86,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "2244:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 88,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2244:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 89,
												"nodeType": "ExpressionStatement",
												"src": "2244:28:0"
											}
										]
									},
									"documentation": {
										"id": 69,
										"nodeType": "StructuredDocumentation",
										"src": "1938:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 91,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 74,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 73,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "2141:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2141:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2090:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2116:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 91,
												"src": "2108:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 70,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2108:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2107:18:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2151:0:0"
									},
									"scope": 112,
									"src": "2081:198:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 110,
										"nodeType": "Block",
										"src": "2496:124:0",
										"statements": [
											{
												"assignments": [
													98
												],
												"declarations": [
													{
														"constant": false,
														"id": 98,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2514:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 110,
														"src": "2506:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 97,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2506:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 100,
												"initialValue": {
													"id": 99,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "2525:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2506:25:0"
											},
											{
												"expression": {
													"id": 103,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 101,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "2541:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 102,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 94,
														"src": "2550:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2541:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 104,
												"nodeType": "ExpressionStatement",
												"src": "2541:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 106,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 98,
															"src": "2594:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 107,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 94,
															"src": "2604:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 105,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 13,
														"src": "2573:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 108,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2573:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 109,
												"nodeType": "EmitStatement",
												"src": "2568:45:0"
											}
										]
									},
									"documentation": {
										"id": 92,
										"nodeType": "StructuredDocumentation",
										"src": "2285:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 111,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2442:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 95,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 94,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2469:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "2461:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 93,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2461:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2460:18:0"
									},
									"returnParameters": {
										"id": 96,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2496:0:0"
									},
									"scope": 112,
									"src": "2433:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 113,
							"src": "654:1968:0",
							"usedErrors": []
						}
					],
					"src": "102:2521:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							190
						]
					},
					"id": 191,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 114,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "106:23:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 115,
								"nodeType": "StructuredDocumentation",
								"src": "131:70:1",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 190,
							"linearizedBaseContracts": [
								190
							],
							"name": "IERC20",
							"nameLocation": "212:6:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 116,
										"nodeType": "StructuredDocumentation",
										"src": "225:158:1",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"id": 124,
									"name": "Transfer",
									"nameLocation": "394:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 123,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 118,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "419:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 124,
												"src": "403:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 117,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "403:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 120,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "441:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 124,
												"src": "425:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 119,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "425:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 122,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "453:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 124,
												"src": "445:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 121,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "445:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "402:57:1"
									},
									"src": "388:72:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 125,
										"nodeType": "StructuredDocumentation",
										"src": "466:148:1",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"id": 133,
									"name": "Approval",
									"nameLocation": "625:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 132,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 127,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "650:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 133,
												"src": "634:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 126,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "634:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 129,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "673:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 133,
												"src": "657:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 131,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "690:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 133,
												"src": "682:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 130,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "682:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "633:63:1"
									},
									"src": "619:78:1"
								},
								{
									"documentation": {
										"id": 134,
										"nodeType": "StructuredDocumentation",
										"src": "703:66:1",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 139,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 135,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:1"
									},
									"returnParameters": {
										"id": 138,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 137,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 139,
												"src": "820:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 136,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:1"
									},
									"scope": 190,
									"src": "774:55:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 140,
										"nodeType": "StructuredDocumentation",
										"src": "835:72:1",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 147,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 143,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 142,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 147,
												"src": "931:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 141,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:1"
									},
									"returnParameters": {
										"id": 146,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 145,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 147,
												"src": "971:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 144,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:1"
									},
									"scope": 190,
									"src": "912:68:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 148,
										"nodeType": "StructuredDocumentation",
										"src": "986:202:1",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 157,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1202:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 153,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 150,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1219:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 157,
												"src": "1211:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 149,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1211:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 152,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1231:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 157,
												"src": "1223:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 151,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1210:28:1"
									},
									"returnParameters": {
										"id": 156,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 155,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 157,
												"src": "1257:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 154,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1257:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1256:6:1"
									},
									"scope": 190,
									"src": "1193:70:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 158,
										"nodeType": "StructuredDocumentation",
										"src": "1269:264:1",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 167,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1547:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 160,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1565:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 167,
												"src": "1557:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 159,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1557:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1580:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 167,
												"src": "1572:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 161,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1572:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1556:32:1"
									},
									"returnParameters": {
										"id": 166,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 165,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 167,
												"src": "1612:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 164,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1612:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1611:9:1"
									},
									"scope": 190,
									"src": "1538:83:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 168,
										"nodeType": "StructuredDocumentation",
										"src": "1627:642:1",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 177,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2283:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 173,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 170,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2299:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 177,
												"src": "2291:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 169,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2291:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2316:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 177,
												"src": "2308:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 171,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2308:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2290:33:1"
									},
									"returnParameters": {
										"id": 176,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 175,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 177,
												"src": "2342:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 174,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2342:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2341:6:1"
									},
									"scope": 190,
									"src": "2274:74:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 178,
										"nodeType": "StructuredDocumentation",
										"src": "2354:287:1",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 189,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2655:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 185,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 180,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2685:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "2677:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 179,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2677:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 182,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2707:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "2699:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 181,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2699:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 184,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2727:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "2719:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 183,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2719:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2667:72:1"
									},
									"returnParameters": {
										"id": 188,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 187,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "2758:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 186,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2758:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2757:6:1"
									},
									"scope": 190,
									"src": "2646:118:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 191,
							"src": "202:2564:1",
							"usedErrors": []
						}
					],
					"src": "106:2661:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							520
						]
					},
					"id": 521,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 192,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".1"
							],
							"nodeType": "PragmaDirective",
							"src": "101:23:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 193,
								"nodeType": "StructuredDocumentation",
								"src": "126:67:2",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 520,
							"linearizedBaseContracts": [
								520
							],
							"name": "Address",
							"nameLocation": "202:7:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 207,
										"nodeType": "Block",
										"src": "1241:254:2",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 205,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 201,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 196,
																"src": "1465:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 202,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "1465:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 203,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1465:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 204,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1487:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1465:23:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 200,
												"id": 206,
												"nodeType": "Return",
												"src": "1458:30:2"
											}
										]
									},
									"documentation": {
										"id": 194,
										"nodeType": "StructuredDocumentation",
										"src": "216:954:2",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="
									},
									"id": 208,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nameLocation": "1184:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 197,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 196,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1203:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 208,
												"src": "1195:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 195,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1195:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1194:17:2"
									},
									"returnParameters": {
										"id": 200,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 199,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 208,
												"src": "1235:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 198,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1235:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1234:6:2"
									},
									"scope": 520,
									"src": "1175:320:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 241,
										"nodeType": "Block",
										"src": "2483:241:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 223,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 219,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2509:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$520",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$520",
																				"typeString": "library Address"
																			}
																		],
																		"id": 218,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2501:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 217,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2501:7:2",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 220,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2501:13:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 221,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "2501:21:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 222,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 213,
																"src": "2526:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2501:31:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 224,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2534:31:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 216,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2493:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 225,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2493:73:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 226,
												"nodeType": "ExpressionStatement",
												"src": "2493:73:2"
											},
											{
												"assignments": [
													228,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 228,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2583:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 241,
														"src": "2578:12:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 227,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2578:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 235,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 233,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2626:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 229,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 211,
																"src": "2596:9:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 230,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2596:14:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 232,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 231,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 213,
																"src": "2618:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2596:29:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 234,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2596:33:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2577:52:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 237,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 228,
															"src": "2647:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 238,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2656:60:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 236,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2639:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 239,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2639:78:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 240,
												"nodeType": "ExpressionStatement",
												"src": "2639:78:2"
											}
										]
									},
									"documentation": {
										"id": 209,
										"nodeType": "StructuredDocumentation",
										"src": "1501:906:2",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 242,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "2421:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 214,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 211,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2447:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 242,
												"src": "2431:25:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 210,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2431:15:2",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 213,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2466:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 242,
												"src": "2458:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 212,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2458:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2430:43:2"
									},
									"returnParameters": {
										"id": 215,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2483:0:2"
									},
									"scope": 520,
									"src": "2412:312:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 259,
										"nodeType": "Block",
										"src": "3555:96:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 253,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 245,
															"src": "3594:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 254,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 247,
															"src": "3602:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 255,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3608:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 256,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3611:32:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 252,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															300,
															344
														],
														"referencedDeclaration": 344,
														"src": "3572:21:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 257,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3572:72:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 251,
												"id": 258,
												"nodeType": "Return",
												"src": "3565:79:2"
											}
										]
									},
									"documentation": {
										"id": 243,
										"nodeType": "StructuredDocumentation",
										"src": "2730:731:2",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 260,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3475:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3496:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 260,
												"src": "3488:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 244,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3488:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 247,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3517:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 260,
												"src": "3504:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 246,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3504:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3487:35:2"
									},
									"returnParameters": {
										"id": 251,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 250,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 260,
												"src": "3541:12:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 249,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3541:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3540:14:2"
									},
									"scope": 520,
									"src": "3466:185:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 279,
										"nodeType": "Block",
										"src": "4020:76:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 273,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 263,
															"src": "4059:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 274,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 265,
															"src": "4067:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 275,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4073:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 276,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 267,
															"src": "4076:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 272,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															300,
															344
														],
														"referencedDeclaration": 344,
														"src": "4037:21:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 277,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4037:52:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 271,
												"id": 278,
												"nodeType": "Return",
												"src": "4030:59:2"
											}
										]
									},
									"documentation": {
										"id": 261,
										"nodeType": "StructuredDocumentation",
										"src": "3657:211:2",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 280,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3882:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 268,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 263,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3912:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 280,
												"src": "3904:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 262,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3904:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 265,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3941:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 280,
												"src": "3928:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 264,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3928:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 267,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "3969:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 280,
												"src": "3955:26:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 266,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3955:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3894:93:2"
									},
									"returnParameters": {
										"id": 271,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 270,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 280,
												"src": "4006:12:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 269,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4006:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4005:14:2"
									},
									"scope": 520,
									"src": "3873:223:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 299,
										"nodeType": "Block",
										"src": "4601:111:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 293,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 283,
															"src": "4640:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 294,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 285,
															"src": "4648:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 295,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 287,
															"src": "4654:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 296,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4661:43:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 292,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															300,
															344
														],
														"referencedDeclaration": 344,
														"src": "4618:21:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 297,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4618:87:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 291,
												"id": 298,
												"nodeType": "Return",
												"src": "4611:94:2"
											}
										]
									},
									"documentation": {
										"id": 281,
										"nodeType": "StructuredDocumentation",
										"src": "4102:351:2",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 300,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4467:21:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 288,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 283,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4506:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 300,
												"src": "4498:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 282,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4498:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 285,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4535:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 300,
												"src": "4522:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 284,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4522:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 287,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4557:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 300,
												"src": "4549:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 286,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4549:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4488:80:2"
									},
									"returnParameters": {
										"id": 291,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 290,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 300,
												"src": "4587:12:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 289,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4587:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4586:14:2"
									},
									"scope": 520,
									"src": "4458:254:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 343,
										"nodeType": "Block",
										"src": "5139:267:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 321,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 317,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "5165:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$520",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$520",
																				"typeString": "library Address"
																			}
																		],
																		"id": 316,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5157:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 315,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5157:7:2",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 318,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5157:13:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 319,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "5157:21:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 320,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 307,
																"src": "5182:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5157:30:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 322,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5189:40:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 314,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5149:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 323,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5149:81:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 324,
												"nodeType": "ExpressionStatement",
												"src": "5149:81:2"
											},
											{
												"assignments": [
													326,
													328
												],
												"declarations": [
													{
														"constant": false,
														"id": 326,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5246:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 343,
														"src": "5241:12:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 325,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5241:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 328,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5268:10:2",
														"nodeType": "VariableDeclaration",
														"scope": 343,
														"src": "5255:23:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 327,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5255:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 335,
												"initialValue": {
													"arguments": [
														{
															"id": 333,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 305,
															"src": "5308:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 329,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 303,
																"src": "5282:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 330,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "5282:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 332,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 331,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 307,
																"src": "5301:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "5282:25:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 334,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5282:31:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5240:73:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 337,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 303,
															"src": "5357:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 338,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 326,
															"src": "5365:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 339,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 328,
															"src": "5374:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 340,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "5386:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 336,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 475,
														"src": "5330:26:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 341,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5330:69:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 313,
												"id": 342,
												"nodeType": "Return",
												"src": "5323:76:2"
											}
										]
									},
									"documentation": {
										"id": 301,
										"nodeType": "StructuredDocumentation",
										"src": "4718:237:2",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 344,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4969:21:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 310,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 303,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5008:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 344,
												"src": "5000:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 302,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5000:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 305,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5037:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 344,
												"src": "5024:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 304,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5024:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 307,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5059:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 344,
												"src": "5051:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 306,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5051:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 309,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5088:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 344,
												"src": "5074:26:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 308,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5074:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4990:116:2"
									},
									"returnParameters": {
										"id": 313,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 312,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 344,
												"src": "5125:12:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 311,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5125:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5124:14:2"
									},
									"scope": 520,
									"src": "4960:446:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 360,
										"nodeType": "Block",
										"src": "5683:97:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 355,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 347,
															"src": "5719:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 356,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 349,
															"src": "5727:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 357,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5733:39:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 354,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															361,
															390
														],
														"referencedDeclaration": 390,
														"src": "5700:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 358,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5700:73:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 353,
												"id": 359,
												"nodeType": "Return",
												"src": "5693:80:2"
											}
										]
									},
									"documentation": {
										"id": 345,
										"nodeType": "StructuredDocumentation",
										"src": "5412:166:2",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 361,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5592:18:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 350,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 347,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5619:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 361,
												"src": "5611:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 346,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5611:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 349,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5640:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 361,
												"src": "5627:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 348,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5627:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5610:35:2"
									},
									"returnParameters": {
										"id": 353,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 352,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 361,
												"src": "5669:12:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 351,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5669:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5668:14:2"
									},
									"scope": 520,
									"src": "5583:197:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 389,
										"nodeType": "Block",
										"src": "6122:168:2",
										"statements": [
											{
												"assignments": [
													374,
													376
												],
												"declarations": [
													{
														"constant": false,
														"id": 374,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "6138:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 389,
														"src": "6133:12:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 373,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6133:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 376,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "6160:10:2",
														"nodeType": "VariableDeclaration",
														"scope": 389,
														"src": "6147:23:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 375,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6147:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 381,
												"initialValue": {
													"arguments": [
														{
															"id": 379,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 366,
															"src": "6192:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 377,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 364,
															"src": "6174:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 378,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "6174:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 380,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6174:23:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6132:65:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 383,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 364,
															"src": "6241:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 384,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 374,
															"src": "6249:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 385,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 376,
															"src": "6258:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 386,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 368,
															"src": "6270:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 382,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 475,
														"src": "6214:26:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 387,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6214:69:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 372,
												"id": 388,
												"nodeType": "Return",
												"src": "6207:76:2"
											}
										]
									},
									"documentation": {
										"id": 362,
										"nodeType": "StructuredDocumentation",
										"src": "5786:173:2",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 390,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5973:18:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 369,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 364,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6009:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 390,
												"src": "6001:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 363,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6001:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 366,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6038:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 390,
												"src": "6025:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 365,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6025:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 368,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6066:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 390,
												"src": "6052:26:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 367,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6052:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5991:93:2"
									},
									"returnParameters": {
										"id": 372,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 371,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 390,
												"src": "6108:12:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 370,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6108:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6107:14:2"
									},
									"scope": 520,
									"src": "5964:326:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 406,
										"nodeType": "Block",
										"src": "6566:101:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 401,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 393,
															"src": "6604:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 402,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 395,
															"src": "6612:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
															"id": 403,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6618:41:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															},
															"value": "Address: low-level delegate call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															}
														],
														"id": 400,
														"name": "functionDelegateCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															407,
															436
														],
														"referencedDeclaration": 436,
														"src": "6583:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 404,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6583:77:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 399,
												"id": 405,
												"nodeType": "Return",
												"src": "6576:84:2"
											}
										]
									},
									"documentation": {
										"id": 391,
										"nodeType": "StructuredDocumentation",
										"src": "6296:168:2",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 407,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6478:20:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 396,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 393,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6507:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 407,
												"src": "6499:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 392,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6499:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 395,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6528:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 407,
												"src": "6515:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 394,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6515:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6498:35:2"
									},
									"returnParameters": {
										"id": 399,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 398,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 407,
												"src": "6552:12:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 397,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6552:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6551:14:2"
									},
									"scope": 520,
									"src": "6469:198:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 435,
										"nodeType": "Block",
										"src": "7008:170:2",
										"statements": [
											{
												"assignments": [
													420,
													422
												],
												"declarations": [
													{
														"constant": false,
														"id": 420,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "7024:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 435,
														"src": "7019:12:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 419,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "7019:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 422,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "7046:10:2",
														"nodeType": "VariableDeclaration",
														"scope": 435,
														"src": "7033:23:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 421,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "7033:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 427,
												"initialValue": {
													"arguments": [
														{
															"id": 425,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 412,
															"src": "7080:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 423,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 410,
															"src": "7060:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 424,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "7060:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 426,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7060:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7018:67:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 429,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 410,
															"src": "7129:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 430,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 420,
															"src": "7137:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 431,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 422,
															"src": "7146:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 432,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 414,
															"src": "7158:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 428,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 475,
														"src": "7102:26:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 433,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7102:69:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 418,
												"id": 434,
												"nodeType": "Return",
												"src": "7095:76:2"
											}
										]
									},
									"documentation": {
										"id": 408,
										"nodeType": "StructuredDocumentation",
										"src": "6673:175:2",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 436,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6862:20:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 415,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 410,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6900:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 436,
												"src": "6892:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 409,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6892:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 412,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6929:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 436,
												"src": "6916:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 411,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6916:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 414,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6957:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 436,
												"src": "6943:26:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 413,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6943:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6882:93:2"
									},
									"returnParameters": {
										"id": 418,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 417,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 436,
												"src": "6994:12:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 416,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6994:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6993:14:2"
									},
									"scope": 520,
									"src": "6853:325:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 474,
										"nodeType": "Block",
										"src": "7660:434:2",
										"statements": [
											{
												"condition": {
													"id": 450,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 441,
													"src": "7674:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 472,
													"nodeType": "Block",
													"src": "8030:58:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 468,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 443,
																		"src": "8052:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	{
																		"id": 469,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 445,
																		"src": "8064:12:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 467,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 519,
																	"src": "8044:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory,string memory) pure"
																	}
																},
																"id": 470,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8044:33:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 471,
															"nodeType": "ExpressionStatement",
															"src": "8044:33:2"
														}
													]
												},
												"id": 473,
												"nodeType": "IfStatement",
												"src": "7670:418:2",
												"trueBody": {
													"id": 466,
													"nodeType": "Block",
													"src": "7683:341:2",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 454,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 451,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 443,
																		"src": "7701:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 452,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "7701:17:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 453,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7722:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "7701:22:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 463,
															"nodeType": "IfStatement",
															"src": "7697:286:2",
															"trueBody": {
																"id": 462,
																"nodeType": "Block",
																"src": "7725:258:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 457,
																							"name": "target",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 439,
																							"src": "7927:6:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						],
																						"id": 456,
																						"name": "isContract",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 208,
																						"src": "7916:10:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																							"typeString": "function (address) view returns (bool)"
																						}
																					},
																					"id": 458,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "7916:18:2",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				{
																					"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
																					"id": 459,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "7936:31:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																						"typeString": "literal_string \"Address: call to non-contract\""
																					},
																					"value": "Address: call to non-contract"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					},
																					{
																						"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																						"typeString": "literal_string \"Address: call to non-contract\""
																					}
																				],
																				"id": 455,
																				"name": "require",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967278,
																					4294967278
																				],
																				"referencedDeclaration": 4294967278,
																				"src": "7908:7:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (bool,string memory) pure"
																				}
																			},
																			"id": 460,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7908:60:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 461,
																		"nodeType": "ExpressionStatement",
																		"src": "7908:60:2"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 464,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 443,
																"src": "8003:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 449,
															"id": 465,
															"nodeType": "Return",
															"src": "7996:17:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 437,
										"nodeType": "StructuredDocumentation",
										"src": "7184:277:2",
										"text": " @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n _Available since v4.8._"
									},
									"id": 475,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResultFromTarget",
									"nameLocation": "7475:26:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 446,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 439,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "7519:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 475,
												"src": "7511:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 438,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7511:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 441,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "7540:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 475,
												"src": "7535:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 440,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7535:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 443,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "7570:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 475,
												"src": "7557:23:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 442,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7557:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 445,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7604:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 475,
												"src": "7590:26:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 444,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7590:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7501:121:2"
									},
									"returnParameters": {
										"id": 449,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 448,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 475,
												"src": "7646:12:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 447,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7646:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7645:14:2"
									},
									"scope": 520,
									"src": "7466:628:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 498,
										"nodeType": "Block",
										"src": "8475:135:2",
										"statements": [
											{
												"condition": {
													"id": 487,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 478,
													"src": "8489:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 496,
													"nodeType": "Block",
													"src": "8546:58:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 492,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 480,
																		"src": "8568:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	{
																		"id": 493,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 482,
																		"src": "8580:12:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 491,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 519,
																	"src": "8560:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory,string memory) pure"
																	}
																},
																"id": 494,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8560:33:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 495,
															"nodeType": "ExpressionStatement",
															"src": "8560:33:2"
														}
													]
												},
												"id": 497,
												"nodeType": "IfStatement",
												"src": "8485:119:2",
												"trueBody": {
													"id": 490,
													"nodeType": "Block",
													"src": "8498:42:2",
													"statements": [
														{
															"expression": {
																"id": 488,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 480,
																"src": "8519:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 486,
															"id": 489,
															"nodeType": "Return",
															"src": "8512:17:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 476,
										"nodeType": "StructuredDocumentation",
										"src": "8100:210:2",
										"text": " @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason or using the provided one.\n _Available since v4.3._"
									},
									"id": 499,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "8324:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 483,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 478,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "8355:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 499,
												"src": "8350:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 477,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8350:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 480,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "8385:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 499,
												"src": "8372:23:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 479,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8372:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 482,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "8419:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 499,
												"src": "8405:26:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 481,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8405:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8340:97:2"
									},
									"returnParameters": {
										"id": 486,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 485,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 499,
												"src": "8461:12:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 484,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8461:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8460:14:2"
									},
									"scope": 520,
									"src": "8315:295:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 518,
										"nodeType": "Block",
										"src": "8699:457:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 509,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 506,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 501,
															"src": "8775:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 507,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "8775:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 508,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8795:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8775:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 516,
													"nodeType": "Block",
													"src": "9105:45:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 513,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 503,
																		"src": "9126:12:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 512,
																	"name": "revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967277,
																		4294967277
																	],
																	"referencedDeclaration": 4294967277,
																	"src": "9119:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (string memory) pure"
																	}
																},
																"id": 514,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9119:20:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 515,
															"nodeType": "ExpressionStatement",
															"src": "9119:20:2"
														}
													]
												},
												"id": 517,
												"nodeType": "IfStatement",
												"src": "8771:379:2",
												"trueBody": {
													"id": 511,
													"nodeType": "Block",
													"src": "8798:301:2",
													"statements": [
														{
															"AST": {
																"nodeType": "YulBlock",
																"src": "8956:133:2",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "8974:40:2",
																		"value": {
																			"arguments": [
																				{
																					"name": "returndata",
																					"nodeType": "YulIdentifier",
																					"src": "9003:10:2"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "8997:5:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8997:17:2"
																		},
																		"variables": [
																			{
																				"name": "returndata_size",
																				"nodeType": "YulTypedName",
																				"src": "8978:15:2",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "9042:2:2",
																							"type": "",
																							"value": "32"
																						},
																						{
																							"name": "returndata",
																							"nodeType": "YulIdentifier",
																							"src": "9046:10:2"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "9038:3:2"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "9038:19:2"
																				},
																				{
																					"name": "returndata_size",
																					"nodeType": "YulIdentifier",
																					"src": "9059:15:2"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "9031:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9031:44:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9031:44:2"
																	}
																]
															},
															"documentation": "@solidity memory-safe-assembly",
															"evmVersion": "london",
															"externalReferences": [
																{
																	"declaration": 501,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "9003:10:2",
																	"valueSize": 1
																},
																{
																	"declaration": 501,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "9046:10:2",
																	"valueSize": 1
																}
															],
															"id": 510,
															"nodeType": "InlineAssembly",
															"src": "8947:142:2"
														}
													]
												}
											}
										]
									},
									"id": 519,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revert",
									"nameLocation": "8625:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 504,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 501,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "8646:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 519,
												"src": "8633:23:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 500,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8633:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 503,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "8672:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 519,
												"src": "8658:26:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 502,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8658:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8632:53:2"
									},
									"returnParameters": {
										"id": 505,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8699:0:2"
									},
									"scope": 520,
									"src": "8616:540:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 521,
							"src": "194:8964:2",
							"usedErrors": []
						}
					],
					"src": "101:9058:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							542
						]
					},
					"id": 543,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 522,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:3"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 523,
								"nodeType": "StructuredDocumentation",
								"src": "111:496:3",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 542,
							"linearizedBaseContracts": [
								542
							],
							"name": "Context",
							"nameLocation": "626:7:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 531,
										"nodeType": "Block",
										"src": "702:34:3",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 528,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "719:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 529,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "719:10:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 527,
												"id": 530,
												"nodeType": "Return",
												"src": "712:17:3"
											}
										]
									},
									"id": 532,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "649:10:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 524,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "659:2:3"
									},
									"returnParameters": {
										"id": 527,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 526,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 532,
												"src": "693:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 525,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:9:3"
									},
									"scope": 542,
									"src": "640:96:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 540,
										"nodeType": "Block",
										"src": "809:32:3",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 537,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "826:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 538,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "826:8:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 536,
												"id": 539,
												"nodeType": "Return",
												"src": "819:15:3"
											}
										]
									},
									"id": 541,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "751:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 533,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "759:2:3"
									},
									"returnParameters": {
										"id": 536,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 535,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 541,
												"src": "793:14:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 534,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "793:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:16:3"
									},
									"scope": 542,
									"src": "742:99:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 543,
							"src": "608:235:3",
							"usedErrors": []
						}
					],
					"src": "86:758:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							854
						]
					},
					"id": 855,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 544,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "107:23:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 545,
								"nodeType": "StructuredDocumentation",
								"src": "285:196:4",
								"text": " @dev Wrappers over Solidity's arithmetic operations.\n NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n now has built in overflow checking."
							},
							"fullyImplemented": true,
							"id": 854,
							"linearizedBaseContracts": [
								854
							],
							"name": "SafeMath",
							"nameLocation": "490:8:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 576,
										"nodeType": "Block",
										"src": "717:140:4",
										"statements": [
											{
												"id": 575,
												"nodeType": "UncheckedBlock",
												"src": "727:124:4",
												"statements": [
													{
														"assignments": [
															558
														],
														"declarations": [
															{
																"constant": false,
																"id": 558,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "759:1:4",
																"nodeType": "VariableDeclaration",
																"scope": 575,
																"src": "751:9:4",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 557,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "751:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 562,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 561,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 559,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 548,
																"src": "763:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 560,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 550,
																"src": "767:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "763:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "751:17:4"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 565,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 563,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 558,
																"src": "786:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 564,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 548,
																"src": "790:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "786:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 570,
														"nodeType": "IfStatement",
														"src": "782:28:4",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 566,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "801:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 567,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "808:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 568,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "800:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 556,
															"id": 569,
															"nodeType": "Return",
															"src": "793:17:4"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 571,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "832:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 572,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 558,
																	"src": "838:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 573,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "831:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 556,
														"id": 574,
														"nodeType": "Return",
														"src": "824:16:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 546,
										"nodeType": "StructuredDocumentation",
										"src": "505:131:4",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 577,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "650:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 551,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 548,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "665:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 577,
												"src": "657:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 547,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 550,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "676:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 577,
												"src": "668:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 549,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "656:22:4"
									},
									"returnParameters": {
										"id": 556,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 553,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 577,
												"src": "702:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 552,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "702:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 555,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 577,
												"src": "708:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 554,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "708:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "701:15:4"
									},
									"scope": 854,
									"src": "641:216:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 604,
										"nodeType": "Block",
										"src": "1078:113:4",
										"statements": [
											{
												"id": 603,
												"nodeType": "UncheckedBlock",
												"src": "1088:97:4",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 591,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 589,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 582,
																"src": "1116:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 590,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 580,
																"src": "1120:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1116:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 596,
														"nodeType": "IfStatement",
														"src": "1112:28:4",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 592,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1131:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 593,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1138:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 594,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1130:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 588,
															"id": 595,
															"nodeType": "Return",
															"src": "1123:17:4"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 597,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1162:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 600,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 598,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 580,
																		"src": "1168:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 599,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 582,
																		"src": "1172:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1168:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 601,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1161:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 588,
														"id": 602,
														"nodeType": "Return",
														"src": "1154:20:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 578,
										"nodeType": "StructuredDocumentation",
										"src": "863:134:4",
										"text": " @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 605,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "1011:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 583,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 580,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1026:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 605,
												"src": "1018:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 579,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1018:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 582,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1037:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 605,
												"src": "1029:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 581,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1029:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1017:22:4"
									},
									"returnParameters": {
										"id": 588,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 585,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 605,
												"src": "1063:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 584,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1063:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 587,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 605,
												"src": "1069:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 586,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1069:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1062:15:4"
									},
									"scope": 854,
									"src": "1002:189:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 646,
										"nodeType": "Block",
										"src": "1415:417:4",
										"statements": [
											{
												"id": 645,
												"nodeType": "UncheckedBlock",
												"src": "1425:401:4",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 619,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 617,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 608,
																"src": "1683:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 618,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1688:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1683:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 624,
														"nodeType": "IfStatement",
														"src": "1679:28:4",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 620,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1699:4:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 621,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1705:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 622,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1698:9:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 616,
															"id": 623,
															"nodeType": "Return",
															"src": "1691:16:4"
														}
													},
													{
														"assignments": [
															626
														],
														"declarations": [
															{
																"constant": false,
																"id": 626,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1729:1:4",
																"nodeType": "VariableDeclaration",
																"scope": 645,
																"src": "1721:9:4",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 625,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1721:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 630,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 629,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 627,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 608,
																"src": "1733:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 628,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 610,
																"src": "1737:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1733:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1721:17:4"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 635,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 633,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 631,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 626,
																	"src": "1756:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 632,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 608,
																	"src": "1760:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1756:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 634,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 610,
																"src": "1765:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1756:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 640,
														"nodeType": "IfStatement",
														"src": "1752:33:4",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 636,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1776:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 637,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1783:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 638,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1775:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 616,
															"id": 639,
															"nodeType": "Return",
															"src": "1768:17:4"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 641,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1807:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 642,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 626,
																	"src": "1813:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 643,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1806:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 616,
														"id": 644,
														"nodeType": "Return",
														"src": "1799:16:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 606,
										"nodeType": "StructuredDocumentation",
										"src": "1197:137:4",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 647,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1348:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 611,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 608,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1363:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 647,
												"src": "1355:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 607,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1355:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 610,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1374:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 647,
												"src": "1366:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 609,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1366:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1354:22:4"
									},
									"returnParameters": {
										"id": 616,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 613,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 647,
												"src": "1400:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 612,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1400:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 615,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 647,
												"src": "1406:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 614,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1406:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1399:15:4"
									},
									"scope": 854,
									"src": "1339:493:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 674,
										"nodeType": "Block",
										"src": "2057:114:4",
										"statements": [
											{
												"id": 673,
												"nodeType": "UncheckedBlock",
												"src": "2067:98:4",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 661,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 659,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 652,
																"src": "2095:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 660,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2100:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2095:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 666,
														"nodeType": "IfStatement",
														"src": "2091:29:4",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 662,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2111:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 663,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2118:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 664,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2110:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 658,
															"id": 665,
															"nodeType": "Return",
															"src": "2103:17:4"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 667,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2142:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 670,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 668,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 650,
																		"src": "2148:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 669,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 652,
																		"src": "2152:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2148:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 671,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2141:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 658,
														"id": 672,
														"nodeType": "Return",
														"src": "2134:20:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 648,
										"nodeType": "StructuredDocumentation",
										"src": "1838:138:4",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 675,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1990:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 653,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 650,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2005:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 675,
												"src": "1997:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 649,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1997:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 652,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2016:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 675,
												"src": "2008:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 651,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2008:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1996:22:4"
									},
									"returnParameters": {
										"id": 658,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 655,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 675,
												"src": "2042:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 654,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2042:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 657,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 675,
												"src": "2048:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 656,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2048:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2041:15:4"
									},
									"scope": 854,
									"src": "1981:190:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 702,
										"nodeType": "Block",
										"src": "2406:114:4",
										"statements": [
											{
												"id": 701,
												"nodeType": "UncheckedBlock",
												"src": "2416:98:4",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 689,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 687,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 680,
																"src": "2444:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 688,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2449:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2444:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 694,
														"nodeType": "IfStatement",
														"src": "2440:29:4",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 690,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2460:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 691,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2467:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 692,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2459:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 686,
															"id": 693,
															"nodeType": "Return",
															"src": "2452:17:4"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 695,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2491:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 698,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 696,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 678,
																		"src": "2497:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 697,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 680,
																		"src": "2501:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2497:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 699,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2490:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 686,
														"id": 700,
														"nodeType": "Return",
														"src": "2483:20:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 676,
										"nodeType": "StructuredDocumentation",
										"src": "2177:148:4",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 703,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2339:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 681,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 678,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2354:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 703,
												"src": "2346:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 677,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2346:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 680,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2365:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 703,
												"src": "2357:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 679,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2357:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2345:22:4"
									},
									"returnParameters": {
										"id": 686,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 683,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 703,
												"src": "2391:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 682,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2391:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 685,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 703,
												"src": "2397:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 684,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2397:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2390:15:4"
									},
									"scope": 854,
									"src": "2330:190:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 717,
										"nodeType": "Block",
										"src": "2822:29:4",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 715,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 713,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 706,
														"src": "2839:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 714,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 708,
														"src": "2843:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2839:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 712,
												"id": 716,
												"nodeType": "Return",
												"src": "2832:12:4"
											}
										]
									},
									"documentation": {
										"id": 704,
										"nodeType": "StructuredDocumentation",
										"src": "2526:224:4",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 718,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "2764:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 709,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 706,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2776:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 718,
												"src": "2768:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 705,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2768:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 708,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2787:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 718,
												"src": "2779:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 707,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2779:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2767:22:4"
									},
									"returnParameters": {
										"id": 712,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 711,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 718,
												"src": "2813:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 710,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2813:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2812:9:4"
									},
									"scope": 854,
									"src": "2755:96:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 732,
										"nodeType": "Block",
										"src": "3189:29:4",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 730,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 728,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 721,
														"src": "3206:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 729,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 723,
														"src": "3210:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3206:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 727,
												"id": 731,
												"nodeType": "Return",
												"src": "3199:12:4"
											}
										]
									},
									"documentation": {
										"id": 719,
										"nodeType": "StructuredDocumentation",
										"src": "2857:260:4",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 733,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "3131:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 724,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 721,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3143:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 733,
												"src": "3135:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 720,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3135:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 723,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3154:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 733,
												"src": "3146:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 722,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3146:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3134:22:4"
									},
									"returnParameters": {
										"id": 727,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 726,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 733,
												"src": "3180:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 725,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3180:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3179:9:4"
									},
									"scope": 854,
									"src": "3122:96:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 747,
										"nodeType": "Block",
										"src": "3532:29:4",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 745,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 743,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 736,
														"src": "3549:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 744,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 738,
														"src": "3553:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3549:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 742,
												"id": 746,
												"nodeType": "Return",
												"src": "3542:12:4"
											}
										]
									},
									"documentation": {
										"id": 734,
										"nodeType": "StructuredDocumentation",
										"src": "3224:236:4",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 748,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nameLocation": "3474:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 739,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 736,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3486:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 748,
												"src": "3478:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 735,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3478:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 738,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3497:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 748,
												"src": "3489:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 737,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3489:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3477:22:4"
									},
									"returnParameters": {
										"id": 742,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 741,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 748,
												"src": "3523:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 740,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3523:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3522:9:4"
									},
									"scope": 854,
									"src": "3465:96:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 762,
										"nodeType": "Block",
										"src": "3917:29:4",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 760,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 758,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 751,
														"src": "3934:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 759,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 753,
														"src": "3938:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3934:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 757,
												"id": 761,
												"nodeType": "Return",
												"src": "3927:12:4"
											}
										]
									},
									"documentation": {
										"id": 749,
										"nodeType": "StructuredDocumentation",
										"src": "3567:278:4",
										"text": " @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator.\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 763,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "3859:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 754,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 751,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3871:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 763,
												"src": "3863:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 750,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3863:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 753,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3882:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 763,
												"src": "3874:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 752,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3874:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3862:22:4"
									},
									"returnParameters": {
										"id": 757,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 756,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 763,
												"src": "3908:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 755,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3908:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3907:9:4"
									},
									"scope": 854,
									"src": "3850:96:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 777,
										"nodeType": "Block",
										"src": "4466:29:4",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 775,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 773,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 766,
														"src": "4483:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 774,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 768,
														"src": "4487:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4483:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 772,
												"id": 776,
												"nodeType": "Return",
												"src": "4476:12:4"
											}
										]
									},
									"documentation": {
										"id": 764,
										"nodeType": "StructuredDocumentation",
										"src": "3952:442:4",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 778,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "4408:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 769,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 766,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4420:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 778,
												"src": "4412:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 765,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4412:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 768,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4431:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 778,
												"src": "4423:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 767,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4423:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4411:22:4"
									},
									"returnParameters": {
										"id": 772,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 771,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 778,
												"src": "4457:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 770,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4457:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4456:9:4"
									},
									"scope": 854,
									"src": "4399:96:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 802,
										"nodeType": "Block",
										"src": "5084:106:4",
										"statements": [
											{
												"id": 801,
												"nodeType": "UncheckedBlock",
												"src": "5094:90:4",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 793,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 791,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 783,
																		"src": "5126:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<=",
																	"rightExpression": {
																		"id": 792,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 781,
																		"src": "5131:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5126:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 794,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 785,
																	"src": "5134:12:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 790,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5118:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 795,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5118:29:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 796,
														"nodeType": "ExpressionStatement",
														"src": "5118:29:4"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 799,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 797,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 781,
																"src": "5168:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 798,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 783,
																"src": "5172:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5168:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 789,
														"id": 800,
														"nodeType": "Return",
														"src": "5161:12:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 779,
										"nodeType": "StructuredDocumentation",
										"src": "4501:453:4",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 803,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "4968:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 786,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 781,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4989:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 803,
												"src": "4981:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 780,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4981:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 783,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5008:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 803,
												"src": "5000:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 782,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5000:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 785,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5033:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 803,
												"src": "5019:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 784,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5019:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4971:80:4"
									},
									"returnParameters": {
										"id": 789,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 788,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 803,
												"src": "5075:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 787,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5075:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5074:9:4"
									},
									"scope": 854,
									"src": "4959:231:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 827,
										"nodeType": "Block",
										"src": "5799:105:4",
										"statements": [
											{
												"id": 826,
												"nodeType": "UncheckedBlock",
												"src": "5809:89:4",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 818,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 816,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 808,
																		"src": "5841:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 817,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5845:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5841:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 819,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 810,
																	"src": "5848:12:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 815,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5833:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 820,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5833:28:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 821,
														"nodeType": "ExpressionStatement",
														"src": "5833:28:4"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 824,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 822,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 806,
																"src": "5882:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 823,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 808,
																"src": "5886:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5882:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 814,
														"id": 825,
														"nodeType": "Return",
														"src": "5875:12:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 804,
										"nodeType": "StructuredDocumentation",
										"src": "5196:473:4",
										"text": " @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 828,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "5683:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 811,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 806,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "5704:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 828,
												"src": "5696:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 805,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5696:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 808,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5723:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 828,
												"src": "5715:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 807,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5715:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 810,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5748:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 828,
												"src": "5734:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 809,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5734:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5686:80:4"
									},
									"returnParameters": {
										"id": 814,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 813,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 828,
												"src": "5790:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 812,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5790:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5789:9:4"
									},
									"scope": 854,
									"src": "5674:230:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 852,
										"nodeType": "Block",
										"src": "6675:105:4",
										"statements": [
											{
												"id": 851,
												"nodeType": "UncheckedBlock",
												"src": "6685:89:4",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 843,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 841,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 833,
																		"src": "6717:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 842,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6721:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "6717:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 844,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 835,
																	"src": "6724:12:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 840,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "6709:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 845,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6709:28:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 846,
														"nodeType": "ExpressionStatement",
														"src": "6709:28:4"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 849,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 847,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 831,
																"src": "6758:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"id": 848,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 833,
																"src": "6762:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6758:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 839,
														"id": 850,
														"nodeType": "Return",
														"src": "6751:12:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 829,
										"nodeType": "StructuredDocumentation",
										"src": "5910:635:4",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 853,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "6559:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 836,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 831,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6580:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 853,
												"src": "6572:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 830,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6572:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 833,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "6599:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 853,
												"src": "6591:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 832,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6591:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 835,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6624:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 853,
												"src": "6610:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 834,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6610:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6562:80:4"
									},
									"returnParameters": {
										"id": 839,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 838,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 853,
												"src": "6666:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 837,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6666:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6665:9:4"
									},
									"scope": 854,
									"src": "6550:230:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 855,
							"src": "482:6300:4",
							"usedErrors": []
						}
					],
					"src": "107:6676:4"
				},
				"id": 4
			},
			"contracts/IPancakeV2Factory.sol": {
				"ast": {
					"absolutePath": "contracts/IPancakeV2Factory.sol",
					"exportedSymbols": {
						"IPancakeV2Factory": [
							917
						]
					},
					"id": 918,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 856,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "31:23:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 917,
							"linearizedBaseContracts": [
								917
							],
							"name": "IPancakeV2Factory",
							"nameLocation": "66:17:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"id": 866,
									"name": "PairCreated",
									"nameLocation": "96:11:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 865,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 858,
												"indexed": true,
												"mutability": "mutable",
												"name": "token0",
												"nameLocation": "124:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 866,
												"src": "108:22:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 857,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "108:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 860,
												"indexed": true,
												"mutability": "mutable",
												"name": "token1",
												"nameLocation": "148:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 866,
												"src": "132:22:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 859,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "132:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 862,
												"indexed": false,
												"mutability": "mutable",
												"name": "pair",
												"nameLocation": "164:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 866,
												"src": "156:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 861,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "156:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 864,
												"indexed": false,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 866,
												"src": "170:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 863,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "170:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "107:68:5"
									},
									"src": "90:86:5"
								},
								{
									"functionSelector": "017e7e58",
									"id": 871,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "feeTo",
									"nameLocation": "191:5:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 867,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "196:2:5"
									},
									"returnParameters": {
										"id": 870,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 869,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 871,
												"src": "222:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 868,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "222:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "221:9:5"
									},
									"scope": 917,
									"src": "182:49:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "094b7415",
									"id": 876,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "feeToSetter",
									"nameLocation": "245:11:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 872,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "256:2:5"
									},
									"returnParameters": {
										"id": 875,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 874,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "282:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 873,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "282:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "281:9:5"
									},
									"scope": 917,
									"src": "236:55:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "e6a43905",
									"id": 885,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getPair",
									"nameLocation": "306:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 881,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 878,
												"mutability": "mutable",
												"name": "tokenA",
												"nameLocation": "322:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 885,
												"src": "314:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 877,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "314:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 880,
												"mutability": "mutable",
												"name": "tokenB",
												"nameLocation": "338:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 885,
												"src": "330:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 879,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "330:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "313:32:5"
									},
									"returnParameters": {
										"id": 884,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 883,
												"mutability": "mutable",
												"name": "pair",
												"nameLocation": "377:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 885,
												"src": "369:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 882,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "369:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "368:14:5"
									},
									"scope": 917,
									"src": "297:86:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "1e3dd18b",
									"id": 892,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allPairs",
									"nameLocation": "397:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 888,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 887,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 892,
												"src": "406:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 886,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "406:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "405:6:5"
									},
									"returnParameters": {
										"id": 891,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 890,
												"mutability": "mutable",
												"name": "pair",
												"nameLocation": "443:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 892,
												"src": "435:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 889,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "435:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "434:14:5"
									},
									"scope": 917,
									"src": "388:61:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "574f2ba3",
									"id": 897,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allPairsLength",
									"nameLocation": "463:14:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 893,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "477:2:5"
									},
									"returnParameters": {
										"id": 896,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 895,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 897,
												"src": "503:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 894,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "503:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "502:6:5"
									},
									"scope": 917,
									"src": "454:55:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "c9c65396",
									"id": 906,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "createPair",
									"nameLocation": "524:10:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 902,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 899,
												"mutability": "mutable",
												"name": "tokenA",
												"nameLocation": "543:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 906,
												"src": "535:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 898,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "535:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 901,
												"mutability": "mutable",
												"name": "tokenB",
												"nameLocation": "559:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 906,
												"src": "551:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 900,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "551:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "534:32:5"
									},
									"returnParameters": {
										"id": 905,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 904,
												"mutability": "mutable",
												"name": "pair",
												"nameLocation": "593:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 906,
												"src": "585:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 903,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "585:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "584:14:5"
									},
									"scope": 917,
									"src": "515:84:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "f46901ed",
									"id": 911,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setFeeTo",
									"nameLocation": "614:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 909,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 908,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 911,
												"src": "623:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 907,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "623:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "622:9:5"
									},
									"returnParameters": {
										"id": 910,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "640:0:5"
									},
									"scope": 917,
									"src": "605:36:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "a2e74af6",
									"id": 916,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setFeeToSetter",
									"nameLocation": "655:14:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 914,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 913,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 916,
												"src": "670:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 912,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "670:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "669:9:5"
									},
									"returnParameters": {
										"id": 915,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "687:0:5"
									},
									"scope": 917,
									"src": "646:42:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 918,
							"src": "56:634:5",
							"usedErrors": []
						}
					],
					"src": "31:659:5"
				},
				"id": 5
			},
			"contracts/IPancakeV2Pair.sol": {
				"ast": {
					"absolutePath": "contracts/IPancakeV2Pair.sol",
					"exportedSymbols": {
						"IPancakeV2Pair": [
							1159
						]
					},
					"id": 1160,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 919,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "31:23:6"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1159,
							"linearizedBaseContracts": [
								1159
							],
							"name": "IPancakeV2Pair",
							"nameLocation": "66:14:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"id": 927,
									"name": "Approval",
									"nameLocation": "93:8:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 926,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 921,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "118:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 927,
												"src": "102:21:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 920,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "102:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 923,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "141:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 927,
												"src": "125:23:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 922,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "125:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 925,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "155:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 927,
												"src": "150:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 924,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "150:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "101:60:6"
									},
									"src": "87:75:6"
								},
								{
									"anonymous": false,
									"id": 935,
									"name": "Transfer",
									"nameLocation": "173:8:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 934,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 929,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "198:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 935,
												"src": "182:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 928,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "182:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 931,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "220:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 935,
												"src": "204:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 930,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "204:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 933,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "229:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 935,
												"src": "224:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 932,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "224:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "181:54:6"
									},
									"src": "167:69:6"
								},
								{
									"functionSelector": "06fdde03",
									"id": 940,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "251:4:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 936,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "255:2:6"
									},
									"returnParameters": {
										"id": 939,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 938,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 940,
												"src": "281:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 937,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "281:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "280:15:6"
									},
									"scope": 1159,
									"src": "242:54:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "95d89b41",
									"id": 945,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "310:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 941,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "316:2:6"
									},
									"returnParameters": {
										"id": 944,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 943,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 945,
												"src": "342:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 942,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "342:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "341:15:6"
									},
									"scope": 1159,
									"src": "301:56:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "313ce567",
									"id": 950,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "371:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 946,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "379:2:6"
									},
									"returnParameters": {
										"id": 949,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 948,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 950,
												"src": "405:5:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 947,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "405:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "404:7:6"
									},
									"scope": 1159,
									"src": "362:50:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "18160ddd",
									"id": 955,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "426:11:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 951,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "437:2:6"
									},
									"returnParameters": {
										"id": 954,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 953,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 955,
												"src": "463:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 952,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "463:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "462:6:6"
									},
									"scope": 1159,
									"src": "417:52:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "70a08231",
									"id": 962,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "483:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 958,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 957,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "501:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 962,
												"src": "493:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 956,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "493:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "492:15:6"
									},
									"returnParameters": {
										"id": 961,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 960,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 962,
												"src": "531:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 959,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "531:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "530:6:6"
									},
									"scope": 1159,
									"src": "474:63:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "dd62ed3e",
									"id": 971,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "551:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 967,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 964,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "569:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 971,
												"src": "561:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 963,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "561:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 966,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "584:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 971,
												"src": "576:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 965,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "576:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "560:32:6"
									},
									"returnParameters": {
										"id": 970,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 969,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 971,
												"src": "616:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 968,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "616:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "615:6:6"
									},
									"scope": 1159,
									"src": "542:80:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "095ea7b3",
									"id": 980,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "637:7:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 976,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 973,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "653:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 980,
												"src": "645:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 972,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "645:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 975,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "667:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 980,
												"src": "662:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 974,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "662:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "644:29:6"
									},
									"returnParameters": {
										"id": 979,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 978,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 980,
												"src": "692:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 977,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "692:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "691:6:6"
									},
									"scope": 1159,
									"src": "628:70:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "a9059cbb",
									"id": 989,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "712:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 985,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 982,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "729:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 989,
												"src": "721:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 981,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "721:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 984,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "738:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 989,
												"src": "733:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 983,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "733:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "720:24:6"
									},
									"returnParameters": {
										"id": 988,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 987,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 989,
												"src": "763:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 986,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "763:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "762:6:6"
									},
									"scope": 1159,
									"src": "703:66:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "23b872dd",
									"id": 1000,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "783:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 996,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 991,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "804:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1000,
												"src": "796:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 990,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "796:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 993,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "818:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1000,
												"src": "810:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 992,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "810:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 995,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "827:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1000,
												"src": "822:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 994,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "822:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "795:38:6"
									},
									"returnParameters": {
										"id": 999,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 998,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1000,
												"src": "852:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 997,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "852:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "851:6:6"
									},
									"scope": 1159,
									"src": "774:84:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "3644e515",
									"id": 1005,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "DOMAIN_SEPARATOR",
									"nameLocation": "873:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1001,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "889:2:6"
									},
									"returnParameters": {
										"id": 1004,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1003,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1005,
												"src": "915:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1002,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "915:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "914:9:6"
									},
									"scope": 1159,
									"src": "864:60:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "30adf81f",
									"id": 1010,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "PERMIT_TYPEHASH",
									"nameLocation": "938:15:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1006,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "953:2:6"
									},
									"returnParameters": {
										"id": 1009,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1008,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1010,
												"src": "979:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1007,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "979:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "978:9:6"
									},
									"scope": 1159,
									"src": "929:59:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "7ecebe00",
									"id": 1017,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "nonces",
									"nameLocation": "1002:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1013,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1012,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1017:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1017,
												"src": "1009:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1011,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1009:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1008:15:6"
									},
									"returnParameters": {
										"id": 1016,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1015,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1017,
												"src": "1047:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1014,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1047:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1046:6:6"
									},
									"scope": 1159,
									"src": "993:60:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "d505accf",
									"id": 1034,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "permit",
									"nameLocation": "1068:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1032,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1019,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1083:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1034,
												"src": "1075:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1018,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1075:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1021,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1098:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1034,
												"src": "1090:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1020,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1090:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1023,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1112:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1034,
												"src": "1107:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1022,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1107:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1025,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "1124:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1034,
												"src": "1119:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1024,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1119:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1027,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "1140:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1034,
												"src": "1134:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1026,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1134:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1029,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "1151:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1034,
												"src": "1143:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1028,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1143:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1031,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "1162:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1034,
												"src": "1154:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1030,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1154:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1074:90:6"
									},
									"returnParameters": {
										"id": 1033,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1173:0:6"
									},
									"scope": 1159,
									"src": "1059:115:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"id": 1042,
									"name": "Mint",
									"nameLocation": "1186:4:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1041,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1036,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1207:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1042,
												"src": "1191:22:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1035,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1191:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1038,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "1220:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1042,
												"src": "1215:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1037,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1215:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1040,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "1234:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1042,
												"src": "1229:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1039,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1229:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1190:52:6"
									},
									"src": "1180:63:6"
								},
								{
									"anonymous": false,
									"id": 1052,
									"name": "Burn",
									"nameLocation": "1254:4:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1051,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1044,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1275:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1052,
												"src": "1259:22:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1043,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1259:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1046,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "1288:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1052,
												"src": "1283:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1045,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1283:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1048,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "1302:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1052,
												"src": "1297:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1047,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1297:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1050,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1327:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1052,
												"src": "1311:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1049,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1311:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1258:72:6"
									},
									"src": "1248:83:6"
								},
								{
									"anonymous": false,
									"id": 1066,
									"name": "Swap",
									"nameLocation": "1342:4:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1065,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1054,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1372:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1066,
												"src": "1356:22:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1053,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1356:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1056,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0In",
												"nameLocation": "1393:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 1066,
												"src": "1388:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1055,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1388:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1058,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1In",
												"nameLocation": "1417:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 1066,
												"src": "1412:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1057,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1412:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1060,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0Out",
												"nameLocation": "1441:10:6",
												"nodeType": "VariableDeclaration",
												"scope": 1066,
												"src": "1436:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1059,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1436:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1062,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1Out",
												"nameLocation": "1466:10:6",
												"nodeType": "VariableDeclaration",
												"scope": 1066,
												"src": "1461:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1061,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1461:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1064,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1502:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1066,
												"src": "1486:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1063,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1486:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1346:164:6"
									},
									"src": "1336:175:6"
								},
								{
									"anonymous": false,
									"id": 1072,
									"name": "Sync",
									"nameLocation": "1522:4:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1071,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1068,
												"indexed": false,
												"mutability": "mutable",
												"name": "reserve0",
												"nameLocation": "1535:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1072,
												"src": "1527:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint112",
													"typeString": "uint112"
												},
												"typeName": {
													"id": 1067,
													"name": "uint112",
													"nodeType": "ElementaryTypeName",
													"src": "1527:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1070,
												"indexed": false,
												"mutability": "mutable",
												"name": "reserve1",
												"nameLocation": "1553:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1072,
												"src": "1545:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint112",
													"typeString": "uint112"
												},
												"typeName": {
													"id": 1069,
													"name": "uint112",
													"nodeType": "ElementaryTypeName",
													"src": "1545:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1526:36:6"
									},
									"src": "1516:47:6"
								},
								{
									"functionSelector": "ba9a7a56",
									"id": 1077,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "MINIMUM_LIQUIDITY",
									"nameLocation": "1578:17:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1073,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1595:2:6"
									},
									"returnParameters": {
										"id": 1076,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1075,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1077,
												"src": "1621:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1074,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1621:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1620:6:6"
									},
									"scope": 1159,
									"src": "1569:58:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "c45a0155",
									"id": 1082,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "factory",
									"nameLocation": "1641:7:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1078,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1648:2:6"
									},
									"returnParameters": {
										"id": 1081,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1080,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1082,
												"src": "1674:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1079,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1674:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1673:9:6"
									},
									"scope": 1159,
									"src": "1632:51:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "0dfe1681",
									"id": 1087,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "token0",
									"nameLocation": "1697:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1083,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1703:2:6"
									},
									"returnParameters": {
										"id": 1086,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1085,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1087,
												"src": "1729:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1084,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1729:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1728:9:6"
									},
									"scope": 1159,
									"src": "1688:50:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "d21220a7",
									"id": 1092,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "token1",
									"nameLocation": "1752:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1088,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1758:2:6"
									},
									"returnParameters": {
										"id": 1091,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1090,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1092,
												"src": "1784:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1089,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1784:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1783:9:6"
									},
									"scope": 1159,
									"src": "1743:50:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "0902f1ac",
									"id": 1101,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getReserves",
									"nameLocation": "1807:11:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1093,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1818:2:6"
									},
									"returnParameters": {
										"id": 1100,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1095,
												"mutability": "mutable",
												"name": "reserve0",
												"nameLocation": "1852:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1101,
												"src": "1844:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint112",
													"typeString": "uint112"
												},
												"typeName": {
													"id": 1094,
													"name": "uint112",
													"nodeType": "ElementaryTypeName",
													"src": "1844:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1097,
												"mutability": "mutable",
												"name": "reserve1",
												"nameLocation": "1870:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1101,
												"src": "1862:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint112",
													"typeString": "uint112"
												},
												"typeName": {
													"id": 1096,
													"name": "uint112",
													"nodeType": "ElementaryTypeName",
													"src": "1862:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1099,
												"mutability": "mutable",
												"name": "blockTimestampLast",
												"nameLocation": "1887:18:6",
												"nodeType": "VariableDeclaration",
												"scope": 1101,
												"src": "1880:25:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 1098,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "1880:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1843:63:6"
									},
									"scope": 1159,
									"src": "1798:109:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "5909c0d5",
									"id": 1106,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "price0CumulativeLast",
									"nameLocation": "1921:20:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1102,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1941:2:6"
									},
									"returnParameters": {
										"id": 1105,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1104,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1106,
												"src": "1967:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1103,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1967:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1966:6:6"
									},
									"scope": 1159,
									"src": "1912:61:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "5a3d5493",
									"id": 1111,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "price1CumulativeLast",
									"nameLocation": "1987:20:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1107,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2007:2:6"
									},
									"returnParameters": {
										"id": 1110,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1109,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1111,
												"src": "2033:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1108,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2033:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2032:6:6"
									},
									"scope": 1159,
									"src": "1978:61:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "7464fc3d",
									"id": 1116,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "kLast",
									"nameLocation": "2053:5:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1112,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2058:2:6"
									},
									"returnParameters": {
										"id": 1115,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1114,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1116,
												"src": "2084:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1113,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2084:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2083:6:6"
									},
									"scope": 1159,
									"src": "2044:46:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "6a627842",
									"id": 1123,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "mint",
									"nameLocation": "2105:4:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1119,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1118,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2118:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1123,
												"src": "2110:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1117,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2110:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2109:12:6"
									},
									"returnParameters": {
										"id": 1122,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1121,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "2145:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 1123,
												"src": "2140:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1120,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2140:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2139:16:6"
									},
									"scope": 1159,
									"src": "2096:60:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "89afcb44",
									"id": 1132,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nameLocation": "2170:4:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1126,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1125,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2183:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1132,
												"src": "2175:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1124,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2175:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2174:12:6"
									},
									"returnParameters": {
										"id": 1131,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1128,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "2210:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1132,
												"src": "2205:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1127,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2205:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1130,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "2224:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1132,
												"src": "2219:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1129,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2219:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2204:28:6"
									},
									"scope": 1159,
									"src": "2161:72:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "022c0d9f",
									"id": 1143,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swap",
									"nameLocation": "2247:4:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1141,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1134,
												"mutability": "mutable",
												"name": "amount0Out",
												"nameLocation": "2257:10:6",
												"nodeType": "VariableDeclaration",
												"scope": 1143,
												"src": "2252:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1133,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2252:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1136,
												"mutability": "mutable",
												"name": "amount1Out",
												"nameLocation": "2274:10:6",
												"nodeType": "VariableDeclaration",
												"scope": 1143,
												"src": "2269:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1135,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2269:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1138,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2294:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1143,
												"src": "2286:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1137,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2286:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1140,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2313:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1143,
												"src": "2298:19:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1139,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2298:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2251:67:6"
									},
									"returnParameters": {
										"id": 1142,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2327:0:6"
									},
									"scope": 1159,
									"src": "2238:90:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "bc25cf77",
									"id": 1148,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "skim",
									"nameLocation": "2342:4:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1146,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1145,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2355:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1148,
												"src": "2347:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1144,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2347:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2346:12:6"
									},
									"returnParameters": {
										"id": 1147,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2367:0:6"
									},
									"scope": 1159,
									"src": "2333:35:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "fff6cae9",
									"id": 1151,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "sync",
									"nameLocation": "2382:4:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1149,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2386:2:6"
									},
									"returnParameters": {
										"id": 1150,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2397:0:6"
									},
									"scope": 1159,
									"src": "2373:25:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "485cc955",
									"id": 1158,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "initialize",
									"nameLocation": "2413:10:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1156,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1153,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1158,
												"src": "2424:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2424:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1155,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1158,
												"src": "2433:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1154,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2433:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2423:18:6"
									},
									"returnParameters": {
										"id": 1157,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2450:0:6"
									},
									"scope": 1159,
									"src": "2404:47:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1160,
							"src": "56:2397:6",
							"usedErrors": []
						}
					],
					"src": "31:2422:6"
				},
				"id": 6
			},
			"contracts/IPancakeV2Router01.sol": {
				"ast": {
					"absolutePath": "contracts/IPancakeV2Router01.sol",
					"exportedSymbols": {
						"IPancakeV2Router01": [
							1467
						]
					},
					"id": 1468,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1161,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "31:23:7"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1467,
							"linearizedBaseContracts": [
								1467
							],
							"name": "IPancakeV2Router01",
							"nameLocation": "66:18:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "c45a0155",
									"id": 1166,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "factory",
									"nameLocation": "100:7:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1162,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "107:2:7"
									},
									"returnParameters": {
										"id": 1165,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1164,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1166,
												"src": "133:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1163,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "133:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "132:9:7"
									},
									"scope": 1467,
									"src": "91:51:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "ad5c4648",
									"id": 1171,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "WETH",
									"nameLocation": "156:4:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1167,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "160:2:7"
									},
									"returnParameters": {
										"id": 1170,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1169,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1171,
												"src": "186:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1168,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "186:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "185:9:7"
									},
									"scope": 1467,
									"src": "147:48:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "e8e33700",
									"id": 1196,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "addLiquidity",
									"nameLocation": "210:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1188,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1173,
												"mutability": "mutable",
												"name": "tokenA",
												"nameLocation": "240:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1196,
												"src": "232:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1172,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "232:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1175,
												"mutability": "mutable",
												"name": "tokenB",
												"nameLocation": "264:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1196,
												"src": "256:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1174,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "256:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1177,
												"mutability": "mutable",
												"name": "amountADesired",
												"nameLocation": "285:14:7",
												"nodeType": "VariableDeclaration",
												"scope": 1196,
												"src": "280:19:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1176,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "280:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1179,
												"mutability": "mutable",
												"name": "amountBDesired",
												"nameLocation": "314:14:7",
												"nodeType": "VariableDeclaration",
												"scope": 1196,
												"src": "309:19:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1178,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "309:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1181,
												"mutability": "mutable",
												"name": "amountAMin",
												"nameLocation": "343:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 1196,
												"src": "338:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1180,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "338:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1183,
												"mutability": "mutable",
												"name": "amountBMin",
												"nameLocation": "368:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 1196,
												"src": "363:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1182,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "363:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1185,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "396:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 1196,
												"src": "388:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1184,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "388:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1187,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "413:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1196,
												"src": "408:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1186,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "408:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "222:205:7"
									},
									"returnParameters": {
										"id": 1195,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1190,
												"mutability": "mutable",
												"name": "amountA",
												"nameLocation": "451:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1196,
												"src": "446:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1189,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "446:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1192,
												"mutability": "mutable",
												"name": "amountB",
												"nameLocation": "465:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1196,
												"src": "460:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1191,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "460:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1194,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "479:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 1196,
												"src": "474:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1193,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "474:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "445:44:7"
									},
									"scope": 1467,
									"src": "201:289:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "f305d719",
									"id": 1217,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "addLiquidityETH",
									"nameLocation": "504:15:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1209,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1198,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "537:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1217,
												"src": "529:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1197,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "529:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1200,
												"mutability": "mutable",
												"name": "amountTokenDesired",
												"nameLocation": "557:18:7",
												"nodeType": "VariableDeclaration",
												"scope": 1217,
												"src": "552:23:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1199,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "552:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1202,
												"mutability": "mutable",
												"name": "amountTokenMin",
												"nameLocation": "590:14:7",
												"nodeType": "VariableDeclaration",
												"scope": 1217,
												"src": "585:19:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1201,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "585:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1204,
												"mutability": "mutable",
												"name": "amountETHMin",
												"nameLocation": "619:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 1217,
												"src": "614:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1203,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "614:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1206,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "649:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 1217,
												"src": "641:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1205,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "641:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1208,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "666:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1217,
												"src": "661:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1207,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "661:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "519:161:7"
									},
									"returnParameters": {
										"id": 1216,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1211,
												"mutability": "mutable",
												"name": "amountToken",
												"nameLocation": "712:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 1217,
												"src": "707:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1210,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "707:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1213,
												"mutability": "mutable",
												"name": "amountETH",
												"nameLocation": "730:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 1217,
												"src": "725:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1212,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "725:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1215,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "746:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 1217,
												"src": "741:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1214,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "741:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "706:50:7"
									},
									"scope": 1467,
									"src": "495:262:7",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "baa2abde",
									"id": 1238,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "removeLiquidity",
									"nameLocation": "771:15:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1232,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1219,
												"mutability": "mutable",
												"name": "tokenA",
												"nameLocation": "804:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1238,
												"src": "796:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1218,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "796:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1221,
												"mutability": "mutable",
												"name": "tokenB",
												"nameLocation": "828:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1238,
												"src": "820:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1220,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1223,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "849:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 1238,
												"src": "844:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1222,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "844:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1225,
												"mutability": "mutable",
												"name": "amountAMin",
												"nameLocation": "873:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 1238,
												"src": "868:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1224,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "868:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1227,
												"mutability": "mutable",
												"name": "amountBMin",
												"nameLocation": "898:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 1238,
												"src": "893:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1226,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "893:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1229,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "926:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 1238,
												"src": "918:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1228,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "918:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1231,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "943:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1238,
												"src": "938:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1230,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "938:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "786:171:7"
									},
									"returnParameters": {
										"id": 1237,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1234,
												"mutability": "mutable",
												"name": "amountA",
												"nameLocation": "981:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1238,
												"src": "976:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1233,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "976:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1236,
												"mutability": "mutable",
												"name": "amountB",
												"nameLocation": "995:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1238,
												"src": "990:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1235,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "990:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "975:28:7"
									},
									"scope": 1467,
									"src": "762:242:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "02751cec",
									"id": 1257,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "removeLiquidityETH",
									"nameLocation": "1018:18:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1251,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1240,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1054:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1257,
												"src": "1046:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1239,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1046:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1242,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "1074:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 1257,
												"src": "1069:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1241,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1069:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1244,
												"mutability": "mutable",
												"name": "amountTokenMin",
												"nameLocation": "1098:14:7",
												"nodeType": "VariableDeclaration",
												"scope": 1257,
												"src": "1093:19:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1243,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1093:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1246,
												"mutability": "mutable",
												"name": "amountETHMin",
												"nameLocation": "1127:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 1257,
												"src": "1122:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1245,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1122:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1248,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1157:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 1257,
												"src": "1149:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1247,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1149:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1250,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "1174:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1257,
												"src": "1169:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1249,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1169:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1036:152:7"
									},
									"returnParameters": {
										"id": 1256,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1253,
												"mutability": "mutable",
												"name": "amountToken",
												"nameLocation": "1212:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 1257,
												"src": "1207:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1252,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1207:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1255,
												"mutability": "mutable",
												"name": "amountETH",
												"nameLocation": "1230:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 1257,
												"src": "1225:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1254,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1225:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1206:34:7"
									},
									"scope": 1467,
									"src": "1009:232:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "2195995c",
									"id": 1286,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "removeLiquidityWithPermit",
									"nameLocation": "1255:25:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1280,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1259,
												"mutability": "mutable",
												"name": "tokenA",
												"nameLocation": "1298:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1286,
												"src": "1290:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1258,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1290:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1261,
												"mutability": "mutable",
												"name": "tokenB",
												"nameLocation": "1322:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1286,
												"src": "1314:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1260,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1314:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1263,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "1343:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 1286,
												"src": "1338:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1262,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1338:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1265,
												"mutability": "mutable",
												"name": "amountAMin",
												"nameLocation": "1367:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 1286,
												"src": "1362:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1264,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1362:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1267,
												"mutability": "mutable",
												"name": "amountBMin",
												"nameLocation": "1392:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 1286,
												"src": "1387:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1266,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1387:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1269,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1420:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 1286,
												"src": "1412:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1268,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1412:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1271,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "1437:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1286,
												"src": "1432:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1270,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1432:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1273,
												"mutability": "mutable",
												"name": "approveMax",
												"nameLocation": "1460:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 1286,
												"src": "1455:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1272,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1455:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1275,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "1478:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1286,
												"src": "1472:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1274,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1472:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1277,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "1489:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1286,
												"src": "1481:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1276,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1481:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1279,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "1500:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1286,
												"src": "1492:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1278,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1492:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1280:227:7"
									},
									"returnParameters": {
										"id": 1285,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1282,
												"mutability": "mutable",
												"name": "amountA",
												"nameLocation": "1531:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1286,
												"src": "1526:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1281,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1526:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1284,
												"mutability": "mutable",
												"name": "amountB",
												"nameLocation": "1545:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1286,
												"src": "1540:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1283,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1540:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1525:28:7"
									},
									"scope": 1467,
									"src": "1246:308:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "ded9382a",
									"id": 1313,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "removeLiquidityETHWithPermit",
									"nameLocation": "1568:28:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1307,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1288,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1614:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1313,
												"src": "1606:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1287,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1606:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1290,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "1634:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 1313,
												"src": "1629:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1289,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1629:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1292,
												"mutability": "mutable",
												"name": "amountTokenMin",
												"nameLocation": "1658:14:7",
												"nodeType": "VariableDeclaration",
												"scope": 1313,
												"src": "1653:19:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1291,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1653:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1294,
												"mutability": "mutable",
												"name": "amountETHMin",
												"nameLocation": "1687:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 1313,
												"src": "1682:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1293,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1682:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1296,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1717:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 1313,
												"src": "1709:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1295,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1709:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1298,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "1734:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1313,
												"src": "1729:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1297,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1729:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1300,
												"mutability": "mutable",
												"name": "approveMax",
												"nameLocation": "1757:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 1313,
												"src": "1752:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1299,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1752:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1302,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "1775:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1313,
												"src": "1769:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1301,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1769:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1304,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "1786:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1313,
												"src": "1778:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1303,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1778:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1306,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "1797:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1313,
												"src": "1789:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1305,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1789:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1596:208:7"
									},
									"returnParameters": {
										"id": 1312,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1309,
												"mutability": "mutable",
												"name": "amountToken",
												"nameLocation": "1828:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 1313,
												"src": "1823:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1308,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1823:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1311,
												"mutability": "mutable",
												"name": "amountETH",
												"nameLocation": "1846:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 1313,
												"src": "1841:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1310,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1841:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1822:34:7"
									},
									"scope": 1467,
									"src": "1559:298:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "38ed1739",
									"id": 1330,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapExactTokensForTokens",
									"nameLocation": "1871:24:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1325,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1315,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "1910:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1330,
												"src": "1905:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1314,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1905:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1317,
												"mutability": "mutable",
												"name": "amountOutMin",
												"nameLocation": "1933:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 1330,
												"src": "1928:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1316,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1928:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1320,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "1974:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1330,
												"src": "1955:23:7",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1318,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "1955:7:7",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1319,
													"nodeType": "ArrayTypeName",
													"src": "1955:9:7",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1322,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1996:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 1330,
												"src": "1988:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1321,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1988:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1324,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "2013:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1330,
												"src": "2008:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1323,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2008:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1895:132:7"
									},
									"returnParameters": {
										"id": 1329,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1328,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "2060:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1330,
												"src": "2046:21:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1326,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "2046:4:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1327,
													"nodeType": "ArrayTypeName",
													"src": "2046:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2045:23:7"
									},
									"scope": 1467,
									"src": "1862:207:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "8803dbee",
									"id": 1347,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapTokensForExactTokens",
									"nameLocation": "2083:24:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1342,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1332,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "2122:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 1347,
												"src": "2117:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1331,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2117:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1334,
												"mutability": "mutable",
												"name": "amountInMax",
												"nameLocation": "2146:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 1347,
												"src": "2141:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1333,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2141:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1337,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "2186:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1347,
												"src": "2167:23:7",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1335,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2167:7:7",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1336,
													"nodeType": "ArrayTypeName",
													"src": "2167:9:7",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1339,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2208:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 1347,
												"src": "2200:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1338,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2200:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1341,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "2225:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1347,
												"src": "2220:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1340,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2220:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2107:132:7"
									},
									"returnParameters": {
										"id": 1346,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1345,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "2272:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1347,
												"src": "2258:21:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1343,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "2258:4:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1344,
													"nodeType": "ArrayTypeName",
													"src": "2258:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2257:23:7"
									},
									"scope": 1467,
									"src": "2074:207:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "7ff36ab5",
									"id": 1362,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapExactETHForTokens",
									"nameLocation": "2295:21:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1357,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1349,
												"mutability": "mutable",
												"name": "amountOutMin",
												"nameLocation": "2322:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 1362,
												"src": "2317:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1348,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2317:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1352,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "2355:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1362,
												"src": "2336:23:7",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1350,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2336:7:7",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1351,
													"nodeType": "ArrayTypeName",
													"src": "2336:9:7",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1354,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2369:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 1362,
												"src": "2361:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1353,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2361:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1356,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "2378:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1362,
												"src": "2373:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1355,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2373:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2316:71:7"
									},
									"returnParameters": {
										"id": 1361,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1360,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "2440:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1362,
												"src": "2426:21:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1358,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "2426:4:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1359,
													"nodeType": "ArrayTypeName",
													"src": "2426:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2425:23:7"
									},
									"scope": 1467,
									"src": "2286:163:7",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "4a25d94a",
									"id": 1379,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapTokensForExactETH",
									"nameLocation": "2463:21:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1374,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1364,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "2490:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 1379,
												"src": "2485:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1363,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2485:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1366,
												"mutability": "mutable",
												"name": "amountInMax",
												"nameLocation": "2506:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 1379,
												"src": "2501:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1365,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2501:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1369,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "2538:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1379,
												"src": "2519:23:7",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1367,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2519:7:7",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1368,
													"nodeType": "ArrayTypeName",
													"src": "2519:9:7",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1371,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2552:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 1379,
												"src": "2544:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1370,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2544:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1373,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "2561:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1379,
												"src": "2556:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1372,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2556:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2484:86:7"
									},
									"returnParameters": {
										"id": 1378,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1377,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "2611:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1379,
												"src": "2597:21:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1375,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "2597:4:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1376,
													"nodeType": "ArrayTypeName",
													"src": "2597:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2596:23:7"
									},
									"scope": 1467,
									"src": "2454:166:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "18cbafe5",
									"id": 1396,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapExactTokensForETH",
									"nameLocation": "2634:21:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1391,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1381,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "2661:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1396,
												"src": "2656:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1380,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2656:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1383,
												"mutability": "mutable",
												"name": "amountOutMin",
												"nameLocation": "2676:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 1396,
												"src": "2671:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1382,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2671:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1386,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "2709:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1396,
												"src": "2690:23:7",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1384,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2690:7:7",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1385,
													"nodeType": "ArrayTypeName",
													"src": "2690:9:7",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1388,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2723:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 1396,
												"src": "2715:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1387,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2715:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1390,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "2732:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1396,
												"src": "2727:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1389,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2727:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2655:86:7"
									},
									"returnParameters": {
										"id": 1395,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1394,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "2782:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1396,
												"src": "2768:21:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1392,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "2768:4:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1393,
													"nodeType": "ArrayTypeName",
													"src": "2768:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2767:23:7"
									},
									"scope": 1467,
									"src": "2625:166:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "fb3bdb41",
									"id": 1411,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapETHForExactTokens",
									"nameLocation": "2805:21:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1406,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1398,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "2832:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 1411,
												"src": "2827:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1397,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2827:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1401,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "2862:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1411,
												"src": "2843:23:7",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1399,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2843:7:7",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1400,
													"nodeType": "ArrayTypeName",
													"src": "2843:9:7",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1403,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2876:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 1411,
												"src": "2868:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1402,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2868:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1405,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "2885:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1411,
												"src": "2880:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1404,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2880:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2826:68:7"
									},
									"returnParameters": {
										"id": 1410,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1409,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "2947:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1411,
												"src": "2933:21:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1407,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "2933:4:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1408,
													"nodeType": "ArrayTypeName",
													"src": "2933:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2932:23:7"
									},
									"scope": 1467,
									"src": "2796:160:7",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "ad615dec",
									"id": 1422,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "quote",
									"nameLocation": "2971:5:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1418,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1413,
												"mutability": "mutable",
												"name": "amountA",
												"nameLocation": "2982:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1422,
												"src": "2977:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1412,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2977:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1415,
												"mutability": "mutable",
												"name": "reserveA",
												"nameLocation": "2996:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1422,
												"src": "2991:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1414,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2991:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1417,
												"mutability": "mutable",
												"name": "reserveB",
												"nameLocation": "3011:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1422,
												"src": "3006:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1416,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3006:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2976:44:7"
									},
									"returnParameters": {
										"id": 1421,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1420,
												"mutability": "mutable",
												"name": "amountB",
												"nameLocation": "3049:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1422,
												"src": "3044:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1419,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3044:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3043:14:7"
									},
									"scope": 1467,
									"src": "2962:96:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "054d50d4",
									"id": 1433,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getAmountOut",
									"nameLocation": "3072:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1429,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1424,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "3090:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1433,
												"src": "3085:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1423,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3085:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1426,
												"mutability": "mutable",
												"name": "reserveIn",
												"nameLocation": "3105:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 1433,
												"src": "3100:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1425,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3100:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1428,
												"mutability": "mutable",
												"name": "reserveOut",
												"nameLocation": "3121:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 1433,
												"src": "3116:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1427,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3116:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3084:48:7"
									},
									"returnParameters": {
										"id": 1432,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1431,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "3161:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 1433,
												"src": "3156:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1430,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3156:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3155:16:7"
									},
									"scope": 1467,
									"src": "3063:109:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "85f8c259",
									"id": 1444,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getAmountIn",
									"nameLocation": "3186:11:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1440,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1435,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "3203:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 1444,
												"src": "3198:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1434,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3198:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1437,
												"mutability": "mutable",
												"name": "reserveIn",
												"nameLocation": "3219:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 1444,
												"src": "3214:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1436,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3214:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1439,
												"mutability": "mutable",
												"name": "reserveOut",
												"nameLocation": "3235:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 1444,
												"src": "3230:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1438,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3230:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3197:49:7"
									},
									"returnParameters": {
										"id": 1443,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1442,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "3275:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1444,
												"src": "3270:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1441,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3270:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3269:15:7"
									},
									"scope": 1467,
									"src": "3177:108:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "d06ca61f",
									"id": 1455,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getAmountsOut",
									"nameLocation": "3299:13:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1450,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1446,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "3318:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1455,
												"src": "3313:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1445,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3313:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1449,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "3347:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1455,
												"src": "3328:23:7",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1447,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "3328:7:7",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1448,
													"nodeType": "ArrayTypeName",
													"src": "3328:9:7",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3312:40:7"
									},
									"returnParameters": {
										"id": 1454,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1453,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "3390:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1455,
												"src": "3376:21:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1451,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "3376:4:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1452,
													"nodeType": "ArrayTypeName",
													"src": "3376:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3375:23:7"
									},
									"scope": 1467,
									"src": "3290:109:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "1f00ca74",
									"id": 1466,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getAmountsIn",
									"nameLocation": "3413:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1461,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1457,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "3431:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 1466,
												"src": "3426:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1456,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3426:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1460,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "3461:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1466,
												"src": "3442:23:7",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1458,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "3442:7:7",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1459,
													"nodeType": "ArrayTypeName",
													"src": "3442:9:7",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3425:41:7"
									},
									"returnParameters": {
										"id": 1465,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1464,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "3504:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1466,
												"src": "3490:21:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1462,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "3490:4:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1463,
													"nodeType": "ArrayTypeName",
													"src": "3490:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3489:23:7"
									},
									"scope": 1467,
									"src": "3404:109:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1468,
							"src": "56:3459:7",
							"usedErrors": []
						}
					],
					"src": "31:3484:7"
				},
				"id": 7
			},
			"contracts/IPancakeV2Router02.sol": {
				"ast": {
					"absolutePath": "contracts/IPancakeV2Router02.sol",
					"exportedSymbols": {
						"IPancakeV2Router01": [
							1467
						],
						"IPancakeV2Router02": [
							1555
						]
					},
					"id": 1556,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1469,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "31:23:8"
						},
						{
							"absolutePath": "contracts/IPancakeV2Router01.sol",
							"file": "./IPancakeV2Router01.sol",
							"id": 1470,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1556,
							"sourceUnit": 1468,
							"src": "56:34:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1471,
										"name": "IPancakeV2Router01",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1467,
										"src": "124:18:8"
									},
									"id": 1472,
									"nodeType": "InheritanceSpecifier",
									"src": "124:18:8"
								}
							],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1555,
							"linearizedBaseContracts": [
								1555,
								1467
							],
							"name": "IPancakeV2Router02",
							"nameLocation": "102:18:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "af2979eb",
									"id": 1489,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "removeLiquidityETHSupportingFeeOnTransferTokens",
									"nameLocation": "158:47:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1485,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1474,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "223:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1489,
												"src": "215:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1473,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "215:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1476,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "243:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 1489,
												"src": "238:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1475,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "238:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1478,
												"mutability": "mutable",
												"name": "amountTokenMin",
												"nameLocation": "267:14:8",
												"nodeType": "VariableDeclaration",
												"scope": 1489,
												"src": "262:19:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1477,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "262:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1480,
												"mutability": "mutable",
												"name": "amountETHMin",
												"nameLocation": "296:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 1489,
												"src": "291:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1479,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "291:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1482,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "326:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 1489,
												"src": "318:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1481,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "318:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1484,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "343:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1489,
												"src": "338:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1483,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "338:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "205:152:8"
									},
									"returnParameters": {
										"id": 1488,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1487,
												"mutability": "mutable",
												"name": "amountETH",
												"nameLocation": "381:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 1489,
												"src": "376:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1486,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "376:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "375:16:8"
									},
									"scope": 1555,
									"src": "149:243:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "5b0d5984",
									"id": 1514,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens",
									"nameLocation": "406:57:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1510,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1491,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "481:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1514,
												"src": "473:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1490,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "473:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1493,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "501:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 1514,
												"src": "496:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1492,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "496:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1495,
												"mutability": "mutable",
												"name": "amountTokenMin",
												"nameLocation": "525:14:8",
												"nodeType": "VariableDeclaration",
												"scope": 1514,
												"src": "520:19:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1494,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "520:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1497,
												"mutability": "mutable",
												"name": "amountETHMin",
												"nameLocation": "554:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 1514,
												"src": "549:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1496,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "549:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1499,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "584:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 1514,
												"src": "576:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1498,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "576:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1501,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "601:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1514,
												"src": "596:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1500,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "596:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1503,
												"mutability": "mutable",
												"name": "approveMax",
												"nameLocation": "624:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 1514,
												"src": "619:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1502,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "619:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1505,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "642:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1514,
												"src": "636:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1504,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "636:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1507,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "653:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1514,
												"src": "645:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1506,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "645:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1509,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "664:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1514,
												"src": "656:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1508,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "656:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "463:208:8"
									},
									"returnParameters": {
										"id": 1513,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1512,
												"mutability": "mutable",
												"name": "amountETH",
												"nameLocation": "695:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 1514,
												"src": "690:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1511,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "690:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "689:16:8"
									},
									"scope": 1555,
									"src": "397:309:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "5c11d795",
									"id": 1528,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapExactTokensForTokensSupportingFeeOnTransferTokens",
									"nameLocation": "721:53:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1526,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1516,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "789:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1528,
												"src": "784:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1515,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "784:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1518,
												"mutability": "mutable",
												"name": "amountOutMin",
												"nameLocation": "812:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 1528,
												"src": "807:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1517,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "807:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1521,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "853:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1528,
												"src": "834:23:8",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1519,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "834:7:8",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1520,
													"nodeType": "ArrayTypeName",
													"src": "834:9:8",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1523,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "875:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 1528,
												"src": "867:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1522,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "867:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1525,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "892:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1528,
												"src": "887:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1524,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "887:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "774:132:8"
									},
									"returnParameters": {
										"id": 1527,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "915:0:8"
									},
									"scope": 1555,
									"src": "712:204:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "b6f9de95",
									"id": 1540,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapExactETHForTokensSupportingFeeOnTransferTokens",
									"nameLocation": "930:50:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1538,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1530,
												"mutability": "mutable",
												"name": "amountOutMin",
												"nameLocation": "995:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 1540,
												"src": "990:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1529,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "990:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1533,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "1036:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1540,
												"src": "1017:23:8",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1531,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "1017:7:8",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1532,
													"nodeType": "ArrayTypeName",
													"src": "1017:9:8",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1535,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1058:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 1540,
												"src": "1050:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1534,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1050:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1537,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "1075:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1540,
												"src": "1070:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1536,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1070:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "980:109:8"
									},
									"returnParameters": {
										"id": 1539,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1106:0:8"
									},
									"scope": 1555,
									"src": "921:186:8",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "791ac947",
									"id": 1554,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapExactTokensForETHSupportingFeeOnTransferTokens",
									"nameLocation": "1121:50:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1552,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1542,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "1186:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1554,
												"src": "1181:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1541,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1181:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1544,
												"mutability": "mutable",
												"name": "amountOutMin",
												"nameLocation": "1209:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 1554,
												"src": "1204:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1543,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1204:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1547,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "1250:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1554,
												"src": "1231:23:8",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1545,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "1231:7:8",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1546,
													"nodeType": "ArrayTypeName",
													"src": "1231:9:8",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1549,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1272:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 1554,
												"src": "1264:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1548,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1264:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1551,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "1289:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1554,
												"src": "1284:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1550,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1284:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1171:132:8"
									},
									"returnParameters": {
										"id": 1553,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1312:0:8"
									},
									"scope": 1555,
									"src": "1112:201:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1556,
							"src": "92:1223:8",
							"usedErrors": []
						}
					],
					"src": "31:1284:8"
				},
				"id": 8
			},
			"contracts/MyToken.sol": {
				"ast": {
					"absolutePath": "contracts/MyToken.sol",
					"exportedSymbols": {
						"Address": [
							520
						],
						"Context": [
							542
						],
						"IAntisnipe": [
							1576
						],
						"IERC20": [
							190
						],
						"IPancakeV2Factory": [
							917
						],
						"IPancakeV2Pair": [
							1159
						],
						"IPancakeV2Router01": [
							1467
						],
						"IPancakeV2Router02": [
							1555
						],
						"Ownable": [
							112
						],
						"Pokemon": [
							3991
						],
						"SafeMath": [
							854
						]
					},
					"id": 3992,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1557,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:9"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 1558,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3992,
							"sourceUnit": 191,
							"src": "57:56:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 1559,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3992,
							"sourceUnit": 113,
							"src": "114:52:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"id": 1560,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3992,
							"sourceUnit": 855,
							"src": "167:57:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
							"file": "@openzeppelin/contracts/utils/Address.sol",
							"id": 1561,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3992,
							"sourceUnit": 521,
							"src": "225:51:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/IPancakeV2Router02.sol",
							"file": "./IPancakeV2Router02.sol",
							"id": 1562,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3992,
							"sourceUnit": 1556,
							"src": "277:34:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/IPancakeV2Factory.sol",
							"file": "./IPancakeV2Factory.sol",
							"id": 1563,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3992,
							"sourceUnit": 918,
							"src": "312:33:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/IPancakeV2Pair.sol",
							"file": "./IPancakeV2Pair.sol",
							"id": 1564,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3992,
							"sourceUnit": 1160,
							"src": "346:30:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1576,
							"linearizedBaseContracts": [
								1576
							],
							"name": "IAntisnipe",
							"nameLocation": "388:10:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "5d37a8dd",
									"id": 1575,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "assureCanTransfer",
									"nameLocation": "414:17:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1573,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1566,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "449:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1575,
												"src": "441:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1565,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "441:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1568,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "473:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1575,
												"src": "465:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1567,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "465:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1570,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "495:2:9",
												"nodeType": "VariableDeclaration",
												"scope": 1575,
												"src": "487:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1569,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "487:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1572,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "515:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1575,
												"src": "507:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1571,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "507:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "431:96:9"
									},
									"returnParameters": {
										"id": 1574,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "536:0:9"
									},
									"scope": 1576,
									"src": "405:132:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 3992,
							"src": "378:161:9",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1577,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 542,
										"src": "561:7:9"
									},
									"id": 1578,
									"nodeType": "InheritanceSpecifier",
									"src": "561:7:9"
								},
								{
									"baseName": {
										"id": 1579,
										"name": "IERC20",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 190,
										"src": "570:6:9"
									},
									"id": 1580,
									"nodeType": "InheritanceSpecifier",
									"src": "570:6:9"
								},
								{
									"baseName": {
										"id": 1581,
										"name": "Ownable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 112,
										"src": "578:7:9"
									},
									"id": 1582,
									"nodeType": "InheritanceSpecifier",
									"src": "578:7:9"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 3991,
							"linearizedBaseContracts": [
								3991,
								112,
								190,
								542
							],
							"name": "Pokemon",
							"nameLocation": "550:7:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 1585,
									"libraryName": {
										"id": 1583,
										"name": "SafeMath",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 854,
										"src": "598:8:9"
									},
									"nodeType": "UsingForDirective",
									"src": "592:27:9",
									"typeName": {
										"id": 1584,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "611:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"id": 1588,
									"libraryName": {
										"id": 1586,
										"name": "Address",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 520,
										"src": "630:7:9"
									},
									"nodeType": "UsingForDirective",
									"src": "624:26:9",
									"typeName": {
										"id": 1587,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "642:7:9",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"constant": false,
									"id": 1592,
									"mutability": "mutable",
									"name": "_rOwned",
									"nameLocation": "692:7:9",
									"nodeType": "VariableDeclaration",
									"scope": 3991,
									"src": "656:43:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 1591,
										"keyType": {
											"id": 1589,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "664:7:9",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "656:27:9",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 1590,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "675:7:9",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1596,
									"mutability": "mutable",
									"name": "_tOwned",
									"nameLocation": "741:7:9",
									"nodeType": "VariableDeclaration",
									"scope": 3991,
									"src": "705:43:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 1595,
										"keyType": {
											"id": 1593,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "713:7:9",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "705:27:9",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 1594,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "724:7:9",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1602,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "810:11:9",
									"nodeType": "VariableDeclaration",
									"scope": 3991,
									"src": "754:67:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 1601,
										"keyType": {
											"id": 1597,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "762:7:9",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "754:47:9",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueType": {
											"id": 1600,
											"keyType": {
												"id": 1598,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "781:7:9",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "773:27:9",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueType": {
												"id": 1599,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "792:7:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1606,
									"mutability": "mutable",
									"name": "_isExcludedFromFee",
									"nameLocation": "861:18:9",
									"nodeType": "VariableDeclaration",
									"scope": 3991,
									"src": "828:51:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 1605,
										"keyType": {
											"id": 1603,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "836:7:9",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "828:24:9",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueType": {
											"id": 1604,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "847:4:9",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1610,
									"mutability": "mutable",
									"name": "_isExcluded",
									"nameLocation": "918:11:9",
									"nodeType": "VariableDeclaration",
									"scope": 3991,
									"src": "885:44:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 1609,
										"keyType": {
											"id": 1607,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "893:7:9",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "885:24:9",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueType": {
											"id": 1608,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "904:4:9",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1613,
									"mutability": "mutable",
									"name": "_excluded",
									"nameLocation": "953:9:9",
									"nodeType": "VariableDeclaration",
									"scope": 3991,
									"src": "935:27:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_address_$dyn_storage",
										"typeString": "address[]"
									},
									"typeName": {
										"baseType": {
											"id": 1611,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "935:7:9",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"id": 1612,
										"nodeType": "ArrayTypeName",
										"src": "935:9:9",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
											"typeString": "address[]"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 1620,
									"mutability": "constant",
									"name": "MAX",
									"nameLocation": "994:3:9",
									"nodeType": "VariableDeclaration",
									"scope": 3991,
									"src": "969:42:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1614,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "969:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"id": 1619,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"nodeType": "UnaryOperation",
										"operator": "~",
										"prefix": true,
										"src": "1000:11:9",
										"subExpression": {
											"arguments": [
												{
													"hexValue": "30",
													"id": 1617,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1009:1:9",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												}
											],
											"expression": {
												"argumentTypes": [
													{
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													}
												],
												"id": 1616,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"lValueRequested": false,
												"nodeType": "ElementaryTypeNameExpression",
												"src": "1001:7:9",
												"typeDescriptions": {
													"typeIdentifier": "t_type$_t_uint256_$",
													"typeString": "type(uint256)"
												},
												"typeName": {
													"id": 1615,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1001:7:9",
													"typeDescriptions": {}
												}
											},
											"id": 1618,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "typeConversion",
											"lValueRequested": false,
											"names": [],
											"nodeType": "FunctionCall",
											"src": "1001:10:9",
											"tryCall": false,
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1627,
									"mutability": "mutable",
									"name": "_tTotal",
									"nameLocation": "1033:7:9",
									"nodeType": "VariableDeclaration",
									"scope": 3991,
									"src": "1017:48:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1621,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1017:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_7777777777000000000000000000_by_1",
											"typeString": "int_const 7777777777000000000000000000"
										},
										"id": 1626,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "375f3737375f3737375f373737",
											"id": 1622,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "1043:13:9",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_7777777777_by_1",
												"typeString": "int_const 7777777777"
											},
											"value": "7_777_777_777"
										},
										"nodeType": "BinaryOperation",
										"operator": "*",
										"rightExpression": {
											"commonType": {
												"typeIdentifier": "t_rational_1000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000"
											},
											"id": 1625,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"leftExpression": {
												"hexValue": "3130",
												"id": 1623,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "1059:2:9",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_10_by_1",
													"typeString": "int_const 10"
												},
												"value": "10"
											},
											"nodeType": "BinaryOperation",
											"operator": "**",
											"rightExpression": {
												"hexValue": "3138",
												"id": 1624,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "1063:2:9",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_18_by_1",
													"typeString": "int_const 18"
												},
												"value": "18"
											},
											"src": "1059:6:9",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000"
											}
										},
										"src": "1043:22:9",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_7777777777000000000000000000_by_1",
											"typeString": "int_const 7777777777000000000000000000"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1636,
									"mutability": "mutable",
									"name": "_rTotal",
									"nameLocation": "1087:7:9",
									"nodeType": "VariableDeclaration",
									"scope": 3991,
									"src": "1071:49:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1628,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1071:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"components": [
											{
												"commonType": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"id": 1634,
												"isConstant": false,
												"isLValue": false,
												"isPure": false,
												"lValueRequested": false,
												"leftExpression": {
													"id": 1629,
													"name": "MAX",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1620,
													"src": "1098:3:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "BinaryOperation",
												"operator": "-",
												"rightExpression": {
													"components": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1632,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1630,
																"name": "MAX",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1620,
																"src": "1105:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"id": 1631,
																"name": "_tTotal",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1627,
																"src": "1111:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1105:13:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 1633,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "1104:15:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"src": "1098:21:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										],
										"id": 1635,
										"isConstant": false,
										"isInlineArray": false,
										"isLValue": false,
										"isPure": false,
										"lValueRequested": false,
										"nodeType": "TupleExpression",
										"src": "1097:23:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1638,
									"mutability": "mutable",
									"name": "_tFeeTotal",
									"nameLocation": "1142:10:9",
									"nodeType": "VariableDeclaration",
									"scope": 3991,
									"src": "1126:26:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1637,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1126:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1641,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1174:5:9",
									"nodeType": "VariableDeclaration",
									"scope": 3991,
									"src": "1159:37:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 1639,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1159:6:9",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"hexValue": "4d6574612d706f6b656d6f6e",
										"id": 1640,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1182:14:9",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_006519eeede72282b11ffabc481a4713b46e3276670aef7723c0acd3d3093d45",
											"typeString": "literal_string \"Meta-pokemon\""
										},
										"value": "Meta-pokemon"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1644,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1217:7:9",
									"nodeType": "VariableDeclaration",
									"scope": 3991,
									"src": "1202:34:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 1642,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1202:6:9",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"hexValue": "706f6b656d6f6e",
										"id": 1643,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1227:9:9",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_144891294e64f40166348fe88cdd0c39799443e99c2dcc7caf7a0f2f0953031e",
											"typeString": "literal_string \"pokemon\""
										},
										"value": "pokemon"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1647,
									"mutability": "mutable",
									"name": "_decimals",
									"nameLocation": "1256:9:9",
									"nodeType": "VariableDeclaration",
									"scope": 3991,
									"src": "1242:28:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 1645,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "1242:5:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "3138",
										"id": 1646,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1268:2:9",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_18_by_1",
											"typeString": "int_const 18"
										},
										"value": "18"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "3b124fe7",
									"id": 1650,
									"mutability": "mutable",
									"name": "_taxFee",
									"nameLocation": "1309:7:9",
									"nodeType": "VariableDeclaration",
									"scope": 3991,
									"src": "1294:26:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1648,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1294:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 1649,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1319:1:9",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 1653,
									"mutability": "mutable",
									"name": "_previousTaxFee",
									"nameLocation": "1342:15:9",
									"nodeType": "VariableDeclaration",
									"scope": 3991,
									"src": "1326:41:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1651,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1326:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"id": 1652,
										"name": "_taxFee",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1650,
										"src": "1360:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "6bc87c3a",
									"id": 1656,
									"mutability": "mutable",
									"name": "_liquidityFee",
									"nameLocation": "1389:13:9",
									"nodeType": "VariableDeclaration",
									"scope": 3991,
									"src": "1374:32:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1654,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1374:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 1655,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1405:1:9",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 1659,
									"mutability": "mutable",
									"name": "_previousLiquidityFee",
									"nameLocation": "1428:21:9",
									"nodeType": "VariableDeclaration",
									"scope": 3991,
									"src": "1412:53:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1657,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1412:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"id": 1658,
										"name": "_liquidityFee",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1656,
										"src": "1452:13:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "c0b0fda2",
									"id": 1662,
									"mutability": "mutable",
									"name": "_burnFee",
									"nameLocation": "1487:8:9",
									"nodeType": "VariableDeclaration",
									"scope": 3991,
									"src": "1472:27:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1660,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1472:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 1661,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1498:1:9",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 1665,
									"mutability": "mutable",
									"name": "_previousBurnFee",
									"nameLocation": "1521:16:9",
									"nodeType": "VariableDeclaration",
									"scope": 3991,
									"src": "1505:43:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1663,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1505:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"id": 1664,
										"name": "_burnFee",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1662,
										"src": "1540:8:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "22976e0d",
									"id": 1668,
									"mutability": "mutable",
									"name": "_marketingFee",
									"nameLocation": "1570:13:9",
									"nodeType": "VariableDeclaration",
									"scope": 3991,
									"src": "1555:32:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1666,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1555:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 1667,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1586:1:9",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "75f0a874",
									"id": 1670,
									"mutability": "mutable",
									"name": "marketingWallet",
									"nameLocation": "1608:15:9",
									"nodeType": "VariableDeclaration",
									"scope": 3991,
									"src": "1593:30:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1669,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1593:7:9",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 1673,
									"mutability": "mutable",
									"name": "_previousMarketingFee",
									"nameLocation": "1645:21:9",
									"nodeType": "VariableDeclaration",
									"scope": 3991,
									"src": "1629:53:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1671,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1629:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"id": 1672,
										"name": "_marketingFee",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1668,
										"src": "1669:13:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "200a692d",
									"id": 1676,
									"mutability": "mutable",
									"name": "_sellTaxFee",
									"nameLocation": "1721:11:9",
									"nodeType": "VariableDeclaration",
									"scope": 3991,
									"src": "1706:30:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1674,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1706:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 1675,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1735:1:9",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "88790a68",
									"id": 1679,
									"mutability": "mutable",
									"name": "_sellLiquidityFee",
									"nameLocation": "1757:17:9",
									"nodeType": "VariableDeclaration",
									"scope": 3991,
									"src": "1742:36:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1677,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1742:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 1678,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1777:1:9",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "c8607952",
									"id": 1682,
									"mutability": "mutable",
									"name": "_sellMarketingFee",
									"nameLocation": "1799:17:9",
									"nodeType": "VariableDeclaration",
									"scope": 3991,
									"src": "1784:36:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1680,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1784:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 1681,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1819:1:9",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "7abdc1ca",
									"id": 1685,
									"mutability": "mutable",
									"name": "_sellBurnFee",
									"nameLocation": "1841:12:9",
									"nodeType": "VariableDeclaration",
									"scope": 3991,
									"src": "1826:31:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1683,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1826:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 1684,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1856:1:9",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "64a06e80",
									"id": 1688,
									"mutability": "constant",
									"name": "MAX_HOLDING_PERCENTS_DIVISOR",
									"nameLocation": "1906:28:9",
									"nodeType": "VariableDeclaration",
									"scope": 3991,
									"src": "1882:59:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1686,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1882:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31303030",
										"id": 1687,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1937:4:9",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1000_by_1",
											"typeString": "int_const 1000"
										},
										"value": "1000"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "0a7d2d87",
									"id": 1691,
									"mutability": "mutable",
									"name": "_maxHoldingPercents",
									"nameLocation": "1962:19:9",
									"nodeType": "VariableDeclaration",
									"scope": 3991,
									"src": "1947:38:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1689,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1947:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "35",
										"id": 1690,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1984:1:9",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_5_by_1",
											"typeString": "int_const 5"
										},
										"value": "5"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "57d87f0d",
									"id": 1693,
									"mutability": "mutable",
									"name": "antiWhaleEnabled",
									"nameLocation": "2003:16:9",
									"nodeType": "VariableDeclaration",
									"scope": 3991,
									"src": "1991:28:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 1692,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "1991:4:9",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 1697,
									"mutability": "mutable",
									"name": "allowedBuyAmount",
									"nameLocation": "2067:16:9",
									"nodeType": "VariableDeclaration",
									"scope": 3991,
									"src": "2042:41:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
										"typeString": "mapping(uint256 => bool)"
									},
									"typeName": {
										"id": 1696,
										"keyType": {
											"id": 1694,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "2050:7:9",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "2042:24:9",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
											"typeString": "mapping(uint256 => bool)"
										},
										"valueType": {
											"id": 1695,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "2061:4:9",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"functionSelector": "d8c6404b",
									"id": 1699,
									"mutability": "mutable",
									"name": "antiBotEnabled",
									"nameLocation": "2101:14:9",
									"nodeType": "VariableDeclaration",
									"scope": 3991,
									"src": "2089:26:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 1698,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "2089:4:9",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "d5bde46c",
									"id": 1701,
									"mutability": "mutable",
									"name": "antiManager",
									"nameLocation": "2157:11:9",
									"nodeType": "VariableDeclaration",
									"scope": 3991,
									"src": "2142:26:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1700,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "2142:7:9",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "1a4cd1b1",
									"id": 1704,
									"mutability": "mutable",
									"name": "pancakeV2Router",
									"nameLocation": "2201:15:9",
									"nodeType": "VariableDeclaration",
									"scope": 3991,
									"src": "2175:41:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IPancakeV2Router02_$1555",
										"typeString": "contract IPancakeV2Router02"
									},
									"typeName": {
										"id": 1703,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1702,
											"name": "IPancakeV2Router02",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1555,
											"src": "2175:18:9"
										},
										"referencedDeclaration": 1555,
										"src": "2175:18:9",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IPancakeV2Router02_$1555",
											"typeString": "contract IPancakeV2Router02"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "632a6a35",
									"id": 1706,
									"mutability": "mutable",
									"name": "pancakeV2Pair",
									"nameLocation": "2237:13:9",
									"nodeType": "VariableDeclaration",
									"scope": 3991,
									"src": "2222:28:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1705,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "2222:7:9",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 1708,
									"mutability": "mutable",
									"name": "inSwapAndLiquify",
									"nameLocation": "2262:16:9",
									"nodeType": "VariableDeclaration",
									"scope": 3991,
									"src": "2257:21:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 1707,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "2257:4:9",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"functionSelector": "4a74bb02",
									"id": 1711,
									"mutability": "mutable",
									"name": "swapAndLiquifyEnabled",
									"nameLocation": "2296:21:9",
									"nodeType": "VariableDeclaration",
									"scope": 3991,
									"src": "2284:41:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 1709,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "2284:4:9",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"value": {
										"hexValue": "66616c7365",
										"id": 1710,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "bool",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2320:5:9",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										},
										"value": "false"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 1718,
									"mutability": "mutable",
									"name": "numTokensSellToAddToLiquidity",
									"nameLocation": "2347:29:9",
									"nodeType": "VariableDeclaration",
									"scope": 3991,
									"src": "2331:64:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1712,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2331:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_1000000000000000000000000_by_1",
											"typeString": "int_const 1000000000000000000000000"
										},
										"id": 1717,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "31303030303030",
											"id": 1713,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "2379:7:9",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1000000_by_1",
												"typeString": "int_const 1000000"
											},
											"value": "1000000"
										},
										"nodeType": "BinaryOperation",
										"operator": "*",
										"rightExpression": {
											"commonType": {
												"typeIdentifier": "t_rational_1000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000"
											},
											"id": 1716,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"leftExpression": {
												"hexValue": "3130",
												"id": 1714,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "2389:2:9",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_10_by_1",
													"typeString": "int_const 10"
												},
												"value": "10"
											},
											"nodeType": "BinaryOperation",
											"operator": "**",
											"rightExpression": {
												"hexValue": "3138",
												"id": 1715,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "2393:2:9",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_18_by_1",
													"typeString": "int_const 18"
												},
												"value": "18"
											},
											"src": "2389:6:9",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000"
											}
										},
										"src": "2379:16:9",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1000000000000000000000000_by_1",
											"typeString": "int_const 1000000000000000000000000"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1733,
									"mutability": "mutable",
									"name": "_allowedBuyAmount",
									"nameLocation": "2411:17:9",
									"nodeType": "VariableDeclaration",
									"scope": 3991,
									"src": "2401:221:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
										"typeString": "uint256[]"
									},
									"typeName": {
										"baseType": {
											"id": 1719,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "2401:7:9",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 1720,
										"nodeType": "ArrayTypeName",
										"src": "2401:9:9",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
											"typeString": "uint256[]"
										}
									},
									"value": {
										"components": [
											{
												"hexValue": "3635363738",
												"id": 1721,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "2441:5:9",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_65678_by_1",
													"typeString": "int_const 65678"
												},
												"value": "65678"
											},
											{
												"hexValue": "313239303532",
												"id": 1722,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "2456:6:9",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_129052_by_1",
													"typeString": "int_const 129052"
												},
												"value": "129052"
											},
											{
												"hexValue": "323633353535",
												"id": 1723,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "2472:6:9",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_263555_by_1",
													"typeString": "int_const 263555"
												},
												"value": "263555"
											},
											{
												"hexValue": "353231323837",
												"id": 1724,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "2488:6:9",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_521287_by_1",
													"typeString": "int_const 521287"
												},
												"value": "521287"
											},
											{
												"hexValue": "31303437353737",
												"id": 1725,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "2504:7:9",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_1047577_by_1",
													"typeString": "int_const 1047577"
												},
												"value": "1047577"
											},
											{
												"hexValue": "32303837313532",
												"id": 1726,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "2521:7:9",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_2087152_by_1",
													"typeString": "int_const 2087152"
												},
												"value": "2087152"
											},
											{
												"hexValue": "34313934323231",
												"id": 1727,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "2538:7:9",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_4194221_by_1",
													"typeString": "int_const 4194221"
												},
												"value": "4194221"
											},
											{
												"hexValue": "38333836363036",
												"id": 1728,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "2555:7:9",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_8386606_by_1",
													"typeString": "int_const 8386606"
												},
												"value": "8386606"
											},
											{
												"hexValue": "3136383737313135",
												"id": 1729,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "2572:8:9",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_16877115_by_1",
													"typeString": "int_const 16877115"
												},
												"value": "16877115"
											},
											{
												"hexValue": "3333353634343432",
												"id": 1730,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "2590:8:9",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_33564442_by_1",
													"typeString": "int_const 33564442"
												},
												"value": "33564442"
											},
											{
												"hexValue": "3637333038383531",
												"id": 1731,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "2608:8:9",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_67308851_by_1",
													"typeString": "int_const 67308851"
												},
												"value": "67308851"
											}
										],
										"id": 1732,
										"isConstant": false,
										"isInlineArray": true,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"nodeType": "TupleExpression",
										"src": "2431:191:9",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint32_$11_memory_ptr",
											"typeString": "uint32[11] memory"
										}
									},
									"visibility": "internal"
								},
								{
									"anonymous": false,
									"id": 1737,
									"name": "SwapAndLiquifyEnabledUpdated",
									"nameLocation": "2635:28:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1736,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1735,
												"indexed": false,
												"mutability": "mutable",
												"name": "enabled",
												"nameLocation": "2669:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1737,
												"src": "2664:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1734,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2664:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2663:14:9"
									},
									"src": "2629:49:9"
								},
								{
									"anonymous": false,
									"id": 1745,
									"name": "SwapAndLiquify",
									"nameLocation": "2689:14:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1744,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1739,
												"indexed": false,
												"mutability": "mutable",
												"name": "tokensSwapped",
												"nameLocation": "2721:13:9",
												"nodeType": "VariableDeclaration",
												"scope": 1745,
												"src": "2713:21:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1738,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2713:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1741,
												"indexed": false,
												"mutability": "mutable",
												"name": "ethReceived",
												"nameLocation": "2752:11:9",
												"nodeType": "VariableDeclaration",
												"scope": 1745,
												"src": "2744:19:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1740,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2744:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1743,
												"indexed": false,
												"mutability": "mutable",
												"name": "tokensIntoLiqudity",
												"nameLocation": "2781:18:9",
												"nodeType": "VariableDeclaration",
												"scope": 1745,
												"src": "2773:26:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1742,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2773:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2703:102:9"
									},
									"src": "2683:123:9"
								},
								{
									"body": {
										"id": 1756,
										"nodeType": "Block",
										"src": "2835:85:9",
										"statements": [
											{
												"expression": {
													"id": 1749,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1747,
														"name": "inSwapAndLiquify",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1708,
														"src": "2845:16:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1748,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2864:4:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "2845:23:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1750,
												"nodeType": "ExpressionStatement",
												"src": "2845:23:9"
											},
											{
												"id": 1751,
												"nodeType": "PlaceholderStatement",
												"src": "2878:1:9"
											},
											{
												"expression": {
													"id": 1754,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1752,
														"name": "inSwapAndLiquify",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1708,
														"src": "2889:16:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 1753,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2908:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "2889:24:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1755,
												"nodeType": "ExpressionStatement",
												"src": "2889:24:9"
											}
										]
									},
									"id": 1757,
									"name": "lockTheSwap",
									"nameLocation": "2821:11:9",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1746,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2832:2:9"
									},
									"src": "2812:108:9",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1860,
										"nodeType": "Block",
										"src": "3053:891:9",
										"statements": [
											{
												"expression": {
													"id": 1769,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1767,
														"name": "marketingWallet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1670,
														"src": "3063:15:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1768,
														"name": "_marketingWallet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1762,
														"src": "3081:16:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3063:34:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1770,
												"nodeType": "ExpressionStatement",
												"src": "3063:34:9"
											},
											{
												"expression": {
													"id": 1773,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1771,
														"name": "antiManager",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1701,
														"src": "3107:11:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1772,
														"name": "_antiManager",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1764,
														"src": "3121:12:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3107:26:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1774,
												"nodeType": "ExpressionStatement",
												"src": "3107:26:9"
											},
											{
												"expression": {
													"id": 1780,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1775,
															"name": "_rOwned",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1592,
															"src": "3143:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1778,
														"indexExpression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1776,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 532,
																"src": "3151:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1777,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3151:12:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3143:21:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1779,
														"name": "_rTotal",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1636,
														"src": "3167:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3143:31:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1781,
												"nodeType": "ExpressionStatement",
												"src": "3143:31:9"
											},
											{
												"expression": {
													"id": 1797,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1782,
														"name": "pancakeV2Pair",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1706,
														"src": "3237:13:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 1791,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "3331:4:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_Pokemon_$3991",
																			"typeString": "contract Pokemon"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_Pokemon_$3991",
																			"typeString": "contract Pokemon"
																		}
																	],
																	"id": 1790,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3323:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1789,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "3323:7:9",
																		"typeDescriptions": {}
																	}
																},
																"id": 1792,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3323:13:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 1793,
																		"name": "_pancakeV2Router",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1760,
																		"src": "3350:16:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IPancakeV2Router02_$1555",
																			"typeString": "contract IPancakeV2Router02"
																		}
																	},
																	"id": 1794,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "WETH",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1171,
																	"src": "3350:21:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_pure$__$returns$_t_address_$",
																		"typeString": "function () pure external returns (address)"
																	}
																},
																"id": 1795,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3350:23:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"expression": {
																				"id": 1784,
																				"name": "_pancakeV2Router",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1760,
																				"src": "3271:16:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IPancakeV2Router02_$1555",
																					"typeString": "contract IPancakeV2Router02"
																				}
																			},
																			"id": 1785,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "factory",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1166,
																			"src": "3271:24:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_external_pure$__$returns$_t_address_$",
																				"typeString": "function () pure external returns (address)"
																			}
																		},
																		"id": 1786,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3271:26:9",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1783,
																	"name": "IPancakeV2Factory",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 917,
																	"src": "3253:17:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IPancakeV2Factory_$917_$",
																		"typeString": "type(contract IPancakeV2Factory)"
																	}
																},
																"id": 1787,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3253:45:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IPancakeV2Factory_$917",
																	"typeString": "contract IPancakeV2Factory"
																}
															},
															"id": 1788,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "createPair",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 906,
															"src": "3253:56:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$returns$_t_address_$",
																"typeString": "function (address,address) external returns (address)"
															}
														},
														"id": 1796,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3253:130:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3237:146:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1798,
												"nodeType": "ExpressionStatement",
												"src": "3237:146:9"
											},
											{
												"expression": {
													"id": 1801,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1799,
														"name": "pancakeV2Router",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1704,
														"src": "3444:15:9",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IPancakeV2Router02_$1555",
															"typeString": "contract IPancakeV2Router02"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1800,
														"name": "_pancakeV2Router",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1760,
														"src": "3462:16:9",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IPancakeV2Router02_$1555",
															"typeString": "contract IPancakeV2Router02"
														}
													},
													"src": "3444:34:9",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IPancakeV2Router02_$1555",
														"typeString": "contract IPancakeV2Router02"
													}
												},
												"id": 1802,
												"nodeType": "ExpressionStatement",
												"src": "3444:34:9"
											},
											{
												"expression": {
													"id": 1808,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1803,
															"name": "_isExcludedFromFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1606,
															"src": "3554:18:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1806,
														"indexExpression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1804,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 40,
																"src": "3573:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1805,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3573:7:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3554:27:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1807,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3584:4:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "3554:34:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1809,
												"nodeType": "ExpressionStatement",
												"src": "3554:34:9"
											},
											{
												"expression": {
													"id": 1814,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1810,
															"name": "_isExcludedFromFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1606,
															"src": "3598:18:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1812,
														"indexExpression": {
															"id": 1811,
															"name": "_antiManager",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1764,
															"src": "3617:12:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3598:32:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1813,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3633:4:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "3598:39:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1815,
												"nodeType": "ExpressionStatement",
												"src": "3598:39:9"
											},
											{
												"expression": {
													"id": 1823,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1816,
															"name": "_isExcludedFromFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1606,
															"src": "3647:18:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1821,
														"indexExpression": {
															"arguments": [
																{
																	"id": 1819,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3674:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Pokemon_$3991",
																		"typeString": "contract Pokemon"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Pokemon_$3991",
																		"typeString": "contract Pokemon"
																	}
																],
																"id": 1818,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3666:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1817,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3666:7:9",
																	"typeDescriptions": {}
																}
															},
															"id": 1820,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3666:13:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3647:33:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1822,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3683:4:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "3647:40:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1824,
												"nodeType": "ExpressionStatement",
												"src": "3647:40:9"
											},
											{
												"body": {
													"id": 1848,
													"nodeType": "Block",
													"src": "3800:79:9",
													"statements": [
														{
															"expression": {
																"id": 1846,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1836,
																		"name": "allowedBuyAmount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1697,
																		"src": "3814:16:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
																			"typeString": "mapping(uint256 => bool)"
																		}
																	},
																	"id": 1844,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1843,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"baseExpression": {
																				"id": 1837,
																				"name": "_allowedBuyAmount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1733,
																				"src": "3831:17:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																					"typeString": "uint256[] storage ref"
																				}
																			},
																			"id": 1839,
																			"indexExpression": {
																				"id": 1838,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1826,
																				"src": "3849:1:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "3831:20:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_rational_1000000000000000000_by_1",
																				"typeString": "int_const 1000000000000000000"
																			},
																			"id": 1842,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1840,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3854:2:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3138",
																				"id": 1841,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3858:2:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_18_by_1",
																					"typeString": "int_const 18"
																				},
																				"value": "18"
																			},
																			"src": "3854:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1000000000000000000_by_1",
																				"typeString": "int_const 1000000000000000000"
																			}
																		},
																		"src": "3831:29:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "3814:47:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 1845,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3864:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "3814:54:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1847,
															"nodeType": "ExpressionStatement",
															"src": "3814:54:9"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1832,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1829,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1826,
														"src": "3765:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 1830,
															"name": "_allowedBuyAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1733,
															"src": "3769:17:9",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																"typeString": "uint256[] storage ref"
															}
														},
														"id": 1831,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "3769:24:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3765:28:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1849,
												"initializationExpression": {
													"assignments": [
														1826
													],
													"declarations": [
														{
															"constant": false,
															"id": 1826,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "3758:1:9",
															"nodeType": "VariableDeclaration",
															"scope": 1849,
															"src": "3750:9:9",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1825,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "3750:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1828,
													"initialValue": {
														"hexValue": "30",
														"id": 1827,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3762:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "3750:13:9"
												},
												"loopExpression": {
													"expression": {
														"id": 1834,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "3795:3:9",
														"subExpression": {
															"id": 1833,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1826,
															"src": "3795:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1835,
													"nodeType": "ExpressionStatement",
													"src": "3795:3:9"
												},
												"nodeType": "ForStatement",
												"src": "3745:134:9"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1853,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3911:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1852,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3903:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1851,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3903:7:9",
																	"typeDescriptions": {}
																}
															},
															"id": 1854,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3903:10:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1855,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 532,
																"src": "3915:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1856,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3915:12:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1857,
															"name": "_tTotal",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1627,
															"src": "3929:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1850,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 124,
														"src": "3894:8:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1858,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3894:43:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1859,
												"nodeType": "EmitStatement",
												"src": "3889:48:9"
											}
										]
									},
									"id": 1861,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1765,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1760,
												"mutability": "mutable",
												"name": "_pancakeV2Router",
												"nameLocation": "2966:16:9",
												"nodeType": "VariableDeclaration",
												"scope": 1861,
												"src": "2947:35:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IPancakeV2Router02_$1555",
													"typeString": "contract IPancakeV2Router02"
												},
												"typeName": {
													"id": 1759,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1758,
														"name": "IPancakeV2Router02",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1555,
														"src": "2947:18:9"
													},
													"referencedDeclaration": 1555,
													"src": "2947:18:9",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IPancakeV2Router02_$1555",
														"typeString": "contract IPancakeV2Router02"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1762,
												"mutability": "mutable",
												"name": "_marketingWallet",
												"nameLocation": "3000:16:9",
												"nodeType": "VariableDeclaration",
												"scope": 1861,
												"src": "2992:24:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1761,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2992:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1764,
												"mutability": "mutable",
												"name": "_antiManager",
												"nameLocation": "3034:12:9",
												"nodeType": "VariableDeclaration",
												"scope": 1861,
												"src": "3026:20:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1763,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3026:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2937:115:9"
									},
									"returnParameters": {
										"id": 1766,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3053:0:9"
									},
									"scope": 3991,
									"src": "2926:1018:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "882cfb3f",
									"id": 1864,
									"mutability": "mutable",
									"name": "antisnipe",
									"nameLocation": "3968:9:9",
									"nodeType": "VariableDeclaration",
									"scope": 3991,
									"src": "3950:27:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IAntisnipe_$1576",
										"typeString": "contract IAntisnipe"
									},
									"typeName": {
										"id": 1863,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1862,
											"name": "IAntisnipe",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1576,
											"src": "3950:10:9"
										},
										"referencedDeclaration": 1576,
										"src": "3950:10:9",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IAntisnipe_$1576",
											"typeString": "contract IAntisnipe"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "e1e144de",
									"id": 1866,
									"mutability": "mutable",
									"name": "antisnipeDisable",
									"nameLocation": "3995:16:9",
									"nodeType": "VariableDeclaration",
									"scope": 3991,
									"src": "3983:28:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 1865,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "3983:4:9",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 1913,
										"nodeType": "Block",
										"src": "4129:205:9",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1887,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 1880,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1875,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1868,
															"src": "4143:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1878,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4159:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1877,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4151:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1876,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4151:7:9",
																	"typeDescriptions": {}
																}
															},
															"id": 1879,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4151:10:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "4143:18:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 1886,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1881,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1870,
															"src": "4165:2:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1884,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4179:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1883,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4171:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1882,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4171:7:9",
																	"typeDescriptions": {}
																}
															},
															"id": 1885,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4171:10:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "4165:16:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4143:38:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1889,
												"nodeType": "IfStatement",
												"src": "4139:51:9",
												"trueBody": {
													"functionReturnParameters": 1874,
													"id": 1888,
													"nodeType": "Return",
													"src": "4183:7:9"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1901,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1891,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "4203:17:9",
														"subExpression": {
															"id": 1890,
															"name": "antisnipeDisable",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1866,
															"src": "4204:16:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 1900,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 1894,
																	"name": "antisnipe",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1864,
																	"src": "4232:9:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IAntisnipe_$1576",
																		"typeString": "contract IAntisnipe"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IAntisnipe_$1576",
																		"typeString": "contract IAntisnipe"
																	}
																],
																"id": 1893,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4224:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1892,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4224:7:9",
																	"typeDescriptions": {}
																}
															},
															"id": 1895,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4224:18:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1898,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4254:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1897,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4246:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1896,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4246:7:9",
																	"typeDescriptions": {}
																}
															},
															"id": 1899,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4246:10:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "4224:32:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4203:53:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1912,
												"nodeType": "IfStatement",
												"src": "4199:128:9",
												"trueBody": {
													"expression": {
														"arguments": [
															{
																"expression": {
																	"id": 1905,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "4298:3:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1906,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "4298:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 1907,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1868,
																"src": "4310:4:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 1908,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1870,
																"src": "4316:2:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 1909,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1872,
																"src": "4320:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 1902,
																"name": "antisnipe",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1864,
																"src": "4270:9:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IAntisnipe_$1576",
																	"typeString": "contract IAntisnipe"
																}
															},
															"id": 1904,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "assureCanTransfer",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1575,
															"src": "4270:27:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
																"typeString": "function (address,address,address,uint256) external"
															}
														},
														"id": 1910,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4270:57:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1911,
													"nodeType": "ExpressionStatement",
													"src": "4270:57:9"
												}
											}
										]
									},
									"id": 1914,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeTokenTransfer",
									"nameLocation": "4027:20:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1873,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1868,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4065:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1914,
												"src": "4057:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1867,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4057:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1870,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4087:2:9",
												"nodeType": "VariableDeclaration",
												"scope": 1914,
												"src": "4079:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1869,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4079:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1872,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "4107:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1914,
												"src": "4099:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1871,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4099:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4047:72:9"
									},
									"returnParameters": {
										"id": 1874,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4129:0:9"
									},
									"scope": 3991,
									"src": "4018:316:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1928,
										"nodeType": "Block",
										"src": "4390:76:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1921,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "4408:17:9",
															"subExpression": {
																"id": 1920,
																"name": "antisnipeDisable",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1866,
																"src": "4409:16:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1919,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4400:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 1922,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4400:26:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1923,
												"nodeType": "ExpressionStatement",
												"src": "4400:26:9"
											},
											{
												"expression": {
													"id": 1926,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1924,
														"name": "antisnipeDisable",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1866,
														"src": "4436:16:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1925,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4455:4:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "4436:23:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1927,
												"nodeType": "ExpressionStatement",
												"src": "4436:23:9"
											}
										]
									},
									"functionSelector": "74fb20e1",
									"id": 1929,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1917,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1916,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "4380:9:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "4380:9:9"
										}
									],
									"name": "setAntisnipeDisable",
									"nameLocation": "4349:19:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1915,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4368:2:9"
									},
									"returnParameters": {
										"id": 1918,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4390:0:9"
									},
									"scope": 3991,
									"src": "4340:126:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1942,
										"nodeType": "Block",
										"src": "4534:45:9",
										"statements": [
											{
												"expression": {
													"id": 1940,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1936,
														"name": "antisnipe",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1864,
														"src": "4544:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IAntisnipe_$1576",
															"typeString": "contract IAntisnipe"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1938,
																"name": "addr",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1931,
																"src": "4567:4:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1937,
															"name": "IAntisnipe",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1576,
															"src": "4556:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IAntisnipe_$1576_$",
																"typeString": "type(contract IAntisnipe)"
															}
														},
														"id": 1939,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4556:16:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IAntisnipe_$1576",
															"typeString": "contract IAntisnipe"
														}
													},
													"src": "4544:28:9",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IAntisnipe_$1576",
														"typeString": "contract IAntisnipe"
													}
												},
												"id": 1941,
												"nodeType": "ExpressionStatement",
												"src": "4544:28:9"
											}
										]
									},
									"functionSelector": "611bf629",
									"id": 1943,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1934,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1933,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "4524:9:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "4524:9:9"
										}
									],
									"name": "setAntisnipeAddress",
									"nameLocation": "4481:19:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1932,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1931,
												"mutability": "mutable",
												"name": "addr",
												"nameLocation": "4509:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1943,
												"src": "4501:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1930,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4501:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4500:14:9"
									},
									"returnParameters": {
										"id": 1935,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4534:0:9"
									},
									"scope": 3991,
									"src": "4472:107:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1950,
										"nodeType": "Block",
										"src": "4637:29:9",
										"statements": [
											{
												"expression": {
													"id": 1948,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1641,
													"src": "4654:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 1947,
												"id": 1949,
												"nodeType": "Return",
												"src": "4647:12:9"
											}
										]
									},
									"functionSelector": "06fdde03",
									"id": 1951,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "4594:4:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1944,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4598:2:9"
									},
									"returnParameters": {
										"id": 1947,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1946,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1951,
												"src": "4622:13:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1945,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4622:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4621:15:9"
									},
									"scope": 3991,
									"src": "4585:81:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1958,
										"nodeType": "Block",
										"src": "4726:31:9",
										"statements": [
											{
												"expression": {
													"id": 1956,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1644,
													"src": "4743:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 1955,
												"id": 1957,
												"nodeType": "Return",
												"src": "4736:14:9"
											}
										]
									},
									"functionSelector": "95d89b41",
									"id": 1959,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "4681:6:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1952,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4687:2:9"
									},
									"returnParameters": {
										"id": 1955,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1954,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1959,
												"src": "4711:13:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1953,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4711:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4710:15:9"
									},
									"scope": 3991,
									"src": "4672:85:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1966,
										"nodeType": "Block",
										"src": "4811:33:9",
										"statements": [
											{
												"expression": {
													"id": 1964,
													"name": "_decimals",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1647,
													"src": "4828:9:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"functionReturnParameters": 1963,
												"id": 1965,
												"nodeType": "Return",
												"src": "4821:16:9"
											}
										]
									},
									"functionSelector": "313ce567",
									"id": 1967,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "4772:8:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1960,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4780:2:9"
									},
									"returnParameters": {
										"id": 1963,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1962,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1967,
												"src": "4804:5:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1961,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "4804:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4803:7:9"
									},
									"scope": 3991,
									"src": "4763:81:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										139
									],
									"body": {
										"id": 1975,
										"nodeType": "Block",
										"src": "4912:31:9",
										"statements": [
											{
												"expression": {
													"id": 1973,
													"name": "_tTotal",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1627,
													"src": "4929:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1972,
												"id": 1974,
												"nodeType": "Return",
												"src": "4922:14:9"
											}
										]
									},
									"functionSelector": "18160ddd",
									"id": 1976,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "4859:11:9",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1969,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4885:8:9"
									},
									"parameters": {
										"id": 1968,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4870:2:9"
									},
									"returnParameters": {
										"id": 1972,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1971,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1976,
												"src": "4903:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1970,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4903:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4902:9:9"
									},
									"scope": 3991,
									"src": "4850:93:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										147
									],
									"body": {
										"id": 1998,
										"nodeType": "Block",
										"src": "5024:120:9",
										"statements": [
											{
												"condition": {
													"baseExpression": {
														"id": 1984,
														"name": "_isExcluded",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1610,
														"src": "5038:11:9",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 1986,
													"indexExpression": {
														"id": 1985,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1978,
														"src": "5050:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5038:20:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1991,
												"nodeType": "IfStatement",
												"src": "5034:49:9",
												"trueBody": {
													"expression": {
														"baseExpression": {
															"id": 1987,
															"name": "_tOwned",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1596,
															"src": "5067:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1989,
														"indexExpression": {
															"id": 1988,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1978,
															"src": "5075:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "5067:16:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"functionReturnParameters": 1983,
													"id": 1990,
													"nodeType": "Return",
													"src": "5060:23:9"
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"baseExpression": {
																"id": 1993,
																"name": "_rOwned",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1592,
																"src": "5120:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 1995,
															"indexExpression": {
																"id": 1994,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1978,
																"src": "5128:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "5120:16:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1992,
														"name": "tokenFromReflection",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2281,
														"src": "5100:19:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) view returns (uint256)"
														}
													},
													"id": 1996,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5100:37:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1983,
												"id": 1997,
												"nodeType": "Return",
												"src": "5093:44:9"
											}
										]
									},
									"functionSelector": "70a08231",
									"id": 1999,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "4958:9:9",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1980,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4997:8:9"
									},
									"parameters": {
										"id": 1979,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1978,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4976:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1999,
												"src": "4968:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1977,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4968:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4967:17:9"
									},
									"returnParameters": {
										"id": 1983,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1982,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1999,
												"src": "5015:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1981,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5015:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5014:9:9"
									},
									"scope": 3991,
									"src": "4949:195:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										157
									],
									"body": {
										"id": 2018,
										"nodeType": "Block",
										"src": "5234:80:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 2010,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 532,
																"src": "5254:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 2011,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5254:12:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2012,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2001,
															"src": "5268:9:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2013,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2003,
															"src": "5279:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2009,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3140,
														"src": "5244:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 2014,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5244:42:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2015,
												"nodeType": "ExpressionStatement",
												"src": "5244:42:9"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 2016,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5303:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 2008,
												"id": 2017,
												"nodeType": "Return",
												"src": "5296:11:9"
											}
										]
									},
									"functionSelector": "a9059cbb",
									"id": 2019,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "5159:8:9",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2005,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5210:8:9"
									},
									"parameters": {
										"id": 2004,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2001,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "5176:9:9",
												"nodeType": "VariableDeclaration",
												"scope": 2019,
												"src": "5168:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2000,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5168:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2003,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "5195:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 2019,
												"src": "5187:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2002,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5187:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5167:35:9"
									},
									"returnParameters": {
										"id": 2008,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2007,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2019,
												"src": "5228:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2006,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5228:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5227:6:9"
									},
									"scope": 3991,
									"src": "5150:164:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										167
									],
									"body": {
										"id": 2035,
										"nodeType": "Block",
										"src": "5446:51:9",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 2029,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1602,
															"src": "5463:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 2031,
														"indexExpression": {
															"id": 2030,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2021,
															"src": "5475:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "5463:18:9",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 2033,
													"indexExpression": {
														"id": 2032,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2023,
														"src": "5482:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5463:27:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2028,
												"id": 2034,
												"nodeType": "Return",
												"src": "5456:34:9"
											}
										]
									},
									"functionSelector": "dd62ed3e",
									"id": 2036,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "5329:9:9",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2025,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5407:8:9"
									},
									"parameters": {
										"id": 2024,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2021,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5347:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 2036,
												"src": "5339:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2020,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5339:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2023,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "5362:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 2036,
												"src": "5354:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2022,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5354:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5338:32:9"
									},
									"returnParameters": {
										"id": 2028,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2027,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2036,
												"src": "5433:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2026,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5433:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5432:9:9"
									},
									"scope": 3991,
									"src": "5320:177:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										177
									],
									"body": {
										"id": 2055,
										"nodeType": "Block",
										"src": "5584:77:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 2047,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 532,
																"src": "5603:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 2048,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5603:12:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2049,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2038,
															"src": "5617:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2050,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2040,
															"src": "5626:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2046,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3018,
														"src": "5594:8:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 2051,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5594:39:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2052,
												"nodeType": "ExpressionStatement",
												"src": "5594:39:9"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 2053,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5650:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 2045,
												"id": 2054,
												"nodeType": "Return",
												"src": "5643:11:9"
											}
										]
									},
									"functionSelector": "095ea7b3",
									"id": 2056,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "5512:7:9",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2042,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5560:8:9"
									},
									"parameters": {
										"id": 2041,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2038,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "5528:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 2056,
												"src": "5520:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2037,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5520:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2040,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "5545:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 2056,
												"src": "5537:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2039,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5537:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5519:33:9"
									},
									"returnParameters": {
										"id": 2045,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2044,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2056,
												"src": "5578:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2043,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5578:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5577:6:9"
									},
									"scope": 3991,
									"src": "5503:158:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										189
									],
									"body": {
										"id": 2092,
										"nodeType": "Block",
										"src": "5801:297:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2069,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2058,
															"src": "5821:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2070,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2060,
															"src": "5829:9:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2071,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2062,
															"src": "5840:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2068,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3140,
														"src": "5811:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 2072,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5811:36:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2073,
												"nodeType": "ExpressionStatement",
												"src": "5811:36:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2075,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2058,
															"src": "5879:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 2076,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 532,
																"src": "5899:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 2077,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5899:12:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 2085,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2062,
																	"src": "5980:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"hexValue": "42455032303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365",
																	"id": 2086,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6004:42:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_4f3506f4ba71c79c3cbd442a3afeb30e9b27af2d84e116a4385b34e267d2287e",
																		"typeString": "literal_string \"BEP20: transfer amount exceeds allowance\""
																	},
																	"value": "BEP20: transfer amount exceeds allowance"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_4f3506f4ba71c79c3cbd442a3afeb30e9b27af2d84e116a4385b34e267d2287e",
																		"typeString": "literal_string \"BEP20: transfer amount exceeds allowance\""
																	}
																],
																"expression": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 2078,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1602,
																			"src": "5925:11:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 2080,
																		"indexExpression": {
																			"id": 2079,
																			"name": "sender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2058,
																			"src": "5937:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "5925:19:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 2083,
																	"indexExpression": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 2081,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 532,
																			"src": "5945:10:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 2082,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5945:12:9",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "5925:33:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 2084,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 803,
																"src": "5925:37:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
																}
															},
															"id": 2087,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5925:135:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2074,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3018,
														"src": "5857:8:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 2088,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5857:213:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2089,
												"nodeType": "ExpressionStatement",
												"src": "5857:213:9"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 2090,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "6087:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 2067,
												"id": 2091,
												"nodeType": "Return",
												"src": "6080:11:9"
											}
										]
									},
									"functionSelector": "23b872dd",
									"id": 2093,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "5676:12:9",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2064,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5777:8:9"
									},
									"parameters": {
										"id": 2063,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2058,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5706:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 2093,
												"src": "5698:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2057,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5698:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2060,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "5730:9:9",
												"nodeType": "VariableDeclaration",
												"scope": 2093,
												"src": "5722:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2059,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5722:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2062,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "5757:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 2093,
												"src": "5749:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2061,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5749:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5688:81:9"
									},
									"returnParameters": {
										"id": 2067,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2066,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2093,
												"src": "5795:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2065,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5795:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5794:6:9"
									},
									"scope": 3991,
									"src": "5667:431:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2119,
										"nodeType": "Block",
										"src": "6226:167:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 2103,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 532,
																"src": "6258:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 2104,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6258:12:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2105,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2095,
															"src": "6284:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 2113,
																	"name": "addedValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2097,
																	"src": "6344:10:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 2106,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1602,
																			"src": "6305:11:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 2109,
																		"indexExpression": {
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 2107,
																				"name": "_msgSender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 532,
																				"src": "6317:10:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																					"typeString": "function () view returns (address)"
																				}
																			},
																			"id": 2108,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6317:12:9",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "6305:25:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 2111,
																	"indexExpression": {
																		"id": 2110,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2095,
																		"src": "6331:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "6305:34:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 2112,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "add",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 718,
																"src": "6305:38:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 2114,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6305:50:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2102,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3018,
														"src": "6236:8:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 2115,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6236:129:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2116,
												"nodeType": "ExpressionStatement",
												"src": "6236:129:9"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 2117,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "6382:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 2101,
												"id": 2118,
												"nodeType": "Return",
												"src": "6375:11:9"
											}
										]
									},
									"functionSelector": "39509351",
									"id": 2120,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "increaseAllowance",
									"nameLocation": "6113:17:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2098,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2095,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "6139:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 2120,
												"src": "6131:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2094,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6131:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2097,
												"mutability": "mutable",
												"name": "addedValue",
												"nameLocation": "6156:10:9",
												"nodeType": "VariableDeclaration",
												"scope": 2120,
												"src": "6148:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2096,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6148:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6130:37:9"
									},
									"returnParameters": {
										"id": 2101,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2100,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2120,
												"src": "6216:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2099,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6216:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6215:6:9"
									},
									"scope": 3991,
									"src": "6104:289:9",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2147,
										"nodeType": "Block",
										"src": "6526:259:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 2130,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 532,
																"src": "6558:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 2131,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6558:12:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2132,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2122,
															"src": "6584:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 2140,
																	"name": "subtractedValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2124,
																	"src": "6661:15:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"hexValue": "42455032303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
																	"id": 2141,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6694:39:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_b7060b3538dcd3ddc8a941c91636a8115a1aa46914747fd9809d543bbb46cd22",
																		"typeString": "literal_string \"BEP20: decreased allowance below zero\""
																	},
																	"value": "BEP20: decreased allowance below zero"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_b7060b3538dcd3ddc8a941c91636a8115a1aa46914747fd9809d543bbb46cd22",
																		"typeString": "literal_string \"BEP20: decreased allowance below zero\""
																	}
																],
																"expression": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 2133,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1602,
																			"src": "6605:11:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 2136,
																		"indexExpression": {
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 2134,
																				"name": "_msgSender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 532,
																				"src": "6617:10:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																					"typeString": "function () view returns (address)"
																				}
																			},
																			"id": 2135,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6617:12:9",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "6605:25:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 2138,
																	"indexExpression": {
																		"id": 2137,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2122,
																		"src": "6631:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "6605:34:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 2139,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 803,
																"src": "6605:38:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
																}
															},
															"id": 2142,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6605:142:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2129,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3018,
														"src": "6536:8:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 2143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6536:221:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2144,
												"nodeType": "ExpressionStatement",
												"src": "6536:221:9"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 2145,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "6774:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 2128,
												"id": 2146,
												"nodeType": "Return",
												"src": "6767:11:9"
											}
										]
									},
									"functionSelector": "a457c2d7",
									"id": 2148,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decreaseAllowance",
									"nameLocation": "6408:17:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2125,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2122,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "6434:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 2148,
												"src": "6426:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2121,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6426:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2124,
												"mutability": "mutable",
												"name": "subtractedValue",
												"nameLocation": "6451:15:9",
												"nodeType": "VariableDeclaration",
												"scope": 2148,
												"src": "6443:23:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2123,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6443:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6425:42:9"
									},
									"returnParameters": {
										"id": 2128,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2127,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2148,
												"src": "6516:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2126,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6516:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6515:6:9"
									},
									"scope": 3991,
									"src": "6399:386:9",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2159,
										"nodeType": "Block",
										"src": "6865:44:9",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 2155,
														"name": "_isExcluded",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1610,
														"src": "6882:11:9",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 2157,
													"indexExpression": {
														"id": 2156,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2150,
														"src": "6894:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "6882:20:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2154,
												"id": 2158,
												"nodeType": "Return",
												"src": "6875:27:9"
											}
										]
									},
									"functionSelector": "88f82020",
									"id": 2160,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isExcludedFromReward",
									"nameLocation": "6800:20:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2151,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2150,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "6829:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 2160,
												"src": "6821:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2149,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6821:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6820:17:9"
									},
									"returnParameters": {
										"id": 2154,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2153,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2160,
												"src": "6859:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2152,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6859:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6858:6:9"
									},
									"scope": 3991,
									"src": "6791:118:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2167,
										"nodeType": "Block",
										"src": "6966:34:9",
										"statements": [
											{
												"expression": {
													"id": 2165,
													"name": "_tFeeTotal",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1638,
													"src": "6983:10:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2164,
												"id": 2166,
												"nodeType": "Return",
												"src": "6976:17:9"
											}
										]
									},
									"functionSelector": "13114a9d",
									"id": 2168,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalFees",
									"nameLocation": "6924:9:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2161,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6933:2:9"
									},
									"returnParameters": {
										"id": 2164,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2163,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2168,
												"src": "6957:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2162,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6957:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6956:9:9"
									},
									"scope": 3991,
									"src": "6915:85:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2217,
										"nodeType": "Block",
										"src": "7047:334:9",
										"statements": [
											{
												"assignments": [
													2174
												],
												"declarations": [
													{
														"constant": false,
														"id": 2174,
														"mutability": "mutable",
														"name": "sender",
														"nameLocation": "7065:6:9",
														"nodeType": "VariableDeclaration",
														"scope": 2217,
														"src": "7057:14:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 2173,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "7057:7:9",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2177,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 2175,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 532,
														"src": "7074:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 2176,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7074:12:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7057:29:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2182,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "7104:20:9",
															"subExpression": {
																"baseExpression": {
																	"id": 2179,
																	"name": "_isExcluded",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1610,
																	"src": "7105:11:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																		"typeString": "mapping(address => bool)"
																	}
																},
																"id": 2181,
																"indexExpression": {
																	"id": 2180,
																	"name": "sender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2174,
																	"src": "7117:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "7105:19:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4578636c75646564206164647265737365732063616e6e6f742063616c6c20746869732066756e6374696f6e",
															"id": 2183,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7126:46:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ecefcaf5fbcf9ca6dcdb02298ba1da96f4ead317b0a4779917ecb2e5e7dc3ac4",
																"typeString": "literal_string \"Excluded addresses cannot call this function\""
															},
															"value": "Excluded addresses cannot call this function"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ecefcaf5fbcf9ca6dcdb02298ba1da96f4ead317b0a4779917ecb2e5e7dc3ac4",
																"typeString": "literal_string \"Excluded addresses cannot call this function\""
															}
														],
														"id": 2178,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7096:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2184,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7096:77:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2185,
												"nodeType": "ExpressionStatement",
												"src": "7096:77:9"
											},
											{
												"assignments": [
													2187,
													null,
													null,
													null,
													null,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 2187,
														"mutability": "mutable",
														"name": "rAmount",
														"nameLocation": "7192:7:9",
														"nodeType": "VariableDeclaration",
														"scope": 2217,
														"src": "7184:15:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2186,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7184:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													null,
													null,
													null,
													null,
													null
												],
												"id": 2191,
												"initialValue": {
													"arguments": [
														{
															"id": 2189,
															"name": "tAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2170,
															"src": "7224:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2188,
														"name": "_getValues",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2561,
														"src": "7213:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
															"typeString": "function (uint256) view returns (uint256,uint256,uint256,uint256,uint256,uint256)"
														}
													},
													"id": 2190,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7213:19:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256,uint256,uint256,uint256,uint256)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7183:49:9"
											},
											{
												"expression": {
													"id": 2201,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2192,
															"name": "_rOwned",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1592,
															"src": "7242:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 2194,
														"indexExpression": {
															"id": 2193,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2174,
															"src": "7250:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "7242:15:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2199,
																"name": "rAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2187,
																"src": "7280:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 2195,
																	"name": "_rOwned",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1592,
																	"src": "7260:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 2197,
																"indexExpression": {
																	"id": 2196,
																	"name": "sender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2174,
																	"src": "7268:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "7260:15:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2198,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 733,
															"src": "7260:19:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 2200,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7260:28:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7242:46:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2202,
												"nodeType": "ExpressionStatement",
												"src": "7242:46:9"
											},
											{
												"expression": {
													"id": 2208,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2203,
														"name": "_rTotal",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1636,
														"src": "7298:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2206,
																"name": "rAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2187,
																"src": "7320:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 2204,
																"name": "_rTotal",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1636,
																"src": "7308:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2205,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 733,
															"src": "7308:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 2207,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7308:20:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7298:30:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2209,
												"nodeType": "ExpressionStatement",
												"src": "7298:30:9"
											},
											{
												"expression": {
													"id": 2215,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2210,
														"name": "_tFeeTotal",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1638,
														"src": "7338:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2213,
																"name": "tAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2170,
																"src": "7366:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 2211,
																"name": "_tFeeTotal",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1638,
																"src": "7351:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2212,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 718,
															"src": "7351:14:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 2214,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7351:23:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7338:36:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2216,
												"nodeType": "ExpressionStatement",
												"src": "7338:36:9"
											}
										]
									},
									"functionSelector": "3bd5d173",
									"id": 2218,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "deliver",
									"nameLocation": "7015:7:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2171,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2170,
												"mutability": "mutable",
												"name": "tAmount",
												"nameLocation": "7031:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 2218,
												"src": "7023:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2169,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7023:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7022:17:9"
									},
									"returnParameters": {
										"id": 2172,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7047:0:9"
									},
									"scope": 3991,
									"src": "7006:375:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2255,
										"nodeType": "Block",
										"src": "7515:338:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2230,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2228,
																"name": "tAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2220,
																"src": "7533:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 2229,
																"name": "_tTotal",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1627,
																"src": "7544:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7533:18:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416d6f756e74206d757374206265206c657373207468616e20737570706c79",
															"id": 2231,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7553:33:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6c3d5d630711c57d95621b0547fb0a19eab6922a3a0e7e9054d9f9c5458b757b",
																"typeString": "literal_string \"Amount must be less than supply\""
															},
															"value": "Amount must be less than supply"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6c3d5d630711c57d95621b0547fb0a19eab6922a3a0e7e9054d9f9c5458b757b",
																"typeString": "literal_string \"Amount must be less than supply\""
															}
														],
														"id": 2227,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7525:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2232,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7525:62:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2233,
												"nodeType": "ExpressionStatement",
												"src": "7525:62:9"
											},
											{
												"condition": {
													"id": 2235,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "7601:18:9",
													"subExpression": {
														"id": 2234,
														"name": "deductTransferFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2222,
														"src": "7602:17:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 2253,
													"nodeType": "Block",
													"src": "7729:118:9",
													"statements": [
														{
															"assignments": [
																null,
																2246,
																null,
																null,
																null,
																null
															],
															"declarations": [
																null,
																{
																	"constant": false,
																	"id": 2246,
																	"mutability": "mutable",
																	"name": "rTransferAmount",
																	"nameLocation": "7754:15:9",
																	"nodeType": "VariableDeclaration",
																	"scope": 2253,
																	"src": "7746:23:9",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 2245,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "7746:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																},
																null,
																null,
																null,
																null
															],
															"id": 2250,
															"initialValue": {
																"arguments": [
																	{
																		"id": 2248,
																		"name": "tAmount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2220,
																		"src": "7792:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2247,
																	"name": "_getValues",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2561,
																	"src": "7781:10:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
																		"typeString": "function (uint256) view returns (uint256,uint256,uint256,uint256,uint256,uint256)"
																	}
																},
																"id": 2249,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7781:19:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
																	"typeString": "tuple(uint256,uint256,uint256,uint256,uint256,uint256)"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "7743:57:9"
														},
														{
															"expression": {
																"id": 2251,
																"name": "rTransferAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2246,
																"src": "7821:15:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 2226,
															"id": 2252,
															"nodeType": "Return",
															"src": "7814:22:9"
														}
													]
												},
												"id": 2254,
												"nodeType": "IfStatement",
												"src": "7597:250:9",
												"trueBody": {
													"id": 2244,
													"nodeType": "Block",
													"src": "7621:102:9",
													"statements": [
														{
															"assignments": [
																2237,
																null,
																null,
																null,
																null,
																null
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2237,
																	"mutability": "mutable",
																	"name": "rAmount",
																	"nameLocation": "7644:7:9",
																	"nodeType": "VariableDeclaration",
																	"scope": 2244,
																	"src": "7636:15:9",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 2236,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "7636:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																},
																null,
																null,
																null,
																null,
																null
															],
															"id": 2241,
															"initialValue": {
																"arguments": [
																	{
																		"id": 2239,
																		"name": "tAmount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2220,
																		"src": "7676:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2238,
																	"name": "_getValues",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2561,
																	"src": "7665:10:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
																		"typeString": "function (uint256) view returns (uint256,uint256,uint256,uint256,uint256,uint256)"
																	}
																},
																"id": 2240,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7665:19:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
																	"typeString": "tuple(uint256,uint256,uint256,uint256,uint256,uint256)"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "7635:49:9"
														},
														{
															"expression": {
																"id": 2242,
																"name": "rAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2237,
																"src": "7705:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 2226,
															"id": 2243,
															"nodeType": "Return",
															"src": "7698:14:9"
														}
													]
												}
											}
										]
									},
									"functionSelector": "4549b039",
									"id": 2256,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "reflectionFromToken",
									"nameLocation": "7396:19:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2223,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2220,
												"mutability": "mutable",
												"name": "tAmount",
												"nameLocation": "7424:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 2256,
												"src": "7416:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2219,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7416:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2222,
												"mutability": "mutable",
												"name": "deductTransferFee",
												"nameLocation": "7438:17:9",
												"nodeType": "VariableDeclaration",
												"scope": 2256,
												"src": "7433:22:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2221,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7433:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7415:41:9"
									},
									"returnParameters": {
										"id": 2226,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2225,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2256,
												"src": "7502:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2224,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7502:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7501:9:9"
									},
									"scope": 3991,
									"src": "7387:466:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2280,
										"nodeType": "Block",
										"src": "7935:173:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2266,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2264,
																"name": "rAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2258,
																"src": "7953:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 2265,
																"name": "_rTotal",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1636,
																"src": "7964:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7953:18:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416d6f756e74206d757374206265206c657373207468616e20746f74616c207265666c656374696f6e73",
															"id": 2267,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7973:44:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_22f7af55a509c3b14f0d528f087748dec8a8bf425135e3f5dc28c6a31ec6d812",
																"typeString": "literal_string \"Amount must be less than total reflections\""
															},
															"value": "Amount must be less than total reflections"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_22f7af55a509c3b14f0d528f087748dec8a8bf425135e3f5dc28c6a31ec6d812",
																"typeString": "literal_string \"Amount must be less than total reflections\""
															}
														],
														"id": 2263,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7945:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2268,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7945:73:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2269,
												"nodeType": "ExpressionStatement",
												"src": "7945:73:9"
											},
											{
												"assignments": [
													2271
												],
												"declarations": [
													{
														"constant": false,
														"id": 2271,
														"mutability": "mutable",
														"name": "currentRate",
														"nameLocation": "8036:11:9",
														"nodeType": "VariableDeclaration",
														"scope": 2280,
														"src": "8028:19:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2270,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8028:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2274,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 2272,
														"name": "_getRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2672,
														"src": "8050:8:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
															"typeString": "function () view returns (uint256)"
														}
													},
													"id": 2273,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8050:10:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8028:32:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2277,
															"name": "currentRate",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2271,
															"src": "8089:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 2275,
															"name": "rAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2258,
															"src": "8077:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2276,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 763,
														"src": "8077:11:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 2278,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8077:24:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2262,
												"id": 2279,
												"nodeType": "Return",
												"src": "8070:31:9"
											}
										]
									},
									"functionSelector": "2d838119",
									"id": 2281,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tokenFromReflection",
									"nameLocation": "7868:19:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2259,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2258,
												"mutability": "mutable",
												"name": "rAmount",
												"nameLocation": "7896:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 2281,
												"src": "7888:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2257,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7888:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7887:17:9"
									},
									"returnParameters": {
										"id": 2262,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2261,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2281,
												"src": "7926:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2260,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7926:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7925:9:9"
									},
									"scope": 3991,
									"src": "7859:249:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2335,
										"nodeType": "Block",
										"src": "8175:390:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2294,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2289,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2283,
																"src": "8206:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"id": 2292,
																		"name": "pancakeV2Router",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1704,
																		"src": "8225:15:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IPancakeV2Router02_$1555",
																			"typeString": "contract IPancakeV2Router02"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IPancakeV2Router02_$1555",
																			"typeString": "contract IPancakeV2Router02"
																		}
																	],
																	"id": 2291,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8217:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2290,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "8217:7:9",
																		"typeDescriptions": {}
																	}
																},
																"id": 2293,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8217:24:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "8206:35:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "57652063616e206e6f74206578636c7564652050616e63616b6520726f757465722e",
															"id": 2295,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8255:36:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d0a40029d4e86ac52d6424ca86b4163ba68013d9247da73177a5c17cc02bf0ce",
																"typeString": "literal_string \"We can not exclude Pancake router.\""
															},
															"value": "We can not exclude Pancake router."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d0a40029d4e86ac52d6424ca86b4163ba68013d9247da73177a5c17cc02bf0ce",
																"typeString": "literal_string \"We can not exclude Pancake router.\""
															}
														],
														"id": 2288,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8185:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2296,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8185:116:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2297,
												"nodeType": "ExpressionStatement",
												"src": "8185:116:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2302,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "8319:21:9",
															"subExpression": {
																"baseExpression": {
																	"id": 2299,
																	"name": "_isExcluded",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1610,
																	"src": "8320:11:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																		"typeString": "mapping(address => bool)"
																	}
																},
																"id": 2301,
																"indexExpression": {
																	"id": 2300,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2283,
																	"src": "8332:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "8320:20:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4163636f756e7420697320616c7265616479206578636c75646564",
															"id": 2303,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8342:29:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_40ff67f743a73c63981ce97facdb4b14324f60afa0e3049344c62414448ff258",
																"typeString": "literal_string \"Account is already excluded\""
															},
															"value": "Account is already excluded"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_40ff67f743a73c63981ce97facdb4b14324f60afa0e3049344c62414448ff258",
																"typeString": "literal_string \"Account is already excluded\""
															}
														],
														"id": 2298,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8311:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2304,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8311:61:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2305,
												"nodeType": "ExpressionStatement",
												"src": "8311:61:9"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2310,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"id": 2306,
															"name": "_rOwned",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1592,
															"src": "8386:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 2308,
														"indexExpression": {
															"id": 2307,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2283,
															"src": "8394:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "8386:16:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 2309,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8405:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8386:20:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2322,
												"nodeType": "IfStatement",
												"src": "8382:107:9",
												"trueBody": {
													"id": 2321,
													"nodeType": "Block",
													"src": "8408:81:9",
													"statements": [
														{
															"expression": {
																"id": 2319,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 2311,
																		"name": "_tOwned",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1596,
																		"src": "8422:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 2313,
																	"indexExpression": {
																		"id": 2312,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2283,
																		"src": "8430:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "8422:16:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"baseExpression": {
																				"id": 2315,
																				"name": "_rOwned",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1592,
																				"src": "8461:7:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 2317,
																			"indexExpression": {
																				"id": 2316,
																				"name": "account",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2283,
																				"src": "8469:7:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "8461:16:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 2314,
																		"name": "tokenFromReflection",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2281,
																		"src": "8441:19:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) view returns (uint256)"
																		}
																	},
																	"id": 2318,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8441:37:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "8422:56:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2320,
															"nodeType": "ExpressionStatement",
															"src": "8422:56:9"
														}
													]
												}
											},
											{
												"expression": {
													"id": 2327,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2323,
															"name": "_isExcluded",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1610,
															"src": "8498:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 2325,
														"indexExpression": {
															"id": 2324,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2283,
															"src": "8510:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "8498:20:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 2326,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8521:4:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "8498:27:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2328,
												"nodeType": "ExpressionStatement",
												"src": "8498:27:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2332,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2283,
															"src": "8550:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 2329,
															"name": "_excluded",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1613,
															"src": "8535:9:9",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														},
														"id": 2331,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "8535:14:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
															"typeString": "function (address[] storage pointer,address)"
														}
													},
													"id": 2333,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8535:23:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2334,
												"nodeType": "ExpressionStatement",
												"src": "8535:23:9"
											}
										]
									},
									"functionSelector": "52390c02",
									"id": 2336,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2286,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2285,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "8165:9:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "8165:9:9"
										}
									],
									"name": "excludeFromReward",
									"nameLocation": "8123:17:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2284,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2283,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8149:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 2336,
												"src": "8141:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2282,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8141:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8140:17:9"
									},
									"returnParameters": {
										"id": 2287,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8175:0:9"
									},
									"scope": 3991,
									"src": "8114:451:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2399,
										"nodeType": "Block",
										"src": "8632:405:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"baseExpression": {
																"id": 2344,
																"name": "_isExcluded",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1610,
																"src": "8650:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																	"typeString": "mapping(address => bool)"
																}
															},
															"id": 2346,
															"indexExpression": {
																"id": 2345,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2338,
																"src": "8662:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "8650:20:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4163636f756e7420697320616c7265616479206578636c75646564",
															"id": 2347,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8672:29:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_40ff67f743a73c63981ce97facdb4b14324f60afa0e3049344c62414448ff258",
																"typeString": "literal_string \"Account is already excluded\""
															},
															"value": "Account is already excluded"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_40ff67f743a73c63981ce97facdb4b14324f60afa0e3049344c62414448ff258",
																"typeString": "literal_string \"Account is already excluded\""
															}
														],
														"id": 2343,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8642:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2348,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8642:60:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2349,
												"nodeType": "ExpressionStatement",
												"src": "8642:60:9"
											},
											{
												"body": {
													"id": 2397,
													"nodeType": "Block",
													"src": "8759:272:9",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 2365,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"id": 2361,
																		"name": "_excluded",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1613,
																		"src": "8777:9:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_address_$dyn_storage",
																			"typeString": "address[] storage ref"
																		}
																	},
																	"id": 2363,
																	"indexExpression": {
																		"id": 2362,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2351,
																		"src": "8787:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "8777:12:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 2364,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2338,
																	"src": "8793:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "8777:23:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2396,
															"nodeType": "IfStatement",
															"src": "8773:248:9",
															"trueBody": {
																"id": 2395,
																"nodeType": "Block",
																"src": "8802:219:9",
																"statements": [
																	{
																		"expression": {
																			"id": 2375,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"baseExpression": {
																					"id": 2366,
																					"name": "_excluded",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1613,
																					"src": "8820:9:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_address_$dyn_storage",
																						"typeString": "address[] storage ref"
																					}
																				},
																				"id": 2368,
																				"indexExpression": {
																					"id": 2367,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2351,
																					"src": "8830:1:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "8820:12:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"baseExpression": {
																					"id": 2369,
																					"name": "_excluded",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1613,
																					"src": "8835:9:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_address_$dyn_storage",
																						"typeString": "address[] storage ref"
																					}
																				},
																				"id": 2374,
																				"indexExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2373,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"expression": {
																							"id": 2370,
																							"name": "_excluded",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1613,
																							"src": "8845:9:9",
																							"typeDescriptions": {
																								"typeIdentifier": "t_array$_t_address_$dyn_storage",
																								"typeString": "address[] storage ref"
																							}
																						},
																						"id": 2371,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "length",
																						"nodeType": "MemberAccess",
																						"src": "8845:16:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "-",
																					"rightExpression": {
																						"hexValue": "31",
																						"id": 2372,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "8864:1:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"src": "8845:20:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "8835:31:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"src": "8820:46:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"id": 2376,
																		"nodeType": "ExpressionStatement",
																		"src": "8820:46:9"
																	},
																	{
																		"expression": {
																			"id": 2381,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"baseExpression": {
																					"id": 2377,
																					"name": "_tOwned",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1596,
																					"src": "8884:7:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																						"typeString": "mapping(address => uint256)"
																					}
																				},
																				"id": 2379,
																				"indexExpression": {
																					"id": 2378,
																					"name": "account",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2338,
																					"src": "8892:7:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "8884:16:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"hexValue": "30",
																				"id": 2380,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8903:1:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "8884:20:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 2382,
																		"nodeType": "ExpressionStatement",
																		"src": "8884:20:9"
																	},
																	{
																		"expression": {
																			"id": 2387,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"baseExpression": {
																					"id": 2383,
																					"name": "_isExcluded",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1610,
																					"src": "8922:11:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																						"typeString": "mapping(address => bool)"
																					}
																				},
																				"id": 2385,
																				"indexExpression": {
																					"id": 2384,
																					"name": "account",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2338,
																					"src": "8934:7:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "8922:20:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"hexValue": "66616c7365",
																				"id": 2386,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8945:5:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			},
																			"src": "8922:28:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 2388,
																		"nodeType": "ExpressionStatement",
																		"src": "8922:28:9"
																	},
																	{
																		"expression": {
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"expression": {
																					"id": 2389,
																					"name": "_excluded",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1613,
																					"src": "8968:9:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_address_$dyn_storage",
																						"typeString": "address[] storage ref"
																					}
																				},
																				"id": 2391,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "pop",
																				"nodeType": "MemberAccess",
																				"src": "8968:13:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_arraypop_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
																					"typeString": "function (address[] storage pointer)"
																				}
																			},
																			"id": 2392,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8968:15:9",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 2393,
																		"nodeType": "ExpressionStatement",
																		"src": "8968:15:9"
																	},
																	{
																		"id": 2394,
																		"nodeType": "Break",
																		"src": "9001:5:9"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2357,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2354,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2351,
														"src": "8732:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 2355,
															"name": "_excluded",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1613,
															"src": "8736:9:9",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														},
														"id": 2356,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "8736:16:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8732:20:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2398,
												"initializationExpression": {
													"assignments": [
														2351
													],
													"declarations": [
														{
															"constant": false,
															"id": 2351,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "8725:1:9",
															"nodeType": "VariableDeclaration",
															"scope": 2398,
															"src": "8717:9:9",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 2350,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "8717:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 2353,
													"initialValue": {
														"hexValue": "30",
														"id": 2352,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8729:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "8717:13:9"
												},
												"loopExpression": {
													"expression": {
														"id": 2359,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "8754:3:9",
														"subExpression": {
															"id": 2358,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2351,
															"src": "8754:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2360,
													"nodeType": "ExpressionStatement",
													"src": "8754:3:9"
												},
												"nodeType": "ForStatement",
												"src": "8712:319:9"
											}
										]
									},
									"functionSelector": "3685d419",
									"id": 2400,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2341,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2340,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "8622:9:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "8622:9:9"
										}
									],
									"name": "includeInReward",
									"nameLocation": "8580:15:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2339,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2338,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8604:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 2400,
												"src": "8596:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2337,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8596:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8595:17:9"
									},
									"returnParameters": {
										"id": 2342,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8632:0:9"
									},
									"scope": 3991,
									"src": "8571:466:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2484,
										"nodeType": "Block",
										"src": "9164:616:9",
										"statements": [
											{
												"assignments": [
													2410,
													2412,
													2414,
													2416,
													2418,
													2420
												],
												"declarations": [
													{
														"constant": false,
														"id": 2410,
														"mutability": "mutable",
														"name": "rAmount",
														"nameLocation": "9196:7:9",
														"nodeType": "VariableDeclaration",
														"scope": 2484,
														"src": "9188:15:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2409,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9188:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2412,
														"mutability": "mutable",
														"name": "rTransferAmount",
														"nameLocation": "9225:15:9",
														"nodeType": "VariableDeclaration",
														"scope": 2484,
														"src": "9217:23:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2411,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9217:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2414,
														"mutability": "mutable",
														"name": "rFee",
														"nameLocation": "9262:4:9",
														"nodeType": "VariableDeclaration",
														"scope": 2484,
														"src": "9254:12:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2413,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9254:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2416,
														"mutability": "mutable",
														"name": "tTransferAmount",
														"nameLocation": "9288:15:9",
														"nodeType": "VariableDeclaration",
														"scope": 2484,
														"src": "9280:23:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2415,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9280:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2418,
														"mutability": "mutable",
														"name": "tFee",
														"nameLocation": "9325:4:9",
														"nodeType": "VariableDeclaration",
														"scope": 2484,
														"src": "9317:12:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2417,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9317:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2420,
														"mutability": "mutable",
														"name": "tLiquidity",
														"nameLocation": "9351:10:9",
														"nodeType": "VariableDeclaration",
														"scope": 2484,
														"src": "9343:18:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2419,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9343:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2424,
												"initialValue": {
													"arguments": [
														{
															"id": 2422,
															"name": "tAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2406,
															"src": "9385:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2421,
														"name": "_getValues",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2561,
														"src": "9374:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
															"typeString": "function (uint256) view returns (uint256,uint256,uint256,uint256,uint256,uint256)"
														}
													},
													"id": 2423,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9374:19:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256,uint256,uint256,uint256,uint256)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9174:219:9"
											},
											{
												"expression": {
													"id": 2434,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2425,
															"name": "_tOwned",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1596,
															"src": "9403:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 2427,
														"indexExpression": {
															"id": 2426,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2402,
															"src": "9411:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9403:15:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2432,
																"name": "tAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2406,
																"src": "9441:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 2428,
																	"name": "_tOwned",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1596,
																	"src": "9421:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 2430,
																"indexExpression": {
																	"id": 2429,
																	"name": "sender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2402,
																	"src": "9429:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "9421:15:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2431,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 733,
															"src": "9421:19:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 2433,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9421:28:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9403:46:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2435,
												"nodeType": "ExpressionStatement",
												"src": "9403:46:9"
											},
											{
												"expression": {
													"id": 2445,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2436,
															"name": "_rOwned",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1592,
															"src": "9459:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 2438,
														"indexExpression": {
															"id": 2437,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2402,
															"src": "9467:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9459:15:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2443,
																"name": "rAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2410,
																"src": "9497:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 2439,
																	"name": "_rOwned",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1592,
																	"src": "9477:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 2441,
																"indexExpression": {
																	"id": 2440,
																	"name": "sender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2402,
																	"src": "9485:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "9477:15:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2442,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 733,
															"src": "9477:19:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 2444,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9477:28:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9459:46:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2446,
												"nodeType": "ExpressionStatement",
												"src": "9459:46:9"
											},
											{
												"expression": {
													"id": 2456,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2447,
															"name": "_tOwned",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1596,
															"src": "9515:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 2449,
														"indexExpression": {
															"id": 2448,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2404,
															"src": "9523:9:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9515:18:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2454,
																"name": "tTransferAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2416,
																"src": "9559:15:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 2450,
																	"name": "_tOwned",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1596,
																	"src": "9536:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 2452,
																"indexExpression": {
																	"id": 2451,
																	"name": "recipient",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2404,
																	"src": "9544:9:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "9536:18:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2453,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 718,
															"src": "9536:22:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 2455,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9536:39:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9515:60:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2457,
												"nodeType": "ExpressionStatement",
												"src": "9515:60:9"
											},
											{
												"expression": {
													"id": 2467,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2458,
															"name": "_rOwned",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1592,
															"src": "9585:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 2460,
														"indexExpression": {
															"id": 2459,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2404,
															"src": "9593:9:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9585:18:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2465,
																"name": "rTransferAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2412,
																"src": "9629:15:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 2461,
																	"name": "_rOwned",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1592,
																	"src": "9606:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 2463,
																"indexExpression": {
																	"id": 2462,
																	"name": "recipient",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2404,
																	"src": "9614:9:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "9606:18:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2464,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 718,
															"src": "9606:22:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 2466,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9606:39:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9585:60:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2468,
												"nodeType": "ExpressionStatement",
												"src": "9585:60:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2470,
															"name": "tLiquidity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2420,
															"src": "9670:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2469,
														"name": "_takeLiquidity",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2817,
														"src": "9655:14:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 2471,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9655:26:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2472,
												"nodeType": "ExpressionStatement",
												"src": "9655:26:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2474,
															"name": "rFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2414,
															"src": "9703:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2475,
															"name": "tFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2418,
															"src": "9709:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2473,
														"name": "_reflectFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2511,
														"src": "9691:11:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256)"
														}
													},
													"id": 2476,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9691:23:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2477,
												"nodeType": "ExpressionStatement",
												"src": "9691:23:9"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2479,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2402,
															"src": "9738:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2480,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2404,
															"src": "9746:9:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2481,
															"name": "tTransferAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2416,
															"src": "9757:15:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2478,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 124,
														"src": "9729:8:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 2482,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9729:44:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2483,
												"nodeType": "EmitStatement",
												"src": "9724:49:9"
											}
										]
									},
									"id": 2485,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferBothExcluded",
									"nameLocation": "9052:21:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2407,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2402,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "9091:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 2485,
												"src": "9083:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2401,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9083:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2404,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "9115:9:9",
												"nodeType": "VariableDeclaration",
												"scope": 2485,
												"src": "9107:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2403,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9107:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2406,
												"mutability": "mutable",
												"name": "tAmount",
												"nameLocation": "9142:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 2485,
												"src": "9134:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2405,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9134:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9073:82:9"
									},
									"returnParameters": {
										"id": 2408,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9164:0:9"
									},
									"scope": 3991,
									"src": "9043:737:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 2488,
										"nodeType": "Block",
										"src": "9869:2:9",
										"statements": []
									},
									"id": 2489,
									"implemented": true,
									"kind": "receive",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2486,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9849:2:9"
									},
									"returnParameters": {
										"id": 2487,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9869:0:9"
									},
									"scope": 3991,
									"src": "9842:29:9",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2510,
										"nodeType": "Block",
										"src": "9934:87:9",
										"statements": [
											{
												"expression": {
													"id": 2501,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2496,
														"name": "_rTotal",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1636,
														"src": "9944:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2499,
																"name": "rFee",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2491,
																"src": "9966:4:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 2497,
																"name": "_rTotal",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1636,
																"src": "9954:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2498,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 733,
															"src": "9954:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 2500,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9954:17:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9944:27:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2502,
												"nodeType": "ExpressionStatement",
												"src": "9944:27:9"
											},
											{
												"expression": {
													"id": 2508,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2503,
														"name": "_tFeeTotal",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1638,
														"src": "9981:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2506,
																"name": "tFee",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2493,
																"src": "10009:4:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 2504,
																"name": "_tFeeTotal",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1638,
																"src": "9994:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2505,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 718,
															"src": "9994:14:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 2507,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9994:20:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9981:33:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2509,
												"nodeType": "ExpressionStatement",
												"src": "9981:33:9"
											}
										]
									},
									"id": 2511,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_reflectFee",
									"nameLocation": "9886:11:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2494,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2491,
												"mutability": "mutable",
												"name": "rFee",
												"nameLocation": "9906:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 2511,
												"src": "9898:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2490,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9898:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2493,
												"mutability": "mutable",
												"name": "tFee",
												"nameLocation": "9920:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 2511,
												"src": "9912:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2492,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9912:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9897:28:9"
									},
									"returnParameters": {
										"id": 2495,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9934:0:9"
									},
									"scope": 3991,
									"src": "9877:144:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 2560,
										"nodeType": "Block",
										"src": "10250:382:9",
										"statements": [
											{
												"assignments": [
													2529,
													2531,
													2533
												],
												"declarations": [
													{
														"constant": false,
														"id": 2529,
														"mutability": "mutable",
														"name": "tTransferAmount",
														"nameLocation": "10269:15:9",
														"nodeType": "VariableDeclaration",
														"scope": 2560,
														"src": "10261:23:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2528,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10261:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2531,
														"mutability": "mutable",
														"name": "tFee",
														"nameLocation": "10294:4:9",
														"nodeType": "VariableDeclaration",
														"scope": 2560,
														"src": "10286:12:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2530,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10286:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2533,
														"mutability": "mutable",
														"name": "tLiquidity",
														"nameLocation": "10308:10:9",
														"nodeType": "VariableDeclaration",
														"scope": 2560,
														"src": "10300:18:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2532,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10300:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2537,
												"initialValue": {
													"arguments": [
														{
															"id": 2535,
															"name": "tAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2513,
															"src": "10347:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2534,
														"name": "_getTValues",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2600,
														"src": "10322:11:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$_t_uint256_$_t_uint256_$",
															"typeString": "function (uint256) view returns (uint256,uint256,uint256)"
														}
													},
													"id": 2536,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10322:42:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256,uint256)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10260:104:9"
											},
											{
												"assignments": [
													2539,
													2541,
													2543
												],
												"declarations": [
													{
														"constant": false,
														"id": 2539,
														"mutability": "mutable",
														"name": "rAmount",
														"nameLocation": "10383:7:9",
														"nodeType": "VariableDeclaration",
														"scope": 2560,
														"src": "10375:15:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2538,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10375:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2541,
														"mutability": "mutable",
														"name": "rTransferAmount",
														"nameLocation": "10400:15:9",
														"nodeType": "VariableDeclaration",
														"scope": 2560,
														"src": "10392:23:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2540,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10392:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2543,
														"mutability": "mutable",
														"name": "rFee",
														"nameLocation": "10425:4:9",
														"nodeType": "VariableDeclaration",
														"scope": 2560,
														"src": "10417:12:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2542,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10417:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2551,
												"initialValue": {
													"arguments": [
														{
															"id": 2545,
															"name": "tAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2513,
															"src": "10458:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2546,
															"name": "tFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2531,
															"src": "10479:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2547,
															"name": "tLiquidity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2533,
															"src": "10497:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 2548,
																"name": "_getRate",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2672,
																"src": "10521:8:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																	"typeString": "function () view returns (uint256)"
																}
															},
															"id": 2549,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10521:10:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2544,
														"name": "_getRValues",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2654,
														"src": "10433:11:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256,uint256) pure returns (uint256,uint256,uint256)"
														}
													},
													"id": 2550,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10433:108:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256,uint256)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10374:167:9"
											},
											{
												"expression": {
													"components": [
														{
															"id": 2552,
															"name": "rAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2539,
															"src": "10559:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2553,
															"name": "rTransferAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2541,
															"src": "10568:15:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2554,
															"name": "rFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2543,
															"src": "10585:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2555,
															"name": "tTransferAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2529,
															"src": "10591:15:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2556,
															"name": "tFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2531,
															"src": "10608:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2557,
															"name": "tLiquidity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2533,
															"src": "10614:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 2558,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "10558:67:9",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256,uint256,uint256,uint256,uint256)"
													}
												},
												"functionReturnParameters": 2527,
												"id": 2559,
												"nodeType": "Return",
												"src": "10551:74:9"
											}
										]
									},
									"id": 2561,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getValues",
									"nameLocation": "10036:10:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2514,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2513,
												"mutability": "mutable",
												"name": "tAmount",
												"nameLocation": "10055:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 2561,
												"src": "10047:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2512,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10047:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10046:17:9"
									},
									"returnParameters": {
										"id": 2527,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2516,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2561,
												"src": "10123:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2515,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10123:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2518,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2561,
												"src": "10144:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2517,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10144:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2520,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2561,
												"src": "10165:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2519,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10165:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2522,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2561,
												"src": "10186:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2521,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10186:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2524,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2561,
												"src": "10207:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2523,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10207:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2526,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2561,
												"src": "10228:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2525,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10228:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10109:136:9"
									},
									"scope": 3991,
									"src": "10027:605:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 2599,
										"nodeType": "Block",
										"src": "10799:238:9",
										"statements": [
											{
												"assignments": [
													2573
												],
												"declarations": [
													{
														"constant": false,
														"id": 2573,
														"mutability": "mutable",
														"name": "tFee",
														"nameLocation": "10817:4:9",
														"nodeType": "VariableDeclaration",
														"scope": 2599,
														"src": "10809:12:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2572,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10809:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2577,
												"initialValue": {
													"arguments": [
														{
															"id": 2575,
															"name": "tAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2563,
															"src": "10840:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2574,
														"name": "calculateTaxFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2835,
														"src": "10824:15:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) view returns (uint256)"
														}
													},
													"id": 2576,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10824:24:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10809:39:9"
											},
											{
												"assignments": [
													2579
												],
												"declarations": [
													{
														"constant": false,
														"id": 2579,
														"mutability": "mutable",
														"name": "tLiquidity",
														"nameLocation": "10866:10:9",
														"nodeType": "VariableDeclaration",
														"scope": 2599,
														"src": "10858:18:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2578,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10858:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2583,
												"initialValue": {
													"arguments": [
														{
															"id": 2581,
															"name": "tAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2563,
															"src": "10901:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2580,
														"name": "calculateLiquidityFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2853,
														"src": "10879:21:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) view returns (uint256)"
														}
													},
													"id": 2582,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10879:30:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10858:51:9"
											},
											{
												"assignments": [
													2585
												],
												"declarations": [
													{
														"constant": false,
														"id": 2585,
														"mutability": "mutable",
														"name": "tTransferAmount",
														"nameLocation": "10927:15:9",
														"nodeType": "VariableDeclaration",
														"scope": 2599,
														"src": "10919:23:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2584,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10919:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2593,
												"initialValue": {
													"arguments": [
														{
															"id": 2591,
															"name": "tLiquidity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2579,
															"src": "10967:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 2588,
																	"name": "tFee",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2573,
																	"src": "10957:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 2586,
																	"name": "tAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2563,
																	"src": "10945:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 2587,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 733,
																"src": "10945:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 2589,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10945:17:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2590,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 733,
														"src": "10945:21:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 2592,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10945:33:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10919:59:9"
											},
											{
												"expression": {
													"components": [
														{
															"id": 2594,
															"name": "tTransferAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2585,
															"src": "10996:15:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2595,
															"name": "tFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2573,
															"src": "11013:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2596,
															"name": "tLiquidity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2579,
															"src": "11019:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 2597,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "10995:35:9",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256,uint256)"
													}
												},
												"functionReturnParameters": 2571,
												"id": 2598,
												"nodeType": "Return",
												"src": "10988:42:9"
											}
										]
									},
									"id": 2600,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getTValues",
									"nameLocation": "10647:11:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2564,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2563,
												"mutability": "mutable",
												"name": "tAmount",
												"nameLocation": "10667:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 2600,
												"src": "10659:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2562,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10659:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10658:17:9"
									},
									"returnParameters": {
										"id": 2571,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2566,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2600,
												"src": "10735:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2565,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10735:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2568,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2600,
												"src": "10756:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2567,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10756:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2570,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2600,
												"src": "10777:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2569,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10777:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10721:73:9"
									},
									"scope": 3991,
									"src": "10638:399:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 2653,
										"nodeType": "Block",
										"src": "11297:281:9",
										"statements": [
											{
												"assignments": [
													2618
												],
												"declarations": [
													{
														"constant": false,
														"id": 2618,
														"mutability": "mutable",
														"name": "rAmount",
														"nameLocation": "11315:7:9",
														"nodeType": "VariableDeclaration",
														"scope": 2653,
														"src": "11307:15:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2617,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "11307:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2623,
												"initialValue": {
													"arguments": [
														{
															"id": 2621,
															"name": "currentRate",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2608,
															"src": "11337:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 2619,
															"name": "tAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2602,
															"src": "11325:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2620,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "mul",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 748,
														"src": "11325:11:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 2622,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11325:24:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11307:42:9"
											},
											{
												"assignments": [
													2625
												],
												"declarations": [
													{
														"constant": false,
														"id": 2625,
														"mutability": "mutable",
														"name": "rFee",
														"nameLocation": "11367:4:9",
														"nodeType": "VariableDeclaration",
														"scope": 2653,
														"src": "11359:12:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2624,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "11359:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2630,
												"initialValue": {
													"arguments": [
														{
															"id": 2628,
															"name": "currentRate",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2608,
															"src": "11383:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 2626,
															"name": "tFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2604,
															"src": "11374:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2627,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "mul",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 748,
														"src": "11374:8:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 2629,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11374:21:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11359:36:9"
											},
											{
												"assignments": [
													2632
												],
												"declarations": [
													{
														"constant": false,
														"id": 2632,
														"mutability": "mutable",
														"name": "rLiquidity",
														"nameLocation": "11413:10:9",
														"nodeType": "VariableDeclaration",
														"scope": 2653,
														"src": "11405:18:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2631,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "11405:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2637,
												"initialValue": {
													"arguments": [
														{
															"id": 2635,
															"name": "currentRate",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2608,
															"src": "11441:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 2633,
															"name": "tLiquidity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2606,
															"src": "11426:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2634,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "mul",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 748,
														"src": "11426:14:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 2636,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11426:27:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11405:48:9"
											},
											{
												"assignments": [
													2639
												],
												"declarations": [
													{
														"constant": false,
														"id": 2639,
														"mutability": "mutable",
														"name": "rTransferAmount",
														"nameLocation": "11471:15:9",
														"nodeType": "VariableDeclaration",
														"scope": 2653,
														"src": "11463:23:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2638,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "11463:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2647,
												"initialValue": {
													"arguments": [
														{
															"id": 2645,
															"name": "rLiquidity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2632,
															"src": "11511:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 2642,
																	"name": "rFee",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2625,
																	"src": "11501:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 2640,
																	"name": "rAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2618,
																	"src": "11489:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 2641,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 733,
																"src": "11489:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 2643,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11489:17:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2644,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 733,
														"src": "11489:21:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 2646,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11489:33:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11463:59:9"
											},
											{
												"expression": {
													"components": [
														{
															"id": 2648,
															"name": "rAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2618,
															"src": "11540:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2649,
															"name": "rTransferAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2639,
															"src": "11549:15:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2650,
															"name": "rFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2625,
															"src": "11566:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 2651,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "11539:32:9",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256,uint256)"
													}
												},
												"functionReturnParameters": 2616,
												"id": 2652,
												"nodeType": "Return",
												"src": "11532:39:9"
											}
										]
									},
									"id": 2654,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getRValues",
									"nameLocation": "11052:11:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2609,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2602,
												"mutability": "mutable",
												"name": "tAmount",
												"nameLocation": "11081:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 2654,
												"src": "11073:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2601,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11073:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2604,
												"mutability": "mutable",
												"name": "tFee",
												"nameLocation": "11106:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 2654,
												"src": "11098:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2603,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11098:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2606,
												"mutability": "mutable",
												"name": "tLiquidity",
												"nameLocation": "11128:10:9",
												"nodeType": "VariableDeclaration",
												"scope": 2654,
												"src": "11120:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2605,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11120:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2608,
												"mutability": "mutable",
												"name": "currentRate",
												"nameLocation": "11156:11:9",
												"nodeType": "VariableDeclaration",
												"scope": 2654,
												"src": "11148:19:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2607,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11148:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11063:110:9"
									},
									"returnParameters": {
										"id": 2616,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2611,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2654,
												"src": "11233:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2610,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11233:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2613,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2654,
												"src": "11254:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2612,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11254:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2615,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2654,
												"src": "11275:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2614,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11275:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11219:73:9"
									},
									"scope": 3991,
									"src": "11043:535:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 2671,
										"nodeType": "Block",
										"src": "11635:110:9",
										"statements": [
											{
												"assignments": [
													2660,
													2662
												],
												"declarations": [
													{
														"constant": false,
														"id": 2660,
														"mutability": "mutable",
														"name": "rSupply",
														"nameLocation": "11654:7:9",
														"nodeType": "VariableDeclaration",
														"scope": 2671,
														"src": "11646:15:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2659,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "11646:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2662,
														"mutability": "mutable",
														"name": "tSupply",
														"nameLocation": "11671:7:9",
														"nodeType": "VariableDeclaration",
														"scope": 2671,
														"src": "11663:15:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2661,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "11663:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2665,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 2663,
														"name": "_getCurrentSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2758,
														"src": "11682:17:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$_t_uint256_$",
															"typeString": "function () view returns (uint256,uint256)"
														}
													},
													"id": 2664,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11682:19:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11645:56:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2668,
															"name": "tSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2662,
															"src": "11730:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 2666,
															"name": "rSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2660,
															"src": "11718:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2667,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 763,
														"src": "11718:11:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 2669,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11718:20:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2658,
												"id": 2670,
												"nodeType": "Return",
												"src": "11711:27:9"
											}
										]
									},
									"id": 2672,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getRate",
									"nameLocation": "11593:8:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2655,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11601:2:9"
									},
									"returnParameters": {
										"id": 2658,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2657,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2672,
												"src": "11626:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2656,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11626:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11625:9:9"
									},
									"scope": 3991,
									"src": "11584:161:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 2757,
										"nodeType": "Block",
										"src": "11820:493:9",
										"statements": [
											{
												"assignments": [
													2680
												],
												"declarations": [
													{
														"constant": false,
														"id": 2680,
														"mutability": "mutable",
														"name": "rSupply",
														"nameLocation": "11838:7:9",
														"nodeType": "VariableDeclaration",
														"scope": 2757,
														"src": "11830:15:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2679,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "11830:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2682,
												"initialValue": {
													"id": 2681,
													"name": "_rTotal",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1636,
													"src": "11848:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11830:25:9"
											},
											{
												"assignments": [
													2684
												],
												"declarations": [
													{
														"constant": false,
														"id": 2684,
														"mutability": "mutable",
														"name": "tSupply",
														"nameLocation": "11873:7:9",
														"nodeType": "VariableDeclaration",
														"scope": 2757,
														"src": "11865:15:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2683,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "11865:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2686,
												"initialValue": {
													"id": 2685,
													"name": "_tTotal",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1627,
													"src": "11883:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11865:25:9"
											},
											{
												"body": {
													"id": 2740,
													"nodeType": "Block",
													"src": "11947:254:9",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 2712,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2704,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"baseExpression": {
																			"id": 2698,
																			"name": "_rOwned",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1592,
																			"src": "11965:7:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																				"typeString": "mapping(address => uint256)"
																			}
																		},
																		"id": 2702,
																		"indexExpression": {
																			"baseExpression": {
																				"id": 2699,
																				"name": "_excluded",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1613,
																				"src": "11973:9:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_address_$dyn_storage",
																					"typeString": "address[] storage ref"
																				}
																			},
																			"id": 2701,
																			"indexExpression": {
																				"id": 2700,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2688,
																				"src": "11983:1:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "11973:12:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "11965:21:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"id": 2703,
																		"name": "rSupply",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2680,
																		"src": "11989:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "11965:31:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "||",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2711,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"baseExpression": {
																			"id": 2705,
																			"name": "_tOwned",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1596,
																			"src": "12000:7:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																				"typeString": "mapping(address => uint256)"
																			}
																		},
																		"id": 2709,
																		"indexExpression": {
																			"baseExpression": {
																				"id": 2706,
																				"name": "_excluded",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1613,
																				"src": "12008:9:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_address_$dyn_storage",
																					"typeString": "address[] storage ref"
																				}
																			},
																			"id": 2708,
																			"indexExpression": {
																				"id": 2707,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2688,
																				"src": "12018:1:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "12008:12:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "12000:21:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"id": 2710,
																		"name": "tSupply",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2684,
																		"src": "12024:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "12000:31:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "11965:66:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2717,
															"nodeType": "IfStatement",
															"src": "11961:113:9",
															"trueBody": {
																"expression": {
																	"components": [
																		{
																			"id": 2713,
																			"name": "_rTotal",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1636,
																			"src": "12057:7:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"id": 2714,
																			"name": "_tTotal",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1627,
																			"src": "12066:7:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2715,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "12056:18:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
																		"typeString": "tuple(uint256,uint256)"
																	}
																},
																"functionReturnParameters": 2678,
																"id": 2716,
																"nodeType": "Return",
																"src": "12049:25:9"
															}
														},
														{
															"expression": {
																"id": 2727,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2718,
																	"name": "rSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2680,
																	"src": "12088:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"baseExpression": {
																				"id": 2721,
																				"name": "_rOwned",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1592,
																				"src": "12110:7:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 2725,
																			"indexExpression": {
																				"baseExpression": {
																					"id": 2722,
																					"name": "_excluded",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1613,
																					"src": "12118:9:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_address_$dyn_storage",
																						"typeString": "address[] storage ref"
																					}
																				},
																				"id": 2724,
																				"indexExpression": {
																					"id": 2723,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2688,
																					"src": "12128:1:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "12118:12:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "12110:21:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 2719,
																			"name": "rSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2680,
																			"src": "12098:7:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 2720,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sub",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 733,
																		"src": "12098:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 2726,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "12098:34:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "12088:44:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2728,
															"nodeType": "ExpressionStatement",
															"src": "12088:44:9"
														},
														{
															"expression": {
																"id": 2738,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2729,
																	"name": "tSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2684,
																	"src": "12146:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"baseExpression": {
																				"id": 2732,
																				"name": "_tOwned",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1596,
																				"src": "12168:7:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 2736,
																			"indexExpression": {
																				"baseExpression": {
																					"id": 2733,
																					"name": "_excluded",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1613,
																					"src": "12176:9:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_address_$dyn_storage",
																						"typeString": "address[] storage ref"
																					}
																				},
																				"id": 2735,
																				"indexExpression": {
																					"id": 2734,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2688,
																					"src": "12186:1:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "12176:12:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "12168:21:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 2730,
																			"name": "tSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2684,
																			"src": "12156:7:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 2731,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sub",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 733,
																		"src": "12156:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 2737,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "12156:34:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "12146:44:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2739,
															"nodeType": "ExpressionStatement",
															"src": "12146:44:9"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2694,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2691,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2688,
														"src": "11920:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 2692,
															"name": "_excluded",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1613,
															"src": "11924:9:9",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														},
														"id": 2693,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "11924:16:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11920:20:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2741,
												"initializationExpression": {
													"assignments": [
														2688
													],
													"declarations": [
														{
															"constant": false,
															"id": 2688,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "11913:1:9",
															"nodeType": "VariableDeclaration",
															"scope": 2741,
															"src": "11905:9:9",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 2687,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "11905:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 2690,
													"initialValue": {
														"hexValue": "30",
														"id": 2689,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "11917:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "11905:13:9"
												},
												"loopExpression": {
													"expression": {
														"id": 2696,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "11942:3:9",
														"subExpression": {
															"id": 2695,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2688,
															"src": "11942:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2697,
													"nodeType": "ExpressionStatement",
													"src": "11942:3:9"
												},
												"nodeType": "ForStatement",
												"src": "11900:301:9"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2747,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2742,
														"name": "rSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2680,
														"src": "12214:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"arguments": [
															{
																"id": 2745,
																"name": "_tTotal",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1627,
																"src": "12236:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 2743,
																"name": "_rTotal",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1636,
																"src": "12224:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2744,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "div",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 763,
															"src": "12224:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 2746,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "12224:20:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "12214:30:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2752,
												"nodeType": "IfStatement",
												"src": "12210:61:9",
												"trueBody": {
													"expression": {
														"components": [
															{
																"id": 2748,
																"name": "_rTotal",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1636,
																"src": "12254:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 2749,
																"name": "_tTotal",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1627,
																"src": "12263:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 2750,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "12253:18:9",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
															"typeString": "tuple(uint256,uint256)"
														}
													},
													"functionReturnParameters": 2678,
													"id": 2751,
													"nodeType": "Return",
													"src": "12246:25:9"
												}
											},
											{
												"expression": {
													"components": [
														{
															"id": 2753,
															"name": "rSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2680,
															"src": "12289:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2754,
															"name": "tSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2684,
															"src": "12298:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 2755,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "12288:18:9",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256)"
													}
												},
												"functionReturnParameters": 2678,
												"id": 2756,
												"nodeType": "Return",
												"src": "12281:25:9"
											}
										]
									},
									"id": 2758,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getCurrentSupply",
									"nameLocation": "11760:17:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2673,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11777:2:9"
									},
									"returnParameters": {
										"id": 2678,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2675,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2758,
												"src": "11802:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2674,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11802:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2677,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2758,
												"src": "11811:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2676,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11811:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11801:18:9"
									},
									"scope": 3991,
									"src": "11751:562:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 2816,
										"nodeType": "Block",
										"src": "12371:297:9",
										"statements": [
											{
												"assignments": [
													2764
												],
												"declarations": [
													{
														"constant": false,
														"id": 2764,
														"mutability": "mutable",
														"name": "currentRate",
														"nameLocation": "12389:11:9",
														"nodeType": "VariableDeclaration",
														"scope": 2816,
														"src": "12381:19:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2763,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "12381:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2767,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 2765,
														"name": "_getRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2672,
														"src": "12403:8:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
															"typeString": "function () view returns (uint256)"
														}
													},
													"id": 2766,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12403:10:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12381:32:9"
											},
											{
												"assignments": [
													2769
												],
												"declarations": [
													{
														"constant": false,
														"id": 2769,
														"mutability": "mutable",
														"name": "rLiquidity",
														"nameLocation": "12431:10:9",
														"nodeType": "VariableDeclaration",
														"scope": 2816,
														"src": "12423:18:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2768,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "12423:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2774,
												"initialValue": {
													"arguments": [
														{
															"id": 2772,
															"name": "currentRate",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2764,
															"src": "12459:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 2770,
															"name": "tLiquidity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2760,
															"src": "12444:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2771,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "mul",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 748,
														"src": "12444:14:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 2773,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12444:27:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12423:48:9"
											},
											{
												"expression": {
													"id": 2790,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2775,
															"name": "_rOwned",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1592,
															"src": "12481:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 2780,
														"indexExpression": {
															"arguments": [
																{
																	"id": 2778,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "12497:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Pokemon_$3991",
																		"typeString": "contract Pokemon"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Pokemon_$3991",
																		"typeString": "contract Pokemon"
																	}
																],
																"id": 2777,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "12489:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2776,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "12489:7:9",
																	"typeDescriptions": {}
																}
															},
															"id": 2779,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12489:13:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "12481:22:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2788,
																"name": "rLiquidity",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2769,
																"src": "12533:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 2781,
																	"name": "_rOwned",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1592,
																	"src": "12506:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 2786,
																"indexExpression": {
																	"arguments": [
																		{
																			"id": 2784,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "12522:4:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Pokemon_$3991",
																				"typeString": "contract Pokemon"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Pokemon_$3991",
																				"typeString": "contract Pokemon"
																			}
																		],
																		"id": 2783,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "12514:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 2782,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "12514:7:9",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2785,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "12514:13:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "12506:22:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2787,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 718,
															"src": "12506:26:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 2789,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "12506:38:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "12481:63:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2791,
												"nodeType": "ExpressionStatement",
												"src": "12481:63:9"
											},
											{
												"condition": {
													"baseExpression": {
														"id": 2792,
														"name": "_isExcluded",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1610,
														"src": "12558:11:9",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 2797,
													"indexExpression": {
														"arguments": [
															{
																"id": 2795,
																"name": "this",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967268,
																"src": "12578:4:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_Pokemon_$3991",
																	"typeString": "contract Pokemon"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_Pokemon_$3991",
																	"typeString": "contract Pokemon"
																}
															],
															"id": 2794,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "12570:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 2793,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "12570:7:9",
																"typeDescriptions": {}
															}
														},
														"id": 2796,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "12570:13:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "12558:26:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2815,
												"nodeType": "IfStatement",
												"src": "12554:107:9",
												"trueBody": {
													"expression": {
														"id": 2813,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"baseExpression": {
																"id": 2798,
																"name": "_tOwned",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1596,
																"src": "12598:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 2803,
															"indexExpression": {
																"arguments": [
																	{
																		"id": 2801,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "12614:4:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_Pokemon_$3991",
																			"typeString": "contract Pokemon"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_Pokemon_$3991",
																			"typeString": "contract Pokemon"
																		}
																	],
																	"id": 2800,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "12606:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2799,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "12606:7:9",
																		"typeDescriptions": {}
																	}
																},
																"id": 2802,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12606:13:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": true,
															"nodeType": "IndexAccess",
															"src": "12598:22:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"arguments": [
																{
																	"id": 2811,
																	"name": "tLiquidity",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2760,
																	"src": "12650:10:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"baseExpression": {
																		"id": 2804,
																		"name": "_tOwned",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1596,
																		"src": "12623:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 2809,
																	"indexExpression": {
																		"arguments": [
																			{
																				"id": 2807,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "12639:4:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_Pokemon_$3991",
																					"typeString": "contract Pokemon"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_Pokemon_$3991",
																					"typeString": "contract Pokemon"
																				}
																			],
																			"id": 2806,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "12631:7:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 2805,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "12631:7:9",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 2808,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "12631:13:9",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "12623:22:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 2810,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "add",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 718,
																"src": "12623:26:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 2812,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12623:38:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "12598:63:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2814,
													"nodeType": "ExpressionStatement",
													"src": "12598:63:9"
												}
											}
										]
									},
									"id": 2817,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_takeLiquidity",
									"nameLocation": "12328:14:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2761,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2760,
												"mutability": "mutable",
												"name": "tLiquidity",
												"nameLocation": "12351:10:9",
												"nodeType": "VariableDeclaration",
												"scope": 2817,
												"src": "12343:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2759,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12343:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12342:20:9"
									},
									"returnParameters": {
										"id": 2762,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12371:0:9"
									},
									"scope": 3991,
									"src": "12319:349:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 2834,
										"nodeType": "Block",
										"src": "12747:55:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_rational_100_by_1",
																"typeString": "int_const 100"
															},
															"id": 2831,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "3130",
																"id": 2829,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12789:2:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"value": "10"
															},
															"nodeType": "BinaryOperation",
															"operator": "**",
															"rightExpression": {
																"hexValue": "32",
																"id": 2830,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12793:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "12789:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_100_by_1",
																"typeString": "int_const 100"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_100_by_1",
																"typeString": "int_const 100"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 2826,
																	"name": "_taxFee",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1650,
																	"src": "12776:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 2824,
																	"name": "_amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2819,
																	"src": "12764:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 2825,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "mul",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 748,
																"src": "12764:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 2827,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12764:20:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2828,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 763,
														"src": "12764:24:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 2832,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12764:31:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2823,
												"id": 2833,
												"nodeType": "Return",
												"src": "12757:38:9"
											}
										]
									},
									"id": 2835,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "calculateTaxFee",
									"nameLocation": "12683:15:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2820,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2819,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "12707:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 2835,
												"src": "12699:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2818,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12699:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12698:17:9"
									},
									"returnParameters": {
										"id": 2823,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2822,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2835,
												"src": "12738:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2821,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12738:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12737:9:9"
									},
									"scope": 3991,
									"src": "12674:128:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 2852,
										"nodeType": "Block",
										"src": "12887:61:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_rational_100_by_1",
																"typeString": "int_const 100"
															},
															"id": 2849,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "3130",
																"id": 2847,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12935:2:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"value": "10"
															},
															"nodeType": "BinaryOperation",
															"operator": "**",
															"rightExpression": {
																"hexValue": "32",
																"id": 2848,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12939:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "12935:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_100_by_1",
																"typeString": "int_const 100"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_100_by_1",
																"typeString": "int_const 100"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 2844,
																	"name": "_liquidityFee",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1656,
																	"src": "12916:13:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 2842,
																	"name": "_amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2837,
																	"src": "12904:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 2843,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "mul",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 748,
																"src": "12904:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 2845,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12904:26:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2846,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 763,
														"src": "12904:30:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 2850,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12904:37:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2841,
												"id": 2851,
												"nodeType": "Return",
												"src": "12897:44:9"
											}
										]
									},
									"id": 2853,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "calculateLiquidityFee",
									"nameLocation": "12817:21:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2838,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2837,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "12847:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 2853,
												"src": "12839:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2836,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12839:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12838:17:9"
									},
									"returnParameters": {
										"id": 2841,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2840,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2853,
												"src": "12878:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2839,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12878:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12877:9:9"
									},
									"scope": 3991,
									"src": "12808:140:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 2888,
										"nodeType": "Block",
										"src": "12989:324:9",
										"statements": [
											{
												"expression": {
													"id": 2858,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2856,
														"name": "_previousTaxFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1653,
														"src": "12999:15:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2857,
														"name": "_taxFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1650,
														"src": "13017:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "12999:25:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2859,
												"nodeType": "ExpressionStatement",
												"src": "12999:25:9"
											},
											{
												"expression": {
													"id": 2862,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2860,
														"name": "_previousLiquidityFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1659,
														"src": "13034:21:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2861,
														"name": "_liquidityFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1656,
														"src": "13058:13:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "13034:37:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2863,
												"nodeType": "ExpressionStatement",
												"src": "13034:37:9"
											},
											{
												"expression": {
													"id": 2866,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2864,
														"name": "_previousBurnFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1665,
														"src": "13081:16:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2865,
														"name": "_burnFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1662,
														"src": "13100:8:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "13081:27:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2867,
												"nodeType": "ExpressionStatement",
												"src": "13081:27:9"
											},
											{
												"expression": {
													"id": 2870,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2868,
														"name": "_previousMarketingFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1673,
														"src": "13118:21:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2869,
														"name": "_marketingFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1668,
														"src": "13142:13:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "13118:37:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2871,
												"nodeType": "ExpressionStatement",
												"src": "13118:37:9"
											},
											{
												"expression": {
													"id": 2874,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2872,
														"name": "_taxFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1650,
														"src": "13166:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2873,
														"name": "_sellTaxFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1676,
														"src": "13176:11:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "13166:21:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2875,
												"nodeType": "ExpressionStatement",
												"src": "13166:21:9"
											},
											{
												"expression": {
													"id": 2878,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2876,
														"name": "_liquidityFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1656,
														"src": "13197:13:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2877,
														"name": "_sellLiquidityFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1679,
														"src": "13213:17:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "13197:33:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2879,
												"nodeType": "ExpressionStatement",
												"src": "13197:33:9"
											},
											{
												"expression": {
													"id": 2882,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2880,
														"name": "_marketingFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1668,
														"src": "13240:13:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2881,
														"name": "_sellMarketingFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1682,
														"src": "13256:17:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "13240:33:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2883,
												"nodeType": "ExpressionStatement",
												"src": "13240:33:9"
											},
											{
												"expression": {
													"id": 2886,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2884,
														"name": "_burnFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1662,
														"src": "13283:8:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2885,
														"name": "_sellBurnFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1685,
														"src": "13294:12:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "13283:23:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2887,
												"nodeType": "ExpressionStatement",
												"src": "13283:23:9"
											}
										]
									},
									"id": 2889,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "activateSellFee",
									"nameLocation": "12963:15:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2854,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12978:2:9"
									},
									"returnParameters": {
										"id": 2855,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12989:0:9"
									},
									"scope": 3991,
									"src": "12954:359:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 2941,
										"nodeType": "Block",
										"src": "13351:379:9",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 2906,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 2902,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 2898,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2894,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2892,
																	"name": "_taxFee",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1650,
																	"src": "13365:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 2893,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13376:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "13365:12:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2897,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2895,
																	"name": "_liquidityFee",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1656,
																	"src": "13381:13:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 2896,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13398:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "13381:18:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "13365:34:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&&",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2901,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2899,
																"name": "_marketingFee",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1668,
																"src": "13403:13:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2900,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "13420:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "13403:18:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "13365:56:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2905,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2903,
															"name": "_burnFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1662,
															"src": "13425:8:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 2904,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13437:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "13425:13:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "13365:73:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2908,
												"nodeType": "IfStatement",
												"src": "13361:98:9",
												"trueBody": {
													"functionReturnParameters": 2891,
													"id": 2907,
													"nodeType": "Return",
													"src": "13452:7:9"
												}
											},
											{
												"expression": {
													"id": 2911,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2909,
														"name": "_previousTaxFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1653,
														"src": "13469:15:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2910,
														"name": "_taxFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1650,
														"src": "13487:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "13469:25:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2912,
												"nodeType": "ExpressionStatement",
												"src": "13469:25:9"
											},
											{
												"expression": {
													"id": 2915,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2913,
														"name": "_previousLiquidityFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1659,
														"src": "13504:21:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2914,
														"name": "_liquidityFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1656,
														"src": "13528:13:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "13504:37:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2916,
												"nodeType": "ExpressionStatement",
												"src": "13504:37:9"
											},
											{
												"expression": {
													"id": 2919,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2917,
														"name": "_previousBurnFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1665,
														"src": "13551:16:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2918,
														"name": "_burnFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1662,
														"src": "13570:8:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "13551:27:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2920,
												"nodeType": "ExpressionStatement",
												"src": "13551:27:9"
											},
											{
												"expression": {
													"id": 2923,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2921,
														"name": "_previousMarketingFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1673,
														"src": "13588:21:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2922,
														"name": "_marketingFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1668,
														"src": "13612:13:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "13588:37:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2924,
												"nodeType": "ExpressionStatement",
												"src": "13588:37:9"
											},
											{
												"expression": {
													"id": 2927,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2925,
														"name": "_taxFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1650,
														"src": "13636:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 2926,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "13646:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "13636:11:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2928,
												"nodeType": "ExpressionStatement",
												"src": "13636:11:9"
											},
											{
												"expression": {
													"id": 2931,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2929,
														"name": "_liquidityFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1656,
														"src": "13657:13:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 2930,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "13673:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "13657:17:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2932,
												"nodeType": "ExpressionStatement",
												"src": "13657:17:9"
											},
											{
												"expression": {
													"id": 2935,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2933,
														"name": "_marketingFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1668,
														"src": "13684:13:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 2934,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "13700:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "13684:17:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2936,
												"nodeType": "ExpressionStatement",
												"src": "13684:17:9"
											},
											{
												"expression": {
													"id": 2939,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2937,
														"name": "_burnFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1662,
														"src": "13711:8:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 2938,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "13722:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "13711:12:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2940,
												"nodeType": "ExpressionStatement",
												"src": "13711:12:9"
											}
										]
									},
									"id": 2942,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "removeAllFee",
									"nameLocation": "13328:12:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2890,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13340:2:9"
									},
									"returnParameters": {
										"id": 2891,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13351:0:9"
									},
									"scope": 3991,
									"src": "13319:411:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 2961,
										"nodeType": "Block",
										"src": "13769:173:9",
										"statements": [
											{
												"expression": {
													"id": 2947,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2945,
														"name": "_taxFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1650,
														"src": "13779:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2946,
														"name": "_previousTaxFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1653,
														"src": "13789:15:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "13779:25:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2948,
												"nodeType": "ExpressionStatement",
												"src": "13779:25:9"
											},
											{
												"expression": {
													"id": 2951,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2949,
														"name": "_liquidityFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1656,
														"src": "13814:13:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2950,
														"name": "_previousLiquidityFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1659,
														"src": "13830:21:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "13814:37:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2952,
												"nodeType": "ExpressionStatement",
												"src": "13814:37:9"
											},
											{
												"expression": {
													"id": 2955,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2953,
														"name": "_burnFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1662,
														"src": "13861:8:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2954,
														"name": "_previousBurnFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1665,
														"src": "13872:16:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "13861:27:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2956,
												"nodeType": "ExpressionStatement",
												"src": "13861:27:9"
											},
											{
												"expression": {
													"id": 2959,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2957,
														"name": "_marketingFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1668,
														"src": "13898:13:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2958,
														"name": "_previousMarketingFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1673,
														"src": "13914:21:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "13898:37:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2960,
												"nodeType": "ExpressionStatement",
												"src": "13898:37:9"
											}
										]
									},
									"id": 2962,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "restoreAllFee",
									"nameLocation": "13745:13:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2943,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13758:2:9"
									},
									"returnParameters": {
										"id": 2944,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13769:0:9"
									},
									"scope": 3991,
									"src": "13736:206:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 2973,
										"nodeType": "Block",
										"src": "14019:51:9",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 2969,
														"name": "_isExcludedFromFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1606,
														"src": "14036:18:9",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 2971,
													"indexExpression": {
														"id": 2970,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2964,
														"src": "14055:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "14036:27:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2968,
												"id": 2972,
												"nodeType": "Return",
												"src": "14029:34:9"
											}
										]
									},
									"functionSelector": "5342acb4",
									"id": 2974,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isExcludedFromFee",
									"nameLocation": "13957:17:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2965,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2964,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "13983:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 2974,
												"src": "13975:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2963,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13975:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13974:17:9"
									},
									"returnParameters": {
										"id": 2968,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2967,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2974,
												"src": "14013:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2966,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "14013:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14012:6:9"
									},
									"scope": 3991,
									"src": "13948:122:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3017,
										"nodeType": "Block",
										"src": "14180:257:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2989,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2984,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2976,
																"src": "14198:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 2987,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "14215:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 2986,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "14207:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2985,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "14207:7:9",
																		"typeDescriptions": {}
																	}
																},
																"id": 2988,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14207:10:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "14198:19:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "42455032303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
															"id": 2990,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14219:38:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1441cfbef485de93bedecc35b3d10fa2992db382c4c9c583a6e423a140abe4a4",
																"typeString": "literal_string \"BEP20: approve from the zero address\""
															},
															"value": "BEP20: approve from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1441cfbef485de93bedecc35b3d10fa2992db382c4c9c583a6e423a140abe4a4",
																"typeString": "literal_string \"BEP20: approve from the zero address\""
															}
														],
														"id": 2983,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "14190:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2991,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14190:68:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2992,
												"nodeType": "ExpressionStatement",
												"src": "14190:68:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2999,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2994,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2978,
																"src": "14276:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 2997,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "14295:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 2996,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "14287:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2995,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "14287:7:9",
																		"typeDescriptions": {}
																	}
																},
																"id": 2998,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14287:10:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "14276:21:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "42455032303a20617070726f766520746f20746865207a65726f2061646472657373",
															"id": 3000,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14299:36:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f10e7571e18b354270dee950932fb6a745efc79414b2b2556185a4ed6a1af0d5",
																"typeString": "literal_string \"BEP20: approve to the zero address\""
															},
															"value": "BEP20: approve to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f10e7571e18b354270dee950932fb6a745efc79414b2b2556185a4ed6a1af0d5",
																"typeString": "literal_string \"BEP20: approve to the zero address\""
															}
														],
														"id": 2993,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "14268:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3001,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14268:68:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3002,
												"nodeType": "ExpressionStatement",
												"src": "14268:68:9"
											},
											{
												"expression": {
													"id": 3009,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 3003,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1602,
																"src": "14347:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 3006,
															"indexExpression": {
																"id": 3004,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2976,
																"src": "14359:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "14347:18:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 3007,
														"indexExpression": {
															"id": 3005,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2978,
															"src": "14366:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "14347:27:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 3008,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2980,
														"src": "14377:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "14347:36:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 3010,
												"nodeType": "ExpressionStatement",
												"src": "14347:36:9"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 3012,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2976,
															"src": "14407:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3013,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2978,
															"src": "14414:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3014,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2980,
															"src": "14423:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3011,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 133,
														"src": "14398:8:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 3015,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14398:32:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3016,
												"nodeType": "EmitStatement",
												"src": "14393:37:9"
											}
										]
									},
									"id": 3018,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "14085:8:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2981,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2976,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "14111:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 3018,
												"src": "14103:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2975,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14103:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2978,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "14134:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 3018,
												"src": "14126:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2977,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14126:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2980,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "14159:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 3018,
												"src": "14151:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2979,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14151:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14093:78:9"
									},
									"returnParameters": {
										"id": 2982,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14180:0:9"
									},
									"scope": 3991,
									"src": "14076:361:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 3139,
										"nodeType": "Block",
										"src": "14542:1746:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 3033,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3028,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3020,
																"src": "14560:4:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 3031,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "14576:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 3030,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "14568:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 3029,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "14568:7:9",
																		"typeDescriptions": {}
																	}
																},
																"id": 3032,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14568:10:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "14560:18:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "42455032303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
															"id": 3034,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14580:39:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0d26cf302d50b28de74be656b11d67092b32131e5712d1bcf08c4e976dacda57",
																"typeString": "literal_string \"BEP20: transfer from the zero address\""
															},
															"value": "BEP20: transfer from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0d26cf302d50b28de74be656b11d67092b32131e5712d1bcf08c4e976dacda57",
																"typeString": "literal_string \"BEP20: transfer from the zero address\""
															}
														],
														"id": 3027,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "14552:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3035,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14552:68:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3036,
												"nodeType": "ExpressionStatement",
												"src": "14552:68:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3040,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3038,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3024,
																"src": "14638:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3039,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14647:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14638:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5472616e7366657220616d6f756e74206d7573742062652067726561746572207468616e207a65726f",
															"id": 3041,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14650:43:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9edb5ab58321f35d2386ea65721c9b107daa2c273610fc16d394af2a320ba785",
																"typeString": "literal_string \"Transfer amount must be greater than zero\""
															},
															"value": "Transfer amount must be greater than zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9edb5ab58321f35d2386ea65721c9b107daa2c273610fc16d394af2a320ba785",
																"typeString": "literal_string \"Transfer amount must be greater than zero\""
															}
														],
														"id": 3037,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "14630:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3042,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14630:64:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3043,
												"nodeType": "ExpressionStatement",
												"src": "14630:64:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3045,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3020,
															"src": "14726:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3046,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3022,
															"src": "14732:2:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3047,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3024,
															"src": "14736:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3044,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1914,
														"src": "14705:20:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 3048,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14705:38:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3049,
												"nodeType": "ExpressionStatement",
												"src": "14705:38:9"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 3054,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3050,
														"name": "antiBotEnabled",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1699,
														"src": "14758:14:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 3053,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 3051,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3020,
															"src": "14776:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"id": 3052,
															"name": "pancakeV2Pair",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1706,
															"src": "14784:13:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "14776:21:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "14758:39:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3063,
												"nodeType": "IfStatement",
												"src": "14754:131:9",
												"trueBody": {
													"id": 3062,
													"nodeType": "Block",
													"src": "14799:86:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"baseExpression": {
																			"id": 3056,
																			"name": "allowedBuyAmount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1697,
																			"src": "14821:16:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
																				"typeString": "mapping(uint256 => bool)"
																			}
																		},
																		"id": 3058,
																		"indexExpression": {
																			"id": 3057,
																			"name": "amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3024,
																			"src": "14838:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "14821:24:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "4f6e6c7920616c6c6f7765642062757920616d6f756e7473",
																		"id": 3059,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "14847:26:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_60ec5945874cf590867d4308bd6c649b8807f5be7fe7a441268b9df56400e86a",
																			"typeString": "literal_string \"Only allowed buy amounts\""
																		},
																		"value": "Only allowed buy amounts"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_60ec5945874cf590867d4308bd6c649b8807f5be7fe7a441268b9df56400e86a",
																			"typeString": "literal_string \"Only allowed buy amounts\""
																		}
																	],
																	"id": 3055,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "14813:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 3060,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14813:61:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 3061,
															"nodeType": "ExpressionStatement",
															"src": "14813:61:9"
														}
													]
												}
											},
											{
												"assignments": [
													3065
												],
												"declarations": [
													{
														"constant": false,
														"id": 3065,
														"mutability": "mutable",
														"name": "contractTokenBalance",
														"nameLocation": "15181:20:9",
														"nodeType": "VariableDeclaration",
														"scope": 3139,
														"src": "15173:28:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3064,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "15173:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3072,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 3069,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "15222:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Pokemon_$3991",
																		"typeString": "contract Pokemon"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Pokemon_$3991",
																		"typeString": "contract Pokemon"
																	}
																],
																"id": 3068,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "15214:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 3067,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "15214:7:9",
																	"typeDescriptions": {}
																}
															},
															"id": 3070,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15214:13:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 3066,
														"name": "balanceOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1999,
														"src": "15204:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view returns (uint256)"
														}
													},
													"id": 3071,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15204:24:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "15173:55:9"
											},
											{
												"assignments": [
													3074
												],
												"declarations": [
													{
														"constant": false,
														"id": 3074,
														"mutability": "mutable",
														"name": "overMinTokenBalance",
														"nameLocation": "15243:19:9",
														"nodeType": "VariableDeclaration",
														"scope": 3139,
														"src": "15238:24:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 3073,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "15238:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3078,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3077,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3075,
														"name": "contractTokenBalance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3065,
														"src": "15265:20:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"id": 3076,
														"name": "numTokensSellToAddToLiquidity",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1718,
														"src": "15289:29:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "15265:53:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "15238:80:9"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 3088,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 3086,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 3082,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3079,
																"name": "overMinTokenBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3074,
																"src": "15345:19:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"id": 3081,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "!",
																"prefix": true,
																"src": "15380:17:9",
																"subExpression": {
																	"id": 3080,
																	"name": "inSwapAndLiquify",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1708,
																	"src": "15381:16:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "15345:52:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&&",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 3085,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3083,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3020,
																"src": "15413:4:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 3084,
																"name": "pancakeV2Pair",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1706,
																"src": "15421:13:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "15413:21:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "15345:89:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 3087,
														"name": "swapAndLiquifyEnabled",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1711,
														"src": "15450:21:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "15345:126:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3098,
												"nodeType": "IfStatement",
												"src": "15328:309:9",
												"trueBody": {
													"id": 3097,
													"nodeType": "Block",
													"src": "15482:155:9",
													"statements": [
														{
															"expression": {
																"id": 3091,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 3089,
																	"name": "contractTokenBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3065,
																	"src": "15496:20:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 3090,
																	"name": "numTokensSellToAddToLiquidity",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1718,
																	"src": "15519:29:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "15496:52:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 3092,
															"nodeType": "ExpressionStatement",
															"src": "15496:52:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 3094,
																		"name": "contractTokenBalance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3065,
																		"src": "15605:20:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 3093,
																	"name": "swapAndLiquify",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3196,
																	"src": "15590:14:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
																		"typeString": "function (uint256)"
																	}
																},
																"id": 3095,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "15590:36:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 3096,
															"nodeType": "ExpressionStatement",
															"src": "15590:36:9"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3100,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3020,
															"src": "15727:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3101,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3022,
															"src": "15733:2:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3102,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3024,
															"src": "15737:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3099,
														"name": "_tokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3497,
														"src": "15712:14:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 3103,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15712:32:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3104,
												"nodeType": "ExpressionStatement",
												"src": "15712:32:9"
											},
											{
												"condition": {
													"id": 3105,
													"name": "antiWhaleEnabled",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1693,
													"src": "15759:16:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3138,
												"nodeType": "IfStatement",
												"src": "15755:527:9",
												"trueBody": {
													"id": 3137,
													"nodeType": "Block",
													"src": "15777:505:9",
													"statements": [
														{
															"assignments": [
																3107
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 3107,
																	"mutability": "mutable",
																	"name": "maxAllowed",
																	"nameLocation": "15799:10:9",
																	"nodeType": "VariableDeclaration",
																	"scope": 3137,
																	"src": "15791:18:9",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 3106,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "15791:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 3114,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3113,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 3110,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 3108,
																				"name": "_tTotal",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1627,
																				"src": "15813:7:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "*",
																			"rightExpression": {
																				"id": 3109,
																				"name": "_maxHoldingPercents",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1691,
																				"src": "15823:19:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "15813:29:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 3111,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "15812:31:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 3112,
																	"name": "MAX_HOLDING_PERCENTS_DIVISOR",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1688,
																	"src": "15862:28:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "15812:78:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "15791:99:9"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 3117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3115,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3022,
																	"src": "15908:2:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 3116,
																	"name": "pancakeV2Pair",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1706,
																	"src": "15914:13:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "15908:19:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 3135,
																"nodeType": "Block",
																"src": "16105:167:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 3131,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"arguments": [
																							{
																								"id": 3128,
																								"name": "to",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 3022,
																								"src": "16162:2:9",
																								"typeDescriptions": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							],
																							"id": 3127,
																							"name": "balanceOf",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1999,
																							"src": "16152:9:9",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																								"typeString": "function (address) view returns (uint256)"
																							}
																						},
																						"id": 3129,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "16152:13:9",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<=",
																					"rightExpression": {
																						"id": 3130,
																						"name": "maxAllowed",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3107,
																						"src": "16169:10:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "16152:27:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				{
																					"hexValue": "57616c6c65742062616c616e6365206578636565647320746865206d6178206c696d6974",
																					"id": 3132,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "16201:38:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_add9df74b400d7134f412b5d33b290f6237ecb8b07e32ab5e795f8662d75af98",
																						"typeString": "literal_string \"Wallet balance exceeds the max limit\""
																					},
																					"value": "Wallet balance exceeds the max limit"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					},
																					{
																						"typeIdentifier": "t_stringliteral_add9df74b400d7134f412b5d33b290f6237ecb8b07e32ab5e795f8662d75af98",
																						"typeString": "literal_string \"Wallet balance exceeds the max limit\""
																					}
																				],
																				"id": 3126,
																				"name": "require",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967278,
																					4294967278
																				],
																				"referencedDeclaration": 4294967278,
																				"src": "16123:7:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (bool,string memory) pure"
																				}
																			},
																			"id": 3133,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "16123:134:9",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 3134,
																		"nodeType": "ExpressionStatement",
																		"src": "16123:134:9"
																	}
																]
															},
															"id": 3136,
															"nodeType": "IfStatement",
															"src": "15904:368:9",
															"trueBody": {
																"id": 3125,
																"nodeType": "Block",
																"src": "15929:170:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 3121,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 3119,
																						"name": "amount",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3024,
																						"src": "15976:6:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<=",
																					"rightExpression": {
																						"id": 3120,
																						"name": "maxAllowed",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3107,
																						"src": "15986:10:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "15976:20:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				{
																					"hexValue": "5472616e73616374656420616d6f756e742065786365656420746865206d617820616c6c6f7765642076616c7565",
																					"id": 3122,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "16018:48:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_cae3b9edb9e2038d3ab16a2c505f33af4bc7eeea3101f90e45e454c014520921",
																						"typeString": "literal_string \"Transacted amount exceed the max allowed value\""
																					},
																					"value": "Transacted amount exceed the max allowed value"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					},
																					{
																						"typeIdentifier": "t_stringliteral_cae3b9edb9e2038d3ab16a2c505f33af4bc7eeea3101f90e45e454c014520921",
																						"typeString": "literal_string \"Transacted amount exceed the max allowed value\""
																					}
																				],
																				"id": 3118,
																				"name": "require",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967278,
																					4294967278
																				],
																				"referencedDeclaration": 4294967278,
																				"src": "15947:7:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (bool,string memory) pure"
																				}
																			},
																			"id": 3123,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "15947:137:9",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 3124,
																		"nodeType": "ExpressionStatement",
																		"src": "15947:137:9"
																	}
																]
															}
														}
													]
												}
											}
										]
									},
									"id": 3140,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "14452:9:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3025,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3020,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "14479:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 3140,
												"src": "14471:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3019,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14471:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3022,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "14501:2:9",
												"nodeType": "VariableDeclaration",
												"scope": 3140,
												"src": "14493:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3021,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14493:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3024,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "14521:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 3140,
												"src": "14513:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3023,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14513:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14461:72:9"
									},
									"returnParameters": {
										"id": 3026,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14542:0:9"
									},
									"scope": 3991,
									"src": "14443:1845:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 3195,
										"nodeType": "Block",
										"src": "16368:890:9",
										"statements": [
											{
												"assignments": [
													3148
												],
												"declarations": [
													{
														"constant": false,
														"id": 3148,
														"mutability": "mutable",
														"name": "half",
														"nameLocation": "16436:4:9",
														"nodeType": "VariableDeclaration",
														"scope": 3195,
														"src": "16428:12:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3147,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "16428:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3153,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "32",
															"id": 3151,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "16468:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															}
														],
														"expression": {
															"id": 3149,
															"name": "contractTokenBalance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3142,
															"src": "16443:20:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 3150,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 763,
														"src": "16443:24:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 3152,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16443:27:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "16428:42:9"
											},
											{
												"assignments": [
													3155
												],
												"declarations": [
													{
														"constant": false,
														"id": 3155,
														"mutability": "mutable",
														"name": "otherHalf",
														"nameLocation": "16488:9:9",
														"nodeType": "VariableDeclaration",
														"scope": 3195,
														"src": "16480:17:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3154,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "16480:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3160,
												"initialValue": {
													"arguments": [
														{
															"id": 3158,
															"name": "half",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3148,
															"src": "16525:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 3156,
															"name": "contractTokenBalance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3142,
															"src": "16500:20:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 3157,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 733,
														"src": "16500:24:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 3159,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16500:30:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "16480:50:9"
											},
											{
												"assignments": [
													3162
												],
												"declarations": [
													{
														"constant": false,
														"id": 3162,
														"mutability": "mutable",
														"name": "initialBalance",
														"nameLocation": "16810:14:9",
														"nodeType": "VariableDeclaration",
														"scope": 3195,
														"src": "16802:22:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3161,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "16802:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3168,
												"initialValue": {
													"expression": {
														"arguments": [
															{
																"id": 3165,
																"name": "this",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967268,
																"src": "16835:4:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_Pokemon_$3991",
																	"typeString": "contract Pokemon"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_Pokemon_$3991",
																	"typeString": "contract Pokemon"
																}
															],
															"id": 3164,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "16827:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 3163,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "16827:7:9",
																"typeDescriptions": {}
															}
														},
														"id": 3166,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "16827:13:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 3167,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "balance",
													"nodeType": "MemberAccess",
													"src": "16827:21:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "16802:46:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3170,
															"name": "half",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3148,
															"src": "16907:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3169,
														"name": "swapTokensForEth",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3256,
														"src": "16890:16:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 3171,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16890:22:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3172,
												"nodeType": "ExpressionStatement",
												"src": "16890:22:9"
											},
											{
												"assignments": [
													3174
												],
												"declarations": [
													{
														"constant": false,
														"id": 3174,
														"mutability": "mutable",
														"name": "newBalance",
														"nameLocation": "17056:10:9",
														"nodeType": "VariableDeclaration",
														"scope": 3195,
														"src": "17048:18:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3173,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "17048:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3183,
												"initialValue": {
													"arguments": [
														{
															"id": 3181,
															"name": "initialBalance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3162,
															"src": "17095:14:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"expression": {
																"arguments": [
																	{
																		"id": 3177,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "17077:4:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_Pokemon_$3991",
																			"typeString": "contract Pokemon"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_Pokemon_$3991",
																			"typeString": "contract Pokemon"
																		}
																	],
																	"id": 3176,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "17069:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 3175,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "17069:7:9",
																		"typeDescriptions": {}
																	}
																},
																"id": 3178,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "17069:13:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 3179,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "balance",
															"nodeType": "MemberAccess",
															"src": "17069:21:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 3180,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 733,
														"src": "17069:25:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 3182,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17069:41:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "17048:62:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3185,
															"name": "otherHalf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3155,
															"src": "17170:9:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 3186,
															"name": "newBalance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3174,
															"src": "17181:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3184,
														"name": "addLiquidity",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3294,
														"src": "17157:12:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256)"
														}
													},
													"id": 3187,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17157:35:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3188,
												"nodeType": "ExpressionStatement",
												"src": "17157:35:9"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 3190,
															"name": "half",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3148,
															"src": "17223:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 3191,
															"name": "newBalance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3174,
															"src": "17229:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 3192,
															"name": "otherHalf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3155,
															"src": "17241:9:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3189,
														"name": "SwapAndLiquify",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1745,
														"src": "17208:14:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256,uint256)"
														}
													},
													"id": 3193,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17208:43:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3194,
												"nodeType": "EmitStatement",
												"src": "17203:48:9"
											}
										]
									},
									"id": 3196,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 3145,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 3144,
												"name": "lockTheSwap",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1757,
												"src": "16356:11:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "16356:11:9"
										}
									],
									"name": "swapAndLiquify",
									"nameLocation": "16303:14:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3143,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3142,
												"mutability": "mutable",
												"name": "contractTokenBalance",
												"nameLocation": "16326:20:9",
												"nodeType": "VariableDeclaration",
												"scope": 3196,
												"src": "16318:28:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3141,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16318:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16317:30:9"
									},
									"returnParameters": {
										"id": 3146,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16368:0:9"
									},
									"scope": 3991,
									"src": "16294:964:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 3255,
										"nodeType": "Block",
										"src": "17319:518:9",
										"statements": [
											{
												"assignments": [
													3205
												],
												"declarations": [
													{
														"constant": false,
														"id": 3205,
														"mutability": "mutable",
														"name": "path",
														"nameLocation": "17405:4:9",
														"nodeType": "VariableDeclaration",
														"scope": 3255,
														"src": "17388:21:9",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
															"typeString": "address[]"
														},
														"typeName": {
															"baseType": {
																"id": 3203,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "17388:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 3204,
															"nodeType": "ArrayTypeName",
															"src": "17388:9:9",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
																"typeString": "address[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3211,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "32",
															"id": 3209,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "17426:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															}
														],
														"id": 3208,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "17412:13:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (address[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 3206,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "17416:7:9",
																"stateMutability": "nonpayable",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 3207,
															"nodeType": "ArrayTypeName",
															"src": "17416:9:9",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
																"typeString": "address[]"
															}
														}
													},
													"id": 3210,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17412:16:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
														"typeString": "address[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "17388:40:9"
											},
											{
												"expression": {
													"id": 3219,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 3212,
															"name": "path",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3205,
															"src": "17438:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														"id": 3214,
														"indexExpression": {
															"hexValue": "30",
															"id": 3213,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "17443:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "17438:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3217,
																"name": "this",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967268,
																"src": "17456:4:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_Pokemon_$3991",
																	"typeString": "contract Pokemon"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_Pokemon_$3991",
																	"typeString": "contract Pokemon"
																}
															],
															"id": 3216,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "17448:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 3215,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "17448:7:9",
																"typeDescriptions": {}
															}
														},
														"id": 3218,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "17448:13:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "17438:23:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 3220,
												"nodeType": "ExpressionStatement",
												"src": "17438:23:9"
											},
											{
												"expression": {
													"id": 3227,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 3221,
															"name": "path",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3205,
															"src": "17471:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														"id": 3223,
														"indexExpression": {
															"hexValue": "31",
															"id": 3222,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "17476:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "17471:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"expression": {
																"id": 3224,
																"name": "pancakeV2Router",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1704,
																"src": "17481:15:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IPancakeV2Router02_$1555",
																	"typeString": "contract IPancakeV2Router02"
																}
															},
															"id": 3225,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "WETH",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1171,
															"src": "17481:20:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_pure$__$returns$_t_address_$",
																"typeString": "function () pure external returns (address)"
															}
														},
														"id": 3226,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "17481:22:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "17471:32:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 3228,
												"nodeType": "ExpressionStatement",
												"src": "17471:32:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 3232,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "17531:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Pokemon_$3991",
																		"typeString": "contract Pokemon"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Pokemon_$3991",
																		"typeString": "contract Pokemon"
																	}
																],
																"id": 3231,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "17523:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 3230,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "17523:7:9",
																	"typeDescriptions": {}
																}
															},
															"id": 3233,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "17523:13:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 3236,
																	"name": "pancakeV2Router",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1704,
																	"src": "17546:15:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IPancakeV2Router02_$1555",
																		"typeString": "contract IPancakeV2Router02"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IPancakeV2Router02_$1555",
																		"typeString": "contract IPancakeV2Router02"
																	}
																],
																"id": 3235,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "17538:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 3234,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "17538:7:9",
																	"typeDescriptions": {}
																}
															},
															"id": 3237,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "17538:24:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3238,
															"name": "tokenAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3198,
															"src": "17564:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3229,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3018,
														"src": "17514:8:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 3239,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17514:62:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3240,
												"nodeType": "ExpressionStatement",
												"src": "17514:62:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3244,
															"name": "tokenAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3198,
															"src": "17692:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "30",
															"id": 3245,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "17717:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 3246,
															"name": "path",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3205,
															"src": "17760:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														{
															"arguments": [
																{
																	"id": 3249,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "17786:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Pokemon_$3991",
																		"typeString": "contract Pokemon"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Pokemon_$3991",
																		"typeString": "contract Pokemon"
																	}
																],
																"id": 3248,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "17778:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 3247,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "17778:7:9",
																	"typeDescriptions": {}
																}
															},
															"id": 3250,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "17778:13:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 3251,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "17805:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 3252,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "17805:15:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 3241,
															"name": "pancakeV2Router",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1704,
															"src": "17612:15:9",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IPancakeV2Router02_$1555",
																"typeString": "contract IPancakeV2Router02"
															}
														},
														"id": 3243,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "swapExactTokensForETHSupportingFeeOnTransferTokens",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1554,
														"src": "17612:66:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256,address[] memory,address,uint256) external"
														}
													},
													"id": 3253,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17612:218:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3254,
												"nodeType": "ExpressionStatement",
												"src": "17612:218:9"
											}
										]
									},
									"id": 3256,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "swapTokensForEth",
									"nameLocation": "17273:16:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3198,
												"mutability": "mutable",
												"name": "tokenAmount",
												"nameLocation": "17298:11:9",
												"nodeType": "VariableDeclaration",
												"scope": 3256,
												"src": "17290:19:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3197,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17290:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17289:21:9"
									},
									"returnParameters": {
										"id": 3200,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17319:0:9"
									},
									"scope": 3991,
									"src": "17264:573:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 3293,
										"nodeType": "Block",
										"src": "17913:430:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 3266,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "18006:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Pokemon_$3991",
																		"typeString": "contract Pokemon"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Pokemon_$3991",
																		"typeString": "contract Pokemon"
																	}
																],
																"id": 3265,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "17998:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 3264,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "17998:7:9",
																	"typeDescriptions": {}
																}
															},
															"id": 3267,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "17998:13:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 3270,
																	"name": "pancakeV2Router",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1704,
																	"src": "18021:15:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IPancakeV2Router02_$1555",
																		"typeString": "contract IPancakeV2Router02"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IPancakeV2Router02_$1555",
																		"typeString": "contract IPancakeV2Router02"
																	}
																],
																"id": 3269,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "18013:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 3268,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "18013:7:9",
																	"typeDescriptions": {}
																}
															},
															"id": 3271,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "18013:24:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3272,
															"name": "tokenAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3258,
															"src": "18039:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3263,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3018,
														"src": "17989:8:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 3273,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17989:62:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3274,
												"nodeType": "ExpressionStatement",
												"src": "17989:62:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 3282,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "18162:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Pokemon_$3991",
																		"typeString": "contract Pokemon"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Pokemon_$3991",
																		"typeString": "contract Pokemon"
																	}
																],
																"id": 3281,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "18154:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 3280,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "18154:7:9",
																	"typeDescriptions": {}
																}
															},
															"id": 3283,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "18154:13:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3284,
															"name": "tokenAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3258,
															"src": "18181:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "30",
															"id": 3285,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "18206:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"hexValue": "30",
															"id": 3286,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "18248:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 3287,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 40,
																"src": "18290:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 3288,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "18290:7:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 3289,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "18311:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 3290,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "18311:15:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 3275,
																"name": "pancakeV2Router",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1704,
																"src": "18091:15:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IPancakeV2Router02_$1555",
																	"typeString": "contract IPancakeV2Router02"
																}
															},
															"id": 3277,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "addLiquidityETH",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1217,
															"src": "18091:31:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_payable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_address_$_t_uint256_$returns$_t_uint256_$_t_uint256_$_t_uint256_$",
																"typeString": "function (address,uint256,uint256,uint256,address,uint256) payable external returns (uint256,uint256,uint256)"
															}
														},
														"id": 3279,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 3278,
																"name": "ethAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3260,
																"src": "18130:9:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "18091:49:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_payable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_address_$_t_uint256_$returns$_t_uint256_$_t_uint256_$_t_uint256_$value",
															"typeString": "function (address,uint256,uint256,uint256,address,uint256) payable external returns (uint256,uint256,uint256)"
														}
													},
													"id": 3291,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18091:245:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256,uint256)"
													}
												},
												"id": 3292,
												"nodeType": "ExpressionStatement",
												"src": "18091:245:9"
											}
										]
									},
									"id": 3294,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "addLiquidity",
									"nameLocation": "17852:12:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3261,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3258,
												"mutability": "mutable",
												"name": "tokenAmount",
												"nameLocation": "17873:11:9",
												"nodeType": "VariableDeclaration",
												"scope": 3294,
												"src": "17865:19:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3257,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17865:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3260,
												"mutability": "mutable",
												"name": "ethAmount",
												"nameLocation": "17894:9:9",
												"nodeType": "VariableDeclaration",
												"scope": 3294,
												"src": "17886:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3259,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17886:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17864:40:9"
									},
									"returnParameters": {
										"id": 3262,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17913:0:9"
									},
									"scope": 3991,
									"src": "17843:500:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 3496,
										"nodeType": "Block",
										"src": "18534:1896:9",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 3309,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"id": 3303,
															"name": "_isExcludedFromFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1606,
															"src": "18548:18:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 3305,
														"indexExpression": {
															"id": 3304,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3296,
															"src": "18567:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "18548:26:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"baseExpression": {
															"id": 3306,
															"name": "_isExcludedFromFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1606,
															"src": "18578:18:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 3308,
														"indexExpression": {
															"id": 3307,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3298,
															"src": "18597:9:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "18578:29:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "18548:59:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 3316,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 3314,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3298,
															"src": "18658:9:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"id": 3315,
															"name": "pancakeV2Pair",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1706,
															"src": "18671:13:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "18658:26:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 3321,
													"nodeType": "IfStatement",
													"src": "18654:74:9",
													"trueBody": {
														"id": 3320,
														"nodeType": "Block",
														"src": "18686:42:9",
														"statements": [
															{
																"expression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 3317,
																		"name": "activateSellFee",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2889,
																		"src": "18700:15:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
																			"typeString": "function ()"
																		}
																	},
																	"id": 3318,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "18700:17:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 3319,
																"nodeType": "ExpressionStatement",
																"src": "18700:17:9"
															}
														]
													}
												},
												"id": 3322,
												"nodeType": "IfStatement",
												"src": "18544:184:9",
												"trueBody": {
													"id": 3313,
													"nodeType": "Block",
													"src": "18609:39:9",
													"statements": [
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 3310,
																	"name": "removeAllFee",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2942,
																	"src": "18623:12:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
																		"typeString": "function ()"
																	}
																},
																"id": 3311,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "18623:14:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 3312,
															"nodeType": "ExpressionStatement",
															"src": "18623:14:9"
														}
													]
												}
											},
											{
												"assignments": [
													3324
												],
												"declarations": [
													{
														"constant": false,
														"id": 3324,
														"mutability": "mutable",
														"name": "burnAmt",
														"nameLocation": "18799:7:9",
														"nodeType": "VariableDeclaration",
														"scope": 3496,
														"src": "18791:15:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3323,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "18791:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3332,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "313030",
															"id": 3330,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "18834:3:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_100_by_1",
																"typeString": "int_const 100"
															},
															"value": "100"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_100_by_1",
																"typeString": "int_const 100"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 3327,
																	"name": "_burnFee",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1662,
																	"src": "18820:8:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 3325,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3300,
																	"src": "18809:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 3326,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "mul",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 748,
																"src": "18809:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 3328,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "18809:20:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 3329,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 763,
														"src": "18809:24:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 3331,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18809:29:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "18791:47:9"
											},
											{
												"assignments": [
													3334
												],
												"declarations": [
													{
														"constant": false,
														"id": 3334,
														"mutability": "mutable",
														"name": "marketingAmt",
														"nameLocation": "18856:12:9",
														"nodeType": "VariableDeclaration",
														"scope": 3496,
														"src": "18848:20:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3333,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "18848:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3342,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "313030",
															"id": 3340,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "18901:3:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_100_by_1",
																"typeString": "int_const 100"
															},
															"value": "100"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_100_by_1",
																"typeString": "int_const 100"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 3337,
																	"name": "_marketingFee",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1668,
																	"src": "18882:13:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 3335,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3300,
																	"src": "18871:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 3336,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "mul",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 748,
																"src": "18871:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 3338,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "18871:25:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 3339,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 763,
														"src": "18871:29:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 3341,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18871:34:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "18848:57:9"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 3350,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"id": 3343,
															"name": "_isExcluded",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1610,
															"src": "18920:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 3345,
														"indexExpression": {
															"id": 3344,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3296,
															"src": "18932:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "18920:19:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 3349,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "18943:23:9",
														"subExpression": {
															"baseExpression": {
																"id": 3346,
																"name": "_isExcluded",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1610,
																"src": "18944:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																	"typeString": "mapping(address => bool)"
																}
															},
															"id": 3348,
															"indexExpression": {
																"id": 3347,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3298,
																"src": "18956:9:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "18944:22:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "18920:46:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 3372,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 3368,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "19146:20:9",
															"subExpression": {
																"baseExpression": {
																	"id": 3365,
																	"name": "_isExcluded",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1610,
																	"src": "19147:11:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																		"typeString": "mapping(address => bool)"
																	}
																},
																"id": 3367,
																"indexExpression": {
																	"id": 3366,
																	"name": "sender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3296,
																	"src": "19159:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "19147:19:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&&",
														"rightExpression": {
															"baseExpression": {
																"id": 3369,
																"name": "_isExcluded",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1610,
																"src": "19170:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																	"typeString": "mapping(address => bool)"
																}
															},
															"id": 3371,
															"indexExpression": {
																"id": 3370,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3298,
																"src": "19182:9:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "19170:22:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "19146:46:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"condition": {
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 3395,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3390,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "!",
																"prefix": true,
																"src": "19370:20:9",
																"subExpression": {
																	"baseExpression": {
																		"id": 3387,
																		"name": "_isExcluded",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1610,
																		"src": "19371:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 3389,
																	"indexExpression": {
																		"id": 3388,
																		"name": "sender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3296,
																		"src": "19383:6:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "19371:19:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"id": 3394,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "!",
																"prefix": true,
																"src": "19394:23:9",
																"subExpression": {
																	"baseExpression": {
																		"id": 3391,
																		"name": "_isExcluded",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1610,
																		"src": "19395:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 3393,
																	"indexExpression": {
																		"id": 3392,
																		"name": "recipient",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3298,
																		"src": "19407:9:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "19395:22:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "19370:47:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseBody": {
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 3416,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"id": 3410,
																		"name": "_isExcluded",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1610,
																		"src": "19531:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 3412,
																	"indexExpression": {
																		"id": 3411,
																		"name": "sender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3296,
																		"src": "19543:6:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "19531:19:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"baseExpression": {
																		"id": 3413,
																		"name": "_isExcluded",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1610,
																		"src": "19554:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 3415,
																	"indexExpression": {
																		"id": 3414,
																		"name": "recipient",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3298,
																		"src": "19566:9:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "19554:22:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "19531:45:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 3444,
																"nodeType": "Block",
																"src": "19752:102:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 3432,
																					"name": "sender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3296,
																					"src": "19784:6:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 3433,
																					"name": "recipient",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3298,
																					"src": "19792:9:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"components": [
																						{
																							"arguments": [
																								{
																									"id": 3439,
																									"name": "marketingAmt",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 3334,
																									"src": "19828:12:9",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								}
																							],
																							"expression": {
																								"argumentTypes": [
																									{
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								],
																								"expression": {
																									"arguments": [
																										{
																											"id": 3436,
																											"name": "burnAmt",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 3324,
																											"src": "19815:7:9",
																											"typeDescriptions": {
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										}
																									],
																									"expression": {
																										"argumentTypes": [
																											{
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										],
																										"expression": {
																											"id": 3434,
																											"name": "amount",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 3300,
																											"src": "19804:6:9",
																											"typeDescriptions": {
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										},
																										"id": 3435,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": false,
																										"lValueRequested": false,
																										"memberName": "sub",
																										"nodeType": "MemberAccess",
																										"referencedDeclaration": 733,
																										"src": "19804:10:9",
																										"typeDescriptions": {
																											"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																											"typeString": "function (uint256,uint256) pure returns (uint256)"
																										}
																									},
																									"id": 3437,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"kind": "functionCall",
																									"lValueRequested": false,
																									"names": [],
																									"nodeType": "FunctionCall",
																									"src": "19804:19:9",
																									"tryCall": false,
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"id": 3438,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"memberName": "sub",
																								"nodeType": "MemberAccess",
																								"referencedDeclaration": 733,
																								"src": "19804:23:9",
																								"typeDescriptions": {
																									"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																									"typeString": "function (uint256,uint256) pure returns (uint256)"
																								}
																							},
																							"id": 3440,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"kind": "functionCall",
																							"lValueRequested": false,
																							"names": [],
																							"nodeType": "FunctionCall",
																							"src": "19804:37:9",
																							"tryCall": false,
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"id": 3441,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "19803:39:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 3431,
																				"name": "_transferStandard",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3560,
																				"src": "19766:17:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																					"typeString": "function (address,address,uint256)"
																				}
																			},
																			"id": 3442,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "19766:77:9",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 3443,
																		"nodeType": "ExpressionStatement",
																		"src": "19766:77:9"
																	}
																]
															},
															"id": 3445,
															"nodeType": "IfStatement",
															"src": "19527:327:9",
															"trueBody": {
																"id": 3430,
																"nodeType": "Block",
																"src": "19578:168:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 3418,
																					"name": "sender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3296,
																					"src": "19631:6:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 3419,
																					"name": "recipient",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3298,
																					"src": "19655:9:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"components": [
																						{
																							"arguments": [
																								{
																									"id": 3425,
																									"name": "marketingAmt",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 3334,
																									"src": "19707:12:9",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								}
																							],
																							"expression": {
																								"argumentTypes": [
																									{
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								],
																								"expression": {
																									"arguments": [
																										{
																											"id": 3422,
																											"name": "burnAmt",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 3324,
																											"src": "19694:7:9",
																											"typeDescriptions": {
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										}
																									],
																									"expression": {
																										"argumentTypes": [
																											{
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										],
																										"expression": {
																											"id": 3420,
																											"name": "amount",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 3300,
																											"src": "19683:6:9",
																											"typeDescriptions": {
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										},
																										"id": 3421,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": false,
																										"lValueRequested": false,
																										"memberName": "sub",
																										"nodeType": "MemberAccess",
																										"referencedDeclaration": 733,
																										"src": "19683:10:9",
																										"typeDescriptions": {
																											"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																											"typeString": "function (uint256,uint256) pure returns (uint256)"
																										}
																									},
																									"id": 3423,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"kind": "functionCall",
																									"lValueRequested": false,
																									"names": [],
																									"nodeType": "FunctionCall",
																									"src": "19683:19:9",
																									"tryCall": false,
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"id": 3424,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"memberName": "sub",
																								"nodeType": "MemberAccess",
																								"referencedDeclaration": 733,
																								"src": "19683:23:9",
																								"typeDescriptions": {
																									"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																									"typeString": "function (uint256,uint256) pure returns (uint256)"
																								}
																							},
																							"id": 3426,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"kind": "functionCall",
																							"lValueRequested": false,
																							"names": [],
																							"nodeType": "FunctionCall",
																							"src": "19683:37:9",
																							"tryCall": false,
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"id": 3427,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "19682:39:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 3417,
																				"name": "_transferBothExcluded",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2485,
																				"src": "19592:21:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																					"typeString": "function (address,address,uint256)"
																				}
																			},
																			"id": 3428,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "19592:143:9",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 3429,
																		"nodeType": "ExpressionStatement",
																		"src": "19592:143:9"
																	}
																]
															}
														},
														"id": 3446,
														"nodeType": "IfStatement",
														"src": "19366:488:9",
														"trueBody": {
															"id": 3409,
															"nodeType": "Block",
															"src": "19419:102:9",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 3397,
																				"name": "sender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3296,
																				"src": "19451:6:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 3398,
																				"name": "recipient",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3298,
																				"src": "19459:9:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"components": [
																					{
																						"arguments": [
																							{
																								"id": 3404,
																								"name": "marketingAmt",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 3334,
																								"src": "19495:12:9",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							],
																							"expression": {
																								"arguments": [
																									{
																										"id": 3401,
																										"name": "burnAmt",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 3324,
																										"src": "19482:7:9",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									],
																									"expression": {
																										"id": 3399,
																										"name": "amount",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 3300,
																										"src": "19471:6:9",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"id": 3400,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"memberName": "sub",
																									"nodeType": "MemberAccess",
																									"referencedDeclaration": 733,
																									"src": "19471:10:9",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																										"typeString": "function (uint256,uint256) pure returns (uint256)"
																									}
																								},
																								"id": 3402,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "19471:19:9",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"id": 3403,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "sub",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 733,
																							"src": "19471:23:9",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																								"typeString": "function (uint256,uint256) pure returns (uint256)"
																							}
																						},
																						"id": 3405,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "19471:37:9",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"id": 3406,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "19470:39:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 3396,
																			"name": "_transferStandard",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3560,
																			"src": "19433:17:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																				"typeString": "function (address,address,uint256)"
																			}
																		},
																		"id": 3407,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "19433:77:9",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 3408,
																	"nodeType": "ExpressionStatement",
																	"src": "19433:77:9"
																}
															]
														}
													},
													"id": 3447,
													"nodeType": "IfStatement",
													"src": "19142:712:9",
													"trueBody": {
														"id": 3386,
														"nodeType": "Block",
														"src": "19194:166:9",
														"statements": [
															{
																"expression": {
																	"arguments": [
																		{
																			"id": 3374,
																			"name": "sender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3296,
																			"src": "19245:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 3375,
																			"name": "recipient",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3298,
																			"src": "19269:9:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"components": [
																				{
																					"arguments": [
																						{
																							"id": 3381,
																							"name": "marketingAmt",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 3334,
																							"src": "19321:12:9",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						],
																						"expression": {
																							"arguments": [
																								{
																									"id": 3378,
																									"name": "burnAmt",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 3324,
																									"src": "19308:7:9",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								}
																							],
																							"expression": {
																								"argumentTypes": [
																									{
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								],
																								"expression": {
																									"id": 3376,
																									"name": "amount",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 3300,
																									"src": "19297:6:9",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"id": 3377,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"memberName": "sub",
																								"nodeType": "MemberAccess",
																								"referencedDeclaration": 733,
																								"src": "19297:10:9",
																								"typeDescriptions": {
																									"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																									"typeString": "function (uint256,uint256) pure returns (uint256)"
																								}
																							},
																							"id": 3379,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"kind": "functionCall",
																							"lValueRequested": false,
																							"names": [],
																							"nodeType": "FunctionCall",
																							"src": "19297:19:9",
																							"tryCall": false,
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"id": 3380,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "sub",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 733,
																						"src": "19297:23:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																							"typeString": "function (uint256,uint256) pure returns (uint256)"
																						}
																					},
																					"id": 3382,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "19297:37:9",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"id": 3383,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "19296:39:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 3373,
																		"name": "_transferToExcluded",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3634,
																		"src": "19208:19:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																			"typeString": "function (address,address,uint256)"
																		}
																	},
																	"id": 3384,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "19208:141:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 3385,
																"nodeType": "ExpressionStatement",
																"src": "19208:141:9"
															}
														]
													}
												},
												"id": 3448,
												"nodeType": "IfStatement",
												"src": "18916:938:9",
												"trueBody": {
													"id": 3364,
													"nodeType": "Block",
													"src": "18968:168:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 3352,
																		"name": "sender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3296,
																		"src": "19021:6:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 3353,
																		"name": "recipient",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3298,
																		"src": "19045:9:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"components": [
																			{
																				"arguments": [
																					{
																						"id": 3359,
																						"name": "marketingAmt",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3334,
																						"src": "19097:12:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"expression": {
																						"arguments": [
																							{
																								"id": 3356,
																								"name": "burnAmt",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 3324,
																								"src": "19084:7:9",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							],
																							"expression": {
																								"id": 3354,
																								"name": "amount",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 3300,
																								"src": "19073:6:9",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"id": 3355,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "sub",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 733,
																							"src": "19073:10:9",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																								"typeString": "function (uint256,uint256) pure returns (uint256)"
																							}
																						},
																						"id": 3357,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "19073:19:9",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 3358,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "sub",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 733,
																					"src": "19073:23:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 3360,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "19073:37:9",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 3361,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "19072:39:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 3351,
																	"name": "_transferFromExcluded",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3708,
																	"src": "18982:21:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 3362,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "18982:143:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 3363,
															"nodeType": "ExpressionStatement",
															"src": "18982:143:9"
														}
													]
												}
											},
											{
												"expression": {
													"id": 3451,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3449,
														"name": "_taxFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1650,
														"src": "19947:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 3450,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "19957:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "19947:11:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 3452,
												"nodeType": "ExpressionStatement",
												"src": "19947:11:9"
											},
											{
												"expression": {
													"id": 3455,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3453,
														"name": "_liquidityFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1656,
														"src": "19968:13:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 3454,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "19984:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "19968:17:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 3456,
												"nodeType": "ExpressionStatement",
												"src": "19968:17:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3458,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3296,
															"src": "20014:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 3461,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "20030:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 3460,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "20022:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 3459,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "20022:7:9",
																	"typeDescriptions": {}
																}
															},
															"id": 3462,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "20022:10:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3463,
															"name": "burnAmt",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3324,
															"src": "20034:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3457,
														"name": "_transferStandard",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3560,
														"src": "19996:17:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 3464,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19996:46:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3465,
												"nodeType": "ExpressionStatement",
												"src": "19996:46:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3467,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3296,
															"src": "20070:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3468,
															"name": "marketingWallet",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1670,
															"src": "20078:15:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3469,
															"name": "marketingAmt",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3334,
															"src": "20095:12:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3466,
														"name": "_transferStandard",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3560,
														"src": "20052:17:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 3470,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20052:56:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3471,
												"nodeType": "ExpressionStatement",
												"src": "20052:56:9"
											},
											{
												"expression": {
													"id": 3474,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3472,
														"name": "_taxFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1650,
														"src": "20160:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 3473,
														"name": "_previousTaxFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1653,
														"src": "20170:15:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "20160:25:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 3475,
												"nodeType": "ExpressionStatement",
												"src": "20160:25:9"
											},
											{
												"expression": {
													"id": 3478,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3476,
														"name": "_liquidityFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1656,
														"src": "20195:13:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 3477,
														"name": "_previousLiquidityFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1659,
														"src": "20211:21:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "20195:37:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 3479,
												"nodeType": "ExpressionStatement",
												"src": "20195:37:9"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 3490,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 3486,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"baseExpression": {
																"id": 3480,
																"name": "_isExcludedFromFee",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1606,
																"src": "20260:18:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																	"typeString": "mapping(address => bool)"
																}
															},
															"id": 3482,
															"indexExpression": {
																"id": 3481,
																"name": "sender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3296,
																"src": "20279:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "20260:26:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "||",
														"rightExpression": {
															"baseExpression": {
																"id": 3483,
																"name": "_isExcludedFromFee",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1606,
																"src": "20302:18:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																	"typeString": "mapping(address => bool)"
																}
															},
															"id": 3485,
															"indexExpression": {
																"id": 3484,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3298,
																"src": "20321:9:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "20302:29:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "20260:71:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 3489,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 3487,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3298,
															"src": "20347:9:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"id": 3488,
															"name": "pancakeV2Pair",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1706,
															"src": "20360:13:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "20347:26:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "20260:113:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3495,
												"nodeType": "IfStatement",
												"src": "20243:181:9",
												"trueBody": {
													"id": 3494,
													"nodeType": "Block",
													"src": "20384:40:9",
													"statements": [
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 3491,
																	"name": "restoreAllFee",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2962,
																	"src": "20398:13:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
																		"typeString": "function ()"
																	}
																},
																"id": 3492,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "20398:15:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 3493,
															"nodeType": "ExpressionStatement",
															"src": "20398:15:9"
														}
													]
												}
											}
										]
									},
									"id": 3497,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_tokenTransfer",
									"nameLocation": "18430:14:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3301,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3296,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "18462:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 3497,
												"src": "18454:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3295,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18454:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3298,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "18486:9:9",
												"nodeType": "VariableDeclaration",
												"scope": 3497,
												"src": "18478:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3297,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18478:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3300,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "18513:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 3497,
												"src": "18505:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3299,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18505:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18444:81:9"
									},
									"returnParameters": {
										"id": 3302,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "18534:0:9"
									},
									"scope": 3991,
									"src": "18421:2009:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 3559,
										"nodeType": "Block",
										"src": "20553:490:9",
										"statements": [
											{
												"assignments": [
													3507,
													3509,
													3511,
													3513,
													3515,
													3517
												],
												"declarations": [
													{
														"constant": false,
														"id": 3507,
														"mutability": "mutable",
														"name": "rAmount",
														"nameLocation": "20585:7:9",
														"nodeType": "VariableDeclaration",
														"scope": 3559,
														"src": "20577:15:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3506,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "20577:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 3509,
														"mutability": "mutable",
														"name": "rTransferAmount",
														"nameLocation": "20614:15:9",
														"nodeType": "VariableDeclaration",
														"scope": 3559,
														"src": "20606:23:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3508,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "20606:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 3511,
														"mutability": "mutable",
														"name": "rFee",
														"nameLocation": "20651:4:9",
														"nodeType": "VariableDeclaration",
														"scope": 3559,
														"src": "20643:12:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3510,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "20643:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 3513,
														"mutability": "mutable",
														"name": "tTransferAmount",
														"nameLocation": "20677:15:9",
														"nodeType": "VariableDeclaration",
														"scope": 3559,
														"src": "20669:23:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3512,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "20669:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 3515,
														"mutability": "mutable",
														"name": "tFee",
														"nameLocation": "20714:4:9",
														"nodeType": "VariableDeclaration",
														"scope": 3559,
														"src": "20706:12:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3514,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "20706:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 3517,
														"mutability": "mutable",
														"name": "tLiquidity",
														"nameLocation": "20740:10:9",
														"nodeType": "VariableDeclaration",
														"scope": 3559,
														"src": "20732:18:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3516,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "20732:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3521,
												"initialValue": {
													"arguments": [
														{
															"id": 3519,
															"name": "tAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3503,
															"src": "20774:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3518,
														"name": "_getValues",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2561,
														"src": "20763:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
															"typeString": "function (uint256) view returns (uint256,uint256,uint256,uint256,uint256,uint256)"
														}
													},
													"id": 3520,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20763:19:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256,uint256,uint256,uint256,uint256)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "20563:219:9"
											},
											{
												"expression": {
													"id": 3531,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 3522,
															"name": "_rOwned",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1592,
															"src": "20792:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 3524,
														"indexExpression": {
															"id": 3523,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3499,
															"src": "20800:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "20792:15:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3529,
																"name": "rAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3507,
																"src": "20830:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 3525,
																	"name": "_rOwned",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1592,
																	"src": "20810:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 3527,
																"indexExpression": {
																	"id": 3526,
																	"name": "sender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3499,
																	"src": "20818:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "20810:15:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 3528,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 733,
															"src": "20810:19:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 3530,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "20810:28:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "20792:46:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 3532,
												"nodeType": "ExpressionStatement",
												"src": "20792:46:9"
											},
											{
												"expression": {
													"id": 3542,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 3533,
															"name": "_rOwned",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1592,
															"src": "20848:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 3535,
														"indexExpression": {
															"id": 3534,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3501,
															"src": "20856:9:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "20848:18:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3540,
																"name": "rTransferAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3509,
																"src": "20892:15:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 3536,
																	"name": "_rOwned",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1592,
																	"src": "20869:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 3538,
																"indexExpression": {
																	"id": 3537,
																	"name": "recipient",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3501,
																	"src": "20877:9:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "20869:18:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 3539,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 718,
															"src": "20869:22:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 3541,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "20869:39:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "20848:60:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 3543,
												"nodeType": "ExpressionStatement",
												"src": "20848:60:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3545,
															"name": "tLiquidity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3517,
															"src": "20933:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3544,
														"name": "_takeLiquidity",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2817,
														"src": "20918:14:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 3546,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20918:26:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3547,
												"nodeType": "ExpressionStatement",
												"src": "20918:26:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3549,
															"name": "rFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3511,
															"src": "20966:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 3550,
															"name": "tFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3515,
															"src": "20972:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3548,
														"name": "_reflectFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2511,
														"src": "20954:11:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256)"
														}
													},
													"id": 3551,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20954:23:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3552,
												"nodeType": "ExpressionStatement",
												"src": "20954:23:9"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 3554,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3499,
															"src": "21001:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3555,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3501,
															"src": "21009:9:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3556,
															"name": "tTransferAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3513,
															"src": "21020:15:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3553,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 124,
														"src": "20992:8:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 3557,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20992:44:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3558,
												"nodeType": "EmitStatement",
												"src": "20987:49:9"
											}
										]
									},
									"id": 3560,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferStandard",
									"nameLocation": "20445:17:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3504,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3499,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "20480:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 3560,
												"src": "20472:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3498,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "20472:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3501,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "20504:9:9",
												"nodeType": "VariableDeclaration",
												"scope": 3560,
												"src": "20496:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3500,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "20496:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3503,
												"mutability": "mutable",
												"name": "tAmount",
												"nameLocation": "20531:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 3560,
												"src": "20523:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3502,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "20523:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20462:82:9"
									},
									"returnParameters": {
										"id": 3505,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "20553:0:9"
									},
									"scope": 3991,
									"src": "20436:607:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 3633,
										"nodeType": "Block",
										"src": "21168:560:9",
										"statements": [
											{
												"assignments": [
													3570,
													3572,
													3574,
													3576,
													3578,
													3580
												],
												"declarations": [
													{
														"constant": false,
														"id": 3570,
														"mutability": "mutable",
														"name": "rAmount",
														"nameLocation": "21200:7:9",
														"nodeType": "VariableDeclaration",
														"scope": 3633,
														"src": "21192:15:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3569,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "21192:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 3572,
														"mutability": "mutable",
														"name": "rTransferAmount",
														"nameLocation": "21229:15:9",
														"nodeType": "VariableDeclaration",
														"scope": 3633,
														"src": "21221:23:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3571,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "21221:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 3574,
														"mutability": "mutable",
														"name": "rFee",
														"nameLocation": "21266:4:9",
														"nodeType": "VariableDeclaration",
														"scope": 3633,
														"src": "21258:12:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3573,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "21258:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 3576,
														"mutability": "mutable",
														"name": "tTransferAmount",
														"nameLocation": "21292:15:9",
														"nodeType": "VariableDeclaration",
														"scope": 3633,
														"src": "21284:23:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3575,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "21284:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 3578,
														"mutability": "mutable",
														"name": "tFee",
														"nameLocation": "21329:4:9",
														"nodeType": "VariableDeclaration",
														"scope": 3633,
														"src": "21321:12:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3577,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "21321:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 3580,
														"mutability": "mutable",
														"name": "tLiquidity",
														"nameLocation": "21355:10:9",
														"nodeType": "VariableDeclaration",
														"scope": 3633,
														"src": "21347:18:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3579,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "21347:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3584,
												"initialValue": {
													"arguments": [
														{
															"id": 3582,
															"name": "tAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3566,
															"src": "21389:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3581,
														"name": "_getValues",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2561,
														"src": "21378:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
															"typeString": "function (uint256) view returns (uint256,uint256,uint256,uint256,uint256,uint256)"
														}
													},
													"id": 3583,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "21378:19:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256,uint256,uint256,uint256,uint256)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "21178:219:9"
											},
											{
												"expression": {
													"id": 3594,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 3585,
															"name": "_rOwned",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1592,
															"src": "21407:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 3587,
														"indexExpression": {
															"id": 3586,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3562,
															"src": "21415:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "21407:15:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3592,
																"name": "rAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3570,
																"src": "21445:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 3588,
																	"name": "_rOwned",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1592,
																	"src": "21425:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 3590,
																"indexExpression": {
																	"id": 3589,
																	"name": "sender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3562,
																	"src": "21433:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "21425:15:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 3591,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 733,
															"src": "21425:19:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 3593,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "21425:28:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "21407:46:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 3595,
												"nodeType": "ExpressionStatement",
												"src": "21407:46:9"
											},
											{
												"expression": {
													"id": 3605,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 3596,
															"name": "_tOwned",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1596,
															"src": "21463:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 3598,
														"indexExpression": {
															"id": 3597,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3564,
															"src": "21471:9:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "21463:18:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3603,
																"name": "tTransferAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3576,
																"src": "21507:15:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 3599,
																	"name": "_tOwned",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1596,
																	"src": "21484:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 3601,
																"indexExpression": {
																	"id": 3600,
																	"name": "recipient",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3564,
																	"src": "21492:9:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "21484:18:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 3602,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 718,
															"src": "21484:22:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 3604,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "21484:39:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "21463:60:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 3606,
												"nodeType": "ExpressionStatement",
												"src": "21463:60:9"
											},
											{
												"expression": {
													"id": 3616,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 3607,
															"name": "_rOwned",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1592,
															"src": "21533:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 3609,
														"indexExpression": {
															"id": 3608,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3564,
															"src": "21541:9:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "21533:18:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3614,
																"name": "rTransferAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3572,
																"src": "21577:15:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 3610,
																	"name": "_rOwned",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1592,
																	"src": "21554:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 3612,
																"indexExpression": {
																	"id": 3611,
																	"name": "recipient",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3564,
																	"src": "21562:9:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "21554:18:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 3613,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 718,
															"src": "21554:22:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 3615,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "21554:39:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "21533:60:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 3617,
												"nodeType": "ExpressionStatement",
												"src": "21533:60:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3619,
															"name": "tLiquidity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3580,
															"src": "21618:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3618,
														"name": "_takeLiquidity",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2817,
														"src": "21603:14:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 3620,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "21603:26:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3621,
												"nodeType": "ExpressionStatement",
												"src": "21603:26:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3623,
															"name": "rFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3574,
															"src": "21651:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 3624,
															"name": "tFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3578,
															"src": "21657:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3622,
														"name": "_reflectFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2511,
														"src": "21639:11:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256)"
														}
													},
													"id": 3625,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "21639:23:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3626,
												"nodeType": "ExpressionStatement",
												"src": "21639:23:9"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 3628,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3562,
															"src": "21686:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3629,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3564,
															"src": "21694:9:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3630,
															"name": "tTransferAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3576,
															"src": "21705:15:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3627,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 124,
														"src": "21677:8:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 3631,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "21677:44:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3632,
												"nodeType": "EmitStatement",
												"src": "21672:49:9"
											}
										]
									},
									"id": 3634,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferToExcluded",
									"nameLocation": "21058:19:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3567,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3562,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "21095:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 3634,
												"src": "21087:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3561,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "21087:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3564,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "21119:9:9",
												"nodeType": "VariableDeclaration",
												"scope": 3634,
												"src": "21111:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3563,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "21111:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3566,
												"mutability": "mutable",
												"name": "tAmount",
												"nameLocation": "21146:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 3634,
												"src": "21138:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3565,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "21138:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21077:82:9"
									},
									"returnParameters": {
										"id": 3568,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "21168:0:9"
									},
									"scope": 3991,
									"src": "21049:679:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 3707,
										"nodeType": "Block",
										"src": "21855:546:9",
										"statements": [
											{
												"assignments": [
													3644,
													3646,
													3648,
													3650,
													3652,
													3654
												],
												"declarations": [
													{
														"constant": false,
														"id": 3644,
														"mutability": "mutable",
														"name": "rAmount",
														"nameLocation": "21887:7:9",
														"nodeType": "VariableDeclaration",
														"scope": 3707,
														"src": "21879:15:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3643,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "21879:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 3646,
														"mutability": "mutable",
														"name": "rTransferAmount",
														"nameLocation": "21916:15:9",
														"nodeType": "VariableDeclaration",
														"scope": 3707,
														"src": "21908:23:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3645,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "21908:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 3648,
														"mutability": "mutable",
														"name": "rFee",
														"nameLocation": "21953:4:9",
														"nodeType": "VariableDeclaration",
														"scope": 3707,
														"src": "21945:12:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3647,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "21945:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 3650,
														"mutability": "mutable",
														"name": "tTransferAmount",
														"nameLocation": "21979:15:9",
														"nodeType": "VariableDeclaration",
														"scope": 3707,
														"src": "21971:23:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3649,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "21971:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 3652,
														"mutability": "mutable",
														"name": "tFee",
														"nameLocation": "22016:4:9",
														"nodeType": "VariableDeclaration",
														"scope": 3707,
														"src": "22008:12:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3651,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "22008:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 3654,
														"mutability": "mutable",
														"name": "tLiquidity",
														"nameLocation": "22042:10:9",
														"nodeType": "VariableDeclaration",
														"scope": 3707,
														"src": "22034:18:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3653,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "22034:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3658,
												"initialValue": {
													"arguments": [
														{
															"id": 3656,
															"name": "tAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3640,
															"src": "22076:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3655,
														"name": "_getValues",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2561,
														"src": "22065:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
															"typeString": "function (uint256) view returns (uint256,uint256,uint256,uint256,uint256,uint256)"
														}
													},
													"id": 3657,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "22065:19:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256,uint256,uint256,uint256,uint256)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "21865:219:9"
											},
											{
												"expression": {
													"id": 3668,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 3659,
															"name": "_tOwned",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1596,
															"src": "22094:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 3661,
														"indexExpression": {
															"id": 3660,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3636,
															"src": "22102:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "22094:15:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3666,
																"name": "tAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3640,
																"src": "22132:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 3662,
																	"name": "_tOwned",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1596,
																	"src": "22112:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 3664,
																"indexExpression": {
																	"id": 3663,
																	"name": "sender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3636,
																	"src": "22120:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "22112:15:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 3665,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 733,
															"src": "22112:19:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 3667,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "22112:28:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "22094:46:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 3669,
												"nodeType": "ExpressionStatement",
												"src": "22094:46:9"
											},
											{
												"expression": {
													"id": 3679,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 3670,
															"name": "_rOwned",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1592,
															"src": "22150:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 3672,
														"indexExpression": {
															"id": 3671,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3636,
															"src": "22158:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "22150:15:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3677,
																"name": "rAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3644,
																"src": "22188:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 3673,
																	"name": "_rOwned",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1592,
																	"src": "22168:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 3675,
																"indexExpression": {
																	"id": 3674,
																	"name": "sender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3636,
																	"src": "22176:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "22168:15:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 3676,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 733,
															"src": "22168:19:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 3678,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "22168:28:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "22150:46:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 3680,
												"nodeType": "ExpressionStatement",
												"src": "22150:46:9"
											},
											{
												"expression": {
													"id": 3690,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 3681,
															"name": "_rOwned",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1592,
															"src": "22206:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 3683,
														"indexExpression": {
															"id": 3682,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3638,
															"src": "22214:9:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "22206:18:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3688,
																"name": "rTransferAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3646,
																"src": "22250:15:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 3684,
																	"name": "_rOwned",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1592,
																	"src": "22227:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 3686,
																"indexExpression": {
																	"id": 3685,
																	"name": "recipient",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3638,
																	"src": "22235:9:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "22227:18:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 3687,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 718,
															"src": "22227:22:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 3689,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "22227:39:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "22206:60:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 3691,
												"nodeType": "ExpressionStatement",
												"src": "22206:60:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3693,
															"name": "tLiquidity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3654,
															"src": "22291:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3692,
														"name": "_takeLiquidity",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2817,
														"src": "22276:14:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 3694,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "22276:26:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3695,
												"nodeType": "ExpressionStatement",
												"src": "22276:26:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3697,
															"name": "rFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3648,
															"src": "22324:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 3698,
															"name": "tFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3652,
															"src": "22330:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3696,
														"name": "_reflectFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2511,
														"src": "22312:11:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256)"
														}
													},
													"id": 3699,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "22312:23:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3700,
												"nodeType": "ExpressionStatement",
												"src": "22312:23:9"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 3702,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3636,
															"src": "22359:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3703,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3638,
															"src": "22367:9:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3704,
															"name": "tTransferAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3650,
															"src": "22378:15:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3701,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 124,
														"src": "22350:8:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 3705,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "22350:44:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3706,
												"nodeType": "EmitStatement",
												"src": "22345:49:9"
											}
										]
									},
									"id": 3708,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferFromExcluded",
									"nameLocation": "21743:21:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3641,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3636,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "21782:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 3708,
												"src": "21774:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3635,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "21774:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3638,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "21806:9:9",
												"nodeType": "VariableDeclaration",
												"scope": 3708,
												"src": "21798:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3637,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "21798:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3640,
												"mutability": "mutable",
												"name": "tAmount",
												"nameLocation": "21833:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 3708,
												"src": "21825:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3639,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "21825:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21764:82:9"
									},
									"returnParameters": {
										"id": 3642,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "21855:0:9"
									},
									"scope": 3991,
									"src": "21734:667:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 3721,
										"nodeType": "Block",
										"src": "22465:51:9",
										"statements": [
											{
												"expression": {
													"id": 3719,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 3715,
															"name": "_isExcludedFromFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1606,
															"src": "22475:18:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 3717,
														"indexExpression": {
															"id": 3716,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3710,
															"src": "22494:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "22475:27:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 3718,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "22505:4:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "22475:34:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3720,
												"nodeType": "ExpressionStatement",
												"src": "22475:34:9"
											}
										]
									},
									"functionSelector": "437823ec",
									"id": 3722,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 3713,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 3712,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "22455:9:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "22455:9:9"
										}
									],
									"name": "excludeFromFee",
									"nameLocation": "22416:14:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3711,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3710,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "22439:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 3722,
												"src": "22431:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3709,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "22431:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22430:17:9"
									},
									"returnParameters": {
										"id": 3714,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "22465:0:9"
									},
									"scope": 3991,
									"src": "22407:109:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3735,
										"nodeType": "Block",
										"src": "22578:52:9",
										"statements": [
											{
												"expression": {
													"id": 3733,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 3729,
															"name": "_isExcludedFromFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1606,
															"src": "22588:18:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 3731,
														"indexExpression": {
															"id": 3730,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3724,
															"src": "22607:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "22588:27:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 3732,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "22618:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "22588:35:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3734,
												"nodeType": "ExpressionStatement",
												"src": "22588:35:9"
											}
										]
									},
									"functionSelector": "ea2f0b37",
									"id": 3736,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 3727,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 3726,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "22568:9:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "22568:9:9"
										}
									],
									"name": "includeInFee",
									"nameLocation": "22531:12:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3725,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3724,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "22552:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 3736,
												"src": "22544:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3723,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "22544:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22543:17:9"
									},
									"returnParameters": {
										"id": 3728,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "22578:0:9"
									},
									"scope": 3991,
									"src": "22522:108:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3747,
										"nodeType": "Block",
										"src": "22702:44:9",
										"statements": [
											{
												"expression": {
													"id": 3745,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3743,
														"name": "marketingWallet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1670,
														"src": "22712:15:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 3744,
														"name": "newWallet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3738,
														"src": "22730:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "22712:27:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 3746,
												"nodeType": "ExpressionStatement",
												"src": "22712:27:9"
											}
										]
									},
									"functionSelector": "5d098b38",
									"id": 3748,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 3741,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 3740,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "22692:9:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "22692:9:9"
										}
									],
									"name": "setMarketingWallet",
									"nameLocation": "22645:18:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3739,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3738,
												"mutability": "mutable",
												"name": "newWallet",
												"nameLocation": "22672:9:9",
												"nodeType": "VariableDeclaration",
												"scope": 3748,
												"src": "22664:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3737,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "22664:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22663:19:9"
									},
									"returnParameters": {
										"id": 3742,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "22702:0:9"
									},
									"scope": 3991,
									"src": "22636:110:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 3766,
										"nodeType": "Block",
										"src": "22813:99:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3758,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3756,
																"name": "taxFee",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3750,
																"src": "22831:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"hexValue": "3130",
																"id": 3757,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "22841:2:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"value": "10"
															},
															"src": "22831:12:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "546178206665652063616e6e6f74206265206d6f7265207468616e20313025",
															"id": 3759,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "22845:33:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0a76e06c54c9cc0a2854b395e370ae54860131006316b46c6c19fe7418fa0a0c",
																"typeString": "literal_string \"Tax fee cannot be more than 10%\""
															},
															"value": "Tax fee cannot be more than 10%"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0a76e06c54c9cc0a2854b395e370ae54860131006316b46c6c19fe7418fa0a0c",
																"typeString": "literal_string \"Tax fee cannot be more than 10%\""
															}
														],
														"id": 3755,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "22823:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3760,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "22823:56:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3761,
												"nodeType": "ExpressionStatement",
												"src": "22823:56:9"
											},
											{
												"expression": {
													"id": 3764,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3762,
														"name": "_taxFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1650,
														"src": "22889:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 3763,
														"name": "taxFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3750,
														"src": "22899:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "22889:16:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 3765,
												"nodeType": "ExpressionStatement",
												"src": "22889:16:9"
											}
										]
									},
									"functionSelector": "061c82d0",
									"id": 3767,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 3753,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 3752,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "22803:9:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "22803:9:9"
										}
									],
									"name": "setTaxFeePercent",
									"nameLocation": "22761:16:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3751,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3750,
												"mutability": "mutable",
												"name": "taxFee",
												"nameLocation": "22786:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 3767,
												"src": "22778:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3749,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "22778:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22777:16:9"
									},
									"returnParameters": {
										"id": 3754,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "22813:0:9"
									},
									"scope": 3991,
									"src": "22752:160:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 3785,
										"nodeType": "Block",
										"src": "22991:123:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3777,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3775,
																"name": "liquidityFee",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3769,
																"src": "23009:12:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"hexValue": "3130",
																"id": 3776,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "23025:2:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"value": "10"
															},
															"src": "23009:18:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4c6971756964697479206665652063616e6e6f74206265206d6f7265207468616e20313025",
															"id": 3778,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "23029:39:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ffa0fc0b551ed285e79ae6c63e94336b136523a15dd8db2ed7cfc4776042e049",
																"typeString": "literal_string \"Liquidity fee cannot be more than 10%\""
															},
															"value": "Liquidity fee cannot be more than 10%"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ffa0fc0b551ed285e79ae6c63e94336b136523a15dd8db2ed7cfc4776042e049",
																"typeString": "literal_string \"Liquidity fee cannot be more than 10%\""
															}
														],
														"id": 3774,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "23001:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3779,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "23001:68:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3780,
												"nodeType": "ExpressionStatement",
												"src": "23001:68:9"
											},
											{
												"expression": {
													"id": 3783,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3781,
														"name": "_liquidityFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1656,
														"src": "23079:13:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 3782,
														"name": "liquidityFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3769,
														"src": "23095:12:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "23079:28:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 3784,
												"nodeType": "ExpressionStatement",
												"src": "23079:28:9"
											}
										]
									},
									"functionSelector": "8ee88c53",
									"id": 3786,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 3772,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 3771,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "22981:9:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "22981:9:9"
										}
									],
									"name": "setLiquidityFeePercent",
									"nameLocation": "22927:22:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3770,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3769,
												"mutability": "mutable",
												"name": "liquidityFee",
												"nameLocation": "22958:12:9",
												"nodeType": "VariableDeclaration",
												"scope": 3786,
												"src": "22950:20:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3768,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "22950:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22949:22:9"
									},
									"returnParameters": {
										"id": 3773,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "22991:0:9"
									},
									"scope": 3991,
									"src": "22918:196:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 3804,
										"nodeType": "Block",
										"src": "23193:123:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3796,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3794,
																"name": "marketingFee",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3788,
																"src": "23211:12:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"hexValue": "3130",
																"id": 3795,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "23227:2:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"value": "10"
															},
															"src": "23211:18:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4d61726b6574696e67206665652063616e6e6f74206265206d6f7265207468616e20313025",
															"id": 3797,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "23231:39:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_568ab0afe34d1b225551db99a4889fd852d0c6b22494b6e4ad3d5e6a737adcd3",
																"typeString": "literal_string \"Marketing fee cannot be more than 10%\""
															},
															"value": "Marketing fee cannot be more than 10%"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_568ab0afe34d1b225551db99a4889fd852d0c6b22494b6e4ad3d5e6a737adcd3",
																"typeString": "literal_string \"Marketing fee cannot be more than 10%\""
															}
														],
														"id": 3793,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "23203:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3798,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "23203:68:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3799,
												"nodeType": "ExpressionStatement",
												"src": "23203:68:9"
											},
											{
												"expression": {
													"id": 3802,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3800,
														"name": "_marketingFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1668,
														"src": "23281:13:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 3801,
														"name": "marketingFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3788,
														"src": "23297:12:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "23281:28:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 3803,
												"nodeType": "ExpressionStatement",
												"src": "23281:28:9"
											}
										]
									},
									"functionSelector": "457c194c",
									"id": 3805,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 3791,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 3790,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "23183:9:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "23183:9:9"
										}
									],
									"name": "setMarketingFeePercent",
									"nameLocation": "23129:22:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3789,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3788,
												"mutability": "mutable",
												"name": "marketingFee",
												"nameLocation": "23160:12:9",
												"nodeType": "VariableDeclaration",
												"scope": 3805,
												"src": "23152:20:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3787,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "23152:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23151:22:9"
									},
									"returnParameters": {
										"id": 3792,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "23193:0:9"
									},
									"scope": 3991,
									"src": "23120:196:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 3823,
										"nodeType": "Block",
										"src": "23385:103:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3815,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3813,
																"name": "burnFee",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3807,
																"src": "23403:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"hexValue": "3130",
																"id": 3814,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "23414:2:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"value": "10"
															},
															"src": "23403:13:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4275726e206665652063616e6e6f74206265206d6f7265207468616e20313025",
															"id": 3816,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "23418:34:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_17b25864546a079c709adb8eddb49b99f1e6fcbd0f9d9e42c5f8754288ac4894",
																"typeString": "literal_string \"Burn fee cannot be more than 10%\""
															},
															"value": "Burn fee cannot be more than 10%"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_17b25864546a079c709adb8eddb49b99f1e6fcbd0f9d9e42c5f8754288ac4894",
																"typeString": "literal_string \"Burn fee cannot be more than 10%\""
															}
														],
														"id": 3812,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "23395:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3817,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "23395:58:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3818,
												"nodeType": "ExpressionStatement",
												"src": "23395:58:9"
											},
											{
												"expression": {
													"id": 3821,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3819,
														"name": "_burnFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1662,
														"src": "23463:8:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 3820,
														"name": "burnFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3807,
														"src": "23474:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "23463:18:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 3822,
												"nodeType": "ExpressionStatement",
												"src": "23463:18:9"
											}
										]
									},
									"functionSelector": "cea26958",
									"id": 3824,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 3810,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 3809,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "23375:9:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "23375:9:9"
										}
									],
									"name": "setBurnFeePercent",
									"nameLocation": "23331:17:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3808,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3807,
												"mutability": "mutable",
												"name": "burnFee",
												"nameLocation": "23357:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 3824,
												"src": "23349:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3806,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "23349:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23348:17:9"
									},
									"returnParameters": {
										"id": 3811,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "23385:0:9"
									},
									"scope": 3991,
									"src": "23322:166:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 3842,
										"nodeType": "Block",
										"src": "23565:120:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3834,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3832,
																"name": "sellBurnFee",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3826,
																"src": "23583:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"hexValue": "3130",
																"id": 3833,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "23598:2:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"value": "10"
															},
															"src": "23583:17:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "53656c6c206275726e206665652063616e6e6f74206265206d6f7265207468616e20313025",
															"id": 3835,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "23602:39:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_221934928cb9bf87d39f3d506bf3644513f48ce917af3d8edb89ffc01d6fe0a0",
																"typeString": "literal_string \"Sell burn fee cannot be more than 10%\""
															},
															"value": "Sell burn fee cannot be more than 10%"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_221934928cb9bf87d39f3d506bf3644513f48ce917af3d8edb89ffc01d6fe0a0",
																"typeString": "literal_string \"Sell burn fee cannot be more than 10%\""
															}
														],
														"id": 3831,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "23575:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3836,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "23575:67:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3837,
												"nodeType": "ExpressionStatement",
												"src": "23575:67:9"
											},
											{
												"expression": {
													"id": 3840,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3838,
														"name": "_sellBurnFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1685,
														"src": "23652:12:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 3839,
														"name": "sellBurnFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3826,
														"src": "23667:11:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "23652:26:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 3841,
												"nodeType": "ExpressionStatement",
												"src": "23652:26:9"
											}
										]
									},
									"functionSelector": "ebf78663",
									"id": 3843,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 3829,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 3828,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "23555:9:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "23555:9:9"
										}
									],
									"name": "setSellBurnFeePercent",
									"nameLocation": "23503:21:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3827,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3826,
												"mutability": "mutable",
												"name": "sellBurnFee",
												"nameLocation": "23533:11:9",
												"nodeType": "VariableDeclaration",
												"scope": 3843,
												"src": "23525:19:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3825,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "23525:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23524:21:9"
									},
									"returnParameters": {
										"id": 3830,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "23565:0:9"
									},
									"scope": 3991,
									"src": "23494:191:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 3861,
										"nodeType": "Block",
										"src": "23772:140:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3853,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3851,
																"name": "sellMarketingFee",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3845,
																"src": "23790:16:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"hexValue": "3130",
																"id": 3852,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "23810:2:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"value": "10"
															},
															"src": "23790:22:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "53656c6c206d61726b6574696e67206665652063616e6e6f74206265206d6f7265207468616e20313025",
															"id": 3854,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "23814:44:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_37c42abb73e5fbbb1d487c4f3c99f213399be5b6d497c3b5e195369c05a76a16",
																"typeString": "literal_string \"Sell marketing fee cannot be more than 10%\""
															},
															"value": "Sell marketing fee cannot be more than 10%"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_37c42abb73e5fbbb1d487c4f3c99f213399be5b6d497c3b5e195369c05a76a16",
																"typeString": "literal_string \"Sell marketing fee cannot be more than 10%\""
															}
														],
														"id": 3850,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "23782:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3855,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "23782:77:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3856,
												"nodeType": "ExpressionStatement",
												"src": "23782:77:9"
											},
											{
												"expression": {
													"id": 3859,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3857,
														"name": "_sellMarketingFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1682,
														"src": "23869:17:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 3858,
														"name": "sellMarketingFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3845,
														"src": "23889:16:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "23869:36:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 3860,
												"nodeType": "ExpressionStatement",
												"src": "23869:36:9"
											}
										]
									},
									"functionSelector": "a928681c",
									"id": 3862,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 3848,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 3847,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "23762:9:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "23762:9:9"
										}
									],
									"name": "setSellMarketingFeePercent",
									"nameLocation": "23700:26:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3846,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3845,
												"mutability": "mutable",
												"name": "sellMarketingFee",
												"nameLocation": "23735:16:9",
												"nodeType": "VariableDeclaration",
												"scope": 3862,
												"src": "23727:24:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3844,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "23727:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23726:26:9"
									},
									"returnParameters": {
										"id": 3849,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "23772:0:9"
									},
									"scope": 3991,
									"src": "23691:221:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 3880,
										"nodeType": "Block",
										"src": "23999:140:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3872,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3870,
																"name": "sellLiquidityFee",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3864,
																"src": "24017:16:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"hexValue": "3130",
																"id": 3871,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "24037:2:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"value": "10"
															},
															"src": "24017:22:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "53656c6c206c6971756964697479206665652063616e6e6f74206265206d6f7265207468616e20313025",
															"id": 3873,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "24041:44:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7cd1f6dc4c058cd6c489a89ebbdf77f33bae1246803c57d331732d32ce2f5a19",
																"typeString": "literal_string \"Sell liquidity fee cannot be more than 10%\""
															},
															"value": "Sell liquidity fee cannot be more than 10%"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7cd1f6dc4c058cd6c489a89ebbdf77f33bae1246803c57d331732d32ce2f5a19",
																"typeString": "literal_string \"Sell liquidity fee cannot be more than 10%\""
															}
														],
														"id": 3869,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "24009:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3874,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "24009:77:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3875,
												"nodeType": "ExpressionStatement",
												"src": "24009:77:9"
											},
											{
												"expression": {
													"id": 3878,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3876,
														"name": "_sellLiquidityFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1679,
														"src": "24096:17:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 3877,
														"name": "sellLiquidityFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3864,
														"src": "24116:16:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "24096:36:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 3879,
												"nodeType": "ExpressionStatement",
												"src": "24096:36:9"
											}
										]
									},
									"functionSelector": "5876ccc5",
									"id": 3881,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 3867,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 3866,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "23989:9:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "23989:9:9"
										}
									],
									"name": "setSellLiquidityFeePercent",
									"nameLocation": "23927:26:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3865,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3864,
												"mutability": "mutable",
												"name": "sellLiquidityFee",
												"nameLocation": "23962:16:9",
												"nodeType": "VariableDeclaration",
												"scope": 3881,
												"src": "23954:24:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3863,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "23954:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23953:26:9"
									},
									"returnParameters": {
										"id": 3868,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "23999:0:9"
									},
									"scope": 3991,
									"src": "23918:221:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 3899,
										"nodeType": "Block",
										"src": "24214:116:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3891,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3889,
																"name": "sellTaxFee",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3883,
																"src": "24232:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"hexValue": "3130",
																"id": 3890,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "24246:2:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"value": "10"
															},
															"src": "24232:16:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "53656c6c20746178206665652063616e6e6f74206265206d6f7265207468616e20313025",
															"id": 3892,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "24250:38:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7d8fe367138b40da0526c127a4b5758d259c378e2321949a7b4dcc147f255dde",
																"typeString": "literal_string \"Sell tax fee cannot be more than 10%\""
															},
															"value": "Sell tax fee cannot be more than 10%"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7d8fe367138b40da0526c127a4b5758d259c378e2321949a7b4dcc147f255dde",
																"typeString": "literal_string \"Sell tax fee cannot be more than 10%\""
															}
														],
														"id": 3888,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "24224:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3893,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "24224:65:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3894,
												"nodeType": "ExpressionStatement",
												"src": "24224:65:9"
											},
											{
												"expression": {
													"id": 3897,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3895,
														"name": "_sellTaxFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1676,
														"src": "24299:11:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 3896,
														"name": "sellTaxFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3883,
														"src": "24313:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "24299:24:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 3898,
												"nodeType": "ExpressionStatement",
												"src": "24299:24:9"
											}
										]
									},
									"functionSelector": "d0e03523",
									"id": 3900,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 3886,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 3885,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "24204:9:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "24204:9:9"
										}
									],
									"name": "setSellTaxFeePercent",
									"nameLocation": "24154:20:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3884,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3883,
												"mutability": "mutable",
												"name": "sellTaxFee",
												"nameLocation": "24183:10:9",
												"nodeType": "VariableDeclaration",
												"scope": 3900,
												"src": "24175:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3882,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "24175:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24174:20:9"
									},
									"returnParameters": {
										"id": 3887,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "24214:0:9"
									},
									"scope": 3991,
									"src": "24145:185:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 3925,
										"nodeType": "Block",
										"src": "24414:238:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3910,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3908,
																"name": "maxHoldingPercents",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3902,
																"src": "24432:18:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"hexValue": "31",
																"id": 3909,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "24454:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "24432:23:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4d617820686f6c64696e672070657263656e74732063616e6e6f74206265206c657373207468616e20302e3125",
															"id": 3911,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "24457:47:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4548548aa0306dcf79ce9af2c7863f8a94faa30d5510996966e8c85621aec950",
																"typeString": "literal_string \"Max holding percents cannot be less than 0.1%\""
															},
															"value": "Max holding percents cannot be less than 0.1%"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4548548aa0306dcf79ce9af2c7863f8a94faa30d5510996966e8c85621aec950",
																"typeString": "literal_string \"Max holding percents cannot be less than 0.1%\""
															}
														],
														"id": 3907,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "24424:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3912,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "24424:81:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3913,
												"nodeType": "ExpressionStatement",
												"src": "24424:81:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3917,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3915,
																"name": "maxHoldingPercents",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3902,
																"src": "24523:18:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"hexValue": "3330",
																"id": 3916,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "24545:2:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_30_by_1",
																	"typeString": "int_const 30"
																},
																"value": "30"
															},
															"src": "24523:24:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4d617820686f6c64696e672070657263656e74732063616e6e6f74206265206d6f7265207468616e203325",
															"id": 3918,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "24549:45:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9aedef95c53d84b258a520b8975f9d4afce00f081860eeebaef923486edca039",
																"typeString": "literal_string \"Max holding percents cannot be more than 3%\""
															},
															"value": "Max holding percents cannot be more than 3%"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9aedef95c53d84b258a520b8975f9d4afce00f081860eeebaef923486edca039",
																"typeString": "literal_string \"Max holding percents cannot be more than 3%\""
															}
														],
														"id": 3914,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "24515:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3919,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "24515:80:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3920,
												"nodeType": "ExpressionStatement",
												"src": "24515:80:9"
											},
											{
												"expression": {
													"id": 3923,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3921,
														"name": "_maxHoldingPercents",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1691,
														"src": "24605:19:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 3922,
														"name": "maxHoldingPercents",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3902,
														"src": "24627:18:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "24605:40:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 3924,
												"nodeType": "ExpressionStatement",
												"src": "24605:40:9"
											}
										]
									},
									"functionSelector": "9655cab5",
									"id": 3926,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 3905,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 3904,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "24404:9:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "24404:9:9"
										}
									],
									"name": "setMaxHoldingPercents",
									"nameLocation": "24345:21:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3903,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3902,
												"mutability": "mutable",
												"name": "maxHoldingPercents",
												"nameLocation": "24375:18:9",
												"nodeType": "VariableDeclaration",
												"scope": 3926,
												"src": "24367:26:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3901,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "24367:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24366:28:9"
									},
									"returnParameters": {
										"id": 3906,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "24414:0:9"
									},
									"scope": 3991,
									"src": "24336:316:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 3941,
										"nodeType": "Block",
										"src": "24724:102:9",
										"statements": [
											{
												"expression": {
													"id": 3935,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3933,
														"name": "swapAndLiquifyEnabled",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1711,
														"src": "24734:21:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 3934,
														"name": "_enabled",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3928,
														"src": "24758:8:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "24734:32:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3936,
												"nodeType": "ExpressionStatement",
												"src": "24734:32:9"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 3938,
															"name": "_enabled",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3928,
															"src": "24810:8:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 3937,
														"name": "SwapAndLiquifyEnabledUpdated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1737,
														"src": "24781:28:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_bool_$returns$__$",
															"typeString": "function (bool)"
														}
													},
													"id": 3939,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "24781:38:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3940,
												"nodeType": "EmitStatement",
												"src": "24776:43:9"
											}
										]
									},
									"functionSelector": "c49b9a80",
									"id": 3942,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 3931,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 3930,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "24714:9:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "24714:9:9"
										}
									],
									"name": "setSwapAndLiquifyEnabled",
									"nameLocation": "24667:24:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3929,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3928,
												"mutability": "mutable",
												"name": "_enabled",
												"nameLocation": "24697:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 3942,
												"src": "24692:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3927,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "24692:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24691:15:9"
									},
									"returnParameters": {
										"id": 3932,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "24724:0:9"
									},
									"scope": 3991,
									"src": "24658:168:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3965,
										"nodeType": "Block",
										"src": "24877:184:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 3957,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 3952,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 3948,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "24908:3:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 3949,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "24908:10:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 3950,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 40,
																		"src": "24922:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 3951,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "24922:7:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "24908:21:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 3956,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 3953,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "24933:3:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 3954,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "24933:10:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 3955,
																	"name": "antiManager",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1701,
																	"src": "24947:11:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "24933:25:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "24908:50:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f6e6c792061646d696e206f7220616e7469206d616e6167657220616c6c6f776564",
															"id": 3958,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "24972:36:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_129c9dc3ee74cfed4b4b6575287910646aa77269c5388380730e971c771115d5",
																"typeString": "literal_string \"Only admin or anti manager allowed\""
															},
															"value": "Only admin or anti manager allowed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_129c9dc3ee74cfed4b4b6575287910646aa77269c5388380730e971c771115d5",
																"typeString": "literal_string \"Only admin or anti manager allowed\""
															}
														],
														"id": 3947,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "24887:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3959,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "24887:131:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3960,
												"nodeType": "ExpressionStatement",
												"src": "24887:131:9"
											},
											{
												"expression": {
													"id": 3963,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3961,
														"name": "antiWhaleEnabled",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1693,
														"src": "25028:16:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 3962,
														"name": "enabled",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3944,
														"src": "25047:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "25028:26:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3964,
												"nodeType": "ExpressionStatement",
												"src": "25028:26:9"
											}
										]
									},
									"functionSelector": "4a5566bf",
									"id": 3966,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setAntiWhale",
									"nameLocation": "24841:12:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3945,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3944,
												"mutability": "mutable",
												"name": "enabled",
												"nameLocation": "24859:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 3966,
												"src": "24854:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3943,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "24854:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24853:14:9"
									},
									"returnParameters": {
										"id": 3946,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "24877:0:9"
									},
									"scope": 3991,
									"src": "24832:229:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 3989,
										"nodeType": "Block",
										"src": "25110:182:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 3981,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 3976,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 3972,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "25141:3:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 3973,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "25141:10:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 3974,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 40,
																		"src": "25155:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 3975,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "25155:7:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "25141:21:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 3980,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 3977,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "25166:3:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 3978,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "25166:10:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 3979,
																	"name": "antiManager",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1701,
																	"src": "25180:11:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "25166:25:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "25141:50:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f6e6c792061646d696e206f7220616e7469206d616e6167657220616c6c6f776564",
															"id": 3982,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "25205:36:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_129c9dc3ee74cfed4b4b6575287910646aa77269c5388380730e971c771115d5",
																"typeString": "literal_string \"Only admin or anti manager allowed\""
															},
															"value": "Only admin or anti manager allowed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_129c9dc3ee74cfed4b4b6575287910646aa77269c5388380730e971c771115d5",
																"typeString": "literal_string \"Only admin or anti manager allowed\""
															}
														],
														"id": 3971,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "25120:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3983,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "25120:131:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3984,
												"nodeType": "ExpressionStatement",
												"src": "25120:131:9"
											},
											{
												"expression": {
													"id": 3987,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3985,
														"name": "antiBotEnabled",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1699,
														"src": "25261:14:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 3986,
														"name": "enabled",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3968,
														"src": "25278:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "25261:24:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3988,
												"nodeType": "ExpressionStatement",
												"src": "25261:24:9"
											}
										]
									},
									"functionSelector": "c2c7c03a",
									"id": 3990,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setAntiBot",
									"nameLocation": "25076:10:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3969,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3968,
												"mutability": "mutable",
												"name": "enabled",
												"nameLocation": "25092:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 3990,
												"src": "25087:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3967,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "25087:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25086:14:9"
									},
									"returnParameters": {
										"id": 3970,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "25110:0:9"
									},
									"scope": 3991,
									"src": "25067:225:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 3992,
							"src": "541:24753:9",
							"usedErrors": []
						}
					],
					"src": "32:25262:9"
				},
				"id": 9
			}
		}
	}
}